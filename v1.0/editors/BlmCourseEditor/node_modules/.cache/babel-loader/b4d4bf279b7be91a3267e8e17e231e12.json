{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\flipcard\\\\BlmMediaFlipCard.tsx\";\nimport React from \"react\";\nimport { FormControlLabel, Switch } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { getMediaFlipCard } from \"utils\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\nimport BlmActions, { BlmSwitchActions } from \"../../actions\";\nimport { BlmStyleApplyButton } from \"../../styles\";\nimport BlmMediaDashboard from \"../dashboard\";\nimport BlmFlipCardSide from \"./side\";\nimport \"./styles.scss\";\n\nfunction BlmMediaFlipCard(props) {\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n  const {\n    data,\n    temp\n  } = props;\n  const state = getMediaFlipCard(data);\n  const {\n    dispatch\n  } = useContentEditorCtx();\n  const {\n    value: flipcard\n  } = state;\n  const {\n    recto,\n    verso,\n    flipAction,\n    clickAction,\n    overAction\n  } = flipcard;\n\n  const updateChange = newFlipcard => {\n    const newData = { ...state,\n      value: newFlipcard\n    };\n\n    if (dispatch) {\n      dispatch(updateMediaComponent(newData));\n    }\n  };\n\n  const handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const newFlipcard = { ...flipcard\n    };\n\n    if (name === \"recto\" || name === \"verso\" || name === \"flipAction\" || name === \"clickAction\" || name === \"overAction\") {\n      newFlipcard[name] = value;\n    }\n\n    if (newFlipcard.recto.media === undefined) {\n      newFlipcard.recto.style.bgTint = undefined;\n      newFlipcard.recto.style.tint = undefined;\n    }\n\n    if (newFlipcard.verso.media === undefined) {\n      newFlipcard.verso.style.bgTint = undefined;\n      newFlipcard.verso.style.tint = undefined;\n    }\n\n    updateChange(newFlipcard);\n  };\n\n  const handleSwitchClick = () => {\n    const newFlipcard = { ...flipcard\n    };\n    newFlipcard.clickAction = flipcard.overAction;\n    newFlipcard.overAction = flipcard.clickAction;\n    updateChange(newFlipcard);\n  };\n\n  return /*#__PURE__*/React.createElement(BlmMediaDashboard, {\n    data: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-media-flipcard-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flipcard-params-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flipcard-params-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, t(\"title.parameters\")), /*#__PURE__*/React.createElement(BlmFlipCardSide, {\n    name: \"recto\",\n    data: recto,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BlmFlipCardSide, {\n    name: \"verso\",\n    type: \"verso\",\n    data: verso,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BlmStyleApplyButton, {\n    label: t(\"flipkart.apply_flipkart\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flipcard-actions-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flipcard-actions-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, t(\"label.action\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flipcard-actions-flip-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, t(\"flipkart.return_card\"), \":\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"flipcard-actions-bold-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, t(\"flipkart.on_click\")), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"flipAction\",\n    label: t(\"flipkart.on_roll_over\"),\n    checked: flipAction,\n    control: /*#__PURE__*/React.createElement(Switch, {\n      className: \"switch-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 24\n      }\n    }),\n    className: \"flipcard-actions-flip-switch-ctrl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flipcard-actions-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, t(\"label.on\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"flipcard-actions-bold-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, t(\"label.click\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flipcard-actions-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, t(\"label.on\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"flipcard-actions-bold-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, t(\"label.roll_over\"))), /*#__PURE__*/React.createElement(BlmActions, {\n    name: \"clickAction\",\n    data: clickAction,\n    temp: temp,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BlmSwitchActions, {\n    left: clickAction,\n    right: overAction,\n    rightType: \"over\",\n    onClick: handleSwitchClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BlmActions, {\n    name: \"overAction\",\n    data: overAction,\n    type: \"over\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default BlmMediaFlipCard;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/flipcard/BlmMediaFlipCard.tsx"],"names":["React","FormControlLabel","Switch","useTranslation","getMediaFlipCard","useContentEditorCtx","updateMediaComponent","BlmActions","BlmSwitchActions","BlmStyleApplyButton","BlmMediaDashboard","BlmFlipCardSide","BlmMediaFlipCard","props","t","data","temp","state","dispatch","value","flipcard","recto","verso","flipAction","clickAction","overAction","updateChange","newFlipcard","newData","handleChange","event","target","name","type","checked","media","undefined","style","bgTint","tint","handleSwitchClick"],"mappings":"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","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport { FormControlLabel, Switch } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  CustomChangeEvent,\r\n  MediaComponent,\r\n  ComponentAction,\r\n  MediaFlipCard,\r\n  FlipCardSide,\r\n  ContentTemplateAction,\r\n} from \"types\";\r\nimport { getMediaFlipCard } from \"utils\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\r\nimport BlmActions, { BlmSwitchActions } from \"../../actions\";\r\nimport { BlmStyleApplyButton } from \"../../styles\";\r\nimport BlmMediaDashboard from \"../dashboard\";\r\nimport BlmFlipCardSide from \"./side\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  label: string;\r\n  data: MediaComponent;\r\n  temp?: ContentTemplateAction | undefined;\r\n}\r\n\r\nfunction BlmMediaFlipCard(props: CompProps) {\r\n  const { t } = useTranslation(\"content-editor\");\r\n  const { data, temp } = props;\r\n  const state = getMediaFlipCard(data);\r\n  const { dispatch } = useContentEditorCtx();\r\n  const { value: flipcard } = state;\r\n  const { recto, verso, flipAction, clickAction, overAction } = flipcard;\r\n\r\n  const updateChange = (newFlipcard: MediaFlipCard) => {\r\n    const newData = {\r\n      ...state,\r\n      value: newFlipcard,\r\n    };\r\n\r\n    if (dispatch) {\r\n      dispatch(updateMediaComponent(newData));\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event: ChangeEvent<any> | CustomChangeEvent<FlipCardSide | ComponentAction>\r\n  ) => {\r\n    const target = event.target;\r\n    const name = target.name as string;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const newFlipcard = { ...flipcard };\r\n\r\n    if (\r\n      name === \"recto\" ||\r\n      name === \"verso\" ||\r\n      name === \"flipAction\" ||\r\n      name === \"clickAction\" ||\r\n      name === \"overAction\"\r\n    ) {\r\n      newFlipcard[name] = value;\r\n    }\r\n\r\n    if (newFlipcard.recto.media === undefined) {\r\n      newFlipcard.recto.style.bgTint = undefined;\r\n      newFlipcard.recto.style.tint = undefined;\r\n    }\r\n    if (newFlipcard.verso.media === undefined) {\r\n      newFlipcard.verso.style.bgTint = undefined;\r\n      newFlipcard.verso.style.tint = undefined;\r\n    }\r\n\r\n    updateChange(newFlipcard);\r\n  };\r\n\r\n  const handleSwitchClick = () => {\r\n    const newFlipcard = { ...flipcard };\r\n\r\n    newFlipcard.clickAction = flipcard.overAction;\r\n    newFlipcard.overAction = flipcard.clickAction;\r\n\r\n    updateChange(newFlipcard);\r\n  };\r\n\r\n  return (\r\n    <BlmMediaDashboard data={state}>\r\n      <div className=\"content-media-flipcard-wrapper\">\r\n        <div className=\"flipcard-params-wrapper\">\r\n          <div className=\"flipcard-params-title\">{t(\"title.parameters\")}</div>\r\n          <BlmFlipCardSide name=\"recto\" data={recto} onChange={handleChange} />\r\n          <BlmFlipCardSide name=\"verso\" type=\"verso\" data={verso} onChange={handleChange} />\r\n          <BlmStyleApplyButton label={t(\"flipkart.apply_flipkart\")} />\r\n        </div>\r\n        <div className=\"flipcard-actions-wrapper\">\r\n          <div className=\"flipcard-actions-title\">{t(\"label.action\")}</div>\r\n          <div className=\"flipcard-actions-flip-lbl\">\r\n            {t(\"flipkart.return_card\")}:{\" \"}\r\n            <span className=\"flipcard-actions-bold-lbl\">{t(\"flipkart.on_click\")}</span>\r\n            <FormControlLabel\r\n              name=\"flipAction\"\r\n              label={t(\"flipkart.on_roll_over\")}\r\n              checked={flipAction}\r\n              control={<Switch className=\"switch-2\" />}\r\n              className=\"flipcard-actions-flip-switch-ctrl\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"flipcard-actions-lbl\">\r\n            {t(\"label.on\")} <span className=\"flipcard-actions-bold-lbl\">{t(\"label.click\")}</span>\r\n          </div>\r\n          <div className=\"flipcard-actions-lbl\">\r\n            {t(\"label.on\")}{\" \"}\r\n            <span className=\"flipcard-actions-bold-lbl\">{t(\"label.roll_over\")}</span>\r\n          </div>\r\n          <BlmActions name=\"clickAction\" data={clickAction} temp={temp} onChange={handleChange} />\r\n          <BlmSwitchActions\r\n            left={clickAction}\r\n            right={overAction}\r\n            rightType=\"over\"\r\n            onClick={handleSwitchClick}\r\n          />\r\n          <BlmActions name=\"overAction\" data={overAction} type=\"over\" onChange={handleChange} />\r\n        </div>\r\n      </div>\r\n    </BlmMediaDashboard>\r\n  );\r\n}\r\n\r\nexport default BlmMediaFlipCard;\r\n"]},"metadata":{},"sourceType":"module"}