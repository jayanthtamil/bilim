{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\question-editor\\\\components\\\\main\\\\custom\\\\BlmQuestionCustom.tsx\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { BlmAnimation, BlmMediaFormat } from \"components/shared\";\nimport { useQuestionEditorCtx } from \"components/question-editor/core\";\nimport { updateQuestionCustom } from \"components/question-editor/reducers\";\nimport \"./styles.scss\";\n\nfunction BlmQuestionCustom(props) {\n  const {\n    data,\n    dispatch\n  } = props;\n  const {\n    element\n  } = useQuestionEditorCtx();\n  const {\n    format,\n    config,\n    value\n  } = data;\n  const {\n    t\n  } = useTranslation(\"question-editor\");\n\n  const updateChange = newData => {\n    if (dispatch) {\n      dispatch(updateQuestionCustom(newData));\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newData = { ...data\n    };\n\n    if (name === \"format\") {\n      newData.format = value;\n    } else if (name === \"media\") {\n      newData.value = value;\n    }\n\n    updateChange(newData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-custom-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, t(\"main.custom\")), /*#__PURE__*/React.createElement(BlmMediaFormat, {\n    data: format,\n    formats: config === null || config === void 0 ? void 0 : config.format,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BlmAnimation, {\n    elementId: element.id,\n    data: value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BlmQuestionCustom;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/question-editor/components/main/custom/BlmQuestionCustom.tsx"],"names":["React","useTranslation","BlmAnimation","BlmMediaFormat","useQuestionEditorCtx","updateQuestionCustom","BlmQuestionCustom","props","data","dispatch","element","format","config","value","t","updateChange","newData","handleChange","event","name","target","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,mBAA7C;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,SAAiCC,oBAAjC,QAA6D,qCAA7D;AACA,OAAO,eAAP;;AAOA,SAASC,iBAAT,CAA2BC,KAA3B,EAA6C;AAC3C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBF,KAA3B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAcN,oBAAoB,EAAxC;AACA,QAAM;AAAEO,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,MAA4BL,IAAlC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAQb,cAAc,CAAC,iBAAD,CAA5B;;AAEA,QAAMc,YAAY,GAAIC,OAAD,IAAsC;AACzD,QAAIP,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACJ,oBAAoB,CAACW,OAAD,CAArB,CAAR;AACD;AACF,GAJD;;AAMA,QAAMC,YAAY,GAAIC,KAAD,IAAmE;AACtF,UAAM;AAAEC,MAAAA,IAAF;AAAQN,MAAAA;AAAR,QAAkBK,KAAK,CAACE,MAA9B;AACA,UAAMJ,OAAO,GAAG,EAAE,GAAGR;AAAL,KAAhB;;AAEA,QAAIW,IAAI,KAAK,QAAb,EAAuB;AACrBH,MAAAA,OAAO,CAACL,MAAR,GAAiBE,KAAjB;AACD,KAFD,MAEO,IAAIM,IAAI,KAAK,OAAb,EAAsB;AAC3BH,MAAAA,OAAO,CAACH,KAAR,GAAgBA,KAAhB;AACD;;AAEDE,IAAAA,YAAY,CAACC,OAAD,CAAZ;AACD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCF,CAAC,CAAC,aAAD,CAAzC,CADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEH,MAAtB;AAA8B,IAAA,OAAO,EAAEC,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAED,MAA/C;AAAuD,IAAA,QAAQ,EAAEM,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEP,OAAO,CAAEW,EAAlC;AAAsC,IAAA,IAAI,EAAER,KAA5C;AAAmD,IAAA,QAAQ,EAAEI,YAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAED,eAAeX,iBAAf","sourcesContent":["import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomChangeEvent, MediaFile, MediaFormat, QuestionCustomComponent } from \"types\";\r\nimport { BlmAnimation, BlmMediaFormat } from \"components/shared\";\r\nimport { useQuestionEditorCtx } from \"components/question-editor/core\";\r\nimport { QuestionEditorDispatch, updateQuestionCustom } from \"components/question-editor/reducers\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  data: QuestionCustomComponent;\r\n  dispatch: QuestionEditorDispatch;\r\n}\r\n\r\nfunction BlmQuestionCustom(props: CompProps) {\r\n  const { data, dispatch } = props;\r\n  const { element } = useQuestionEditorCtx();\r\n  const { format, config, value } = data;\r\n  const { t } = useTranslation(\"question-editor\");\r\n\r\n  const updateChange = (newData: QuestionCustomComponent) => {\r\n    if (dispatch) {\r\n      dispatch(updateQuestionCustom(newData));\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: CustomChangeEvent<MediaFormat | MediaFile | undefined>) => {\r\n    const { name, value } = event.target;\r\n    const newData = { ...data };\r\n\r\n    if (name === \"format\") {\r\n      newData.format = value as MediaFormat;\r\n    } else if (name === \"media\") {\r\n      newData.value = value as MediaFile;\r\n    }\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-custom-wrapper\">\r\n      <div className=\"question-custom-title\">{t(\"main.custom\")}</div>\r\n      <BlmMediaFormat data={format} formats={config?.format} onChange={handleChange} />\r\n      <BlmAnimation elementId={element!.id} data={value} onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmQuestionCustom;\r\n"]},"metadata":{},"sourceType":"module"}