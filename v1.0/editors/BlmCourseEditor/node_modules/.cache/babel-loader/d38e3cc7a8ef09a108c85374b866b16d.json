{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\course-properties\\\\controls\\\\style\\\\replace\\\\BlmReplaceFile.tsx\";\nimport React, { useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { getFileExtension, validateFile } from \"utils\";\nimport \"./styles.scss\";\n\nfunction BlmReplaceFile(props) {\n  const {\n    data,\n    replaceCourseFile,\n    openDialog,\n    onClose\n  } = props;\n  const fileRef = useRef(null);\n  const {\n    name\n  } = data;\n  const ext = getFileExtension(name);\n  const accepted = `.${ext}`;\n  const {\n    t\n  } = useTranslation();\n\n  const handleFileClick = event => {\n    if (fileRef.current) {\n      let file = fileRef.current;\n      file.click();\n      file.value = \"\";\n    }\n  };\n\n  const handleFileChange = event => {\n    const files = event.target.files;\n\n    if (files && files.length !== 0) {\n      const file = files[0];\n\n      try {\n        validateFile(file, ext);\n        startUpload(file);\n      } catch (error) {\n        openDialog(`${t(\"alert.warning\")}!`, error.message);\n      }\n    }\n  };\n\n  const startUpload = file => {\n    replaceCourseFile(data, file).then(() => {\n      if (onClose) {\n        onClose();\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"course-file-replace-btn\",\n    onClick: handleFileClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: fileRef,\n    type: \"file\",\n    accept: accepted,\n    className: \"input-file\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BlmReplaceFile;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/course-properties/controls/style/replace/BlmReplaceFile.tsx"],"names":["React","useRef","useTranslation","getFileExtension","validateFile","BlmReplaceFile","props","data","replaceCourseFile","openDialog","onClose","fileRef","name","ext","accepted","t","handleFileClick","event","current","file","click","value","handleFileChange","files","target","length","startUpload","error","message","then"],"mappings":";AAAA,OAAOA,KAAP,IAAyCC,MAAzC,QAAuD,OAAvD;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,OAA/C;AAEA,OAAO,eAAP;;AAOA,SAASC,cAAT,CAAwBC,KAAxB,EAA0C;AACxC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,iBAAR;AAA2BC,IAAAA,UAA3B;AAAuCC,IAAAA;AAAvC,MAAmDJ,KAAzD;AACA,QAAMK,OAAO,GAAGV,MAAM,CAAmB,IAAnB,CAAtB;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAWL,IAAjB;AACA,QAAMM,GAAG,GAAGV,gBAAgB,CAACS,IAAD,CAA5B;AACA,QAAME,QAAQ,GAAI,IAAGD,GAAI,EAAzB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAQb,cAAc,EAA5B;;AAEA,QAAMc,eAAe,GAAIC,KAAD,IAAuB;AAC7C,QAAIN,OAAO,CAACO,OAAZ,EAAqB;AACnB,UAAIC,IAAI,GAAGR,OAAO,CAACO,OAAnB;AACAC,MAAAA,IAAI,CAACC,KAAL;AACAD,MAAAA,IAAI,CAACE,KAAL,GAAa,EAAb;AACD;AACF,GAND;;AAQA,QAAMC,gBAAgB,GAAIL,KAAD,IAA0C;AACjE,UAAMM,KAAK,GAAGN,KAAK,CAACO,MAAN,CAAaD,KAA3B;;AAEA,QAAIA,KAAK,IAAIA,KAAK,CAACE,MAAN,KAAiB,CAA9B,EAAiC;AAC/B,YAAMN,IAAI,GAAGI,KAAK,CAAC,CAAD,CAAlB;;AAEA,UAAI;AACFnB,QAAAA,YAAY,CAACe,IAAD,EAAON,GAAP,CAAZ;AACAa,QAAAA,WAAW,CAACP,IAAD,CAAX;AACD,OAHD,CAGE,OAAOQ,KAAP,EAAc;AACdlB,QAAAA,UAAU,CAAE,GAAEM,CAAC,CAAC,eAAD,CAAkB,GAAvB,EAA4BY,KAAD,CAAiBC,OAA5C,CAAV;AACD;AACF;AACF,GAbD;;AAeA,QAAMF,WAAW,GAAIP,IAAD,IAAgB;AAClCX,IAAAA,iBAAiB,CAACD,IAAD,EAAOY,IAAP,CAAjB,CAA8BU,IAA9B,CAAmC,MAAM;AACvC,UAAInB,OAAJ,EAAa;AACXA,QAAAA,OAAO;AACR;AACF,KAJD;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAyC,IAAA,OAAO,EAAEM,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEL,OADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,MAAM,EAAEG,QAHV;AAIE,IAAA,SAAS,EAAC,YAJZ;AAKE,IAAA,QAAQ,EAAEQ,gBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD;;AAED,eAAejB,cAAf","sourcesContent":["import React, { ChangeEvent, MouseEvent, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CourseExternalFile } from \"types\";\r\nimport { getFileExtension, validateFile } from \"utils\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  data: CourseExternalFile;\r\n  onClose?: () => void;\r\n}\r\n\r\nfunction BlmReplaceFile(props: CompProps) {\r\n  const { data, replaceCourseFile, openDialog, onClose } = props;\r\n  const fileRef = useRef<HTMLInputElement>(null);\r\n  const { name } = data;\r\n  const ext = getFileExtension(name);\r\n  const accepted = `.${ext}`;\r\n  const { t } = useTranslation();\r\n\r\n  const handleFileClick = (event: MouseEvent) => {\r\n    if (fileRef.current) {\r\n      let file = fileRef.current;\r\n      file.click();\r\n      file.value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const files = event.target.files;\r\n\r\n    if (files && files.length !== 0) {\r\n      const file = files[0];\r\n\r\n      try {\r\n        validateFile(file, ext);\r\n        startUpload(file);\r\n      } catch (error) {\r\n        openDialog(`${t(\"alert.warning\")}!`, (error as Error).message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const startUpload = (file: File) => {\r\n    replaceCourseFile(data, file).then(() => {\r\n      if (onClose) {\r\n        onClose();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"course-file-replace-btn\" onClick={handleFileClick}>\r\n      <input\r\n        ref={fileRef}\r\n        type=\"file\"\r\n        accept={accepted}\r\n        className=\"input-file\"\r\n        onChange={handleFileChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmReplaceFile;\r\n"]},"metadata":{},"sourceType":"module"}