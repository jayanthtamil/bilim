{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\question-editor\\\\components\\\\main\\\\proposition-feedback\\\\BlmQuestionPropositionFeedback.tsx\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AcceptedFileTypes } from \"editor-constants\";\nimport { BlmMediaPicker, BlmMediaPickerEditor } from \"components/shared\";\nimport { useQuestionEditorCtx } from \"components/question-editor/core\";\nimport \"./styles.scss\";\n\nfunction BlmQuestionPropositionFeedback(props) {\n  const {\n    data,\n    onChange\n  } = props;\n  const {\n    title,\n    text,\n    media,\n    sound\n  } = data;\n  const {\n    element\n  } = useQuestionEditorCtx();\n  const {\n    t\n  } = useTranslation(\"question-editor\");\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newData = { ...data\n    };\n\n    if (name === \"title\") {\n      newData.title.value = value;\n    } else if (name === \"text\") {\n      newData.text.value = value;\n    } else if (name === \"media\") {\n      newData.media.value = value;\n    } else if (name === \"sound\") {\n      if (value && !value.subtitle) {\n        var _newData$sound, _newData$sound$value;\n\n        value.subtitle = (_newData$sound = newData.sound) === null || _newData$sound === void 0 ? void 0 : (_newData$sound$value = _newData$sound.value) === null || _newData$sound$value === void 0 ? void 0 : _newData$sound$value.subtitle;\n      }\n\n      if (value && !value.marker) {\n        var _newData$sound2, _newData$sound2$value;\n\n        value.marker = (_newData$sound2 = newData.sound) === null || _newData$sound2 === void 0 ? void 0 : (_newData$sound2$value = _newData$sound2.value) === null || _newData$sound2$value === void 0 ? void 0 : _newData$sound2$value.marker;\n      }\n\n      newData.sound.value = value;\n    }\n\n    if (onChange) {\n      onChange(newData);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-proposition-feedback-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-proposition-feedback-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"media\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Image, AcceptedFileTypes.Video],\n    data: media.value,\n    placeholder: t(\"main.no_media\"),\n    disabled: !media.isEditable,\n    className: \"media-picker-2\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BlmMediaPickerEditor, {\n    name: \"sound\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Audio],\n    data: sound.value,\n    placeholder: t(\"label.no_sound\"),\n    disabled: !sound.isEditable,\n    className: \"sound-picker-2\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    className: \"question-proposition-feedback-title\",\n    value: title.value || \"\",\n    disabled: !title.isEditable,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-proposition-feedback-title-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"text\",\n    className: \"question-proposition-feedback-description\",\n    value: text.value || \"\",\n    disabled: !text.isEditable,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BlmQuestionPropositionFeedback;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/question-editor/components/main/proposition-feedback/BlmQuestionPropositionFeedback.tsx"],"names":["React","useTranslation","AcceptedFileTypes","BlmMediaPicker","BlmMediaPickerEditor","useQuestionEditorCtx","BlmQuestionPropositionFeedback","props","data","onChange","title","text","media","sound","element","t","handleChange","event","name","value","target","newData","subtitle","marker","id","Image","Video","isEditable","Audio"],"mappings":";AAAA,OAAOA,KAAP,MAAmC,OAAnC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,cAAT,EAAiDC,oBAAjD,QAA6E,mBAA7E;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,OAAO,eAAP;;AAOA,SAASC,8BAAT,CAAwCC,KAAxC,EAA0D;AACxD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBF,KAA3B;AACA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,MAAgCL,IAAtC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAcT,oBAAoB,EAAxC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAQd,cAAc,CAAC,iBAAD,CAA5B;;AAEA,QAAMe,YAAY,GAAIC,KAAD,IAAsD;AACzE,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACA,UAAMC,OAAoC,GAAG,EAAE,GAAGb;AAAL,KAA7C;;AAEA,QAAIU,IAAI,KAAK,OAAb,EAAsB;AACpBG,MAAAA,OAAO,CAACX,KAAR,CAAcS,KAAd,GAAsBA,KAAtB;AACD,KAFD,MAEO,IAAID,IAAI,KAAK,MAAb,EAAqB;AAC1BG,MAAAA,OAAO,CAACV,IAAR,CAAaQ,KAAb,GAAqBA,KAArB;AACD,KAFM,MAEA,IAAID,IAAI,KAAK,OAAb,EAAsB;AAC3BG,MAAAA,OAAO,CAACT,KAAR,CAAcO,KAAd,GAAsBA,KAAtB;AACD,KAFM,MAEA,IAAID,IAAI,KAAK,OAAb,EAAsB;AAC3B,UAAIC,KAAK,IAAI,CAACA,KAAK,CAACG,QAApB,EAA8B;AAAA;;AAC5BH,QAAAA,KAAK,CAACG,QAAN,qBAAiBD,OAAO,CAACR,KAAzB,2EAAiB,eAAeM,KAAhC,yDAAiB,qBAAsBG,QAAvC;AACD;;AACD,UAAIH,KAAK,IAAI,CAACA,KAAK,CAACI,MAApB,EAA4B;AAAA;;AAC1BJ,QAAAA,KAAK,CAACI,MAAN,sBAAeF,OAAO,CAACR,KAAvB,6EAAe,gBAAeM,KAA9B,0DAAe,sBAAsBI,MAArC;AACD;;AACDF,MAAAA,OAAO,CAACR,KAAR,CAAcM,KAAd,GAAsBA,KAAtB;AACD;;AAED,QAAIV,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACY,OAAD,CAAR;AACD;AACF,GAvBD;;AAyBA,sBACE;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAEP,OAAO,CAAEU,EAFtB;AAGE,IAAA,aAAa,EAAE,CAACtB,iBAAiB,CAACuB,KAAnB,EAA0BvB,iBAAiB,CAACwB,KAA5C,CAHjB;AAIE,IAAA,IAAI,EAAEd,KAAK,CAACO,KAJd;AAKE,IAAA,WAAW,EAAEJ,CAAC,CAAC,eAAD,CALhB;AAME,IAAA,QAAQ,EAAE,CAACH,KAAK,CAACe,UANnB;AAOE,IAAA,SAAS,EAAC,gBAPZ;AAQE,IAAA,QAAQ,EAAEX,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWE,oBAAC,oBAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAEF,OAAO,CAAEU,EAFtB;AAGE,IAAA,aAAa,EAAE,CAACtB,iBAAiB,CAAC0B,KAAnB,CAHjB;AAIE,IAAA,IAAI,EAAEf,KAAK,CAACM,KAJd;AAKE,IAAA,WAAW,EAAEJ,CAAC,CAAC,gBAAD,CALhB;AAME,IAAA,QAAQ,EAAE,CAACF,KAAK,CAACc,UANnB;AAOE,IAAA,SAAS,EAAC,gBAPZ;AAQE,IAAA,QAAQ,EAAEX,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,eAuBE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,SAAS,EAAC,qCAHZ;AAIE,IAAA,KAAK,EAAEN,KAAK,CAACS,KAAN,IAAe,EAJxB;AAKE,IAAA,QAAQ,EAAE,CAACT,KAAK,CAACiB,UALnB;AAME,IAAA,QAAQ,EAAEX,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,eA+BE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,eAgCE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,2CAFZ;AAGE,IAAA,KAAK,EAAEL,IAAI,CAACQ,KAAL,IAAc,EAHvB;AAIE,IAAA,QAAQ,EAAE,CAACR,IAAI,CAACgB,UAJlB;AAKE,IAAA,QAAQ,EAAEX,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,CADF;AA0CD;;AAED,eAAeV,8BAAf","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { QuestionPropositionFeedback } from \"types\";\r\nimport { AcceptedFileTypes } from \"editor-constants\";\r\nimport { BlmMediaPicker, MediaPickerChangeEvent, BlmMediaPickerEditor } from \"components/shared\";\r\nimport { useQuestionEditorCtx } from \"components/question-editor/core\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  data: QuestionPropositionFeedback;\r\n  onChange: (data: QuestionPropositionFeedback) => void;\r\n}\r\n\r\nfunction BlmQuestionPropositionFeedback(props: CompProps) {\r\n  const { data, onChange } = props;\r\n  const { title, text, media, sound } = data;\r\n  const { element } = useQuestionEditorCtx();\r\n  const { t } = useTranslation(\"question-editor\");\r\n\r\n  const handleChange = (event: ChangeEvent<any> | MediaPickerChangeEvent) => {\r\n    const { name, value } = event.target;\r\n    const newData: QuestionPropositionFeedback = { ...data };\r\n\r\n    if (name === \"title\") {\r\n      newData.title.value = value;\r\n    } else if (name === \"text\") {\r\n      newData.text.value = value;\r\n    } else if (name === \"media\") {\r\n      newData.media.value = value;\r\n    } else if (name === \"sound\") {\r\n      if (value && !value.subtitle) {\r\n        value.subtitle = newData.sound?.value?.subtitle;\r\n      }\r\n      if (value && !value.marker) {\r\n        value.marker = newData.sound?.value?.marker;\r\n      }\r\n      newData.sound.value = value;\r\n    }\r\n\r\n    if (onChange) {\r\n      onChange(newData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-proposition-feedback-wrapper\">\r\n      <div className=\"question-proposition-feedback-media\">\r\n        <BlmMediaPicker\r\n          name=\"media\"\r\n          elementId={element!.id}\r\n          acceptedFiles={[AcceptedFileTypes.Image, AcceptedFileTypes.Video]}\r\n          data={media.value}\r\n          placeholder={t(\"main.no_media\")}\r\n          disabled={!media.isEditable}\r\n          className=\"media-picker-2\"\r\n          onChange={handleChange}\r\n        />\r\n        <BlmMediaPickerEditor\r\n          name=\"sound\"\r\n          elementId={element!.id}\r\n          acceptedFiles={[AcceptedFileTypes.Audio]}\r\n          data={sound.value}\r\n          placeholder={t(\"label.no_sound\")}\r\n          disabled={!sound.isEditable}\r\n          className=\"sound-picker-2\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        className=\"question-proposition-feedback-title\"\r\n        value={title.value || \"\"}\r\n        disabled={!title.isEditable}\r\n        onChange={handleChange}\r\n      />\r\n      <div className=\"question-proposition-feedback-title-hr\" />\r\n      <textarea\r\n        name=\"text\"\r\n        className=\"question-proposition-feedback-description\"\r\n        value={text.value || \"\"}\r\n        disabled={!text.isEditable}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmQuestionPropositionFeedback;\r\n"]},"metadata":{},"sourceType":"module"}