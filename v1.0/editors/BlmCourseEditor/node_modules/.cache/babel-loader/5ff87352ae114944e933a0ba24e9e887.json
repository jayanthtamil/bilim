{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\template-editors\\\\containers\\\\template-action\\\\BlmTemplateAction.tsx\";\nimport React, { forwardRef, Fragment, useEffect, useImperativeHandle, useMemo, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { differenceOfObjects } from \"utils\";\nimport { getTemplateActionModel, getTemplateActionMedias } from \"template-builders\";\nimport { BlmActionDashboard, BlmBackgroundAction, BlmSoundAction, BlmSimpleContentAction } from \"../../controls\";\nimport { changeKeyMap, createTemplate, createTemplateView } from \"./utils\";\nimport \"./styles.scss\";\nimport BlmBackgroundSoundAction from \"components/template-editors/controls/actions/background-sound\";\nconst initState = {\n  oldMedias: [],\n  isEdited: false\n};\nconst BlmTemplateAction = forwardRef((props, ref) => {\n  const {\n    element,\n    template,\n    onSave,\n    onClose,\n    removeFiles,\n    clearFiles\n  } = props;\n  const [editor, setEditor] = useState(initState);\n  const {\n    data,\n    oldMedias,\n    isEdited\n  } = editor;\n  const {\n    load,\n    complete\n  } = data || {};\n  const {\n    t\n  } = useTranslation(\"template-editors\");\n  const view = useMemo(() => createTemplateView(element), [element]);\n  useEffect(() => {\n    const data = getTemplateActionModel(template, view);\n    const oldMedias = getTemplateActionMedias(data);\n    setEditor({\n      data,\n      oldMedias,\n      isEdited: false\n    });\n  }, [template, view]);\n  useImperativeHandle(ref, () => ({\n    isEdited,\n    saveOnClose: handleSaveOnClose,\n    revert: revertChanges\n  }));\n\n  const saveChanges = () => {\n    if (data && isEdited) {\n      const newTemplate = createTemplate(template, data, view);\n      const newMedias = getTemplateActionMedias(data);\n      const deletedMedias = differenceOfObjects(oldMedias, newMedias, \"id\");\n\n      if (onSave) {\n        onSave(newTemplate);\n      }\n\n      removeFiles(deletedMedias);\n    }\n  };\n\n  const revertChanges = () => {\n    clearFiles(template.id, false);\n  };\n\n  const handleChange = event => {\n    if (data) {\n      const target = event.target;\n      const name = target.name;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const newData = { ...data\n      };\n\n      if (changeKeyMap.hasOwnProperty(name)) {\n        const map = changeKeyMap[name];\n        const {\n          obj1,\n          obj2,\n          key\n        } = map;\n        const action = newData[obj1];\n        newData[obj1] = { ...action,\n          [obj2]: key ? { ...action[obj2],\n            [key]: value\n          } : value\n        };\n        setEditor({ ...editor,\n          data: newData,\n          isEdited: true\n        });\n      }\n    }\n  };\n\n  const handleSaveOnClose = event => {\n    saveChanges();\n    clearFiles(template.id, true);\n\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  if (load && complete) {\n    var _element$root, _element$root2;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: clsx(\"template-action-panel\", element.type, {\n        prime: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-action-anchor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-action-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"load-action-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"load-action-lbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, t(\"template_action.on_load\")), /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, view.load.navigation && /*#__PURE__*/React.createElement(BlmActionDashboard, {\n      type: view.dashboardType,\n      label: t(\"template_action.label.navigation\"),\n      name: \"loadAlways\",\n      checked: load.navigation.always,\n      className: \"load-navigation-accordion\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      name: \"loadNext\",\n      label: t(\"template_action.label.hide_button_next\"),\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 30\n        }\n      }),\n      checked: load.navigation.next,\n      className: \"load-next-frm-ctrl\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      name: \"loadPrevious\",\n      label: t(\"template_action.label.hide_button_previous\"),\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 30\n        }\n      }),\n      checked: load.navigation.previous,\n      className: \"load-previous-frm-ctrl\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }), view.load.navigation.home && /*#__PURE__*/React.createElement(FormControlLabel, {\n      name: \"loadHome\",\n      label: t(\"template_action.label.hide_button_home\"),\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 32\n        }\n      }),\n      checked: load.navigation.home,\n      className: \"load-home-frm-ctrl\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    })), view.load.simpleContent && /*#__PURE__*/React.createElement(BlmActionDashboard, {\n      type: view.dashboardType,\n      label: t(\"template_action.label.simple_content\"),\n      name: \"loadSCAlways\",\n      checked: load.simpleContent.always,\n      className: \"load-simple-content-accordion\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BlmSimpleContentAction, {\n      name: \"loadSC\",\n      element: element,\n      data: load.simpleContent,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    })), view.load.background && /*#__PURE__*/React.createElement(BlmActionDashboard, {\n      type: view.dashboardType,\n      label: t(\"template_action.label.background\"),\n      name: \"loadBGAlways\",\n      checked: load.background.always,\n      className: \"load-background-accordion\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BlmBackgroundAction, {\n      name: \"loadBG\",\n      element: element,\n      data: load.background,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(BlmActionDashboard, {\n      type: view.dashboardType,\n      label: ((_element$root = element.root) === null || _element$root === void 0 ? void 0 : _element$root.type) !== \"structure\" ? t(\"template_action.label.sound\") : t(\"template_action.label.sound\") + \" (\" + t(\"template_action.label.voice_over\") + \")\",\n      name: \"loadSoundAlways\",\n      checked: load.sound.always,\n      className: \"load-sound-accordion\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BlmSoundAction, {\n      name: \"loadSound\",\n      element: element,\n      data: load.sound,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }\n    })), view.load.backgroundSound && /*#__PURE__*/React.createElement(BlmActionDashboard, {\n      type: view.dashboardType,\n      label: ((_element$root2 = element.root) === null || _element$root2 === void 0 ? void 0 : _element$root2.type) !== \"structure\" ? t(\"template_action.label.sound\") : t(\"template_action.label.sound\") + \" (\" + t(\"template_action.label.background\") + \")\",\n      name: \"loadBackgroundSoundAlways\",\n      checked: load.backgroundSound.always,\n      className: \"load-sound-accordion\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BlmBackgroundSoundAction, {\n      name: \"loadBackgroundSound\",\n      element: element,\n      data: load.backgroundSound,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }))), view.complete && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"complete-action-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"complete-action-lbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }, t(\"template_action.on_completed\")), view.complete.navigation && /*#__PURE__*/React.createElement(BlmActionDashboard, {\n      label: t(\"template_action.label.navigation\"),\n      disabled: load.navigation.always,\n      className: \"complete-navigation-accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      name: \"completeNext\",\n      label: t(\"template_action.label.keep_button\"),\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 30\n        }\n      }),\n      checked: complete.navigation.next,\n      className: \"complete-next-frm-ctrl\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      name: \"completePrevious\",\n      label: t(\"template_action.label.show_button\"),\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 30\n        }\n      }),\n      checked: complete.navigation.previous,\n      className: \"complete-previous-frm-ctrl\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      name: \"completeHome\",\n      label: t(\"template_action.label.show_button_home\"),\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 30\n        }\n      }),\n      checked: complete.navigation.home,\n      className: \"complete-home-frm-ctrl\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(BlmActionDashboard, {\n      label: t(\"template_action.label.simple_content\"),\n      className: \"complete-simple-content-accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BlmSimpleContentAction, {\n      name: \"completeSC\",\n      element: element,\n      data: complete.simpleContent,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(BlmActionDashboard, {\n      label: t(\"template_action.label.background\"),\n      className: \"complete-background-accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BlmBackgroundAction, {\n      name: \"completeBG\",\n      element: element,\n      data: complete.background,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(BlmActionDashboard, {\n      label: t(\"template_action.label.sound\"),\n      className: \"complete-sound-accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BlmSoundAction, {\n      name: \"completeSound\",\n      element: element,\n      data: complete.sound,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-action-close-btn\",\n      onClick: handleSaveOnClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return null;\n  }\n});\nexport default BlmTemplateAction;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/template-editors/containers/template-action/BlmTemplateAction.tsx"],"names":["React","forwardRef","Fragment","useEffect","useImperativeHandle","useMemo","useState","clsx","Checkbox","FormControlLabel","useTranslation","differenceOfObjects","getTemplateActionModel","getTemplateActionMedias","BlmActionDashboard","BlmBackgroundAction","BlmSoundAction","BlmSimpleContentAction","changeKeyMap","createTemplate","createTemplateView","BlmBackgroundSoundAction","initState","oldMedias","isEdited","BlmTemplateAction","props","ref","element","template","onSave","onClose","removeFiles","clearFiles","editor","setEditor","data","load","complete","t","view","saveOnClose","handleSaveOnClose","revert","revertChanges","saveChanges","newTemplate","newMedias","deletedMedias","id","handleChange","event","target","name","value","type","checked","newData","hasOwnProperty","map","obj1","obj2","key","action","prime","navigation","dashboardType","always","next","previous","home","simpleContent","background","root","sound","backgroundSound"],"mappings":"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","sourcesContent":["import React, {\r\n  ChangeEvent,\r\n  forwardRef,\r\n  Fragment,\r\n  MouseEvent,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  CourseElement,\r\n  CourseElementTemplate,\r\n  CustomChangeEvent,\r\n  ContentTemplateAction,\r\n  TemplateEditorComponent,\r\n  TemplateSimpleContentAction,\r\n  MediaFile,\r\n} from \"types\";\r\nimport { differenceOfObjects } from \"utils\";\r\nimport { getTemplateActionModel, getTemplateActionMedias } from \"template-builders\";\r\nimport {\r\n  BlmActionDashboard,\r\n  BlmBackgroundAction,\r\n  BlmSoundAction,\r\n  BlmSimpleContentAction,\r\n} from \"../../controls\";\r\nimport { changeKeyMap, createTemplate, createTemplateView } from \"./utils\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\nimport BlmBackgroundSoundAction from \"components/template-editors/controls/actions/background-sound\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  element: CourseElement;\r\n  template: CourseElementTemplate;\r\n  onSave?: (template: CourseElementTemplate) => void;\r\n  onClose?: (event: MouseEvent) => void;\r\n}\r\n\r\ninterface EditorState {\r\n  data?: ContentTemplateAction;\r\n  oldMedias: MediaFile[];\r\n  isEdited: boolean;\r\n}\r\n\r\nconst initState: EditorState = {\r\n  oldMedias: [],\r\n  isEdited: false,\r\n};\r\n\r\nconst BlmTemplateAction = forwardRef<TemplateEditorComponent, CompProps>((props, ref) => {\r\n  const { element, template, onSave, onClose, removeFiles, clearFiles } = props;\r\n  const [editor, setEditor] = useState<EditorState>(initState);\r\n  const { data, oldMedias, isEdited } = editor;\r\n  const { load, complete } = data || {};\r\n  const { t } = useTranslation(\"template-editors\");\r\n\r\n  const view = useMemo(() => createTemplateView(element), [element]);\r\n\r\n  useEffect(() => {\r\n    const data = getTemplateActionModel(template, view);\r\n    const oldMedias = getTemplateActionMedias(data);\r\n    setEditor({ data, oldMedias, isEdited: false });\r\n  }, [template, view]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    isEdited,\r\n    saveOnClose: handleSaveOnClose,\r\n    revert: revertChanges,\r\n  }));\r\n\r\n  const saveChanges = () => {\r\n    if (data && isEdited) {\r\n      const newTemplate = createTemplate(template, data, view);\r\n      const newMedias = getTemplateActionMedias(data);\r\n      const deletedMedias = differenceOfObjects(oldMedias, newMedias, \"id\");\r\n\r\n      if (onSave) {\r\n        onSave(newTemplate);\r\n      }\r\n\r\n      removeFiles(deletedMedias);\r\n    }\r\n  };\r\n\r\n  const revertChanges = () => {\r\n    clearFiles(template.id, false);\r\n  };\r\n\r\n  const handleChange = (\r\n    event: ChangeEvent<any> | CustomChangeEvent<TemplateSimpleContentAction>\r\n  ) => {\r\n    if (data) {\r\n      const target = event.target;\r\n      const name = target.name as string;\r\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n      const newData = { ...data };\r\n\r\n      if (changeKeyMap.hasOwnProperty(name)) {\r\n        const map = changeKeyMap[name];\r\n        const { obj1, obj2, key } = map;\r\n        const action = newData[obj1];\r\n\r\n        newData[obj1] = { ...action, [obj2]: key ? { ...action[obj2], [key]: value } : value };\r\n\r\n        setEditor({ ...editor, data: newData, isEdited: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSaveOnClose = (event: MouseEvent) => {\r\n    saveChanges();\r\n    clearFiles(template.id, true);\r\n\r\n    if (onClose) {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n  if (load && complete) {\r\n    return (\r\n      <div className={clsx(\"template-action-panel\", element.type, { prime: true })}>\r\n        <div className=\"template-action-anchor\" />\r\n        <div className=\"template-action-content\">\r\n          <div className=\"load-action-wrapper\">\r\n            <div className=\"load-action-lbl\">{t(\"template_action.on_load\")}</div>\r\n            <Fragment>\r\n              {view.load.navigation && (\r\n                <BlmActionDashboard\r\n                  type={view.dashboardType}\r\n                  label={t(\"template_action.label.navigation\")}\r\n                  name=\"loadAlways\"\r\n                  checked={load.navigation.always}\r\n                  className=\"load-navigation-accordion\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <FormControlLabel\r\n                    name=\"loadNext\"\r\n                    label={t(\"template_action.label.hide_button_next\")}\r\n                    control={<Checkbox />}\r\n                    checked={load.navigation.next}\r\n                    className=\"load-next-frm-ctrl\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <FormControlLabel\r\n                    name=\"loadPrevious\"\r\n                    label={t(\"template_action.label.hide_button_previous\")}\r\n                    control={<Checkbox />}\r\n                    checked={load.navigation.previous}\r\n                    className=\"load-previous-frm-ctrl\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  {view.load.navigation.home && (\r\n                    <FormControlLabel\r\n                      name=\"loadHome\"\r\n                      label={t(\"template_action.label.hide_button_home\")}\r\n                      control={<Checkbox />}\r\n                      checked={load.navigation.home}\r\n                      className=\"load-home-frm-ctrl\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  )}\r\n                </BlmActionDashboard>\r\n              )}\r\n              {view.load.simpleContent && (\r\n                <BlmActionDashboard\r\n                  type={view.dashboardType}\r\n                  label={t(\"template_action.label.simple_content\")}\r\n                  name=\"loadSCAlways\"\r\n                  checked={load.simpleContent.always}\r\n                  className=\"load-simple-content-accordion\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <BlmSimpleContentAction\r\n                    name=\"loadSC\"\r\n                    element={element}\r\n                    data={load.simpleContent}\r\n                    onChange={handleChange}\r\n                  />\r\n                </BlmActionDashboard>\r\n              )}\r\n              {view.load.background && (\r\n                <BlmActionDashboard\r\n                  type={view.dashboardType}\r\n                  label={t(\"template_action.label.background\")}\r\n                  name=\"loadBGAlways\"\r\n                  checked={load.background.always}\r\n                  className=\"load-background-accordion\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <BlmBackgroundAction\r\n                    name=\"loadBG\"\r\n                    element={element}\r\n                    data={load.background}\r\n                    onChange={handleChange}\r\n                  />\r\n                </BlmActionDashboard>\r\n              )}\r\n            </Fragment>\r\n            <BlmActionDashboard\r\n              type={view.dashboardType}\r\n              label={\r\n                element.root?.type !== \"structure\"\r\n                  ? t(\"template_action.label.sound\")\r\n                  : t(\"template_action.label.sound\") +\r\n                    \" (\" +\r\n                    t(\"template_action.label.voice_over\") +\r\n                    \")\"\r\n              }\r\n              name=\"loadSoundAlways\"\r\n              checked={load.sound.always}\r\n              className=\"load-sound-accordion\"\r\n              onChange={handleChange}\r\n            >\r\n              <BlmSoundAction\r\n                name=\"loadSound\"\r\n                element={element}\r\n                data={load.sound}\r\n                onChange={handleChange}\r\n              />\r\n            </BlmActionDashboard>\r\n            {view.load.backgroundSound && (\r\n              <BlmActionDashboard\r\n                type={view.dashboardType}\r\n                label={\r\n                  element.root?.type !== \"structure\"\r\n                    ? t(\"template_action.label.sound\")\r\n                    : t(\"template_action.label.sound\") +\r\n                      \" (\" +\r\n                      t(\"template_action.label.background\") +\r\n                      \")\"\r\n                }\r\n                name=\"loadBackgroundSoundAlways\"\r\n                checked={load.backgroundSound.always}\r\n                className=\"load-sound-accordion\"\r\n                onChange={handleChange}\r\n              >\r\n                <BlmBackgroundSoundAction\r\n                  name=\"loadBackgroundSound\"\r\n                  element={element}\r\n                  data={load.backgroundSound}\r\n                  onChange={handleChange}\r\n                />\r\n              </BlmActionDashboard>\r\n            )}\r\n          </div>\r\n          {view.complete && (\r\n            <div className=\"complete-action-wrapper\">\r\n              <div className=\"complete-action-lbl\">{t(\"template_action.on_completed\")}</div>\r\n              {view.complete.navigation && (\r\n                <BlmActionDashboard\r\n                  label={t(\"template_action.label.navigation\")}\r\n                  disabled={load.navigation.always}\r\n                  className=\"complete-navigation-accordion\"\r\n                >\r\n                  <FormControlLabel\r\n                    name=\"completeNext\"\r\n                    label={t(\"template_action.label.keep_button\")}\r\n                    control={<Checkbox />}\r\n                    checked={complete.navigation.next}\r\n                    className=\"complete-next-frm-ctrl\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <FormControlLabel\r\n                    name=\"completePrevious\"\r\n                    label={t(\"template_action.label.show_button\")}\r\n                    control={<Checkbox />}\r\n                    checked={complete.navigation.previous}\r\n                    className=\"complete-previous-frm-ctrl\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <FormControlLabel\r\n                    name=\"completeHome\"\r\n                    label={t(\"template_action.label.show_button_home\")}\r\n                    control={<Checkbox />}\r\n                    checked={complete.navigation.home}\r\n                    className=\"complete-home-frm-ctrl\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </BlmActionDashboard>\r\n              )}\r\n              <BlmActionDashboard\r\n                label={t(\"template_action.label.simple_content\")}\r\n                className=\"complete-simple-content-accordion\"\r\n              >\r\n                <BlmSimpleContentAction\r\n                  name=\"completeSC\"\r\n                  element={element}\r\n                  data={complete.simpleContent}\r\n                  onChange={handleChange}\r\n                />\r\n              </BlmActionDashboard>\r\n              <BlmActionDashboard\r\n                label={t(\"template_action.label.background\")}\r\n                className=\"complete-background-accordion\"\r\n              >\r\n                <BlmBackgroundAction\r\n                  name=\"completeBG\"\r\n                  element={element}\r\n                  data={complete.background}\r\n                  onChange={handleChange}\r\n                />\r\n              </BlmActionDashboard>\r\n              <BlmActionDashboard\r\n                label={t(\"template_action.label.sound\")}\r\n                className=\"complete-sound-accordion\"\r\n              >\r\n                <BlmSoundAction\r\n                  name=\"completeSound\"\r\n                  element={element}\r\n                  data={complete.sound}\r\n                  onChange={handleChange}\r\n                />\r\n              </BlmActionDashboard>\r\n            </div>\r\n          )}\r\n          <div className=\"template-action-close-btn\" onClick={handleSaveOnClose} />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n});\r\n\r\nexport default BlmTemplateAction;\r\n"]},"metadata":{},"sourceType":"module"}