{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\template-editors\\\\core\\\\scroll-editor\\\\BlmScrollEditor.tsx\";\nimport React, { Fragment, useRef } from \"react\";\nimport { Popper, Backdrop } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { createModifiersForIFrame } from \"../../utils\";\nimport { BlmTemplateScroll } from \"../../containers\";\nimport \"./styles.scss\";\nconst popperOptions = {\n  eventsEnabled: true\n};\nconst modifiers = createModifiersForIFrame(-112, 1);\n\nfunction BlmScrollEditor(props) {\n  const {\n    open,\n    anchorEle,\n    template,\n    onSave,\n    onClose,\n    openConfirmDialog\n  } = props;\n  const editorRef = useRef(null);\n  const {\n    t\n  } = useTranslation();\n\n  const openSaveConfirmDialog = () => {\n    const options = {\n      className: \"template-editor-warning-dialog\",\n      okLabel: `${t(\"button.save\")}`,\n      cancelLabel: `${t(\"button.cancel\")}`\n    };\n    openConfirmDialog(\"\", `${t(\"alert.save_changes\")}`, handleSave, handleClose, options);\n  };\n\n  const handleSave = event => {\n    const editor = editorRef.current;\n\n    if (editor) {\n      editor.saveOnClose(event);\n    }\n  };\n\n  const handleBackdropClick = event => {\n    const editor = editorRef.current;\n\n    if (editor && editor.isEdited) {\n      openSaveConfirmDialog();\n    } else {\n      handleClose(event);\n    }\n  };\n\n  const handleClose = event => {\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popper, {\n    id: \"scroll-popper\",\n    open: open,\n    anchorEl: open ? anchorEle : null,\n    placement: \"bottom-start\",\n    popperOptions: popperOptions,\n    modifiers: modifiers,\n    className: \"template-scroll-editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BlmTemplateScroll, {\n    ref: editorRef,\n    template: template,\n    onSave: onSave,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Backdrop, {\n    open: open,\n    className: \"template-scroll-editor-backdrop\",\n    onClick: handleBackdropClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BlmScrollEditor;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/template-editors/core/scroll-editor/BlmScrollEditor.tsx"],"names":["React","Fragment","useRef","Popper","Backdrop","useTranslation","createModifiersForIFrame","BlmTemplateScroll","popperOptions","eventsEnabled","modifiers","BlmScrollEditor","props","open","anchorEle","template","onSave","onClose","openConfirmDialog","editorRef","t","openSaveConfirmDialog","options","className","okLabel","cancelLabel","handleSave","handleClose","event","editor","current","saveOnClose","handleBackdropClick","isEdited"],"mappings":"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","sourcesContent":["import React, { Fragment, MouseEvent, useRef } from \"react\";\r\nimport { Popper, Backdrop } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CourseElementTemplate, TemplateEditorComponent } from \"types\";\r\nimport { createModifiersForIFrame } from \"../../utils\";\r\nimport { BlmTemplateScroll } from \"../../containers\";\r\nimport { ContainerProps } from \"./scroll-editor-container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  open: boolean;\r\n  anchorEle: HTMLElement;\r\n  template: CourseElementTemplate;\r\n  onSave: (template: CourseElementTemplate) => void;\r\n  onClose: (event: MouseEvent) => void;\r\n}\r\n\r\nconst popperOptions = {\r\n  eventsEnabled: true,\r\n};\r\nconst modifiers = createModifiersForIFrame(-112, 1);\r\n\r\nfunction BlmScrollEditor(props: CompProps) {\r\n  const { open, anchorEle, template, onSave, onClose, openConfirmDialog } = props;\r\n  const editorRef = useRef<TemplateEditorComponent | null>(null);\r\n  const { t } = useTranslation();\r\n\r\n  const openSaveConfirmDialog = () => {\r\n    const options = {\r\n      className: \"template-editor-warning-dialog\",\r\n      okLabel: `${t(\"button.save\")}`,\r\n      cancelLabel: `${t(\"button.cancel\")}`,\r\n    };\r\n\r\n    openConfirmDialog(\"\", `${t(\"alert.save_changes\")}`, handleSave, handleClose, options);\r\n  };\r\n\r\n  const handleSave = (event: MouseEvent) => {\r\n    const editor = editorRef.current;\r\n\r\n    if (editor) {\r\n      editor.saveOnClose(event);\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (event: MouseEvent) => {\r\n    const editor = editorRef.current;\r\n\r\n    if (editor && editor.isEdited) {\r\n      openSaveConfirmDialog();\r\n    } else {\r\n      handleClose(event);\r\n    }\r\n  };\r\n\r\n  const handleClose = (event: MouseEvent) => {\r\n    if (onClose) {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Popper\r\n        id=\"scroll-popper\"\r\n        open={open}\r\n        anchorEl={open ? anchorEle : null}\r\n        placement=\"bottom-start\"\r\n        popperOptions={popperOptions}\r\n        modifiers={modifiers}\r\n        className=\"template-scroll-editor\"\r\n      >\r\n        <BlmTemplateScroll\r\n          ref={editorRef}\r\n          template={template}\r\n          onSave={onSave}\r\n          onClose={handleClose}\r\n        />\r\n      </Popper>\r\n      <Backdrop\r\n        open={open}\r\n        className=\"template-scroll-editor-backdrop\"\r\n        onClick={handleBackdropClick}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default BlmScrollEditor;\r\n"]},"metadata":{},"sourceType":"module"}