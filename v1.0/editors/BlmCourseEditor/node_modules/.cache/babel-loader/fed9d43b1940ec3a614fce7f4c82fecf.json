{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\shared\\\\media-picker\\\\BlmMediaPicker.tsx\";\nimport React, { Fragment } from \"react\";\nimport clsx from \"clsx\";\nimport { AcceptedFileTypes } from \"editor-constants\";\nimport { isVideo, isAudio, isZip, isJSON } from \"utils\";\nimport { useUploadMedia } from \"components/hooks\";\nimport \"./media-picker.scss\";\n\nfunction BlmMediaPicker(props) {\n  const {\n    elementId,\n    name,\n    data,\n    placeholder,\n    acceptedFiles,\n    isLinked = false,\n    showEdit = false,\n    disabled = false,\n    className,\n    replaceZone = \"button\",\n    previewZone = \"display\",\n    deleteAlert,\n    children,\n    openConfirmDialog,\n    onChange,\n    onEdit,\n    hotspot,\n    sound,\n    showDesign,\n    ...others\n  } = props;\n  const {\n    fileRef,\n    browseMedia,\n    uploadMedia,\n    deleteMedia\n  } = useUploadMedia({\n    name,\n    elementId,\n    data,\n    isLinked,\n    onChange\n  });\n  const accepted = acceptedFiles.join(\",\");\n\n  const handleFileChange = event => {\n    uploadMedia(event.target.files);\n  };\n\n  const handleDelete = event => {\n    if (deleteAlert) {\n      openConfirmDialog(deleteAlert.title, deleteAlert.message, deleteMedia, undefined, deleteAlert.options);\n    } else {\n      deleteMedia();\n    }\n  };\n\n  const getPickerClassName = () => {\n    if (acceptedFiles.indexOf(AcceptedFileTypes.Audio) !== -1) {\n      return \"audio\";\n    } else if (acceptedFiles.indexOf(AcceptedFileTypes.Video) !== -1) {\n      return \"video\";\n    } else if (acceptedFiles.indexOf(AcceptedFileTypes.Zip) !== -1) {\n      return \"zip\";\n    } else {\n      return \"image\";\n    }\n  };\n\n  const getPreviewClassName = () => {\n    if (!data) {\n      return undefined;\n    } else if (isVideo(data.type)) {\n      return \"video\";\n    } else if (isAudio(data.type)) {\n      return \"audio\";\n    } else if (isZip(data.type)) {\n      return \"zip\";\n    } else if (isJSON(data.type)) {\n      return \"json\";\n    } else {\n      return \"image\";\n    }\n  };\n\n  const renderLink = (isLink, children) => {\n    if (data && isLink) {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: data.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, children);\n    }\n\n    return children;\n  };\n\n  const renderValue = () => {\n    if (data) {\n      window.open(data.url);\n    }\n  };\n\n  const renderDisplay = () => {\n    if (!data) {\n      return null;\n    } else if (children) {\n      return children;\n    } else if (isVideo(data.type)) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"video\", {\n        src: data.url,\n        height: \"102px\",\n        width: \"122px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"video-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }));\n    } else if (isAudio(data.type)) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"audio\", {\n        src: data.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"audio-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      }));\n    } else if (isZip(data.type)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"zip-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 14\n        }\n      });\n    } else if (isJSON(data.type)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"json-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: data.url,\n        alt: data.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(\"media-picker-wrapper\", getPickerClassName(), {\n      disabled: disabled,\n      \"has-media\": data,\n      linked: isLinked\n    }, className)\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-browse-wrapper\",\n    onClick: browseMedia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: fileRef,\n    type: \"file\",\n    accept: accepted,\n    onChange: handleFileChange,\n    className: \"input-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"browse-placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, placeholder)), data && /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"media-preview-wrapper\", \"replace-zone-\" + replaceZone, getPreviewClassName()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-display-wrapper\",\n    onClick: hotspot !== \"hotspot\" ? browseMedia : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, renderLink(previewZone === \"display\" && replaceZone !== \"display\" && hotspot === \"hotspot\", renderDisplay())), showEdit && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-edit-btn\",\n    onClick: onEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-delete-btn\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }), hotspot === \"hotspot\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-replace-btn\",\n    onClick: browseMedia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 37\n    }\n  }), replaceZone === \"button\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: showDesign === \"showDesign\" ? \"media-preview-btn media-preview-proposition-btn\" : sound === \"sound\" ? \"media-preview-btn media-preview-sound-btn\" : hotspot === \"hotspot\" ? \"media-preview-btn media-preview-radius-btn\" : \"media-preview-btn\",\n    onClick: () => renderValue(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, data.name)));\n}\n\nexport default BlmMediaPicker;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/media-picker/BlmMediaPicker.tsx"],"names":["React","Fragment","clsx","AcceptedFileTypes","isVideo","isAudio","isZip","isJSON","useUploadMedia","BlmMediaPicker","props","elementId","name","data","placeholder","acceptedFiles","isLinked","showEdit","disabled","className","replaceZone","previewZone","deleteAlert","children","openConfirmDialog","onChange","onEdit","hotspot","sound","showDesign","others","fileRef","browseMedia","uploadMedia","deleteMedia","accepted","join","handleFileChange","event","target","files","handleDelete","title","message","undefined","options","getPickerClassName","indexOf","Audio","Video","Zip","getPreviewClassName","type","renderLink","isLink","url","renderValue","window","open","renderDisplay","linked"],"mappings":"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","sourcesContent":["import React, {\r\n  ChangeEvent,\r\n  MouseEvent,\r\n  Fragment,\r\n  ReactNode,\r\n  HTMLAttributes,\r\n  PropsWithChildren,\r\n} from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { CustomChangeEvent, DialogOptions, MediaFile } from \"types\";\r\nimport { AcceptedFileTypes } from \"editor-constants\";\r\nimport { isVideo, isAudio, isZip, isJSON } from \"utils\";\r\nimport { useUploadMedia } from \"components/hooks\";\r\nimport { ContainerProps } from \"./media-picker-container\";\r\nimport \"./media-picker.scss\";\r\n\r\nexport type MediaPickerChangeEvent = CustomChangeEvent<MediaFile | undefined>;\r\n\r\nexport interface MediaPickerProps\r\n  extends ContainerProps,\r\n    Omit<HTMLAttributes<HTMLDivElement>, \"onChange\"> {\r\n  name: string;\r\n  elementId: string;\r\n  acceptedFiles: AcceptedFileTypes[];\r\n  data?: MediaFile | null;\r\n  placeholder?: string;\r\n  isLinked?: boolean;\r\n  showEdit?: boolean;\r\n  disabled?: boolean;\r\n  replaceZone?: \"button\" | \"display\" | \"none\";\r\n  previewZone?: \"display\" | \"none\";\r\n  deleteAlert?: { title: string; message: string; options?: DialogOptions };\r\n  onChange?: (event: MediaPickerChangeEvent) => void;\r\n  onEdit?: (event: MouseEvent) => void;\r\n  hotspot?: string;\r\n  sound?: string;\r\n  showDesign?: string;\r\n}\r\n\r\nfunction BlmMediaPicker(props: PropsWithChildren<MediaPickerProps>) {\r\n  const {\r\n    elementId,\r\n    name,\r\n    data,\r\n    placeholder,\r\n    acceptedFiles,\r\n    isLinked = false,\r\n    showEdit = false,\r\n    disabled = false,\r\n    className,\r\n    replaceZone = \"button\",\r\n    previewZone = \"display\",\r\n    deleteAlert,\r\n    children,\r\n    openConfirmDialog,\r\n    onChange,\r\n    onEdit,\r\n    hotspot,\r\n    sound,\r\n    showDesign,\r\n    ...others\r\n  } = props;\r\n  const { fileRef, browseMedia, uploadMedia, deleteMedia } = useUploadMedia({\r\n    name,\r\n    elementId,\r\n    data,\r\n    isLinked,\r\n    onChange,\r\n  });\r\n  const accepted = acceptedFiles.join(\",\");\r\n\r\n  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    uploadMedia(event.target.files);\r\n  };\r\n\r\n  const handleDelete = (event: MouseEvent<HTMLElement>) => {\r\n    if (deleteAlert) {\r\n      openConfirmDialog(\r\n        deleteAlert.title,\r\n        deleteAlert.message,\r\n        deleteMedia,\r\n        undefined,\r\n        deleteAlert.options\r\n      );\r\n    } else {\r\n      deleteMedia();\r\n    }\r\n  };\r\n\r\n  const getPickerClassName = () => {\r\n    if (acceptedFiles.indexOf(AcceptedFileTypes.Audio) !== -1) {\r\n      return \"audio\";\r\n    } else if (acceptedFiles.indexOf(AcceptedFileTypes.Video) !== -1) {\r\n      return \"video\";\r\n    } else if (acceptedFiles.indexOf(AcceptedFileTypes.Zip) !== -1) {\r\n      return \"zip\";\r\n    } else {\r\n      return \"image\";\r\n    }\r\n  };\r\n\r\n  const getPreviewClassName = () => {\r\n    if (!data) {\r\n      return undefined;\r\n    } else if (isVideo(data.type)) {\r\n      return \"video\";\r\n    } else if (isAudio(data.type)) {\r\n      return \"audio\";\r\n    } else if (isZip(data.type)) {\r\n      return \"zip\";\r\n    } else if (isJSON(data.type)) {\r\n      return \"json\";\r\n    } else {\r\n      return \"image\";\r\n    }\r\n  };\r\n\r\n  const renderLink = (isLink: boolean, children?: ReactNode) => {\r\n    if (data && isLink) {\r\n      return (\r\n        <a href={data.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {children}\r\n        </a>\r\n      );\r\n    }\r\n    return children;\r\n  };\r\n\r\n  const renderValue = () => {\r\n    if (data) {\r\n      window.open(data.url);\r\n    }\r\n  };\r\n\r\n  const renderDisplay = () => {\r\n    if (!data) {\r\n      return null;\r\n    } else if (children) {\r\n      return children;\r\n    } else if (isVideo(data.type)) {\r\n      return (\r\n        <Fragment>\r\n          <video src={data.url} height=\"102px\" width=\"122px\" />\r\n          <div className=\"video-icon\" />\r\n        </Fragment>\r\n      );\r\n    } else if (isAudio(data.type)) {\r\n      return (\r\n        <Fragment>\r\n          <audio src={data.url} />\r\n          <div className=\"audio-icon\" />\r\n        </Fragment>\r\n      );\r\n    } else if (isZip(data.type)) {\r\n      return <div className=\"zip-icon\" />;\r\n    } else if (isJSON(data.type)) {\r\n      return <div className=\"json-icon\" />;\r\n    } else {\r\n      return <img src={data.url} alt={data.name} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        \"media-picker-wrapper\",\r\n        getPickerClassName(),\r\n        {\r\n          disabled: disabled,\r\n          \"has-media\": data,\r\n          linked: isLinked,\r\n        },\r\n        className\r\n      )}\r\n      {...others}\r\n    >\r\n      <div className=\"media-browse-wrapper\" onClick={browseMedia}>\r\n        <input\r\n          ref={fileRef}\r\n          type=\"file\"\r\n          accept={accepted}\r\n          onChange={handleFileChange}\r\n          className=\"input-file\"\r\n        />\r\n        <div className=\"browse-placeholder\">{placeholder}</div>\r\n      </div>\r\n      {data && (\r\n        <div\r\n          className={clsx(\r\n            \"media-preview-wrapper\",\r\n            \"replace-zone-\" + replaceZone,\r\n            getPreviewClassName()\r\n          )}\r\n        >\r\n          <div\r\n            className=\"media-display-wrapper\"\r\n            onClick={hotspot !== \"hotspot\" ? browseMedia : undefined}\r\n          >\r\n            {renderLink(\r\n              previewZone === \"display\" && replaceZone !== \"display\" && hotspot === \"hotspot\",\r\n              renderDisplay()\r\n            )}\r\n          </div>\r\n          {showEdit && <div className=\"media-edit-btn\" onClick={onEdit} />}\r\n          <div className=\"media-delete-btn\" onClick={handleDelete} />\r\n          {hotspot === \"hotspot\" && <div className=\"media-replace-btn\" onClick={browseMedia} />}\r\n          {replaceZone === \"button\" && (\r\n            <div\r\n              className={\r\n                showDesign === \"showDesign\"\r\n                  ? \"media-preview-btn media-preview-proposition-btn\"\r\n                  : sound === \"sound\"\r\n                  ? \"media-preview-btn media-preview-sound-btn\"\r\n                  : hotspot === \"hotspot\"\r\n                  ? \"media-preview-btn media-preview-radius-btn\"\r\n                  : \"media-preview-btn\"\r\n              }\r\n              onClick={() => renderValue()}\r\n            />\r\n          )}\r\n          <div className=\"media-name\">{data.name}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmMediaPicker;\r\n"]},"metadata":{},"sourceType":"module"}