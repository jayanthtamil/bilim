{"ast":null,"code":"import { TemplateDisplayTypes, TemplateOrientationTypes } from \"editor-constants\";\nimport * as actions from \"../types\";\nexport const initState = {\n  isInteractable: true,\n  tree: {\n    item: undefined,\n    node: undefined,\n    action: undefined\n  },\n  element: undefined,\n  courseProps: undefined,\n  elementProps: undefined,\n  structurePanel: {\n    open: false,\n    anchorEle: undefined,\n    isPinned: false\n  },\n  propertiesPanel: {\n    open: false,\n    tabIndex: -1\n  },\n  templatesPanel: {\n    open: false,\n    display: TemplateDisplayTypes.Desktop,\n    orientation: TemplateOrientationTypes.Portrait\n  }\n};\nexport default function elementReducer(state = initState, action) {\n  switch (action.type) {\n    case actions.SET_COURSE_PROPERTIES:\n      return { ...state,\n        courseProps: action.payload.properties\n      };\n\n    case actions.SET_ELEMENT_PROPERTIES:\n      return { ...state,\n        elementProps: action.payload.properties\n      };\n\n    case actions.TOGGLE_INTERACTION:\n      return { ...state,\n        isInteractable: action.payload\n      };\n\n    case actions.TOGGLE_STRUCTURE_PANEL:\n      const {\n        open = !state.structurePanel.open\n      } = action.payload;\n      return { ...state,\n        structurePanel: { ...state.structurePanel,\n          open\n        }\n      };\n\n    case actions.TOGGLE_STRUCTURE_PANEL_PIN:\n      const {\n        isPinned = !state.structurePanel.isPinned\n      } = action.payload;\n      return { ...state,\n        structurePanel: { ...state.structurePanel,\n          isPinned,\n          open: isPinned ? true : state.structurePanel.open\n        }\n      };\n\n    case actions.TOGGLE_ELEMENT_PROPERTIES_PANEL:\n      return { ...state,\n        element: action.payload.element && { ...action.payload.element\n        },\n        propertiesPanel: { ...state.propertiesPanel,\n          open: action.payload.open\n        }\n      };\n\n    case actions.TOGGLE_ELEMENT_TEMPLATES_PANEL:\n      return { ...state,\n        element: action.payload.element && { ...action.payload.element\n        },\n        templatesPanel: { ...state.templatesPanel,\n          open: action.payload.open,\n          child: action.payload.child && { ...action.payload.child\n          }\n        }\n      };\n\n    case actions.SET_STRUCTURE_ANCHOR_ELE:\n      const {\n        element\n      } = action.payload;\n      return { ...state,\n        structurePanel: { ...state.structurePanel,\n          anchorEle: element\n        }\n      };\n\n    case actions.SELECT_TREE_ITEM:\n      const {\n        item,\n        node\n      } = action.payload;\n      return { ...state,\n        tree: { ...state.tree,\n          item: item && { ...item\n          },\n          node: node\n        }\n      };\n\n    case actions.SET_TREE_ACTION:\n      return { ...state,\n        tree: { ...state.tree,\n          action: action.payload\n        }\n      };\n\n    case actions.SET_ELEMENT_PROPERTIES_TAB_INDEX:\n      return { ...state,\n        propertiesPanel: { ...state.propertiesPanel,\n          tabIndex: action.payload.index\n        }\n      };\n\n    case actions.SET_TEMPLATE_VIEW:\n      return { ...state,\n        templatesPanel: { ...state.templatesPanel,\n          display: action.payload.display,\n          orientation: action.payload.orientation || state.templatesPanel.orientation\n        }\n      };\n\n    case actions.SET_PREVIEW_TEMPLATES:\n      return { ...state,\n        templatesPanel: { ...state.templatesPanel,\n          templates: action.payload.templates\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/redux/editor/core/reducers/index.ts"],"names":["TemplateDisplayTypes","TemplateOrientationTypes","actions","initState","isInteractable","tree","item","undefined","node","action","element","courseProps","elementProps","structurePanel","open","anchorEle","isPinned","propertiesPanel","tabIndex","templatesPanel","display","Desktop","orientation","Portrait","elementReducer","state","type","SET_COURSE_PROPERTIES","payload","properties","SET_ELEMENT_PROPERTIES","TOGGLE_INTERACTION","TOGGLE_STRUCTURE_PANEL","TOGGLE_STRUCTURE_PANEL_PIN","TOGGLE_ELEMENT_PROPERTIES_PANEL","TOGGLE_ELEMENT_TEMPLATES_PANEL","child","SET_STRUCTURE_ANCHOR_ELE","SELECT_TREE_ITEM","SET_TREE_ACTION","SET_ELEMENT_PROPERTIES_TAB_INDEX","index","SET_TEMPLATE_VIEW","SET_PREVIEW_TEMPLATES","templates"],"mappings":"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","sourcesContent":["import { TemplateDisplayTypes, TemplateOrientationTypes } from \"editor-constants\";\r\nimport * as actions from \"../types\";\r\n\r\nexport const initState: actions.EditorCoreState = {\r\n  isInteractable: true,\r\n  tree: { item: undefined, node: undefined, action: undefined },\r\n  element: undefined,\r\n  courseProps: undefined,\r\n  elementProps: undefined,\r\n  structurePanel: { open: false, anchorEle: undefined, isPinned: false },\r\n  propertiesPanel: { open: false, tabIndex: -1 },\r\n  templatesPanel: {\r\n    open: false,\r\n    display: TemplateDisplayTypes.Desktop,\r\n    orientation: TemplateOrientationTypes.Portrait,\r\n  },\r\n};\r\n\r\nexport default function elementReducer(\r\n  state = initState,\r\n  action: actions.ElementPropActions\r\n): actions.EditorCoreState {\r\n  switch (action.type) {\r\n    case actions.SET_COURSE_PROPERTIES:\r\n      return {\r\n        ...state,\r\n        courseProps: action.payload.properties,\r\n      };\r\n    case actions.SET_ELEMENT_PROPERTIES:\r\n      return {\r\n        ...state,\r\n        elementProps: action.payload.properties,\r\n      };\r\n    case actions.TOGGLE_INTERACTION:\r\n      return {\r\n        ...state,\r\n        isInteractable: action.payload,\r\n      };\r\n    case actions.TOGGLE_STRUCTURE_PANEL:\r\n      const { open = !state.structurePanel.open } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        structurePanel: {\r\n          ...state.structurePanel,\r\n          open,\r\n        },\r\n      };\r\n    case actions.TOGGLE_STRUCTURE_PANEL_PIN:\r\n      const { isPinned = !state.structurePanel.isPinned } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        structurePanel: {\r\n          ...state.structurePanel,\r\n          isPinned,\r\n          open: isPinned ? true : state.structurePanel.open,\r\n        },\r\n      };\r\n    case actions.TOGGLE_ELEMENT_PROPERTIES_PANEL:\r\n      return {\r\n        ...state,\r\n        element: action.payload.element && { ...action.payload.element },\r\n        propertiesPanel: {\r\n          ...state.propertiesPanel,\r\n          open: action.payload.open,\r\n        },\r\n      };\r\n    case actions.TOGGLE_ELEMENT_TEMPLATES_PANEL:\r\n      return {\r\n        ...state,\r\n        element: action.payload.element && { ...action.payload.element },\r\n        templatesPanel: {\r\n          ...state.templatesPanel,\r\n          open: action.payload.open,\r\n          child: action.payload.child && { ...action.payload.child },\r\n        },\r\n      };\r\n    case actions.SET_STRUCTURE_ANCHOR_ELE:\r\n      const { element } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        structurePanel: { ...state.structurePanel, anchorEle: element },\r\n      };\r\n    case actions.SELECT_TREE_ITEM:\r\n      const { item, node } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        tree: {\r\n          ...state.tree,\r\n          item: item && { ...item },\r\n          node: node,\r\n        },\r\n      };\r\n    case actions.SET_TREE_ACTION:\r\n      return {\r\n        ...state,\r\n        tree: {\r\n          ...state.tree,\r\n          action: action.payload,\r\n        },\r\n      };\r\n    case actions.SET_ELEMENT_PROPERTIES_TAB_INDEX:\r\n      return {\r\n        ...state,\r\n        propertiesPanel: {\r\n          ...state.propertiesPanel,\r\n          tabIndex: action.payload.index,\r\n        },\r\n      };\r\n    case actions.SET_TEMPLATE_VIEW:\r\n      return {\r\n        ...state,\r\n        templatesPanel: {\r\n          ...state.templatesPanel,\r\n          display: action.payload.display,\r\n          orientation: action.payload.orientation || state.templatesPanel.orientation,\r\n        },\r\n      };\r\n    case actions.SET_PREVIEW_TEMPLATES:\r\n      return {\r\n        ...state,\r\n        templatesPanel: {\r\n          ...state.templatesPanel,\r\n          templates: action.payload.templates,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}