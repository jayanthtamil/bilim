{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\component-editor\\\\rich-text\\\\BlmRichTextEditor.tsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { create } from \"jss\";\nimport { jssPreset, StylesProvider } from \"@material-ui/core\";\nimport { camelToKebab } from \"utils\";\nimport BlmTextToolbox from \"../text-toolbox\";\nimport BlmTextEditor from \"../text\";\nconst jss = create({ ...jssPreset()\n});\nconst cssProperties = [\"fontFamily\", \"fontSize\", \"fontStyle\", \"fontWeight\", \"color\", \"textDecoration\", \"textTransform\", \"backgroundColor\"];\n\nfunction BlmRichTextEditor(props) {\n  var _containerRef$current2;\n\n  const {\n    name,\n    value,\n    placeholder,\n    offset,\n    className,\n    onChange,\n    onTextChange,\n    template\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [editorState, setEditorState] = useState();\n  const [styles, setStyles] = useState();\n  const containerRef = useRef(null);\n  const textRef = useRef(null);\n  const timeoutRef = useRef();\n  useEffect(() => {\n    if (containerRef.current) {\n      const styles = {};\n      const obj = window.getComputedStyle(containerRef.current);\n\n      for (const prop of cssProperties) {\n        let val = obj.getPropertyValue(camelToKebab(prop));\n        styles[prop] = val;\n      }\n\n      setStyles(styles);\n    }\n  }, []);\n  useEffect(() => {\n    if (open && containerRef.current) {\n      const docs = [containerRef.current.ownerDocument, document];\n\n      const handleScroll = event => {\n        var _containerRef$current;\n\n        const element = (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.ownerDocument.activeElement;\n\n        if (element && \"blur\" in element) {\n          element.blur();\n        }\n      };\n\n      docs.forEach(doc => {\n        doc === null || doc === void 0 ? void 0 : doc.addEventListener(\"scroll\", handleScroll, {\n          once: true\n        });\n        doc === null || doc === void 0 ? void 0 : doc.addEventListener(\"wheel\", handleScroll, {\n          once: true\n        });\n      });\n      return () => {\n        docs.forEach(doc => {\n          doc === null || doc === void 0 ? void 0 : doc.removeEventListener(\"scroll\", handleScroll);\n          doc === null || doc === void 0 ? void 0 : doc.removeEventListener(\"wheel\", handleScroll);\n        });\n      };\n    }\n  }, [open]);\n\n  const handleFocus = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    setOpen(true);\n  };\n\n  const handleBlur = event => {\n    timeoutRef.current = setTimeout(() => setOpen(false));\n  };\n\n  const handleEditorChange = state => {\n    setEditorState(state);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    className: className,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, open && containerRef.current && template !== \"question\" && /*#__PURE__*/React.createElement(StylesProvider, {\n    jss: jss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BlmTextToolbox, {\n    show: true,\n    offset: offset,\n    anchorEle: containerRef.current,\n    textEditorRef: textRef,\n    editorState: editorState,\n    defaultStyles: styles,\n    size: ((_containerRef$current2 = containerRef.current) === null || _containerRef$current2 === void 0 ? void 0 : _containerRef$current2.clientWidth) < 365 ? \"small\" : \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(BlmTextEditor, {\n    ref: textRef,\n    name: name,\n    value: value,\n    placeholder: placeholder,\n    showSelection: open,\n    onChange: onChange,\n    onTextChange: onTextChange,\n    onEditorChange: handleEditorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BlmRichTextEditor;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/component-editor/rich-text/BlmRichTextEditor.tsx"],"names":["React","useEffect","useRef","useState","create","jssPreset","StylesProvider","camelToKebab","BlmTextToolbox","BlmTextEditor","jss","cssProperties","BlmRichTextEditor","props","name","value","placeholder","offset","className","onChange","onTextChange","template","open","setOpen","editorState","setEditorState","styles","setStyles","containerRef","textRef","timeoutRef","current","obj","window","getComputedStyle","prop","val","getPropertyValue","docs","ownerDocument","document","handleScroll","event","element","activeElement","blur","forEach","doc","addEventListener","once","removeEventListener","handleFocus","clearTimeout","handleBlur","setTimeout","handleEditorChange","state","clientWidth"],"mappings":"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","sourcesContent":["import React, { FocusEvent, useEffect, useRef, useState } from \"react\";\r\nimport { EditorState } from \"draft-js\";\r\nimport { create } from \"jss\";\r\nimport { jssPreset, StylesProvider } from \"@material-ui/core\";\r\n\r\nimport { SimpleObject, TextEditorComponent } from \"types\";\r\nimport { camelToKebab } from \"utils\";\r\nimport BlmTextToolbox from \"../text-toolbox\";\r\nimport BlmTextEditor from \"../text\";\r\nimport { TextEditorProps } from \"../text/BlmTextEditor\";\r\n\r\nexport interface RichTextEditorProps\r\n  extends Pick<TextEditorProps, \"name\" | \"value\" | \"onChange\" | \"onTextChange\"> {\r\n  placeholder?: string;\r\n  offset?: { x?: number; y?: number };\r\n  className?: string;\r\n  template?: string;\r\n}\r\n\r\nconst jss = create({\r\n  ...jssPreset(),\r\n});\r\n\r\nconst cssProperties = [\r\n  \"fontFamily\",\r\n  \"fontSize\",\r\n  \"fontStyle\",\r\n  \"fontWeight\",\r\n  \"color\",\r\n  \"textDecoration\",\r\n  \"textTransform\",\r\n  \"backgroundColor\",\r\n];\r\n\r\nfunction BlmRichTextEditor(props: RichTextEditorProps) {\r\n  const { name, value, placeholder, offset, className, onChange, onTextChange, template } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const [editorState, setEditorState] = useState<EditorState>();\r\n  const [styles, setStyles] = useState<SimpleObject>();\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const textRef = useRef<TextEditorComponent>(null);\r\n  const timeoutRef = useRef<number>();\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const styles: SimpleObject = {};\r\n      const obj = window.getComputedStyle(containerRef.current);\r\n\r\n      for (const prop of cssProperties) {\r\n        let val = obj.getPropertyValue(camelToKebab(prop));\r\n\r\n        styles[prop] = val;\r\n      }\r\n\r\n      setStyles(styles);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (open && containerRef.current) {\r\n      const docs = [containerRef.current.ownerDocument, document];\r\n\r\n      const handleScroll = (event: Event) => {\r\n        const element = containerRef.current?.ownerDocument.activeElement;\r\n\r\n        if (element && \"blur\" in element) {\r\n          (element as HTMLElement).blur();\r\n        }\r\n      };\r\n\r\n      docs.forEach((doc) => {\r\n        doc?.addEventListener(\"scroll\", handleScroll, { once: true });\r\n        doc?.addEventListener(\"wheel\", handleScroll, { once: true });\r\n      });\r\n\r\n      return () => {\r\n        docs.forEach((doc) => {\r\n          doc?.removeEventListener(\"scroll\", handleScroll);\r\n          doc?.removeEventListener(\"wheel\", handleScroll);\r\n        });\r\n      };\r\n    }\r\n  }, [open]);\r\n\r\n  const handleFocus = () => {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleBlur = (event: FocusEvent) => {\r\n    timeoutRef.current = setTimeout(() => setOpen(false));\r\n  };\r\n\r\n  const handleEditorChange = (state: EditorState) => {\r\n    setEditorState(state);\r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef} className={className} onFocus={handleFocus} onBlur={handleBlur}>\r\n      {open && containerRef.current && template !== \"question\" && (\r\n        <StylesProvider jss={jss}>\r\n          <BlmTextToolbox\r\n            show={true}\r\n            offset={offset}\r\n            anchorEle={containerRef.current}\r\n            textEditorRef={textRef}\r\n            editorState={editorState}\r\n            defaultStyles={styles}\r\n            size={containerRef.current?.clientWidth < 365 ? \"small\" : \"normal\"}\r\n          />\r\n        </StylesProvider>\r\n      )}\r\n      <BlmTextEditor\r\n        ref={textRef}\r\n        name={name}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        showSelection={open}\r\n        onChange={onChange}\r\n        onTextChange={onTextChange}\r\n        onEditorChange={handleEditorChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmRichTextEditor;\r\n"]},"metadata":{},"sourceType":"module"}