{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\structures\\\\panel\\\\repository-panel\\\\BlmRepositoryPanel.tsx\";\nimport React, { useReducer, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ContextMenu } from \"types\";\nimport { ContextMenuActions, ElementType } from \"editor-constants\";\nimport BlmAccordion from \"../accordion\";\nimport BlmContextMenu from \"../context-menu\";\nimport { RepositoryActionTypes, showContextMenu, hideContextMenu } from \"./types\";\nimport \"./repository-panel.scss\";\nconst addActions = [ContextMenuActions.AddChapter, ContextMenuActions.AddEvaluation, ContextMenuActions.AddPage, ContextMenuActions.AddScreen, ContextMenuActions.AddQuestion, ContextMenuActions.AddCustom, ContextMenuActions.AddSimpleContent, ContextMenuActions.AddSimplePage, ContextMenuActions.AddAnnexesFolder];\nconst initState = {\n  ctxData: undefined,\n  ctxItem: undefined\n};\n\nfunction reducer(prevState, action) {\n  let state = { ...prevState\n  };\n\n  if (action.type === RepositoryActionTypes.ShowContextMenu) {\n    state.ctxData = action.data;\n    state.ctxItem = action.data.item;\n  } else if (action.type === RepositoryActionTypes.HideContextMenu) {\n    state.ctxData = undefined;\n    state.ctxItem = undefined;\n  }\n\n  return state;\n}\n\nfunction BlmRepositoryPanel(props) {\n  const {\n    data,\n    onOptionsClick,\n    onPanelChange\n  } = props;\n  const {\n    starting,\n    structure,\n    annexes\n  } = data || {};\n  const [state, dispatch] = useReducer(reducer, initState);\n  const [expanded, setExpanded] = useState();\n  const {\n    t\n  } = useTranslation(\"structures\");\n\n  const handleOptionsClick = (anchorEle, element, treeType) => {\n    if (onOptionsClick) {\n      onOptionsClick(anchorEle, element, treeType);\n    }\n\n    toggleContextMenu(new ContextMenu(anchorEle, element, treeType));\n  };\n\n  const toggleContextMenu = ctxData => {\n    if (ctxData) {\n      setTimeout(() => {\n        dispatch(showContextMenu(ctxData));\n      }, 100);\n    } else {\n      dispatch(hideContextMenu());\n    }\n  };\n\n  const handleContextItemClick = (action, element) => {\n    if (addActions.includes(action) && !element.root) {\n      setExpanded(element.type);\n    }\n  };\n\n  const handleContextClose = () => {\n    toggleContextMenu();\n  };\n\n  const handlePanelChange = (event, expanded) => {\n    setExpanded(undefined);\n\n    if (onPanelChange) {\n      onPanelChange(event, expanded);\n    }\n  };\n\n  if (!data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"repository-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BlmAccordion, {\n      title: t(\"accordion.starting\"),\n      treeType: ElementType.Starting,\n      data: starting,\n      ctxItem: state.ctxItem,\n      expanded: expanded === ElementType.Starting ? true : undefined,\n      onOptionsClick: handleOptionsClick,\n      onPanelChange: handlePanelChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BlmAccordion, {\n      title: t(\"accordion.structure\"),\n      treeType: ElementType.Structure,\n      data: structure,\n      ctxItem: state.ctxItem,\n      expanded: expanded === ElementType.Structure ? true : undefined,\n      onOptionsClick: handleOptionsClick,\n      onPanelChange: handlePanelChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BlmAccordion, {\n      title: t(\"accordion.annexes\"),\n      treeType: ElementType.Annexes,\n      data: annexes,\n      ctxItem: state.ctxItem,\n      expanded: expanded === ElementType.Annexes ? true : undefined,\n      onOptionsClick: handleOptionsClick,\n      onPanelChange: handlePanelChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BlmContextMenu, {\n      data: state.ctxData,\n      onItemClick: handleContextItemClick,\n      onClose: handleContextClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nexport default BlmRepositoryPanel;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/structures/panel/repository-panel/BlmRepositoryPanel.tsx"],"names":["React","useReducer","useState","useTranslation","ContextMenu","ContextMenuActions","ElementType","BlmAccordion","BlmContextMenu","RepositoryActionTypes","showContextMenu","hideContextMenu","addActions","AddChapter","AddEvaluation","AddPage","AddScreen","AddQuestion","AddCustom","AddSimpleContent","AddSimplePage","AddAnnexesFolder","initState","ctxData","undefined","ctxItem","reducer","prevState","action","state","type","ShowContextMenu","data","item","HideContextMenu","BlmRepositoryPanel","props","onOptionsClick","onPanelChange","starting","structure","annexes","dispatch","expanded","setExpanded","t","handleOptionsClick","anchorEle","element","treeType","toggleContextMenu","setTimeout","handleContextItemClick","includes","root","handleContextClose","handlePanelChange","event","Starting","Structure","Annexes"],"mappings":"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","sourcesContent":["import React, { useReducer, ChangeEvent, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { ContextMenu, CourseElement, OptionsClickHandler } from \"types\";\r\nimport { ContextMenuActions, ElementType } from \"editor-constants\";\r\nimport BlmAccordion from \"../accordion\";\r\nimport BlmContextMenu from \"../context-menu\";\r\nimport {\r\n  RepositoryProps,\r\n  RepositoryState,\r\n  RepositoryActions,\r\n  RepositoryActionTypes,\r\n  showContextMenu,\r\n  hideContextMenu,\r\n} from \"./types\";\r\nimport \"./repository-panel.scss\";\r\n\r\nconst addActions = [\r\n  ContextMenuActions.AddChapter,\r\n  ContextMenuActions.AddEvaluation,\r\n  ContextMenuActions.AddPage,\r\n  ContextMenuActions.AddScreen,\r\n  ContextMenuActions.AddQuestion,\r\n  ContextMenuActions.AddCustom,\r\n  ContextMenuActions.AddSimpleContent,\r\n  ContextMenuActions.AddSimplePage,\r\n  ContextMenuActions.AddAnnexesFolder,\r\n];\r\n\r\nconst initState: RepositoryState = {\r\n  ctxData: undefined,\r\n  ctxItem: undefined,\r\n};\r\n\r\nfunction reducer(prevState: RepositoryState, action: RepositoryActions) {\r\n  let state = { ...prevState };\r\n\r\n  if (action.type === RepositoryActionTypes.ShowContextMenu) {\r\n    state.ctxData = action.data;\r\n    state.ctxItem = action.data.item;\r\n  } else if (action.type === RepositoryActionTypes.HideContextMenu) {\r\n    state.ctxData = undefined;\r\n    state.ctxItem = undefined;\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction BlmRepositoryPanel(props: RepositoryProps) {\r\n  const { data, onOptionsClick, onPanelChange } = props;\r\n  const { starting, structure, annexes } = data || {};\r\n  const [state, dispatch] = useReducer(reducer, initState);\r\n  const [expanded, setExpanded] = useState<ElementType>();\r\n  const { t } = useTranslation(\"structures\");\r\n\r\n  const handleOptionsClick: OptionsClickHandler = (anchorEle, element, treeType) => {\r\n    if (onOptionsClick) {\r\n      onOptionsClick(anchorEle, element, treeType);\r\n    }\r\n\r\n    toggleContextMenu(new ContextMenu(anchorEle, element, treeType));\r\n  };\r\n\r\n  const toggleContextMenu = (ctxData?: ContextMenu) => {\r\n    if (ctxData) {\r\n      setTimeout(() => {\r\n        dispatch(showContextMenu(ctxData));\r\n      }, 100);\r\n    } else {\r\n      dispatch(hideContextMenu());\r\n    }\r\n  };\r\n\r\n  const handleContextItemClick = (action: ContextMenuActions, element: CourseElement) => {\r\n    if (addActions.includes(action) && !element.root) {\r\n      setExpanded(element.type);\r\n    }\r\n  };\r\n\r\n  const handleContextClose = () => {\r\n    toggleContextMenu();\r\n  };\r\n\r\n  const handlePanelChange = (event: ChangeEvent<{}>, expanded: boolean) => {\r\n    setExpanded(undefined);\r\n\r\n    if (onPanelChange) {\r\n      onPanelChange(event, expanded);\r\n    }\r\n  };\r\n\r\n  if (!data) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <div className=\"repository-wrapper\">\r\n        <BlmAccordion\r\n          title={t(\"accordion.starting\")}\r\n          treeType={ElementType.Starting}\r\n          data={starting!}\r\n          ctxItem={state.ctxItem}\r\n          expanded={expanded === ElementType.Starting ? true : undefined}\r\n          onOptionsClick={handleOptionsClick}\r\n          onPanelChange={handlePanelChange}\r\n        />\r\n        <BlmAccordion\r\n          title={t(\"accordion.structure\")}\r\n          treeType={ElementType.Structure}\r\n          data={structure!}\r\n          ctxItem={state.ctxItem}\r\n          expanded={expanded === ElementType.Structure ? true : undefined}\r\n          onOptionsClick={handleOptionsClick}\r\n          onPanelChange={handlePanelChange}\r\n        />\r\n        <BlmAccordion\r\n          title={t(\"accordion.annexes\")}\r\n          treeType={ElementType.Annexes}\r\n          data={annexes!}\r\n          ctxItem={state.ctxItem}\r\n          expanded={expanded === ElementType.Annexes ? true : undefined}\r\n          onOptionsClick={handleOptionsClick}\r\n          onPanelChange={handlePanelChange}\r\n        />\r\n        <BlmContextMenu\r\n          data={state.ctxData}\r\n          onItemClick={handleContextItemClick}\r\n          onClose={handleContextClose}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlmRepositoryPanel;\r\n"]},"metadata":{},"sourceType":"module"}