{"ast":null,"code":"import { CourseElement } from \"types\";\nimport { ConnectionType, ElementType, TreeActionTypes } from \"editor-constants\";\nimport { cloneCourseElement, createUUID, getChildrenConnection, getEvaluationChildren, hasAutoSummary, hasElement, hasSomeTemplate, hasSummary, isTemplateElement, isValidLinkedElement, traverseElement, getElementType } from \"utils\";\nimport i18next from \"i18next\";\nconst DROP_MAP = {\n  [ElementType.Root]: [],\n  [ElementType.Starting]: [],\n  [ElementType.Structure]: [],\n  [ElementType.Annexes]: [],\n  [ElementType.Chapter]: [ElementType.Root, ElementType.Chapter, ElementType.AnnexesFolder],\n  [ElementType.AnnexesFolder]: [ElementType.Root, ElementType.Chapter, ElementType.AnnexesFolder],\n  [ElementType.Screen]: [ElementType.Root, ElementType.Chapter, ElementType.AnnexesFolder],\n  [ElementType.Page]: [ElementType.Root, ElementType.Chapter, ElementType.AnnexesFolder],\n  [ElementType.Question]: [ElementType.Root, ElementType.Chapter, ElementType.AnnexesFolder],\n  [ElementType.PartPage]: [ElementType.Page],\n  [ElementType.Custom]: [ElementType.Root, ElementType.Chapter],\n  [ElementType.SimplePage]: [ElementType.Screen, ElementType.PartPage, ElementType.Question],\n  [ElementType.SimpleContent]: [ElementType.Screen, ElementType.PartPage, ElementType.Feedback, ElementType.Question],\n  [ElementType.SimplePartPage]: [],\n  [ElementType.Feedback]: [],\n  [ElementType.AssociateContent]: [],\n  [ElementType.Evaluation]: [],\n  [ElementType.Summary]: [],\n  [ElementType.ResetMargin]: []\n};\nexport function pushElement(children, newElement) {\n  let ind = children.length;\n\n  if (hasElement(children, ElementType.Feedback)) {\n    ind = ind - 1;\n  }\n\n  if (hasElement(children, ElementType.AssociateContent)) {\n    ind = ind - 1;\n  }\n\n  children = children.slice();\n  children.splice(ind, 0, newElement);\n  return children;\n}\nexport function createVirtualElement(element, id, name, type) {\n  const result = new CourseElement(id, name, type);\n  result.isVirtual = true;\n  result.parent = element;\n  result.root = element.root;\n  return result;\n}\nexport function createSummaryElement(element, children, courseProps) {\n  var _courseProps$navigati;\n\n  const {\n    navigationlevel = 0\n  } = (_courseProps$navigati = courseProps === null || courseProps === void 0 ? void 0 : courseProps.navigation) !== null && _courseProps$navigati !== void 0 ? _courseProps$navigati : {};\n\n  if (hasAutoSummary(element, navigationlevel)) {\n    const newElement = createVirtualElement(element, createUUID(), i18next.t(\"structures:title.auto_summary\"), ElementType.Summary);\n    return [newElement, ...children];\n  }\n\n  return children;\n}\n\nfunction createNewElement(element, children, type) {\n  const newElement = createVirtualElement(element, \"newElement\", i18next.t(\"structures:title.new\") + i18next.t(`structures:${getElementType(type)}`), type);\n  return pushElement([...children], newElement);\n}\n\nfunction createFeedback(element) {\n  const feedback = createVirtualElement(element, createUUID(), i18next.t(\"structures:title.feedback\"), ElementType.Feedback);\n  return feedback;\n}\n\nfunction createStructureChildren(element, children, properties) {\n  const {\n    isEvaluation,\n    hasFeedback\n  } = properties;\n  let result = children;\n\n  if (isEvaluation && hasFeedback) {\n    if (!hasElement(result, ElementType.Feedback)) {\n      const feedback = createFeedback(element);\n      result = [...result, feedback];\n    }\n  } else {\n    result = result.filter(item => item.type !== ElementType.Feedback);\n  }\n\n  return result;\n}\n\nfunction createPropsChildren(element, children, properties) {\n  const {\n    id\n  } = element;\n  const {\n    isEvaluation,\n    hasFeedback,\n    hasAssociateContent\n  } = id === (properties === null || properties === void 0 ? void 0 : properties.id) ? properties : element;\n  let result = children;\n\n  if (isEvaluation && hasFeedback) {\n    if (!hasElement(result, ElementType.Feedback)) {\n      const feedback = createFeedback(element);\n\n      if (hasAssociateContent) {\n        const insertAtIndex = result.length - 1;\n        result = [...result];\n        result.splice(insertAtIndex, 0, feedback);\n      } else {\n        result = [...result, feedback];\n      }\n    }\n  } else {\n    result = result.filter(item => item.type !== ElementType.Feedback);\n  } //Now we don't have this element, we may have in future.\n\n\n  result = result.filter(item => item.type !== ElementType.AssociateContent);\n  return result;\n}\n\nexport function createTree(tree, options) {\n  const result = cloneCourseElement(tree, undefined, undefined, element => {\n    element.children = createChildren(element, options);\n  });\n  return result;\n}\n\nfunction createChildren(element, options) {\n  const {\n    type,\n    children\n  } = element;\n  const {\n    action,\n    courseProps,\n    elementProps\n  } = options;\n  let result = children;\n\n  if (type !== ElementType.SimplePage && type !== ElementType.SimpleContent) {\n    if (type === ElementType.Structure || type === ElementType.Chapter) {\n      result = createSummaryElement(element, result, courseProps);\n    }\n\n    if ((action === null || action === void 0 ? void 0 : action.type) === TreeActionTypes.AddItem && action.elementType && action.element.id === element.id) {\n      result = createNewElement(element, result, action.elementType);\n    }\n\n    if (type !== ElementType.Structure) {\n      result = createPropsChildren(element, result, elementProps);\n    } else if (courseProps) {\n      result = createStructureChildren(element, result, courseProps);\n    }\n  }\n\n  return result;\n}\n\nexport function createOptions(item, treeType, properties) {\n  const {\n    id,\n    type,\n    isSummary,\n    isLinked,\n    isOutdated,\n    connections,\n    propsJSON,\n    forAlertIcon\n  } = item;\n  const itemProps = (properties === null || properties === void 0 ? void 0 : properties.id) === id ? properties : item;\n  let icons = [];\n\n  if (itemProps.isEvaluation) {\n    if (itemProps.theme === null && getEvaluationChildren(item).length === 0) {\n      icons.push(\"alert-icon\");\n    }\n\n    icons.push(\"question-icon\");\n  } else if (type === ElementType.Custom && !(propsJSON === null || propsJSON === void 0 ? void 0 : propsJSON.hasFiles) || isTemplateElement(item) && isOutdated && forAlertIcon) {\n    icons.push(\"alert-icon\");\n  }\n\n  if (isValidLinkedElement(item) && !isLinked) {\n    icons.push(\"unlinked-icon\");\n  }\n\n  if (isSummary) {\n    icons.push(\"home-icon\");\n  }\n\n  if (treeType === ElementType.Starting && connections) {\n    const arr = type === ElementType.Page ? getChildrenConnection(item) : [];\n\n    if (arr.length > 1) {\n      icons.push(\"mixed-connection-icon\");\n    } else {\n      const icons2 = connections.map(connection => {\n        switch (connection.value) {\n          case ConnectionType.First:\n            return \"first-connection-icon\";\n\n          case ConnectionType.Second:\n            return \"second-connection-icon\";\n\n          case ConnectionType.Repeat:\n            return \"repeat-connection-icon\";\n\n          default:\n            return \"\";\n        }\n      });\n      icons.push(...icons2);\n    }\n  }\n\n  return icons;\n}\nexport function isDroppable(tree, dragData, dropData, courseProps) {\n  var _dragData$parent, _parent$template, _dropData$template;\n\n  const dragType = dragData === null || dragData === void 0 ? void 0 : dragData.type;\n  const dropType = !dropData || dropData === tree ? ElementType.Root : dropData.type;\n  const allowedTypes = dragType ? DROP_MAP[dragType] : [];\n  const parent = (_dragData$parent = dragData === null || dragData === void 0 ? void 0 : dragData.parent) !== null && _dragData$parent !== void 0 ? _dragData$parent : tree;\n  const {\n    navigation\n  } = courseProps || {};\n\n  if ((dragData === null || dragData === void 0 ? void 0 : dragData.isSummary) && dropData && dropData.id !== (parent === null || parent === void 0 ? void 0 : parent.id)) {\n    if (dragType === ElementType.PartPage || dragType === ElementType.SimplePartPage) {\n      if (!dropData.isSummary) {\n        return false;\n      }\n    } else if (hasAutoSummary(dropData, navigation === null || navigation === void 0 ? void 0 : navigation.navigationlevel) || hasSummary(dropData)) {\n      return false;\n    }\n  } else if ((parent === null || parent === void 0 ? void 0 : (_parent$template = parent.template) === null || _parent$template === void 0 ? void 0 : _parent$template.interaction) && dragData && hasSomeTemplate(dragData)) {\n    return (dropData === null || dropData === void 0 ? void 0 : dropData.id) === (parent === null || parent === void 0 ? void 0 : parent.id);\n  } else if ((dropData === null || dropData === void 0 ? void 0 : dropData.type) === ElementType.Chapter && dropData.isEvaluation && dropData.theme && dropData.theme !== \"None\") {\n    var _dragData$template;\n\n    if (((_dragData$template = dragData.template) === null || _dragData$template === void 0 ? void 0 : _dragData$template.theme) === dropData.theme && dragData.type === ElementType.Question) {\n      return true;\n    }\n\n    return false;\n  } else if ((dropData === null || dropData === void 0 ? void 0 : dropData.type) === ElementType.Chapter && dropData.isEvaluation && dropData.theme === null) {\n    return false;\n  } else if (((parent === null || parent === void 0 ? void 0 : parent.type) === ElementType.Feedback || dropType === ElementType.Feedback) && dragData && hasSomeTemplate(dragData)) {\n    return (parent === null || parent === void 0 ? void 0 : parent.type) === dropType;\n  } else if ((parent === null || parent === void 0 ? void 0 : parent.type) === ElementType.AssociateContent) {\n    return false;\n  } else if ((dropData === null || dropData === void 0 ? void 0 : (_dropData$template = dropData.template) === null || _dropData$template === void 0 ? void 0 : _dropData$template.interaction) && dragData && hasSomeTemplate(dragData)) {\n    return false;\n  } else if (dragData === null || dragData === void 0 ? void 0 : dragData.isLinked) {\n    return false;\n  } else if ((dropData === null || dropData === void 0 ? void 0 : dropData.isSummary) && (dragData === null || dragData === void 0 ? void 0 : dragData.templateType) === ElementType.Question) {\n    return false;\n  }\n\n  return allowedTypes.includes(dropType);\n} //BIL-141 [React] User can move an element AFTER Feedback and AssociateContent\n\nexport function isDroppableAt(dropData, dropPosition, isExpanded = false) {\n  const {\n    type\n  } = dropData;\n\n  if (dropPosition === 1) {\n    if (type === ElementType.Feedback || type === ElementType.AssociateContent) {\n      return false;\n    } else if (dropData.children.length && isExpanded && dropData.styleSummary) {\n      return false;\n    }\n  } else if (dropPosition === -1) {\n    if (type === ElementType.Summary) {\n      return false;\n    } else {\n      var _dropData$parent$chil, _dropData$parent, _dropData$parent2;\n\n      const ind = (_dropData$parent$chil = (_dropData$parent = dropData.parent) === null || _dropData$parent === void 0 ? void 0 : _dropData$parent.children.indexOf(dropData)) !== null && _dropData$parent$chil !== void 0 ? _dropData$parent$chil : -1;\n      const prevChild = ind - 1 >= 0 ? (_dropData$parent2 = dropData.parent) === null || _dropData$parent2 === void 0 ? void 0 : _dropData$parent2.children[ind - 1] : undefined;\n\n      if ((prevChild === null || prevChild === void 0 ? void 0 : prevChild.type) === ElementType.Feedback || (prevChild === null || prevChild === void 0 ? void 0 : prevChild.type) === ElementType.AssociateContent) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\nexport function updateDrop(tree, dragged, dropped, dropPosition, isExpanded) {\n  traverseElement(tree, dragged.id, (item, index, parent) => {\n    if (parent) {\n      dragged = item;\n      parent.children.splice(index, 1);\n    }\n  });\n\n  if (dropPosition === 0 || dropped.children.length > 0 && // Has children\n  isExpanded && // Is expanded\n  dropPosition === 1 // On the bottom gap\n  ) {\n      traverseElement(tree, dropped.id, item => {\n        var _item$children$;\n\n        dragged.parent = item;\n        item.children = item.children || [];\n\n        if (((_item$children$ = item.children[0]) === null || _item$children$ === void 0 ? void 0 : _item$children$.type) === ElementType.Summary) {\n          item.children.splice(1, 0, dragged);\n        } else {\n          item.children.unshift(dragged);\n        }\n      });\n    } else {\n    //In between children\n    traverseElement(tree, dropped.id, (item, ind, parent) => {\n      if (parent) {\n        dragged.parent = parent;\n\n        if (dropPosition === -1) {\n          parent.children.splice(ind, 0, dragged);\n        } else {\n          parent.children.splice(ind + 1, 0, dragged);\n        }\n      }\n    });\n  }\n}\nexport function hasEmptyTemplate(element) {\n  const {\n    type,\n    templateType,\n    children,\n    propsJSON\n  } = element;\n\n  if ((type === ElementType.Screen || type === ElementType.SimpleContent || type === ElementType.Question) && !templateType || (type === ElementType.Page || type === ElementType.SimplePage) && children.length === 0 || type === ElementType.Custom && !(propsJSON === null || propsJSON === void 0 ? void 0 : propsJSON.hasFiles)) {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/structures/panel/course-tree/utils.ts"],"names":["CourseElement","ConnectionType","ElementType","TreeActionTypes","cloneCourseElement","createUUID","getChildrenConnection","getEvaluationChildren","hasAutoSummary","hasElement","hasSomeTemplate","hasSummary","isTemplateElement","isValidLinkedElement","traverseElement","getElementType","i18next","DROP_MAP","Root","Starting","Structure","Annexes","Chapter","AnnexesFolder","Screen","Page","Question","PartPage","Custom","SimplePage","SimpleContent","Feedback","SimplePartPage","AssociateContent","Evaluation","Summary","ResetMargin","pushElement","children","newElement","ind","length","slice","splice","createVirtualElement","element","id","name","type","result","isVirtual","parent","root","createSummaryElement","courseProps","navigationlevel","navigation","t","createNewElement","createFeedback","feedback","createStructureChildren","properties","isEvaluation","hasFeedback","filter","item","createPropsChildren","hasAssociateContent","insertAtIndex","createTree","tree","options","undefined","createChildren","action","elementProps","AddItem","elementType","createOptions","treeType","isSummary","isLinked","isOutdated","connections","propsJSON","forAlertIcon","itemProps","icons","theme","push","hasFiles","arr","icons2","map","connection","value","First","Second","Repeat","isDroppable","dragData","dropData","dragType","dropType","allowedTypes","template","interaction","templateType","includes","isDroppableAt","dropPosition","isExpanded","styleSummary","indexOf","prevChild","updateDrop","dragged","dropped","index","unshift","hasEmptyTemplate"],"mappings":"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","sourcesContent":["import { CourseElement, CourseElementProps, CourseProps } from \"types\";\r\nimport { ConnectionType, ElementType, TreeActionTypes } from \"editor-constants\";\r\nimport {\r\n  cloneCourseElement,\r\n  createUUID,\r\n  getChildrenConnection,\r\n  getEvaluationChildren,\r\n  hasAutoSummary,\r\n  hasElement,\r\n  hasSomeTemplate,\r\n  hasSummary,\r\n  isTemplateElement,\r\n  isValidLinkedElement,\r\n  traverseElement,\r\n  getElementType,\r\n} from \"utils\";\r\nimport { CreateOptions } from \"./types\";\r\nimport i18next from \"i18next\";\r\n\r\nconst DROP_MAP = {\r\n  [ElementType.Root]: [],\r\n  [ElementType.Starting]: [],\r\n  [ElementType.Structure]: [],\r\n  [ElementType.Annexes]: [],\r\n  [ElementType.Chapter]: [ElementType.Root, ElementType.Chapter, ElementType.AnnexesFolder],\r\n  [ElementType.AnnexesFolder]: [ElementType.Root, ElementType.Chapter, ElementType.AnnexesFolder],\r\n  [ElementType.Screen]: [ElementType.Root, ElementType.Chapter, ElementType.AnnexesFolder],\r\n  [ElementType.Page]: [ElementType.Root, ElementType.Chapter, ElementType.AnnexesFolder],\r\n  [ElementType.Question]: [ElementType.Root, ElementType.Chapter, ElementType.AnnexesFolder],\r\n  [ElementType.PartPage]: [ElementType.Page],\r\n  [ElementType.Custom]: [ElementType.Root, ElementType.Chapter],\r\n  [ElementType.SimplePage]: [ElementType.Screen, ElementType.PartPage, ElementType.Question],\r\n  [ElementType.SimpleContent]: [\r\n    ElementType.Screen,\r\n    ElementType.PartPage,\r\n    ElementType.Feedback,\r\n    ElementType.Question,\r\n  ],\r\n  [ElementType.SimplePartPage]: [],\r\n  [ElementType.Feedback]: [],\r\n  [ElementType.AssociateContent]: [],\r\n  [ElementType.Evaluation]: [],\r\n  [ElementType.Summary]: [],\r\n  [ElementType.ResetMargin]: [],\r\n};\r\n\r\nexport function pushElement(children: CourseElement[], newElement: CourseElement) {\r\n  let ind = children.length;\r\n\r\n  if (hasElement(children, ElementType.Feedback)) {\r\n    ind = ind - 1;\r\n  }\r\n  if (hasElement(children, ElementType.AssociateContent)) {\r\n    ind = ind - 1;\r\n  }\r\n\r\n  children = children.slice();\r\n  children.splice(ind, 0, newElement);\r\n\r\n  return children;\r\n}\r\n\r\nexport function createVirtualElement(\r\n  element: CourseElement,\r\n  id: string,\r\n  name: string,\r\n  type: ElementType\r\n) {\r\n  const result = new CourseElement(id, name, type);\r\n  result.isVirtual = true;\r\n  result.parent = element;\r\n  result.root = element.root;\r\n\r\n  return result;\r\n}\r\n\r\nexport function createSummaryElement(\r\n  element: CourseElement,\r\n  children: CourseElement[],\r\n  courseProps?: CourseProps\r\n) {\r\n  const { navigationlevel = 0 } = courseProps?.navigation ?? {};\r\n\r\n  if (hasAutoSummary(element, navigationlevel)) {\r\n    const newElement = createVirtualElement(\r\n      element,\r\n      createUUID(),\r\n      i18next.t(\"structures:title.auto_summary\"),\r\n      ElementType.Summary\r\n    );\r\n\r\n    return [newElement, ...children];\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nfunction createNewElement(element: CourseElement, children: CourseElement[], type: ElementType) {\r\n  const newElement = createVirtualElement(\r\n    element,\r\n    \"newElement\",\r\n    i18next.t(\"structures:title.new\") + i18next.t(`structures:${getElementType(type)}`),\r\n    type\r\n  );\r\n\r\n  return pushElement([...children], newElement);\r\n}\r\n\r\nfunction createFeedback(element: CourseElement) {\r\n  const feedback = createVirtualElement(\r\n    element,\r\n    createUUID(),\r\n    i18next.t(\"structures:title.feedback\"),\r\n    ElementType.Feedback\r\n  );\r\n\r\n  return feedback;\r\n}\r\n\r\nfunction createStructureChildren(\r\n  element: CourseElement,\r\n  children: CourseElement[],\r\n  properties: CourseProps\r\n) {\r\n  const { isEvaluation, hasFeedback } = properties;\r\n  let result = children;\r\n\r\n  if (isEvaluation && hasFeedback) {\r\n    if (!hasElement(result, ElementType.Feedback)) {\r\n      const feedback = createFeedback(element);\r\n\r\n      result = [...result, feedback];\r\n    }\r\n  } else {\r\n    result = result.filter((item) => item.type !== ElementType.Feedback);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction createPropsChildren(\r\n  element: CourseElement,\r\n  children: CourseElement[],\r\n  properties?: CourseElementProps\r\n) {\r\n  const { id } = element;\r\n  const { isEvaluation, hasFeedback, hasAssociateContent } =\r\n    id === properties?.id ? properties : element;\r\n  let result = children;\r\n\r\n  if (isEvaluation && hasFeedback) {\r\n    if (!hasElement(result, ElementType.Feedback)) {\r\n      const feedback = createFeedback(element);\r\n\r\n      if (hasAssociateContent) {\r\n        const insertAtIndex = result.length - 1;\r\n\r\n        result = [...result];\r\n        result.splice(insertAtIndex, 0, feedback);\r\n      } else {\r\n        result = [...result, feedback];\r\n      }\r\n    }\r\n  } else {\r\n    result = result.filter((item) => item.type !== ElementType.Feedback);\r\n  }\r\n\r\n  //Now we don't have this element, we may have in future.\r\n  result = result.filter((item) => item.type !== ElementType.AssociateContent);\r\n\r\n  return result;\r\n}\r\n\r\nexport function createTree(tree: CourseElement, options: CreateOptions) {\r\n  const result = cloneCourseElement(tree, undefined, undefined, (element) => {\r\n    element.children = createChildren(element, options);\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nfunction createChildren(element: CourseElement, options: CreateOptions) {\r\n  const { type, children } = element;\r\n  const { action, courseProps, elementProps } = options;\r\n  let result = children;\r\n\r\n  if (type !== ElementType.SimplePage && type !== ElementType.SimpleContent) {\r\n    if (type === ElementType.Structure || type === ElementType.Chapter) {\r\n      result = createSummaryElement(element, result, courseProps);\r\n    }\r\n\r\n    if (\r\n      action?.type === TreeActionTypes.AddItem &&\r\n      action.elementType &&\r\n      action.element.id === element.id\r\n    ) {\r\n      result = createNewElement(element, result, action.elementType);\r\n    }\r\n\r\n    if (type !== ElementType.Structure) {\r\n      result = createPropsChildren(element, result, elementProps);\r\n    } else if (courseProps) {\r\n      result = createStructureChildren(element, result, courseProps);\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function createOptions(\r\n  item: CourseElement,\r\n  treeType: ElementType | string,\r\n  properties?: CourseElementProps\r\n) {\r\n  const { id, type, isSummary, isLinked, isOutdated, connections, propsJSON, forAlertIcon } = item;\r\n  const itemProps = properties?.id === id ? properties : item;\r\n  let icons: string[] = [];\r\n\r\n  if (itemProps.isEvaluation) {\r\n    if (itemProps.theme === null && getEvaluationChildren(item).length === 0) {\r\n      icons.push(\"alert-icon\");\r\n    }\r\n    icons.push(\"question-icon\");\r\n  } else if (\r\n    (type === ElementType.Custom && !propsJSON?.hasFiles) ||\r\n    (isTemplateElement(item) && isOutdated && forAlertIcon)\r\n  ) {\r\n    icons.push(\"alert-icon\");\r\n  }\r\n\r\n  if (isValidLinkedElement(item) && !isLinked) {\r\n    icons.push(\"unlinked-icon\");\r\n  }\r\n\r\n  if (isSummary) {\r\n    icons.push(\"home-icon\");\r\n  }\r\n\r\n  if (treeType === ElementType.Starting && connections) {\r\n    const arr = type === ElementType.Page ? getChildrenConnection(item) : [];\r\n\r\n    if (arr.length > 1) {\r\n      icons.push(\"mixed-connection-icon\");\r\n    } else {\r\n      const icons2 = connections.map((connection) => {\r\n        switch (connection.value) {\r\n          case ConnectionType.First:\r\n            return \"first-connection-icon\";\r\n          case ConnectionType.Second:\r\n            return \"second-connection-icon\";\r\n          case ConnectionType.Repeat:\r\n            return \"repeat-connection-icon\";\r\n          default:\r\n            return \"\";\r\n        }\r\n      });\r\n\r\n      icons.push(...icons2);\r\n    }\r\n  }\r\n\r\n  return icons;\r\n}\r\n\r\nexport function isDroppable(\r\n  tree: CourseElement,\r\n  dragData: CourseElement,\r\n  dropData: CourseElement,\r\n  courseProps?: CourseProps\r\n) {\r\n  const dragType = dragData?.type;\r\n  const dropType = !dropData || dropData === tree ? ElementType.Root : dropData.type;\r\n  const allowedTypes = dragType ? DROP_MAP[dragType as ElementType] : [];\r\n  const parent = dragData?.parent ?? tree;\r\n  const { navigation } = courseProps || {};\r\n\r\n  if (dragData?.isSummary && dropData && dropData.id !== parent?.id) {\r\n    if (dragType === ElementType.PartPage || dragType === ElementType.SimplePartPage) {\r\n      if (!dropData.isSummary) {\r\n        return false;\r\n      }\r\n    } else if (hasAutoSummary(dropData, navigation?.navigationlevel) || hasSummary(dropData)) {\r\n      return false;\r\n    }\r\n  } else if (parent?.template?.interaction && dragData && hasSomeTemplate(dragData)) {\r\n    return dropData?.id === parent?.id;\r\n  } else if (\r\n    dropData?.type === ElementType.Chapter &&\r\n    dropData.isEvaluation &&\r\n    dropData.theme &&\r\n    dropData.theme !== \"None\"\r\n  ) {\r\n    if (dragData.template?.theme === dropData.theme && dragData.type === ElementType.Question) {\r\n      return true;\r\n    }\r\n    return false;\r\n  } else if (\r\n    dropData?.type === ElementType.Chapter &&\r\n    dropData.isEvaluation &&\r\n    dropData.theme === null\r\n  ) {\r\n    return false;\r\n  } else if (\r\n    (parent?.type === ElementType.Feedback || dropType === ElementType.Feedback) &&\r\n    dragData &&\r\n    hasSomeTemplate(dragData)\r\n  ) {\r\n    return parent?.type === dropType;\r\n  } else if (parent?.type === ElementType.AssociateContent) {\r\n    return false;\r\n  } else if (dropData?.template?.interaction && dragData && hasSomeTemplate(dragData)) {\r\n    return false;\r\n  } else if (dragData?.isLinked) {\r\n    return false;\r\n  } else if (dropData?.isSummary && dragData?.templateType === ElementType.Question) {\r\n    return false;\r\n  }\r\n\r\n  return allowedTypes.includes(dropType as ElementType);\r\n}\r\n\r\n//BIL-141 [React] User can move an element AFTER Feedback and AssociateContent\r\nexport function isDroppableAt(dropData: CourseElement, dropPosition: number, isExpanded = false) {\r\n  const { type } = dropData;\r\n\r\n  if (dropPosition === 1) {\r\n    if (type === ElementType.Feedback || type === ElementType.AssociateContent) {\r\n      return false;\r\n    } else if (dropData.children.length && isExpanded && dropData.styleSummary) {\r\n      return false;\r\n    }\r\n  } else if (dropPosition === -1) {\r\n    if (type === ElementType.Summary) {\r\n      return false;\r\n    } else {\r\n      const ind = dropData.parent?.children.indexOf(dropData) ?? -1;\r\n      const prevChild = ind - 1 >= 0 ? dropData.parent?.children[ind - 1] : undefined;\r\n\r\n      if (\r\n        prevChild?.type === ElementType.Feedback ||\r\n        prevChild?.type === ElementType.AssociateContent\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function updateDrop(\r\n  tree: CourseElement,\r\n  dragged: CourseElement,\r\n  dropped: CourseElement,\r\n  dropPosition: number,\r\n  isExpanded: boolean\r\n) {\r\n  traverseElement(tree, dragged.id, (item, index, parent) => {\r\n    if (parent) {\r\n      dragged = item;\r\n      parent.children.splice(index, 1);\r\n    }\r\n  });\r\n\r\n  if (\r\n    dropPosition === 0 ||\r\n    (dropped.children.length > 0 && // Has children\r\n      isExpanded && // Is expanded\r\n      dropPosition === 1) // On the bottom gap\r\n  ) {\r\n    traverseElement(tree, dropped.id, (item) => {\r\n      dragged.parent = item;\r\n\r\n      item.children = item.children || [];\r\n\r\n      if (item.children[0]?.type === ElementType.Summary) {\r\n        item.children.splice(1, 0, dragged);\r\n      } else {\r\n        item.children.unshift(dragged);\r\n      }\r\n    });\r\n  } else {\r\n    //In between children\r\n    traverseElement(tree, dropped.id, (item, ind, parent) => {\r\n      if (parent) {\r\n        dragged.parent = parent;\r\n\r\n        if (dropPosition === -1) {\r\n          parent.children.splice(ind, 0, dragged);\r\n        } else {\r\n          parent.children.splice(ind + 1, 0, dragged);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function hasEmptyTemplate(element: CourseElement) {\r\n  const { type, templateType, children, propsJSON } = element;\r\n\r\n  if (\r\n    ((type === ElementType.Screen ||\r\n      type === ElementType.SimpleContent ||\r\n      type === ElementType.Question) &&\r\n      !templateType) ||\r\n    ((type === ElementType.Page || type === ElementType.SimplePage) && children.length === 0) ||\r\n    (type === ElementType.Custom && !propsJSON?.hasFiles)\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}