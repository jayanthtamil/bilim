{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\actions\\\\replace-target\\\\BlmReplaceTargetAction.tsx\";\nimport React, { Fragment, useMemo } from \"react\";\nimport { Select, MenuItem, ListItemIcon, Checkbox } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { ElementType } from \"editor-constants\";\nimport { getMediaTargets } from \"utils\";\nimport BlmStructureSelect from \"components/structures/select\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport \"./styles.scss\";\n\nfunction BlmReplaceTargetAction(props) {\n  const {\n    data,\n    onChange,\n    name\n  } = props;\n  const {\n    element,\n    template\n  } = useContentEditorCtx();\n  const targets = useMemo(() => getMediaTargets(template), [template]);\n  const defaultTarget = targets.length === 1 ? targets[0].id : undefined;\n  const {\n    replaceTargetId = defaultTarget,\n    replaceId,\n    restore\n  } = data || {};\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange({\n        target: {\n          name: \"target\",\n          value: newData\n        }\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value,\n      checked\n    } = event.target;\n    const newData = {\n      replaceTargetId,\n      replaceId,\n      restore\n    };\n\n    if (name === \"target\") {\n      newData.replaceTargetId = value;\n    } else if (name === \"simpleContent\") {\n      newData.replaceId = value;\n    } else if (name === \"restoreOnMouseOut\" && props.name === \"overAction\") {\n      newData.restore = checked;\n    }\n\n    updateChange(newData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"replace-target-action-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: replaceTargetId || \"none\",\n    MenuProps: {\n      className: \"replace-target-dropdown-popover\"\n    },\n    className: \"replace-target-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, targets.length !== 1 && /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, targets.length ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), t(\"target_option.select_target\")) : `${t(\"target_option.no_target\")}`), targets.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), item.value.name))), targets.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"replace-target-warning-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, t(\"target_option.no_target\"), \".\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, t(\"target_option.transform_media\"))), replaceTargetId && /*#__PURE__*/React.createElement(BlmStructureSelect, {\n    name: \"simpleContent\",\n    element: element,\n    structures: {\n      show: false\n    },\n    annexes: {\n      show: true\n    },\n    value: replaceId,\n    placeholder: t(\"target_option.select_simple_content\"),\n    selectables: [ElementType.SimplePage, ElementType.SimpleContent, ElementType.Page, ElementType.Screen],\n    className: \"structure-select-with-icons\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), name === \"overAction\" && (restore === false || restore === true) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"restore-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: restore,\n    name: \"restoreOnMouseOut\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"restore-check-box-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, t(\"label.restoreMouseOut\"))));\n}\n\nexport default BlmReplaceTargetAction;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/actions/replace-target/BlmReplaceTargetAction.tsx"],"names":["React","Fragment","useMemo","Select","MenuItem","ListItemIcon","Checkbox","useTranslation","ElementType","getMediaTargets","BlmStructureSelect","useContentEditorCtx","BlmReplaceTargetAction","props","data","onChange","name","element","template","targets","defaultTarget","length","id","undefined","replaceTargetId","replaceId","restore","t","updateChange","newData","target","value","handleChange","event","checked","className","map","item","show","SimplePage","SimpleContent","Page","Screen"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Fragment, useMemo } from \"react\";\r\nimport { Select, MenuItem, ListItemIcon, Checkbox } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { ComponentStyle, MediaFile, CustomChangeEvent, ReplaceTargetAction } from \"types\";\r\nimport { ElementType } from \"editor-constants\";\r\nimport { getMediaTargets } from \"utils\";\r\nimport BlmStructureSelect from \"components/structures/select\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  data?: ReplaceTargetAction;\r\n  onChange?: (event: CustomChangeEvent<ReplaceTargetAction>) => void;\r\n  name: String;\r\n}\r\n\r\nfunction BlmReplaceTargetAction(props: CompProps) {\r\n  const { data, onChange, name } = props;\r\n  const { element, template } = useContentEditorCtx();\r\n  const targets = useMemo(() => getMediaTargets(template!), [template]);\r\n  const defaultTarget = targets.length === 1 ? targets[0].id : undefined;\r\n  const { replaceTargetId = defaultTarget, replaceId, restore } = data || {};\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const updateChange = (newData: ReplaceTargetAction) => {\r\n    if (onChange) {\r\n      onChange({ target: { name: \"target\", value: newData } });\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event: ChangeEvent<any> | CustomChangeEvent<MediaFile | string | ComponentStyle | undefined>\r\n  ) => {\r\n    const { name, value, checked } = event.target;\r\n    const newData = { replaceTargetId, replaceId, restore };\r\n\r\n    if (name === \"target\") {\r\n      newData.replaceTargetId = value;\r\n    } else if (name === \"simpleContent\") {\r\n      newData.replaceId = value;\r\n    } else if (name === \"restoreOnMouseOut\" && props.name === \"overAction\") {\r\n      newData.restore = checked;\r\n    }\r\n    updateChange(newData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"replace-target-action-wrapper\">\r\n      <Select\r\n        value={replaceTargetId || \"none\"}\r\n        MenuProps={{ className: \"replace-target-dropdown-popover\" }}\r\n        className=\"replace-target-dropdown\"\r\n      >\r\n        {targets.length !== 1 && (\r\n          <MenuItem value=\"none\">\r\n            {targets.length ? (\r\n              <Fragment>\r\n                <ListItemIcon />\r\n                {t(\"target_option.select_target\")}\r\n              </Fragment>\r\n            ) : (\r\n              `${t(\"target_option.no_target\")}`\r\n            )}\r\n          </MenuItem>\r\n        )}\r\n        {targets.map((item) => (\r\n          <MenuItem key={item.id} value={item.id}>\r\n            <ListItemIcon />\r\n            {item.value.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      {targets.length === 0 && (\r\n        <div className=\"replace-target-warning-lbl\">\r\n          <span>{t(\"target_option.no_target\")}.</span>\r\n          <span>{t(\"target_option.transform_media\")}</span>\r\n        </div>\r\n      )}\r\n      {replaceTargetId && (\r\n        <BlmStructureSelect\r\n          name=\"simpleContent\"\r\n          element={element}\r\n          structures={{ show: false }}\r\n          annexes={{ show: true }}\r\n          value={replaceId}\r\n          placeholder={t(\"target_option.select_simple_content\")}\r\n          selectables={[\r\n            ElementType.SimplePage,\r\n            ElementType.SimpleContent,\r\n            ElementType.Page,\r\n            ElementType.Screen,\r\n          ]}\r\n          className=\"structure-select-with-icons\"\r\n          onChange={handleChange}\r\n        />\r\n      )}\r\n      {name === \"overAction\" && (restore === false || restore === true) && (\r\n        <div className=\"restore-box\">\r\n          <Checkbox checked={restore} name=\"restoreOnMouseOut\" onChange={handleChange} />\r\n          <strong className=\"restore-check-box-label\">{t(\"label.restoreMouseOut\")}</strong>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmReplaceTargetAction;\r\n"]},"metadata":{},"sourceType":"module"}