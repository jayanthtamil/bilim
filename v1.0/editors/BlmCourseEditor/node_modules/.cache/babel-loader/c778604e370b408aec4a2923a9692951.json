{"ast":null,"code":"import { ComponentTypes } from \"editor-constants\";\nimport { MediaFormat } from \"./media\";\nimport { ComponentAction } from \"./actions\";\nexport class BaseComponent {\n  constructor(value) {\n    this.id = void 0;\n    this.mapping = void 0;\n    this.value = void 0;\n    this.type = ComponentTypes.Base;\n    this.isEditable = true;\n    this.isDeletable = false;\n    this.isDeactivated = void 0;\n    this.isEdited = false;\n    this.frameStyle = void 0;\n    this.value = value;\n  }\n\n}\nexport class TextComponent extends BaseComponent {\n  constructor(...args) {\n    super(...args);\n    this.type = ComponentTypes.Text;\n  }\n\n}\nexport class QuestionMediaComponent extends BaseComponent {\n  constructor(...args) {\n    super(...args);\n    this.type = ComponentTypes.Media;\n  }\n\n}\nexport class QuestionCustomComponent extends QuestionMediaComponent {\n  constructor(...args) {\n    super(...args);\n    this.options = void 0;\n    this.config = void 0;\n    this.format = new MediaFormat();\n  }\n\n}\nexport class MediaComponent extends BaseComponent {\n  constructor(...args) {\n    super(...args);\n    this.repeaterId = void 0;\n    this.isCreated = false;\n    this.type = ComponentTypes.Media;\n    this.variant = void 0;\n    this.options = void 0;\n    this.options2 = void 0;\n    this.config = void 0;\n    this.classList = void 0;\n    this.format = new MediaFormat();\n    this.hasApplyStyle = true;\n  }\n\n}\nexport class ButtonValue {\n  constructor() {\n    this.background = void 0;\n    this.inline = void 0;\n    this.title = \"\";\n    this.description = \"\";\n    this.caption = \"\";\n    this.label = \"\";\n    this.number = \"\";\n    this.clickAction = new ComponentAction();\n    this.overAction = new ComponentAction();\n    this.style = new ComponentStyle();\n  }\n\n}\nexport class ButtonOptions {\n  constructor() {\n    this.format = new MediaFormat();\n    this.config = void 0;\n  }\n\n}\nexport class ButtonComponent extends BaseComponent {\n  constructor(...args) {\n    super(...args);\n    this.repeaterId = void 0;\n    this.isCreated = false;\n    this.type = ComponentTypes.Button;\n    this.value = new ButtonValue();\n    this.classList = void 0;\n    this.hasApplyStyle = true;\n    this.buttonOptions = new ButtonOptions();\n  }\n\n}\nexport class SoundValue {\n  constructor() {\n    this.media = void 0;\n    this.image = void 0;\n    this.title = \"\";\n    this.description = \"\";\n    this.caption = \"\";\n    this.autoPlay = false;\n    this.localPlay = true;\n    this.style = new ComponentStyle();\n  }\n\n}\nexport class SoundComponent extends BaseComponent {\n  constructor(...args) {\n    super(...args);\n    this.repeaterId = void 0;\n    this.isCreated = false;\n    this.type = ComponentTypes.Sound;\n    this.value = new SoundValue();\n    this.options = void 0;\n    this.classList = void 0;\n    this.hasApplyStyle = true;\n  }\n\n}\nexport class RepeaterComponent extends BaseComponent {\n  constructor(...args) {\n    super(...args);\n    this.type = ComponentTypes.Repeater;\n    this.allowComponent = void 0;\n    this.minimum = 0;\n    this.maximum = 0;\n    this.defaultClass = void 0;\n    this.options = void 0;\n    this.variables = void 0;\n  }\n\n}\nexport class MediaRepeaterComponent extends RepeaterComponent {\n  constructor(...args) {\n    super(...args);\n    this.mediaConfig = void 0;\n    this.saveInCSS = false;\n  }\n\n}\nexport class ButtonRepeaterComponent extends RepeaterComponent {\n  constructor(...args) {\n    super(...args);\n    this.duplicate = void 0;\n  }\n\n}\nexport class SoundRepeaterComponent extends RepeaterComponent {}\nexport class ComponentStyle {\n  constructor() {\n    this.style = void 0;\n    this.tint = void 0;\n    this.bgTint = void 0;\n    this.hasLight = false;\n    this.width = void 0;\n    this.tintOver = void 0;\n    this.tintOut = void 0;\n    this.hasDarkOut = false;\n    this.hasDarkOver = false;\n    this.isShadow = false;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/types/core/template-editor/component.ts"],"names":["ComponentTypes","MediaFormat","ComponentAction","BaseComponent","constructor","value","id","mapping","type","Base","isEditable","isDeletable","isDeactivated","isEdited","frameStyle","TextComponent","Text","QuestionMediaComponent","Media","QuestionCustomComponent","options","config","format","MediaComponent","repeaterId","isCreated","variant","options2","classList","hasApplyStyle","ButtonValue","background","inline","title","description","caption","label","number","clickAction","overAction","style","ComponentStyle","ButtonOptions","ButtonComponent","Button","buttonOptions","SoundValue","media","image","autoPlay","localPlay","SoundComponent","Sound","RepeaterComponent","Repeater","allowComponent","minimum","maximum","defaultClass","variables","MediaRepeaterComponent","mediaConfig","saveInCSS","ButtonRepeaterComponent","duplicate","SoundRepeaterComponent","tint","bgTint","hasLight","width","tintOver","tintOut","hasDarkOut","hasDarkOver","isShadow"],"mappings":"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","sourcesContent":["import { MutableRefObject } from \"react\";\r\n\r\nimport { ComponentTypes, MediaFormats, MediaVariants } from \"editor-constants\";\r\nimport { SimpleObject } from \"../others\";\r\nimport { MediaFile } from \"../course\";\r\nimport {\r\n  MediaFormat,\r\n  MediaImage,\r\n  MediaSlideshow,\r\n  MediaCustom,\r\n  MediaTarget,\r\n  MediaButton,\r\n  MediaVideo,\r\n  ExternalVideo,\r\n  StandardVideo,\r\n  MediaFlipCard,\r\n  SynchroVideo,\r\n  MediaHotspot360,\r\n  MediaHotspot,\r\n  MediaHotspotPlain,\r\n} from \"./media\";\r\nimport { Tint } from \"./template\";\r\nimport { ComponentAction } from \"./actions\";\r\n\r\nexport interface TextEditorComponent {\r\n  setFocus: () => void;\r\n  toggleInlineStyle: (inlineStyle: string) => void;\r\n  applyInlineStyle: (inlineStyle: string, value: string) => void;\r\n  removeInlineStyle: (inlineStyle: string) => void;\r\n  toggleAlignment: (textAlign: string) => void;\r\n  toggleBlockType: (blockType: string) => void;\r\n  clearStyles: () => void;\r\n}\r\n\r\nexport type TextEditorRef = MutableRefObject<TextEditorComponent | null>;\r\n\r\nexport class BaseComponent<T = string> {\r\n  id?: string;\r\n  mapping?: string;\r\n  value?: T;\r\n  type = ComponentTypes.Base;\r\n  isEditable = true;\r\n  isDeletable = false;\r\n  isDeactivated?: boolean;\r\n  isEdited = false;\r\n  frameStyle?: CSSStyleDeclaration;\r\n  constructor(value?: T) {\r\n    this.value = value;\r\n  }\r\n}\r\n\r\nexport class TextComponent extends BaseComponent<string> {\r\n  type = ComponentTypes.Text;\r\n}\r\n\r\nexport class QuestionMediaComponent<T = MediaFile> extends BaseComponent<T> {\r\n  type = ComponentTypes.Media;\r\n}\r\n\r\nexport class QuestionCustomComponent extends QuestionMediaComponent {\r\n  options?: MediaConfigJSON;\r\n  config?: MediaConfig;\r\n  format = new MediaFormat();\r\n}\r\n\r\nexport type MediaComponentValues =\r\n  | MediaImage\r\n  | MediaSlideshow\r\n  | MediaButton\r\n  | MediaFlipCard\r\n  | MediaCustom\r\n  | MediaTarget\r\n  | MediaVideo\r\n  | ExternalVideo\r\n  | StandardVideo\r\n  | SynchroVideo\r\n  | MediaHotspotPlain\r\n  | MediaHotspot\r\n  | MediaHotspot360;\r\n\r\nexport interface MediaConfigJSON {\r\n  mediatype: string;\r\n  format: string;\r\n  style: string;\r\n  saveincss?: boolean;\r\n  parameters?: { autostart: boolean; loop: boolean } | { id: string; server: string };\r\n}\r\n\r\nexport interface MediaConfigOptions {\r\n  horizontal: string;\r\n  vertical: string;\r\n  zoom: boolean;\r\n}\r\n\r\nexport interface MediaConfig {\r\n  variant: MediaVariants[];\r\n  format: MediaFormats[];\r\n  style?: SimpleObject;\r\n  saveInCSS: boolean;\r\n}\r\n\r\nexport class MediaComponent extends BaseComponent<MediaComponentValues> {\r\n  repeaterId?: string;\r\n  isCreated = false;\r\n  type = ComponentTypes.Media;\r\n  variant?: MediaVariants;\r\n  options?: MediaConfigJSON;\r\n  options2?: MediaConfigOptions;\r\n  config?: MediaConfig;\r\n  classList?: Array<string>;\r\n  format = new MediaFormat();\r\n  hasApplyStyle = true;\r\n}\r\n\r\nexport class ButtonValue {\r\n  background?: MediaFile;\r\n  inline?: MediaFile;\r\n  title = \"\";\r\n  description = \"\";\r\n  caption = \"\";\r\n  label = \"\";\r\n  number = \"\";\r\n  clickAction = new ComponentAction();\r\n  overAction = new ComponentAction();\r\n  style = new ComponentStyle();\r\n}\r\n\r\nexport class ButtonOptions {\r\n  format = new MediaFormat();\r\n  config?: MediaConfig;\r\n}\r\n\r\nexport class ButtonComponent extends BaseComponent<ButtonValue> {\r\n  repeaterId?: string;\r\n  isCreated = false;\r\n  type = ComponentTypes.Button;\r\n  value = new ButtonValue();\r\n  classList?: Array<string>;\r\n  hasApplyStyle = true;\r\n  buttonOptions = new ButtonOptions();\r\n}\r\n\r\nexport interface SoundConfigJSON {\r\n  parameters?: { autostart: boolean; local: boolean };\r\n}\r\n\r\nexport class SoundValue {\r\n  media?: MediaFile;\r\n  image?: MediaFile;\r\n  title = \"\";\r\n  description = \"\";\r\n  caption = \"\";\r\n  autoPlay = false;\r\n  localPlay = true;\r\n  style = new ComponentStyle();\r\n}\r\n\r\nexport class SoundComponent extends BaseComponent<SoundValue> {\r\n  repeaterId?: string;\r\n  isCreated = false;\r\n  type = ComponentTypes.Sound;\r\n  value = new SoundValue();\r\n  options?: SoundConfigJSON;\r\n  classList?: Array<string>;\r\n  hasApplyStyle = true;\r\n}\r\n\r\nexport interface RepeaterOptionsJSON {\r\n  [key: string]: { type: string; label: string; min: number; max: number; css_variable: string };\r\n}\r\n\r\nexport interface RepeaterConfigJSON {\r\n  allowcomponent: ComponentTypes;\r\n  default_class: string;\r\n  max_items: number;\r\n  min_items: number;\r\n  repeater_options?: RepeaterOptionsJSON;\r\n  media_options: MediaConfigJSON;\r\n  duplicate: boolean;\r\n  saveincss?: boolean;\r\n}\r\n\r\nexport type RepeaterValues = MediaComponent | ButtonComponent | SoundComponent;\r\n\r\nexport class RepeaterComponent<T = RepeaterValues> extends BaseComponent<T[]> {\r\n  type = ComponentTypes.Repeater;\r\n  allowComponent?: ComponentTypes;\r\n  minimum = 0;\r\n  maximum = 0;\r\n  defaultClass?: string;\r\n  options?: RepeaterOptionsJSON;\r\n  variables?: { [key: string]: unknown };\r\n}\r\n\r\nexport class MediaRepeaterComponent extends RepeaterComponent<MediaComponent> {\r\n  mediaConfig?: MediaConfigJSON;\r\n  saveInCSS: boolean = false;\r\n}\r\n\r\nexport class ButtonRepeaterComponent extends RepeaterComponent<ButtonComponent> {\r\n  duplicate?: boolean;\r\n}\r\n\r\nexport class SoundRepeaterComponent extends RepeaterComponent<SoundComponent> {}\r\n\r\nexport class ComponentStyle {\r\n  style?: string;\r\n  tint?: Tint;\r\n  bgTint?: Tint;\r\n  hasLight = false;\r\n  width?: string;\r\n  tintOver?: Tint;\r\n  tintOut?: Tint;\r\n  hasDarkOut = false;\r\n  hasDarkOver = false;\r\n  isShadow = false;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}