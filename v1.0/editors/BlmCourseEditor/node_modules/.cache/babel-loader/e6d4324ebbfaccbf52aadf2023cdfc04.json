{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\templates\\\\hoc\\\\template-board\\\\withBlmTemplateBoard.tsx\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { setScreenBackgroundHTML, getScreenBackgroundModel } from \"template-builders\";\nimport { TemplatePanelOptions, CourseElementTemplate, AssociatedTemplate } from \"types\";\nimport { ElementType, PanelCloseReasons, TemplateEditorTypes, TemplatePanelTypes } from \"editor-constants\";\nimport { findIndex, getChildElement } from \"utils\";\nimport { usePrevious } from \"hooks\";\nimport { BlmTemplatesPanel } from \"components/domain\";\nimport { BlmBackgroundEditor, BlmScrollEditor, BlmTemplateEditor, BlmVariantEditor, BlmPropertiesEditor, BlmAssociatedChapterEditor, BlmActionEditor, BlmExpertEditor } from \"components/template-editors\";\nimport { withBlmMainFrame } from \"components/frames\";\nimport { changeTemplateVariant, createElementTemplateHTML, getUnusedMedias } from \"template-builders\";\nimport BlmTemplateBoardContext from \"./BlmTemplateBoardContext\";\nimport connector from \"./template-board-container\";\nimport { setContentTemplateHTML, getContentTemplateModel } from \"template-builders\";\nimport \"./styles.scss\";\nconst initTemplatesPanel = {\n  open: false,\n  options: undefined\n};\nconst initEditorPanel = {\n  open: false,\n  type: TemplateEditorTypes.None\n};\nconst initStateForDuplicate = {\n  isDuplicate: false,\n  template: undefined,\n  templates: undefined\n};\n\nconst createTemplate = (template, background) => {\n  const newTemplate = { ...template\n  };\n  newTemplate.html = setScreenBackgroundHTML(newTemplate, background);\n  return newTemplate;\n};\n\nconst withBlmTemplateBoard = WrappedComponent => {\n  const FramedComponent = withBlmMainFrame(WrappedComponent);\n\n  const WithBlmTemplateBoard = props => {\n    const {\n      element,\n      curElement,\n      templates,\n      displayTemplates,\n      structurePanel,\n      getCourseStructure,\n      openStructurePanel,\n      closeStructurePanel,\n      getElementTemplates,\n      saveTemplates,\n      previewTemplates,\n      duplicateElementTemplate,\n      deleteElementTemplate,\n      positionElementTemplate,\n      renameElement,\n      removeFiles,\n      clearFiles,\n      openConfirmDialog,\n      toggleInteraction,\n      updateElementTemplates,\n      ...wrappedProps\n    } = props;\n    const [templatesPanel, setTemplatesPanel] = useState(initTemplatesPanel);\n    const [editorPanel, setEditorPanel] = useState(initEditorPanel);\n    const [forDuplicate, setForDuplicate] = useState(initStateForDuplicate);\n    const prevElement = usePrevious(element);\n    const switchCacheRef = useRef(new Map());\n    const switchCache = switchCacheRef.current;\n    const toggleTemplatesPanel = useCallback((open, options) => {\n      setTemplatesPanel({\n        open,\n        options\n      });\n    }, [setTemplatesPanel]);\n    const deleteSwitchCache = useCallback(id => {\n      if (switchCache.has(id)) {\n        const [oldTemplate, newTemplate] = switchCache.get(id);\n\n        if (oldTemplate && newTemplate) {\n          const medias = getUnusedMedias(oldTemplate, newTemplate);\n\n          if (medias.length) {\n            removeFiles(medias);\n            clearFiles(oldTemplate.id, true);\n          }\n        }\n\n        switchCache.delete(id);\n      }\n    }, [switchCache, removeFiles, clearFiles]);\n    useEffect(() => {\n      if (element) {\n        const {\n          type,\n          templateType\n        } = element;\n\n        if ((type === ElementType.Screen || type === ElementType.Question || type === ElementType.SimpleContent) && !templateType) {\n          const options = new TemplatePanelOptions(type);\n          options.isSummary = element.isSummary;\n          toggleTemplatesPanel(true, options);\n        }\n      }\n    }, [element, toggleTemplatesPanel]);\n    useEffect(() => {\n      if (element && element.id !== (prevElement === null || prevElement === void 0 ? void 0 : prevElement.id)) {\n        getElementTemplates(element);\n      }\n    }, [element, prevElement, getElementTemplates]);\n    useEffect(() => {\n      previewTemplates(templates);\n\n      if (forDuplicate.isDuplicate && forDuplicate.template && forDuplicate.templates) {\n        var allTemplates = forDuplicate.templates.templates;\n\n        if (allTemplates) {\n          var newInd;\n          allTemplates.forEach((template1, ind) => {\n            if (template1.nid === forDuplicate.template.id) {\n              newInd = ind + 1;\n            }\n          });\n          var duplicateTemplates = [...allTemplates];\n\n          if (newInd) {\n            const newContent = getContentTemplateModel(allTemplates[newInd]);\n            duplicateTemplates[newInd].html = setContentTemplateHTML(allTemplates[newInd], newContent, \"duplicate\");\n            updateElementTemplates(element.id, duplicateTemplates, \"duplicate\");\n          }\n\n          setForDuplicate({\n            isDuplicate: false,\n            template: undefined,\n            templates: undefined\n          });\n        }\n      }\n    }, [templates, forDuplicate, element, saveTemplates, previewTemplates, updateElementTemplates]);\n    useEffect(() => {\n      toggleInteraction(true);\n    }, [displayTemplates, toggleInteraction]);\n    useEffect(() => {\n      return () => {\n        switchCache.forEach((_, key) => {\n          deleteSwitchCache(key);\n        });\n      };\n    }, [switchCache, deleteSwitchCache]);\n\n    const getTemplateElement = template => {\n      if (template && (curElement.type === ElementType.Page || curElement.type === ElementType.SimplePage)) {\n        return getChildElement(curElement, template.id);\n      } else {\n        return curElement;\n      }\n    };\n\n    const handleTemplatesPanelClose = event => {\n      const {\n        type,\n        templateType\n      } = curElement;\n      toggleTemplatesPanel(false);\n\n      if ((type === ElementType.Screen || type === ElementType.Question || type === ElementType.SimpleContent) && !templateType) {\n        openStructurePanel();\n      }\n    };\n\n    const addSwitchCache = (oldTemplate, newTemplate) => {\n      switchCache.set(oldTemplate.id, [oldTemplate, newTemplate]);\n    };\n\n    const removeSwitchCache = template => {\n      deleteSwitchCache(template.id);\n    };\n\n    const handleShowTemplates = options => {\n      toggleTemplatesPanel(true, options);\n    };\n\n    const handleMoreTemplates = options => {\n      revertPreviewTemplates();\n      toggleEditorPanel(false);\n      toggleTemplatesPanel(true, options);\n    };\n\n    const handleAddTemplateClick = (variant, options, isDarkSelected = false) => {\n      const {\n        type,\n        templateType,\n        position,\n        isSummary,\n        template\n      } = options;\n\n      if (type !== TemplatePanelTypes.Switchable) {\n        var _element$parent;\n\n        const {\n          id,\n          name,\n          thumbnailLight,\n          thumbnailDark\n        } = variant;\n        const elementType = ElementType.Page === curElement.type ? ElementType.PartPage : ElementType.SimplePage === curElement.type ? ElementType.SimplePartPage : templateType;\n        const newHtml = createElementTemplateHTML(variant.html, isDarkSelected, elementType);\n        const associated = new AssociatedTemplate(id, name, thumbnailLight, thumbnailDark);\n        const newTemplate = new CourseElementTemplate(\"\", name, elementType, templateType, newHtml, associated, isDarkSelected);\n        newTemplate.isSummary = isSummary;\n        saveTemplates(element, newTemplate, position);\n\n        if (element.type === ElementType.SimpleContent || ((_element$parent = element.parent) === null || _element$parent === void 0 ? void 0 : _element$parent.type) === ElementType.Annexes && element.type === ElementType.Screen) {\n          const newB = getScreenBackgroundModel(newTemplate);\n\n          if (newB) {\n            newB[\"tint\"] = {\n              color: \"#ffffff\",\n              alpha: 100\n            };\n            const newTemplates = createTemplate(newTemplate, newB);\n            previewTemplates(newTemplates);\n            handleTemplateEdit(newTemplates);\n          }\n        }\n      } else if (template) {\n        var _switchCache$get;\n\n        const cached = (_switchCache$get = switchCache.get(template.id)) === null || _switchCache$get === void 0 ? void 0 : _switchCache$get[0];\n        const oldTemplate = cached || template;\n        const newTemplate = changeTemplateVariant(oldTemplate, variant, isDarkSelected, false);\n        addSwitchCache(oldTemplate, newTemplate);\n        saveTemplates(element, newTemplate);\n      }\n\n      structurePanel.isPinned ? openStructurePanel() : closeStructurePanel();\n      toggleTemplatesPanel(false);\n      toggleInteraction(false);\n    };\n\n    const revertPreviewTemplates = () => {\n      previewTemplates(templates);\n    };\n\n    const toggleEditorPanel = (open, type = TemplateEditorTypes.None, template, anchorEle, templateEle) => {\n      setEditorPanel({\n        open,\n        type,\n        template,\n        anchorEle,\n        templateEle\n      });\n    };\n\n    const handleTemplateEdit = template => {\n      if (template) {\n        removeSwitchCache(template);\n        previewTemplates(template); //BILIM-153: [react] Updated text not reflected in editor mode\n\n        saveTemplates(element, template);\n      }\n    };\n\n    const handleEditClick = (type, template, anchorEle, templateEle) => {\n      if (template) {\n        toggleEditorPanel(true, type, template, anchorEle, templateEle);\n      }\n    };\n\n    const handleDuplicateClick = template => {\n      if (curElement && template) {\n        duplicateElementTemplate(curElement, template).then(() => {\n          getElementTemplates(element).then(res => {\n            setForDuplicate({\n              isDuplicate: true,\n              template: template,\n              templates: res.payload\n            });\n          });\n        });\n      }\n    };\n\n    const handleDeleteClick = template => {\n      if (curElement && template && templates) {\n        const title = \"Delete confirmation\";\n        const message = `Do you want to delete this and all his children?`;\n\n        const onOk = () => {\n          toggleInteraction(false);\n          deleteElementTemplate(curElement, template);\n        };\n\n        openConfirmDialog(title, message, onOk);\n      }\n    };\n\n    const handlePositionChange = (template, delta) => {\n      if (curElement && template && templates) {\n        const pos = findIndex(templates, template.id, \"id\");\n        const newPos = pos + delta;\n        const len = templates.length;\n        const newTemplates = [...templates];\n\n        if (pos !== -1 && newPos >= 0 && newPos < len) {\n          const arr = newTemplates.splice(pos, 1);\n          newTemplates.splice(newPos, 0, arr[0]);\n          positionElementTemplate(curElement, newTemplates);\n        }\n      }\n    };\n\n    const handleNameChange = (template, name) => {\n      renameElement(template, name, { ...template,\n        name\n      });\n    };\n\n    const handleEditorPreview = template => {\n      previewTemplates(template);\n    };\n\n    const handleEditorSave = template => {\n      removeSwitchCache(template);\n      saveTemplates(element, template);\n    };\n\n    const handleEditorClose = (event, reason) => {\n      if (reason && reason === PanelCloseReasons.Cancel) {\n        revertPreviewTemplates();\n      }\n\n      toggleEditorPanel(false);\n    };\n\n    const handleHotspotAdd = (elementID, template) => {\n      updateElementTemplates(elementID, template);\n    };\n\n    const renderEditorPanel = () => {\n      const {\n        open,\n        type,\n        template,\n        anchorEle,\n        templateEle\n      } = editorPanel;\n\n      if (open && type !== TemplateEditorTypes.None && template) {\n        if (type === TemplateEditorTypes.Template && templateEle) {\n          return /*#__PURE__*/React.createElement(BlmTemplateEditor, {\n            open: open,\n            frameEle: templateEle,\n            element: getTemplateElement(template),\n            template: template,\n            onSave: handleEditorSave,\n            onClose: handleEditorClose,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 13\n            }\n          });\n        } else if (anchorEle) {\n          if (type === TemplateEditorTypes.Variant && templateEle) {\n            return /*#__PURE__*/React.createElement(BlmVariantEditor, {\n              open: open,\n              anchorEle: anchorEle,\n              templateEle: templateEle,\n              element: getTemplateElement(template),\n              template: template,\n              onPreview: handleEditorPreview,\n              onMore: handleMoreTemplates,\n              onSave: handleEditorSave,\n              onClose: handleEditorClose,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 15\n              }\n            });\n          } else if (type === TemplateEditorTypes.Background) {\n            return /*#__PURE__*/React.createElement(BlmBackgroundEditor, {\n              open: open,\n              anchorEle: anchorEle,\n              template: template,\n              onPreview: handleEditorPreview,\n              onSave: handleEditorSave,\n              onClose: handleEditorClose,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 15\n              }\n            });\n          } else if (type === TemplateEditorTypes.Scroll) {\n            return /*#__PURE__*/React.createElement(BlmScrollEditor, {\n              open: open,\n              anchorEle: anchorEle,\n              template: template,\n              onSave: handleEditorSave,\n              onClose: handleEditorClose,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 15\n              }\n            });\n          } else if (type === TemplateEditorTypes.Expert) {\n            return /*#__PURE__*/React.createElement(BlmExpertEditor, {\n              open: open,\n              anchorEle: anchorEle,\n              template: template,\n              element: getTemplateElement(template),\n              onSave: handleEditorSave,\n              onClose: handleEditorClose,\n              templateEle: templateEle,\n              onPreview: handleEditorPreview,\n              onMore: handleMoreTemplates,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 15\n              }\n            });\n          } else if (type === TemplateEditorTypes.Action) {\n            return /*#__PURE__*/React.createElement(BlmActionEditor, {\n              open: open,\n              anchorEle: anchorEle,\n              element: getTemplateElement(template),\n              template: template,\n              onSave: handleEditorSave,\n              onClose: handleEditorClose,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 15\n              }\n            });\n          } else if (type === TemplateEditorTypes.GeneralProps || type === TemplateEditorTypes.CompletionProps || type === TemplateEditorTypes.LogProps) {\n            return /*#__PURE__*/React.createElement(BlmPropertiesEditor, {\n              open: open,\n              anchorEle: anchorEle,\n              type: type,\n              element: getTemplateElement(template),\n              onClose: handleEditorClose,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 15\n              }\n            });\n          } else if (type === TemplateEditorTypes.AssociatedChapter) {\n            return /*#__PURE__*/React.createElement(BlmAssociatedChapterEditor, {\n              open: open,\n              anchorEle: anchorEle,\n              element: curElement,\n              template: template,\n              onSave: handleEditorSave,\n              onClose: handleEditorClose,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 15\n              }\n            });\n          }\n        }\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-board-wrapper custom-scrollbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BlmTemplateBoardContext.Provider, {\n      value: {\n        editorPanel: {\n          isOpen: editorPanel.open,\n          type: editorPanel.type,\n          template: editorPanel.template\n        },\n        onShowTemplates: handleShowTemplates,\n        onTemplateEdit: handleTemplateEdit,\n        onEditClick: handleEditClick,\n        onDuplicateClick: handleDuplicateClick,\n        onDeleteClick: handleDeleteClick,\n        onPositionChange: handlePositionChange,\n        onNameChange: handleNameChange,\n        onLoadPartPageHotspot: handleHotspotAdd\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FramedComponent, Object.assign({}, wrappedProps, {\n      element: curElement,\n      templates: displayTemplates,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 11\n      }\n    }))), templatesPanel.options && /*#__PURE__*/React.createElement(BlmTemplatesPanel, {\n      open: templatesPanel.open,\n      element: curElement,\n      options: templatesPanel.options,\n      onAddTemplateClick: handleAddTemplateClick,\n      onClose: handleTemplatesPanelClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }\n    }), renderEditorPanel());\n  }; //https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31363\n\n\n  return connector(WithBlmTemplateBoard);\n};\n\nexport default withBlmTemplateBoard;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/templates/hoc/template-board/withBlmTemplateBoard.tsx"],"names":["React","useState","useEffect","useCallback","useRef","setScreenBackgroundHTML","getScreenBackgroundModel","TemplatePanelOptions","CourseElementTemplate","AssociatedTemplate","ElementType","PanelCloseReasons","TemplateEditorTypes","TemplatePanelTypes","findIndex","getChildElement","usePrevious","BlmTemplatesPanel","BlmBackgroundEditor","BlmScrollEditor","BlmTemplateEditor","BlmVariantEditor","BlmPropertiesEditor","BlmAssociatedChapterEditor","BlmActionEditor","BlmExpertEditor","withBlmMainFrame","changeTemplateVariant","createElementTemplateHTML","getUnusedMedias","BlmTemplateBoardContext","connector","setContentTemplateHTML","getContentTemplateModel","initTemplatesPanel","open","options","undefined","initEditorPanel","type","None","initStateForDuplicate","isDuplicate","template","templates","createTemplate","background","newTemplate","html","withBlmTemplateBoard","WrappedComponent","FramedComponent","WithBlmTemplateBoard","props","element","curElement","displayTemplates","structurePanel","getCourseStructure","openStructurePanel","closeStructurePanel","getElementTemplates","saveTemplates","previewTemplates","duplicateElementTemplate","deleteElementTemplate","positionElementTemplate","renameElement","removeFiles","clearFiles","openConfirmDialog","toggleInteraction","updateElementTemplates","wrappedProps","templatesPanel","setTemplatesPanel","editorPanel","setEditorPanel","forDuplicate","setForDuplicate","prevElement","switchCacheRef","Map","switchCache","current","toggleTemplatesPanel","deleteSwitchCache","id","has","oldTemplate","get","medias","length","delete","templateType","Screen","Question","SimpleContent","isSummary","allTemplates","newInd","forEach","template1","ind","nid","duplicateTemplates","newContent","_","key","getTemplateElement","Page","SimplePage","handleTemplatesPanelClose","event","addSwitchCache","set","removeSwitchCache","handleShowTemplates","handleMoreTemplates","revertPreviewTemplates","toggleEditorPanel","handleAddTemplateClick","variant","isDarkSelected","position","Switchable","name","thumbnailLight","thumbnailDark","elementType","PartPage","SimplePartPage","newHtml","associated","parent","Annexes","newB","color","alpha","newTemplates","handleTemplateEdit","cached","isPinned","anchorEle","templateEle","handleEditClick","handleDuplicateClick","then","res","payload","handleDeleteClick","title","message","onOk","handlePositionChange","delta","pos","newPos","len","arr","splice","handleNameChange","handleEditorPreview","handleEditorSave","handleEditorClose","reason","Cancel","handleHotspotAdd","elementID","renderEditorPanel","Template","Variant","Background","Scroll","Expert","Action","GeneralProps","CompletionProps","LogProps","AssociatedChapter","isOpen","onShowTemplates","onTemplateEdit","onEditClick","onDuplicateClick","onDeleteClick","onPositionChange","onNameChange","onLoadPartPageHotspot"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  useEffect,\r\n  FunctionComponent,\r\n  ComponentType,\r\n  MouseEvent,\r\n  useCallback,\r\n  useRef,\r\n} from \"react\";\r\nimport { Diff } from \"utility-types\";\r\nimport { setScreenBackgroundHTML, getScreenBackgroundModel } from \"template-builders\";\r\n\r\nimport {\r\n  TemplatePanelOptions,\r\n  CourseElement,\r\n  TemplateBase,\r\n  CourseElementTemplate,\r\n  AssociatedTemplate,\r\n  ScreenBackground,\r\n} from \"types\";\r\nimport {\r\n  ElementType,\r\n  PanelCloseReasons,\r\n  TemplateEditorTypes,\r\n  TemplatePanelTypes,\r\n} from \"editor-constants\";\r\nimport { findIndex, getChildElement } from \"utils\";\r\nimport { usePrevious } from \"hooks\";\r\nimport { BlmTemplatesPanel } from \"components/domain\";\r\nimport {\r\n  BlmBackgroundEditor,\r\n  BlmScrollEditor,\r\n  BlmTemplateEditor,\r\n  BlmVariantEditor,\r\n  BlmPropertiesEditor,\r\n  BlmAssociatedChapterEditor,\r\n  BlmActionEditor,\r\n  BlmExpertEditor,\r\n} from \"components/template-editors\";\r\nimport { withBlmMainFrame } from \"components/frames\";\r\nimport {\r\n  changeTemplateVariant,\r\n  createElementTemplateHTML,\r\n  getUnusedMedias,\r\n} from \"template-builders\";\r\nimport BlmTemplateBoardContext from \"./BlmTemplateBoardContext\";\r\nimport connector, { ContainerProps } from \"./template-board-container\";\r\nimport { setContentTemplateHTML, getContentTemplateModel } from \"template-builders\";\r\nimport \"./styles.scss\";\r\n\r\ninterface InjectedProps {\r\n  templates?: CourseElementTemplate[];\r\n}\r\n\r\ninterface CompProps {\r\n  element: CourseElement;\r\n}\r\n\r\ninterface TemplatesPanelState {\r\n  open: boolean;\r\n  options?: TemplatePanelOptions;\r\n}\r\n\r\ninterface EditorPanelState {\r\n  open: boolean;\r\n  type: TemplateEditorTypes;\r\n  template?: CourseElementTemplate;\r\n  anchorEle?: HTMLElement;\r\n  templateEle?: HTMLElement;\r\n}\r\n\r\nconst initTemplatesPanel: TemplatesPanelState = {\r\n  open: false,\r\n  options: undefined,\r\n};\r\n\r\nconst initEditorPanel: EditorPanelState = {\r\n  open: false,\r\n  type: TemplateEditorTypes.None,\r\n};\r\n\r\ninterface DuplicateElement {\r\n  isDuplicate: boolean;\r\n  template: any;\r\n  templates: any;\r\n}\r\n\r\nconst initStateForDuplicate: DuplicateElement = {\r\n  isDuplicate: false,\r\n  template: undefined,\r\n  templates: undefined,\r\n};\r\n\r\nconst createTemplate = (template: CourseElementTemplate, background: ScreenBackground) => {\r\n  const newTemplate: CourseElementTemplate = {\r\n    ...template,\r\n  };\r\n\r\n  newTemplate.html = setScreenBackgroundHTML(newTemplate, background);\r\n\r\n  return newTemplate;\r\n};\r\n\r\nconst withBlmTemplateBoard = <P extends InjectedProps>(WrappedComponent: ComponentType<P>) => {\r\n  const FramedComponent = withBlmMainFrame(WrappedComponent);\r\n  const WithBlmTemplateBoard: FunctionComponent<CompProps & ContainerProps & P> = (props) => {\r\n    const {\r\n      element,\r\n      curElement,\r\n      templates,\r\n      displayTemplates,\r\n      structurePanel,\r\n      getCourseStructure,\r\n      openStructurePanel,\r\n      closeStructurePanel,\r\n      getElementTemplates,\r\n      saveTemplates,\r\n      previewTemplates,\r\n      duplicateElementTemplate,\r\n      deleteElementTemplate,\r\n      positionElementTemplate,\r\n      renameElement,\r\n      removeFiles,\r\n      clearFiles,\r\n      openConfirmDialog,\r\n      toggleInteraction,\r\n      updateElementTemplates,\r\n      ...wrappedProps\r\n    } = props;\r\n    const [templatesPanel, setTemplatesPanel] = useState(initTemplatesPanel);\r\n    const [editorPanel, setEditorPanel] = useState(initEditorPanel);\r\n    const [forDuplicate, setForDuplicate] = useState(initStateForDuplicate);\r\n\r\n    const prevElement = usePrevious(element);\r\n    const switchCacheRef = useRef(new Map<string, CourseElementTemplate[]>());\r\n    const switchCache = switchCacheRef.current;\r\n\r\n    const toggleTemplatesPanel = useCallback(\r\n      (open: boolean, options?: TemplatePanelOptions) => {\r\n        setTemplatesPanel({ open, options });\r\n      },\r\n      [setTemplatesPanel]\r\n    );\r\n\r\n    const deleteSwitchCache = useCallback(\r\n      (id: string) => {\r\n        if (switchCache.has(id)) {\r\n          const [oldTemplate, newTemplate] = switchCache.get(id)!;\r\n\r\n          if (oldTemplate && newTemplate) {\r\n            const medias = getUnusedMedias(oldTemplate, newTemplate);\r\n\r\n            if (medias.length) {\r\n              removeFiles(medias);\r\n              clearFiles(oldTemplate.id, true);\r\n            }\r\n          }\r\n\r\n          switchCache.delete(id);\r\n        }\r\n      },\r\n      [switchCache, removeFiles, clearFiles]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (element) {\r\n        const { type, templateType } = element;\r\n\r\n        if (\r\n          (type === ElementType.Screen ||\r\n            type === ElementType.Question ||\r\n            type === ElementType.SimpleContent) &&\r\n          !templateType\r\n        ) {\r\n          const options = new TemplatePanelOptions(type);\r\n          options.isSummary = element.isSummary;\r\n\r\n          toggleTemplatesPanel(true, options);\r\n        }\r\n      }\r\n    }, [element, toggleTemplatesPanel]);\r\n\r\n    useEffect(() => {\r\n      if (element && element.id !== prevElement?.id) {\r\n        getElementTemplates(element);\r\n      }\r\n    }, [element, prevElement, getElementTemplates]);\r\n\r\n    useEffect(() => {\r\n      previewTemplates(templates);\r\n      if (forDuplicate.isDuplicate && forDuplicate.template && forDuplicate.templates) {\r\n        var allTemplates = forDuplicate.templates.templates;\r\n        if (allTemplates) {\r\n          var newInd;\r\n          allTemplates.forEach((template1: any, ind: number) => {\r\n            if (template1.nid === forDuplicate.template.id) {\r\n              newInd = ind + 1;\r\n            }\r\n          });\r\n          var duplicateTemplates: CourseElementTemplate[] = [...allTemplates];\r\n          if (newInd) {\r\n            const newContent = getContentTemplateModel(allTemplates[newInd]);\r\n            duplicateTemplates[newInd].html = setContentTemplateHTML(\r\n              allTemplates[newInd],\r\n              newContent,\r\n              \"duplicate\"\r\n            );\r\n            updateElementTemplates(element.id, duplicateTemplates, \"duplicate\");\r\n          }\r\n          setForDuplicate({\r\n            isDuplicate: false,\r\n            template: undefined,\r\n            templates: undefined,\r\n          });\r\n        }\r\n      }\r\n    }, [templates, forDuplicate, element, saveTemplates, previewTemplates, updateElementTemplates]);\r\n\r\n    useEffect(() => {\r\n      toggleInteraction(true);\r\n    }, [displayTemplates, toggleInteraction]);\r\n\r\n    useEffect(() => {\r\n      return () => {\r\n        switchCache.forEach((_, key) => {\r\n          deleteSwitchCache(key);\r\n        });\r\n      };\r\n    }, [switchCache, deleteSwitchCache]);\r\n\r\n    const getTemplateElement = (template: CourseElementTemplate) => {\r\n      if (\r\n        template &&\r\n        (curElement.type === ElementType.Page || curElement.type === ElementType.SimplePage)\r\n      ) {\r\n        return getChildElement(curElement, template.id);\r\n      } else {\r\n        return curElement;\r\n      }\r\n    };\r\n\r\n    const handleTemplatesPanelClose = (event: any) => {\r\n      const { type, templateType } = curElement;\r\n\r\n      toggleTemplatesPanel(false);\r\n\r\n      if (\r\n        (type === ElementType.Screen ||\r\n          type === ElementType.Question ||\r\n          type === ElementType.SimpleContent) &&\r\n        !templateType\r\n      ) {\r\n        openStructurePanel();\r\n      }\r\n    };\r\n\r\n    const addSwitchCache = (\r\n      oldTemplate: CourseElementTemplate,\r\n      newTemplate: CourseElementTemplate\r\n    ) => {\r\n      switchCache.set(oldTemplate.id, [oldTemplate, newTemplate]);\r\n    };\r\n\r\n    const removeSwitchCache = (template: CourseElementTemplate) => {\r\n      deleteSwitchCache(template.id);\r\n    };\r\n\r\n    const handleShowTemplates = (options: TemplatePanelOptions) => {\r\n      toggleTemplatesPanel(true, options);\r\n    };\r\n\r\n    const handleMoreTemplates = (options: TemplatePanelOptions) => {\r\n      revertPreviewTemplates();\r\n      toggleEditorPanel(false);\r\n      toggleTemplatesPanel(true, options);\r\n    };\r\n\r\n    const handleAddTemplateClick = (\r\n      variant: TemplateBase,\r\n      options: TemplatePanelOptions,\r\n      isDarkSelected: boolean = false\r\n    ) => {\r\n      const { type, templateType, position, isSummary, template } = options;\r\n\r\n      if (type !== TemplatePanelTypes.Switchable) {\r\n        const { id, name, thumbnailLight, thumbnailDark } = variant;\r\n        const elementType =\r\n          ElementType.Page === curElement.type\r\n            ? ElementType.PartPage\r\n            : ElementType.SimplePage === curElement.type\r\n            ? ElementType.SimplePartPage\r\n            : templateType;\r\n        const newHtml = createElementTemplateHTML(variant.html, isDarkSelected, elementType);\r\n        const associated = new AssociatedTemplate(id, name, thumbnailLight, thumbnailDark);\r\n        const newTemplate = new CourseElementTemplate(\r\n          \"\",\r\n          name,\r\n          elementType,\r\n          templateType,\r\n          newHtml,\r\n          associated,\r\n          isDarkSelected\r\n        );\r\n        newTemplate.isSummary = isSummary;\r\n        saveTemplates(element, newTemplate, position);\r\n\r\n        if (\r\n          element.type === ElementType.SimpleContent ||\r\n          (element.parent?.type === ElementType.Annexes && element.type === ElementType.Screen)\r\n        ) {\r\n          const newB = getScreenBackgroundModel(newTemplate);\r\n          if (newB) {\r\n            newB[\"tint\"] = { color: \"#ffffff\", alpha: 100 } as any;\r\n            const newTemplates = createTemplate(newTemplate, newB);\r\n            previewTemplates(newTemplates);\r\n            handleTemplateEdit(newTemplates);\r\n          }\r\n        }\r\n      } else if (template) {\r\n        const cached = switchCache.get(template.id)?.[0];\r\n        const oldTemplate = cached || template;\r\n        const newTemplate = changeTemplateVariant(oldTemplate, variant, isDarkSelected, false);\r\n\r\n        addSwitchCache(oldTemplate, newTemplate);\r\n        saveTemplates(element, newTemplate);\r\n      }\r\n\r\n      structurePanel.isPinned ? openStructurePanel() : closeStructurePanel();\r\n      toggleTemplatesPanel(false);\r\n      toggleInteraction(false);\r\n    };\r\n\r\n    const revertPreviewTemplates = () => {\r\n      previewTemplates(templates);\r\n    };\r\n\r\n    const toggleEditorPanel = (\r\n      open: boolean,\r\n      type: TemplateEditorTypes = TemplateEditorTypes.None,\r\n      template?: CourseElementTemplate,\r\n      anchorEle?: HTMLElement,\r\n      templateEle?: HTMLElement\r\n    ) => {\r\n      setEditorPanel({ open, type, template, anchorEle, templateEle });\r\n    };\r\n\r\n    const handleTemplateEdit = (template: CourseElementTemplate) => {\r\n      if (template) {\r\n        removeSwitchCache(template);\r\n        previewTemplates(template); //BILIM-153: [react] Updated text not reflected in editor mode\r\n        saveTemplates(element, template);\r\n      }\r\n    };\r\n\r\n    const handleEditClick = (\r\n      type: TemplateEditorTypes,\r\n      template: CourseElementTemplate,\r\n      anchorEle: HTMLElement,\r\n      templateEle: HTMLElement\r\n    ) => {\r\n      if (template) {\r\n        toggleEditorPanel(true, type, template, anchorEle, templateEle);\r\n      }\r\n    };\r\n\r\n    const handleDuplicateClick = (template: CourseElementTemplate) => {\r\n      if (curElement && template) {\r\n        duplicateElementTemplate(curElement, template).then(() => {\r\n          getElementTemplates(element).then((res) => {\r\n            setForDuplicate({\r\n              isDuplicate: true,\r\n              template: template,\r\n              templates: res.payload,\r\n            });\r\n          });\r\n        });\r\n      }\r\n    };\r\n\r\n    const handleDeleteClick = (template: CourseElementTemplate) => {\r\n      if (curElement && template && templates) {\r\n        const title = \"Delete confirmation\";\r\n        const message = `Do you want to delete this and all his children?`;\r\n        const onOk = () => {\r\n          toggleInteraction(false);\r\n          deleteElementTemplate(curElement, template);\r\n        };\r\n\r\n        openConfirmDialog(title, message, onOk);\r\n      }\r\n    };\r\n\r\n    const handlePositionChange = (template: CourseElementTemplate, delta: number) => {\r\n      if (curElement && template && templates) {\r\n        const pos = findIndex(templates, template.id, \"id\");\r\n        const newPos = pos + delta;\r\n        const len = templates.length;\r\n        const newTemplates = [...templates];\r\n\r\n        if (pos !== -1 && newPos >= 0 && newPos < len) {\r\n          const arr = newTemplates.splice(pos, 1);\r\n          newTemplates.splice(newPos, 0, arr[0]);\r\n\r\n          positionElementTemplate(curElement, newTemplates);\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleNameChange = (template: CourseElementTemplate, name: string) => {\r\n      renameElement(template, name, { ...template, name });\r\n    };\r\n\r\n    const handleEditorPreview = (template: CourseElementTemplate) => {\r\n      previewTemplates(template);\r\n    };\r\n\r\n    const handleEditorSave = (template: CourseElementTemplate) => {\r\n      removeSwitchCache(template);\r\n      saveTemplates(element, template);\r\n    };\r\n\r\n    const handleEditorClose = (event: MouseEvent, reason?: PanelCloseReasons) => {\r\n      if (reason && reason === PanelCloseReasons.Cancel) {\r\n        revertPreviewTemplates();\r\n      }\r\n\r\n      toggleEditorPanel(false);\r\n    };\r\n\r\n    const handleHotspotAdd = (elementID: string, template: CourseElementTemplate) => {\r\n      updateElementTemplates(elementID, template);\r\n    };\r\n\r\n    const renderEditorPanel = () => {\r\n      const { open, type, template, anchorEle, templateEle } = editorPanel;\r\n\r\n      if (open && type !== TemplateEditorTypes.None && template) {\r\n        if (type === TemplateEditorTypes.Template && templateEle) {\r\n          return (\r\n            <BlmTemplateEditor\r\n              open={open}\r\n              frameEle={templateEle}\r\n              element={getTemplateElement(template)!}\r\n              template={template}\r\n              onSave={handleEditorSave}\r\n              onClose={handleEditorClose}\r\n            />\r\n          );\r\n        } else if (anchorEle) {\r\n          if (type === TemplateEditorTypes.Variant && templateEle) {\r\n            return (\r\n              <BlmVariantEditor\r\n                open={open}\r\n                anchorEle={anchorEle}\r\n                templateEle={templateEle}\r\n                element={getTemplateElement(template)!}\r\n                template={template}\r\n                onPreview={handleEditorPreview}\r\n                onMore={handleMoreTemplates}\r\n                onSave={handleEditorSave}\r\n                onClose={handleEditorClose}\r\n              />\r\n            );\r\n          } else if (type === TemplateEditorTypes.Background) {\r\n            return (\r\n              <BlmBackgroundEditor\r\n                open={open}\r\n                anchorEle={anchorEle}\r\n                template={template}\r\n                onPreview={handleEditorPreview}\r\n                onSave={handleEditorSave}\r\n                onClose={handleEditorClose}\r\n              />\r\n            );\r\n          } else if (type === TemplateEditorTypes.Scroll) {\r\n            return (\r\n              <BlmScrollEditor\r\n                open={open}\r\n                anchorEle={anchorEle}\r\n                template={template}\r\n                onSave={handleEditorSave}\r\n                onClose={handleEditorClose}\r\n              />\r\n            );\r\n          } else if (type === TemplateEditorTypes.Expert) {\r\n            return (\r\n              <BlmExpertEditor\r\n                open={open}\r\n                anchorEle={anchorEle}\r\n                template={template}\r\n                element={getTemplateElement(template)!}\r\n                onSave={handleEditorSave}\r\n                onClose={handleEditorClose}\r\n                templateEle={templateEle}\r\n                onPreview={handleEditorPreview}\r\n                onMore={handleMoreTemplates}\r\n              />\r\n            );\r\n          } else if (type === TemplateEditorTypes.Action) {\r\n            return (\r\n              <BlmActionEditor\r\n                open={open}\r\n                anchorEle={anchorEle}\r\n                element={getTemplateElement(template)!}\r\n                template={template}\r\n                onSave={handleEditorSave}\r\n                onClose={handleEditorClose}\r\n              />\r\n            );\r\n          } else if (\r\n            type === TemplateEditorTypes.GeneralProps ||\r\n            type === TemplateEditorTypes.CompletionProps ||\r\n            type === TemplateEditorTypes.LogProps\r\n          ) {\r\n            return (\r\n              <BlmPropertiesEditor\r\n                open={open}\r\n                anchorEle={anchorEle}\r\n                type={type}\r\n                element={getTemplateElement(template)!}\r\n                onClose={handleEditorClose}\r\n              />\r\n            );\r\n          } else if (type === TemplateEditorTypes.AssociatedChapter) {\r\n            return (\r\n              <BlmAssociatedChapterEditor\r\n                open={open}\r\n                anchorEle={anchorEle}\r\n                element={curElement}\r\n                template={template}\r\n                onSave={handleEditorSave}\r\n                onClose={handleEditorClose}\r\n              />\r\n            );\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"template-board-wrapper custom-scrollbar\">\r\n        <BlmTemplateBoardContext.Provider\r\n          value={{\r\n            editorPanel: {\r\n              isOpen: editorPanel.open,\r\n              type: editorPanel.type,\r\n              template: editorPanel.template,\r\n            },\r\n            onShowTemplates: handleShowTemplates,\r\n            onTemplateEdit: handleTemplateEdit,\r\n            onEditClick: handleEditClick,\r\n            onDuplicateClick: handleDuplicateClick,\r\n            onDeleteClick: handleDeleteClick,\r\n            onPositionChange: handlePositionChange,\r\n            onNameChange: handleNameChange,\r\n            onLoadPartPageHotspot: handleHotspotAdd,\r\n          }}\r\n        >\r\n          <FramedComponent\r\n            {...(wrappedProps as P)}\r\n            element={curElement}\r\n            templates={displayTemplates}\r\n          />\r\n        </BlmTemplateBoardContext.Provider>\r\n        {templatesPanel.options && (\r\n          <BlmTemplatesPanel\r\n            open={templatesPanel.open}\r\n            element={curElement}\r\n            options={templatesPanel.options}\r\n            onAddTemplateClick={handleAddTemplateClick}\r\n            onClose={handleTemplatesPanelClose}\r\n          />\r\n        )}\r\n        {renderEditorPanel()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31363\r\n  return connector(WithBlmTemplateBoard as any) as ComponentType<\r\n    CompProps & Diff<P, InjectedProps>\r\n  >;\r\n};\r\n\r\nexport default withBlmTemplateBoard;\r\n"]},"metadata":{},"sourceType":"module"}