{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\repository\\\\repeater-list\\\\BlmRepeaterList.tsx\";\nimport React, { Fragment, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { reorderArray, isButtonComponent, isMediaComponent, isSoundComponent, isMediaRepeater, isButtonRepeater, isSoundRepeater, createUUID, addObject, mediaDuplicateID, buttonDuplicateID, soundDuplicateID } from \"utils\";\nimport { createButtonComponent, createMediaComponent, createSoundComponent, updateCreatedMediaComponet } from \"template-builders\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { updateRepeaterComponent } from \"components/content-editor/reducers\";\nimport BlmMediaCard from \"../media-card\";\nimport BlmButtonCard from \"../button-card\";\nimport BlmSoundCard from \"../sound-card\";\nimport { ComponentTypes, MediaVariants, StyleListTypes } from \"editor-constants\";\nimport BlmRepeaterOptionsEditor from \"./options\";\nimport \"./styles.scss\";\nimport { updateCreatedButtonComponent } from \"template-builders/core\";\n\nconst getDraggableStyle = draggableStyle => ({\n  userSelect: \"none\",\n  ...draggableStyle\n});\n\nconst BlmRepeaterList = props => {\n  const {\n    data,\n    startIndex,\n    duplicateImageTemplate\n  } = props;\n  const {\n    allowComponent,\n    value = [],\n    minimum,\n    maximum,\n    options\n  } = data;\n  const {\n    component: selectedComponent,\n    selectComponent,\n    dispatch,\n    element\n  } = useContentEditorCtx();\n  const [open, setOpen] = useState(false);\n  const len = value.length;\n  const isAddable = len < maximum;\n  const isDeletable = len > minimum;\n  const isMediaDuplicate = minimum === 1;\n\n  const updateChange = newData => {\n    if (dispatch) {\n      dispatch(updateRepeaterComponent(newData));\n    }\n  };\n\n  const handleClick = data => {\n    if (selectComponent) {\n      selectComponent(data);\n    }\n  };\n\n  const handleAddClick = event => {\n    if (!isAddable) {\n      return;\n    }\n\n    const newData = { ...data\n    };\n\n    if (isMediaRepeater(data)) {\n      const component = createMediaComponent(data);\n      updateCreatedMediaComponet(data, component);\n      newData.value = [...value, component];\n    } else if (isButtonRepeater(data)) {\n      const component = createButtonComponent(data);\n      updateCreatedButtonComponent(data, component);\n      newData.value = [...value, component];\n    } else if (isSoundRepeater(data)) {\n      const component = createSoundComponent(data);\n      newData.value = [...value, component];\n    }\n\n    updateChange(newData);\n  };\n\n  const handleEditClick = () => {\n    if (options) {\n      setOpen(true);\n    }\n  };\n\n  const handleDeleteClick = deleted => {\n    const newData = { ...data\n    };\n    newData.value = value.filter(component => component.id !== deleted.id);\n    updateChange(newData);\n  };\n\n  const handleDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    const newData = { ...data,\n      value: reorderArray(value, result.source.index, result.destination.index)\n    };\n    updateChange(newData);\n  };\n\n  const handleEditorSave = newData => {\n    updateChange(newData);\n  };\n\n  const handleEditorClose = () => {\n    setOpen(false);\n  };\n\n  const DuplicateNewId = async (val, index) => {\n    if (element && (index || index === 0) && val) {\n      let value;\n      var result;\n\n      if (val.type === \"media\") {\n        result = mediaDuplicateID(val, element);\n      } else if (val.type === \"button\") {\n        result = buttonDuplicateID(val, element);\n      } else if (val.type === \"audio\") {\n        result = soundDuplicateID(val, element);\n      }\n\n      await duplicateImageTemplate(result).then(res => {\n        var _res$payload;\n\n        value = { ...((_res$payload = res.payload) === null || _res$payload === void 0 ? void 0 : _res$payload.media)\n        };\n      });\n      return value;\n    }\n  };\n\n  const DuplicateMedia = async (val, index) => {\n    let newData = { ...data\n    };\n\n    if (newData.value) {\n      if (val && val.variant === MediaVariants.Button) {\n        var _newData$value$index;\n\n        let res = await DuplicateNewId(val, index);\n        let values = { ...res\n        };\n        return { ...(newData === null || newData === void 0 ? void 0 : (_newData$value$index = newData.value[index]) === null || _newData$value$index === void 0 ? void 0 : _newData$value$index.value),\n          ...values\n        };\n      } else if (val && val.variant === MediaVariants.Image) {\n        let res = await DuplicateNewId(val, index);\n        let values = { ...newData.value[index].value,\n          media: res[0]\n        };\n        return { ...values\n        };\n      } else if (val && val.variant === MediaVariants.FlipCard) {\n        var _newData$value$index2, _res$clickAction, _New$clickAction, _res$clickAction2, _res$overAction, _New$overAction, _res$overAction2, _newData$value$index3;\n\n        let res = await DuplicateNewId(val, index);\n        let New = newData === null || newData === void 0 ? void 0 : (_newData$value$index2 = newData.value[index]) === null || _newData$value$index2 === void 0 ? void 0 : _newData$value$index2.value;\n        let recto = { ...(New === null || New === void 0 ? void 0 : New.recto),\n          ...(res === null || res === void 0 ? void 0 : res.recto),\n          icon: res === null || res === void 0 ? void 0 : res.recto_icon\n        };\n        let verso = { ...(New === null || New === void 0 ? void 0 : New.verso),\n          ...(res === null || res === void 0 ? void 0 : res.verso),\n          icon: res === null || res === void 0 ? void 0 : res.verso_icon\n        };\n        let clickAction = {\n          action: res === null || res === void 0 ? void 0 : (_res$clickAction = res.clickAction) === null || _res$clickAction === void 0 ? void 0 : _res$clickAction.action,\n          value: { ...(New === null || New === void 0 ? void 0 : (_New$clickAction = New.clickAction) === null || _New$clickAction === void 0 ? void 0 : _New$clickAction.value),\n            ...(res === null || res === void 0 ? void 0 : (_res$clickAction2 = res.clickAction) === null || _res$clickAction2 === void 0 ? void 0 : _res$clickAction2.value)\n          }\n        };\n        let overAction = {\n          action: res === null || res === void 0 ? void 0 : (_res$overAction = res.overAction) === null || _res$overAction === void 0 ? void 0 : _res$overAction.action,\n          value: { ...(New === null || New === void 0 ? void 0 : (_New$overAction = New.overAction) === null || _New$overAction === void 0 ? void 0 : _New$overAction.value),\n            ...(res === null || res === void 0 ? void 0 : (_res$overAction2 = res.overAction) === null || _res$overAction2 === void 0 ? void 0 : _res$overAction2.value)\n          }\n        };\n        return { ...(newData === null || newData === void 0 ? void 0 : (_newData$value$index3 = newData.value[index]) === null || _newData$value$index3 === void 0 ? void 0 : _newData$value$index3.value),\n          overAction: overAction,\n          clickAction: clickAction,\n          recto: recto,\n          verso: verso\n        };\n      }\n    }\n  };\n\n  const DuplicateButton = async index => {\n    let newData = { ...data\n    };\n\n    if (newData.value) {\n      var _newData$value$index4, _res$clickAction3, _New$clickAction2, _res$clickAction4, _res$overAction3, _New$overAction2, _res$overAction4, _newData$value$index5;\n\n      let res = await DuplicateNewId(newData === null || newData === void 0 ? void 0 : newData.value[index], index);\n      let New = newData === null || newData === void 0 ? void 0 : (_newData$value$index4 = newData.value[index]) === null || _newData$value$index4 === void 0 ? void 0 : _newData$value$index4.value;\n      let clickAction = {\n        action: res === null || res === void 0 ? void 0 : (_res$clickAction3 = res.clickAction) === null || _res$clickAction3 === void 0 ? void 0 : _res$clickAction3.action,\n        value: { ...(New === null || New === void 0 ? void 0 : (_New$clickAction2 = New.clickAction) === null || _New$clickAction2 === void 0 ? void 0 : _New$clickAction2.value),\n          ...(res === null || res === void 0 ? void 0 : (_res$clickAction4 = res.clickAction) === null || _res$clickAction4 === void 0 ? void 0 : _res$clickAction4.value)\n        }\n      };\n      let overAction = {\n        action: res === null || res === void 0 ? void 0 : (_res$overAction3 = res.overAction) === null || _res$overAction3 === void 0 ? void 0 : _res$overAction3.action,\n        value: { ...(New === null || New === void 0 ? void 0 : (_New$overAction2 = New.overAction) === null || _New$overAction2 === void 0 ? void 0 : _New$overAction2.value),\n          ...(res === null || res === void 0 ? void 0 : (_res$overAction4 = res.overAction) === null || _res$overAction4 === void 0 ? void 0 : _res$overAction4.value)\n        }\n      };\n      let inline = { ...(New === null || New === void 0 ? void 0 : New.inline),\n        ...(res === null || res === void 0 ? void 0 : res.icon)\n      };\n      return { ...(newData === null || newData === void 0 ? void 0 : (_newData$value$index5 = newData.value[index]) === null || _newData$value$index5 === void 0 ? void 0 : _newData$value$index5.value),\n        overAction: overAction,\n        clickAction: clickAction,\n        inline: inline\n      };\n    }\n  };\n\n  const DuplicateSound = async index => {\n    let newData = { ...data\n    };\n\n    if (newData.value) {\n      var _newData$value$index6;\n\n      let New = newData === null || newData === void 0 ? void 0 : (_newData$value$index6 = newData.value[index]) === null || _newData$value$index6 === void 0 ? void 0 : _newData$value$index6.value;\n      let res = await DuplicateNewId(newData === null || newData === void 0 ? void 0 : newData.value[index], index);\n      return { ...New,\n        image: res === null || res === void 0 ? void 0 : res.thumbnail,\n        media: { ...(res === null || res === void 0 ? void 0 : res[0]),\n          marker: res === null || res === void 0 ? void 0 : res.marker,\n          subtitle: res === null || res === void 0 ? void 0 : res.subtitle\n        }\n      };\n    }\n  };\n\n  const handleDuplicateClick = async index => {\n    let newData = { ...data\n    };\n\n    if (newData.value && (index || index === 0)) {\n      const item = newData === null || newData === void 0 ? void 0 : newData.value[index];\n      const newItem = { ...item,\n        id: createUUID(),\n        isEdited: true\n      };\n      newData.value = addObject(newData === null || newData === void 0 ? void 0 : newData.value, newItem, index + 1);\n\n      if (element && (index || index === 0) && newData.value) {\n        var _val$value, _val$value$inline, _val$value2, _val$value2$clickActi, _val$value2$clickActi2, _val$value2$clickActi3, _val$value3, _val$value3$overActio, _val$value3$overActio2, _val$value3$overActio3, _val$value4, _val$value4$media, _val$value5, _val$value5$image, _val$value6, _val$value6$media, _val$value6$media$sub, _val$value7, _val$value7$media, _val$value7$media$mar;\n\n        let val = newData === null || newData === void 0 ? void 0 : newData.value[index];\n\n        if (val.type === ComponentTypes.Media) {\n          let res = await DuplicateMedia(val, index);\n          newData.value[index + 1].value = res;\n        } else if (val.type === ComponentTypes.Button && (((_val$value = val.value) === null || _val$value === void 0 ? void 0 : (_val$value$inline = _val$value.inline) === null || _val$value$inline === void 0 ? void 0 : _val$value$inline.id) || ((_val$value2 = val.value) === null || _val$value2 === void 0 ? void 0 : (_val$value2$clickActi = _val$value2.clickAction) === null || _val$value2$clickActi === void 0 ? void 0 : (_val$value2$clickActi2 = _val$value2$clickActi.value) === null || _val$value2$clickActi2 === void 0 ? void 0 : (_val$value2$clickActi3 = _val$value2$clickActi2.background) === null || _val$value2$clickActi3 === void 0 ? void 0 : _val$value2$clickActi3.id) || ((_val$value3 = val.value) === null || _val$value3 === void 0 ? void 0 : (_val$value3$overActio = _val$value3.overAction) === null || _val$value3$overActio === void 0 ? void 0 : (_val$value3$overActio2 = _val$value3$overActio.value) === null || _val$value3$overActio2 === void 0 ? void 0 : (_val$value3$overActio3 = _val$value3$overActio2.background) === null || _val$value3$overActio3 === void 0 ? void 0 : _val$value3$overActio3.id))) {\n          let res = await DuplicateButton(index);\n          newData.value[index + 1].value = res;\n        } else if (val.type === ComponentTypes.Sound && ((val === null || val === void 0 ? void 0 : (_val$value4 = val.value) === null || _val$value4 === void 0 ? void 0 : (_val$value4$media = _val$value4.media) === null || _val$value4$media === void 0 ? void 0 : _val$value4$media.id) || (val === null || val === void 0 ? void 0 : (_val$value5 = val.value) === null || _val$value5 === void 0 ? void 0 : (_val$value5$image = _val$value5.image) === null || _val$value5$image === void 0 ? void 0 : _val$value5$image.id) || (val === null || val === void 0 ? void 0 : (_val$value6 = val.value) === null || _val$value6 === void 0 ? void 0 : (_val$value6$media = _val$value6.media) === null || _val$value6$media === void 0 ? void 0 : (_val$value6$media$sub = _val$value6$media.subtitle) === null || _val$value6$media$sub === void 0 ? void 0 : _val$value6$media$sub.id) || (val === null || val === void 0 ? void 0 : (_val$value7 = val.value) === null || _val$value7 === void 0 ? void 0 : (_val$value7$media = _val$value7.media) === null || _val$value7$media === void 0 ? void 0 : (_val$value7$media$mar = _val$value7$media.marker) === null || _val$value7$media$mar === void 0 ? void 0 : _val$value7$media$mar.id))) {\n          let res = await DuplicateSound(index);\n          newData.value[index + 1].value = res;\n        }\n      }\n    }\n\n    updateChange(newData);\n  };\n\n  const renderList = () => {\n    return /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef,\n      className: \"repeater-list\"\n    }, provided.droppableProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }), value.map((component, index) => {\n      if (component.id) {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          key: component.id,\n          draggableId: component.id,\n          index: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 21\n          }\n        }, (providedItem, snapshot) => {\n          const cardProps = {\n            ref: providedItem.innerRef,\n            key: component.id,\n            isSelected: selectedComponent === component,\n            isDeletable,\n            isMediaDuplicate,\n            drag: providedItem.dragHandleProps,\n            ...providedItem.draggableProps,\n            style: getDraggableStyle(providedItem.draggableProps.style),\n            className: clsx(allowComponent, {\n              dragging: snapshot.isDragging\n            }),\n            onClick: handleClick,\n            onDelete: handleDeleteClick,\n            index: index,\n            onDuplicate: handleDuplicateClick\n          };\n\n          if (isMediaComponent(component)) {\n            return /*#__PURE__*/React.createElement(BlmMediaCard, Object.assign({\n              data: component,\n              order: startIndex + index + 1\n            }, cardProps, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 29\n              }\n            }));\n          } else if (isButtonComponent(component)) {\n            return /*#__PURE__*/React.createElement(BlmButtonCard, Object.assign({\n              data: component\n            }, cardProps, {\n              type: StyleListTypes.Button,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 29\n              }\n            }));\n          } else if (isSoundComponent(component)) {\n            return /*#__PURE__*/React.createElement(BlmSoundCard, Object.assign({\n              data: component\n            }, cardProps, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 34\n              }\n            }));\n          } else {\n            return /*#__PURE__*/React.createElement(Fragment, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 34\n              }\n            });\n          }\n        });\n      } else {\n        return null;\n      }\n    }), provided.placeholder)));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"repeater-list-wrapper\", allowComponent, {\n      \"has-children\": len > 0,\n      \"has-options\": options\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 5\n    }\n  }, renderList(), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"repeater-add-btn\", {\n      disabled: !isAddable\n    }),\n    onClick: handleAddClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"repeater-edit-btn\",\n    onClick: handleEditClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }\n  }), open && /*#__PURE__*/React.createElement(BlmRepeaterOptionsEditor, {\n    data: data,\n    onSave: handleEditorSave,\n    onClose: handleEditorClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default BlmRepeaterList;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/repository/repeater-list/BlmRepeaterList.tsx"],"names":["React","Fragment","useState","clsx","DragDropContext","Draggable","Droppable","reorderArray","isButtonComponent","isMediaComponent","isSoundComponent","isMediaRepeater","isButtonRepeater","isSoundRepeater","createUUID","addObject","mediaDuplicateID","buttonDuplicateID","soundDuplicateID","createButtonComponent","createMediaComponent","createSoundComponent","updateCreatedMediaComponet","useContentEditorCtx","updateRepeaterComponent","BlmMediaCard","BlmButtonCard","BlmSoundCard","ComponentTypes","MediaVariants","StyleListTypes","BlmRepeaterOptionsEditor","updateCreatedButtonComponent","getDraggableStyle","draggableStyle","userSelect","BlmRepeaterList","props","data","startIndex","duplicateImageTemplate","allowComponent","value","minimum","maximum","options","component","selectedComponent","selectComponent","dispatch","element","open","setOpen","len","length","isAddable","isDeletable","isMediaDuplicate","updateChange","newData","handleClick","handleAddClick","event","handleEditClick","handleDeleteClick","deleted","filter","id","handleDragEnd","result","destination","source","index","handleEditorSave","handleEditorClose","DuplicateNewId","val","type","then","res","payload","media","DuplicateMedia","variant","Button","values","Image","FlipCard","New","recto","icon","recto_icon","verso","verso_icon","clickAction","action","overAction","DuplicateButton","inline","DuplicateSound","image","thumbnail","marker","subtitle","handleDuplicateClick","item","newItem","isEdited","Media","background","Sound","renderList","provided","innerRef","droppableProps","map","providedItem","snapshot","cardProps","ref","key","isSelected","drag","dragHandleProps","draggableProps","style","className","dragging","isDragging","onClick","onDelete","onDuplicate","placeholder","disabled"],"mappings":"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","sourcesContent":["import React, { Fragment, FunctionComponent, MouseEvent, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { DragDropContext, Draggable, Droppable, DropResult } from \"react-beautiful-dnd\";\r\n\r\nimport { ButtonComponent, MediaComponent, RepeaterComponent, SoundComponent } from \"types\";\r\nimport {\r\n  reorderArray,\r\n  isButtonComponent,\r\n  isMediaComponent,\r\n  isSoundComponent,\r\n  isMediaRepeater,\r\n  isButtonRepeater,\r\n  isSoundRepeater,\r\n  createUUID,\r\n  addObject,\r\n  mediaDuplicateID,\r\n  buttonDuplicateID,\r\n  soundDuplicateID,\r\n} from \"utils\";\r\nimport {\r\n  createButtonComponent,\r\n  createMediaComponent,\r\n  createSoundComponent,\r\n  updateCreatedMediaComponet,\r\n} from \"template-builders\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { updateRepeaterComponent } from \"components/content-editor/reducers\";\r\nimport BlmMediaCard from \"../media-card\";\r\nimport BlmButtonCard from \"../button-card\";\r\nimport BlmSoundCard from \"../sound-card\";\r\nimport { ComponentTypes, MediaVariants, StyleListTypes } from \"editor-constants\";\r\nimport BlmRepeaterOptionsEditor from \"./options\";\r\nimport \"./styles.scss\";\r\nimport { updateCreatedButtonComponent } from \"template-builders/core\";\r\nimport { ContainerProps } from \"./container\";\r\n\r\nexport interface CompProps {\r\n  data: RepeaterComponent;\r\n  startIndex: number;\r\n}\r\n\r\nconst getDraggableStyle = (draggableStyle: any) => ({\r\n  userSelect: \"none\",\r\n  ...draggableStyle,\r\n});\r\n\r\nconst BlmRepeaterList: FunctionComponent<CompProps & ContainerProps> = (props) => {\r\n  const { data, startIndex, duplicateImageTemplate } = props;\r\n  const { allowComponent, value = [], minimum, maximum, options } = data;\r\n    const {\r\n    component: selectedComponent,\r\n    selectComponent,\r\n    dispatch,\r\n    element,\r\n  } = useContentEditorCtx();\r\n  const [open, setOpen] = useState(false);\r\n  const len = value.length;\r\n  const isAddable = len < maximum;\r\n  const isDeletable = len > minimum;\r\n  const isMediaDuplicate = minimum === 1;\r\n  const updateChange = (newData: RepeaterComponent) => {\r\n    if (dispatch) {\r\n      dispatch(updateRepeaterComponent(newData));\r\n    }\r\n  };\r\n\r\n  const handleClick = (data: MediaComponent | ButtonComponent | SoundComponent) => {\r\n    if (selectComponent) {\r\n      selectComponent(data);\r\n    }\r\n  };\r\n\r\n  const handleAddClick = (event: MouseEvent) => {\r\n    if (!isAddable) {\r\n      return;\r\n    }\r\n\r\n    const newData = { ...data };\r\n\r\n    if (isMediaRepeater(data)) {\r\n      const component = createMediaComponent(data);\r\n      updateCreatedMediaComponet(data, component);\r\n      newData.value = [...value, component] as MediaComponent[];\r\n    } else if (isButtonRepeater(data)) {\r\n      const component = createButtonComponent(data);\r\n      updateCreatedButtonComponent(data, component);\r\n      newData.value = [...value, component] as ButtonComponent[];\r\n    } else if (isSoundRepeater(data)) {\r\n      const component = createSoundComponent(data);\r\n\r\n      newData.value = [...value, component] as SoundComponent[];\r\n    }\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleEditClick = () => {\r\n    if (options) {\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = (deleted: MediaComponent | ButtonComponent | SoundComponent) => {\r\n    const newData = { ...data };\r\n\r\n    newData.value = value.filter((component) => component.id !== deleted.id);\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleDragEnd = (result: DropResult) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const newData = {\r\n      ...data,\r\n      value: reorderArray(value, result.source.index, result.destination.index),\r\n    };\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleEditorSave = (newData: RepeaterComponent) => {\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleEditorClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const DuplicateNewId = async (val: any, index: number) => {\r\n    if (element && (index || index === 0) && val) {\r\n      let value;\r\n      var result;\r\n      if (val.type === \"media\") {\r\n        result = mediaDuplicateID(val, element);\r\n      } else if (val.type === \"button\") {\r\n        result = buttonDuplicateID(val, element);\r\n      } else if (val.type === \"audio\") {\r\n        result = soundDuplicateID(val, element);\r\n      }\r\n      await duplicateImageTemplate(result).then((res) => {\r\n        value = { ...res.payload?.media };\r\n      });\r\n      return value;\r\n    }\r\n  };\r\n\r\n  const DuplicateMedia = async (val: any, index: number) => {\r\n    let newData = { ...data };\r\n    if (newData.value) {\r\n      if (val && val.variant === MediaVariants.Button) {\r\n          let res: any = await DuplicateNewId(val, index);\r\n          let values = {\r\n            ...res,\r\n          };\r\n          return { ...newData?.value[index]?.value, ...values };\r\n      } else if (val && val.variant === MediaVariants.Image) {\r\n          let res: any = await DuplicateNewId(val, index);\r\n          let values = {\r\n            ...newData.value[index].value,\r\n            media: res[0],\r\n          };\r\n          return { ...values };\r\n      } else if (val && val.variant === MediaVariants.FlipCard) {\r\n          let res: any = await DuplicateNewId(val, index);\r\n          let New: any = newData?.value[index]?.value;\r\n          let recto = { ...New?.recto, ...res?.recto, icon: res?.recto_icon };\r\n          let verso = { ...New?.verso, ...res?.verso, icon: res?.verso_icon };\r\n          let clickAction = {\r\n            action: res?.clickAction?.action,\r\n            value: { ...New?.clickAction?.value, ...res?.clickAction?.value },\r\n          };\r\n          let overAction = {\r\n            action: res?.overAction?.action,\r\n            value: { ...New?.overAction?.value, ...res?.overAction?.value },\r\n          };\r\n\r\n          return {\r\n            ...newData?.value[index]?.value,\r\n            overAction: overAction,\r\n            clickAction: clickAction,\r\n            recto: recto,\r\n            verso: verso,\r\n          };\r\n      }\r\n    }\r\n  };\r\n\r\n  const DuplicateButton = async (index: number) => {\r\n    let newData = { ...data };\r\n    if (newData.value) {\r\n      let res: any = await DuplicateNewId(newData?.value[index], index);\r\n      let New: any = newData?.value[index]?.value;\r\n\r\n      let clickAction = {\r\n        action: res?.clickAction?.action,\r\n        value: { ...New?.clickAction?.value, ...res?.clickAction?.value },\r\n      };\r\n      let overAction = {\r\n        action: res?.overAction?.action,\r\n        value: { ...New?.overAction?.value, ...res?.overAction?.value },\r\n      };\r\n      let inline = {\r\n        ...New?.inline,\r\n        ...res?.icon,\r\n      };\r\n\r\n      return {\r\n        ...newData?.value[index]?.value,\r\n        overAction: overAction,\r\n        clickAction: clickAction,\r\n        inline: inline,\r\n      };\r\n    }\r\n  };\r\n\r\n  const DuplicateSound = async (index: number) => {\r\n    let newData = { ...data };\r\n\r\n    if (newData.value) {\r\n      let New = newData?.value[index]?.value;\r\n      let res: any = await DuplicateNewId(newData?.value[index], index);\r\n\r\n      return {\r\n        ...New,\r\n        image: res?.thumbnail,\r\n        media: {\r\n          ...res?.[0],\r\n          marker: res?.marker,\r\n          subtitle: res?.subtitle,\r\n        },\r\n      };\r\n    }\r\n  };\r\n\r\n  const handleDuplicateClick = async (index: number) => {\r\n    let newData = { ...data };\r\n    if (newData.value && (index || index === 0)) {\r\n      const item = newData?.value[index];\r\n      const newItem = { ...item, id: createUUID(), isEdited: true };\r\n      newData.value = addObject(newData?.value, newItem, index + 1);\r\n      if (element && (index || index === 0) && newData.value) {\r\n        let val: any = newData?.value[index];\r\n        if (val.type === ComponentTypes.Media) {\r\n          let res = await DuplicateMedia(val, index);\r\n          newData.value[index + 1].value = res;\r\n        } else if (\r\n          val.type === ComponentTypes.Button &&\r\n          (val.value?.inline?.id ||\r\n            val.value?.clickAction?.value?.background?.id ||\r\n            val.value?.overAction?.value?.background?.id)\r\n        ) {\r\n          let res = await DuplicateButton(index);\r\n          newData.value[index + 1].value = res;\r\n        } else if (\r\n          val.type === ComponentTypes.Sound &&\r\n          (val?.value?.media?.id ||\r\n            val?.value?.image?.id ||\r\n            val?.value?.media?.subtitle?.id ||\r\n            val?.value?.media?.marker?.id)\r\n        ) {\r\n          let res = await DuplicateSound(index);\r\n          newData.value[index + 1].value = res;\r\n        }\r\n      }\r\n    }\r\n    updateChange(newData);\r\n  };\r\n\r\n  const renderList = () => {\r\n    return (\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided) => (\r\n            <div ref={provided.innerRef} className=\"repeater-list\" {...provided.droppableProps}>\r\n              {value.map((component, index) => {\r\n                if (component.id) {\r\n                  return (\r\n                    <Draggable key={component.id} draggableId={component.id} index={index}>\r\n                      {(providedItem, snapshot) => {\r\n                        const cardProps = {\r\n                          ref: providedItem.innerRef,\r\n                          key: component.id,\r\n                          isSelected: selectedComponent === component,\r\n                          isDeletable,\r\n                          isMediaDuplicate,\r\n                          drag: providedItem.dragHandleProps,\r\n                          ...providedItem.draggableProps,\r\n                          style: getDraggableStyle(providedItem.draggableProps.style),\r\n                          className: clsx(allowComponent, {\r\n                            dragging: snapshot.isDragging,\r\n                          }),\r\n                          onClick: handleClick,\r\n                          onDelete: handleDeleteClick,\r\n                          index: index,\r\n                          onDuplicate: handleDuplicateClick,\r\n                        };\r\n\r\n                        if (isMediaComponent(component)) {\r\n                          return (\r\n                            <BlmMediaCard\r\n                              data={component}\r\n                              order={startIndex + index + 1}\r\n                              {...cardProps}\r\n                            />\r\n                          );\r\n                        } else if (isButtonComponent(component)) {\r\n                          return (\r\n                            <BlmButtonCard\r\n                              data={component}\r\n                              {...cardProps}\r\n                              type={StyleListTypes.Button}\r\n                            />\r\n                          );\r\n                        } else if (isSoundComponent(component)) {\r\n                          return <BlmSoundCard data={component} {...cardProps} />;\r\n                        } else {\r\n                          return <Fragment />;\r\n                        }\r\n                      }}\r\n                    </Draggable>\r\n                  );\r\n                } else {\r\n                  return null;\r\n                }\r\n              })}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\"repeater-list-wrapper\", allowComponent, {\r\n        \"has-children\": len > 0,\r\n        \"has-options\": options,\r\n      })}\r\n    >\r\n            {renderList()}\r\n      <div\r\n        className={clsx(\"repeater-add-btn\", { disabled: !isAddable })}\r\n        onClick={handleAddClick}\r\n      />\r\n      <div className=\"repeater-edit-btn\" onClick={handleEditClick} />\r\n      {open && (\r\n        <BlmRepeaterOptionsEditor\r\n          data={data}\r\n          onSave={handleEditorSave}\r\n          onClose={handleEditorClose}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlmRepeaterList;\r\n"]},"metadata":{},"sourceType":"module"}