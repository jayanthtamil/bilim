{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\repository\\\\button-card\\\\BlmButtonCard.tsx\";\nimport React, { forwardRef, useMemo } from \"react\";\nimport clsx from \"clsx\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { updateButtonComponent } from \"components/content-editor/reducers\";\nimport { getActionDetails } from \"utils\";\nimport \"./styles.scss\";\n\nconst BlmButtonCard = (props, ref) => {\n  const {\n    index,\n    data,\n    isSelected,\n    isDeletable,\n    styleConfig,\n    drag,\n    className,\n    structure,\n    onClick,\n    onDelete,\n    onDuplicate,\n    ...other\n  } = props;\n  const {\n    value: button\n  } = data;\n  const {\n    style\n  } = button;\n  const {\n    dispatch\n  } = useContentEditorCtx();\n  const {\n    classNames\n  } = styleConfig || {};\n  const currentStyle = classNames && classNames[0];\n  const {\n    value: {\n      title,\n      clickAction\n    }\n  } = data;\n  const [action, params] = useMemo(() => getActionDetails(clickAction, structure), [clickAction, structure]);\n  React.useEffect(() => {\n    if ((style === null || style === void 0 ? void 0 : style.style) === undefined) {\n      const newButton = { ...button\n      };\n      newButton[\"style\"].style = currentStyle;\n      updateChange(newButton);\n    }\n  });\n\n  const updateChange = newButton => {\n    const newData = { ...data,\n      value: newButton\n    };\n\n    if (dispatch) {\n      dispatch(updateButtonComponent(newData));\n    }\n  };\n\n  const handleClick = event => {\n    if (onClick) {\n      onClick(data);\n    }\n  };\n\n  const handleDeleteClick = event => {\n    if (isDeletable && onDelete) {\n      onDelete(data);\n    }\n  };\n\n  const handleDuplicateClick = () => {\n    if (onDuplicate && (index || index === 0)) {\n      onDuplicate(index);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: ref,\n    className: clsx(\"button-card-wrapper\", className, {\n      selected: isSelected,\n      deletable: isDeletable\n    })\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-card-box\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-card-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-card-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, action)), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"button-card-parameters\", {\n      \"show-icon\": action && !params\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, params)), drag && /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"button-card-drag-btn\"\n  }, drag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 18\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-card-delete-btn\",\n    onClick: handleDeleteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-card-duplicate-btn\",\n    onClick: handleDuplicateClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default forwardRef(BlmButtonCard);","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/repository/button-card/BlmButtonCard.tsx"],"names":["React","forwardRef","useMemo","clsx","useContentEditorCtx","updateButtonComponent","getActionDetails","BlmButtonCard","props","ref","index","data","isSelected","isDeletable","styleConfig","drag","className","structure","onClick","onDelete","onDuplicate","other","value","button","style","dispatch","classNames","currentStyle","title","clickAction","action","params","useEffect","undefined","newButton","updateChange","newData","handleClick","event","handleDeleteClick","handleDuplicateClick","selected","deletable"],"mappings":"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","sourcesContent":["import React, {\r\n  forwardRef,\r\n  ForwardRefRenderFunction,\r\n  HTMLAttributes,\r\n  MouseEvent,\r\n  useMemo,\r\n} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { DraggableProvidedDragHandleProps } from \"react-beautiful-dnd\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { updateButtonComponent } from \"components/content-editor/reducers\";\r\nimport { ButtonComponent, ButtonValue } from \"types\";\r\nimport { getActionDetails } from \"utils\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends Omit<HTMLAttributes<HTMLDivElement>, \"onClick\">, ContainerProps {\r\n  data: ButtonComponent;\r\n  isSelected?: boolean;\r\n  drag?: DraggableProvidedDragHandleProps;\r\n  isDeletable?: boolean;\r\n  onClick?: (data: ButtonComponent) => void;\r\n  onDelete?: (data: ButtonComponent) => void;\r\n  onDuplicate?: (index: number) => void;\r\n  index?: number;\r\n}\r\n\r\nconst BlmButtonCard: ForwardRefRenderFunction<HTMLDivElement, CompProps> = (props, ref) => {\r\n  const {\r\n    index,\r\n    data,\r\n    isSelected,\r\n    isDeletable,\r\n    styleConfig,\r\n    drag,\r\n    className,\r\n    structure,\r\n    onClick,\r\n    onDelete,\r\n    onDuplicate,\r\n    ...other\r\n  } = props;\r\n  const { value: button } = data;\r\n  const { style } = button;\r\n  const { dispatch } = useContentEditorCtx();\r\n  const { classNames } = styleConfig || {};\r\n  const currentStyle = classNames && classNames[0];\r\n\r\n  const {\r\n    value: { title, clickAction },\r\n  } = data;\r\n  const [action, params] = useMemo(\r\n    () => getActionDetails(clickAction, structure),\r\n    [clickAction, structure]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (style?.style === undefined) {\r\n      const newButton = { ...button };\r\n      newButton[\"style\"].style = currentStyle;\r\n      updateChange(newButton);\r\n    }\r\n  });\r\n\r\n  const updateChange = (newButton: ButtonValue) => {\r\n    const newData = { ...data, value: newButton };\r\n\r\n    if (dispatch) {\r\n      dispatch(updateButtonComponent(newData));\r\n    }\r\n  };\r\n\r\n  const handleClick = (event: MouseEvent) => {\r\n    if (onClick) {\r\n      onClick(data);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = (event: MouseEvent) => {\r\n    if (isDeletable && onDelete) {\r\n      onDelete(data);\r\n    }\r\n  };\r\n\r\n  const handleDuplicateClick = () => {\r\n    if (onDuplicate && (index || index === 0)) {\r\n      onDuplicate(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={clsx(\"button-card-wrapper\", className, {\r\n        selected: isSelected,\r\n        deletable: isDeletable,\r\n      })}\r\n      {...other}\r\n    >\r\n      <div className=\"button-card-box\" onClick={handleClick}>\r\n        <div className=\"button-card-lbl\">\r\n          <span>{title}</span>\r\n        </div>\r\n        <div className=\"button-card-action\">\r\n          <span>{action}</span>\r\n        </div>\r\n        <div\r\n          className={clsx(\"button-card-parameters\", {\r\n            \"show-icon\": action && !params,\r\n          })}\r\n        >\r\n          <span>{params}</span>\r\n        </div>\r\n        {drag && <div className=\"button-card-drag-btn\" {...drag} />}\r\n      </div>\r\n      <div>\r\n        <div className=\"button-card-delete-btn\" onClick={handleDeleteClick} />\r\n        <div className=\"button-card-duplicate-btn\" onClick={handleDuplicateClick} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default forwardRef(BlmButtonCard);\r\n"]},"metadata":{},"sourceType":"module"}