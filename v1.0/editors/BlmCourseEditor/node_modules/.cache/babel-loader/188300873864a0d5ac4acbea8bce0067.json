{"ast":null,"code":"import { ComponentAction, ComponentStyle } from \"types\";\nimport { ComponentActionTypes, GotoActionTypes, StyleListTypes } from \"editor-constants\";\nimport { toBoolean, toJSONObject } from \"utils\";\nimport { createTint, getBLMElement, getHTMLElement } from \"../../core\";\nimport { GlTemplateBuilderStore } from \"../../store\";\nexport function createComponentStyle(element, type, hasTint = false, tintSelector) {\n  const style = new ComponentStyle();\n  style.style = getComponentStyle(element, type);\n\n  if (hasTint) {\n    const tint = tintSelector ? getHTMLElement(element, tintSelector) : element;\n\n    if (tint) {\n      style.tint = createTint(tint.style, \"--blm_tint_color\", \"--blm_tint_opacity\");\n      style.bgTint = createTint(tint.style, \"--blm_undertext_color\", \"--blm_undertext_opacity\");\n      style.tintOut = createTint(tint.style, \"--tintout\", \"--opacityout\");\n      style.tintOver = createTint(tint.style, \"--tintover\", \"--opacityover\");\n    }\n  }\n\n  style.hasDarkOut = element.classList.contains(\"darkout\");\n  style.hasDarkOver = element.classList.contains(\"darkover\");\n  style.isShadow = element.classList.contains(\"shadow\") || element.classList.contains(\"blmshadow\");\n\n  if (type === \"media-button\" || type === \"media-button-summary\") {\n    style.hasDarkOut = element.classList.contains(\"light\");\n    style.hasDarkOver = element.classList.contains(\"lightover\");\n  }\n\n  if (type !== \"media-button\" && type !== \"media-button-summary\") {\n    style.hasLight = element.classList.contains(\"light\");\n  }\n\n  return style;\n}\nexport function getComponentStyle(element, type) {\n  var _styles$type;\n\n  const classList = element.classList;\n  const styles = GlTemplateBuilderStore.getStyles();\n  const classNames = styles && ((_styles$type = styles[type]) === null || _styles$type === void 0 ? void 0 : _styles$type.classNames);\n  return Array.from(classList).find(cls => classNames === null || classNames === void 0 ? void 0 : classNames.includes(cls));\n}\nexport function createAction(type, attr, wrapper) {\n  const result = new ComponentAction();\n\n  if (attr) {\n    const {\n      action\n    } = attr;\n    result.action = action;\n\n    if (action === ComponentActionTypes.OpenSimpleConent) {\n      const {\n        uid,\n        target\n      } = attr;\n      let {\n        display\n      } = attr;\n      let option = target;\n\n      if (target && target.startsWith(\"target\")) {\n        const arr = /(\\d+)/.exec(target);\n        option = \"target\";\n        display = arr ? arr[0] : undefined;\n      }\n\n      result.value = {\n        simpleContentId: uid,\n        option,\n        display\n      };\n    } else if (action === ComponentActionTypes.OpenDocument) {\n      const {\n        document\n      } = attr;\n      result.value = {\n        document\n      };\n    } else if (action === ComponentActionTypes.OpenLink) {\n      const {\n        url\n      } = attr;\n      result.value = {\n        url\n      };\n    } else if (action === ComponentActionTypes.MailTo) {\n      const {\n        email\n      } = attr;\n      result.value = {\n        email\n      };\n    } else if (action === ComponentActionTypes.ReplaceBackground) {\n      const {\n        background,\n        restore\n      } = attr;\n      result.value = {\n        background,\n        restore: restore\n      };\n    } else if (action === ComponentActionTypes.ReplaceTarget) {\n      const {\n        target,\n        uid,\n        restore\n      } = attr;\n      result.value = {\n        replaceTargetId: target,\n        replaceId: uid,\n        restore: restore\n      };\n    } else if (action === ComponentActionTypes.Navigation) {\n      let {\n        option\n      } = attr;\n      let gotoId;\n\n      if (option && option.startsWith(GotoActionTypes.PageScreen)) {\n        const arr = /(\\d+)/.exec(option);\n        option = GotoActionTypes.PageScreen;\n        gotoId = arr ? arr[0] : undefined;\n      }\n\n      result.value = {\n        action: option,\n        gotoId\n      };\n    } else if (action === ComponentActionTypes.Goto) {\n      let {\n        option\n      } = attr;\n      let gotoId;\n\n      if (option && option.startsWith(GotoActionTypes.PageScreen)) {\n        const arr = /(\\d+)/.exec(option);\n        option = GotoActionTypes.PageScreen;\n        gotoId = arr ? arr[0] : undefined;\n      }\n\n      result.value = {\n        action: option,\n        gotoId\n      };\n    } else if (action === ComponentActionTypes.Tooltip) {\n      var _ref, _getHTMLElement;\n\n      const {\n        style\n      } = attr;\n      result.value = {\n        style,\n        label: (_ref = wrapper && ((_getHTMLElement = getHTMLElement(wrapper, type === \"click\" ? \".tooltipclick span\" : \".tooltipover span\")) === null || _getHTMLElement === void 0 ? void 0 : _getHTMLElement.innerHTML)) !== null && _ref !== void 0 ? _ref : \"\"\n      };\n    } else if (action === ComponentActionTypes.Popover && wrapper) {\n      const {\n        \"blm-popover-id\": popoverId\n      } = attr;\n\n      if (popoverId) {\n        const element = getHTMLElement(wrapper, `[blm-popover-id='${popoverId}']`);\n\n        if (element) {\n          var _model$editorOptions, _getHTMLElement2, _getHTMLElement3, _getHTMLElement4;\n\n          const model = getBLMElement(element);\n          const media = ((_model$editorOptions = model.editorOptions) === null || _model$editorOptions === void 0 ? void 0 : _model$editorOptions.media) || undefined;\n          const title = ((_getHTMLElement2 = getHTMLElement(element, \".hotspot_title\")) === null || _getHTMLElement2 === void 0 ? void 0 : _getHTMLElement2.innerHTML) || \"\";\n          const description = ((_getHTMLElement3 = getHTMLElement(element, \".hotspot_description\")) === null || _getHTMLElement3 === void 0 ? void 0 : _getHTMLElement3.innerHTML) || \"\";\n          const style = getComponentStyle(element, StyleListTypes.MediaHotspotPopover);\n          const position = element.getAttribute(\"blm-position\") || undefined;\n          const button = getHTMLElement(element, \".hotspot_action\");\n          const checked = toBoolean(button === null || button === void 0 ? void 0 : button.getAttribute(\"blm-checked\"));\n          const label = button && ((_getHTMLElement4 = getHTMLElement(button, \".hotspot_label\")) === null || _getHTMLElement4 === void 0 ? void 0 : _getHTMLElement4.innerHTML) || \"\";\n          const btnAction = button && toJSONObject(button.getAttribute(\"blm-action\"));\n          result.value = {\n            media,\n            title,\n            description,\n            style,\n            position,\n            button: {\n              checked,\n              label,\n              action: createAction(\"click\", btnAction === null || btnAction === void 0 ? void 0 : btnAction.onClick)\n            }\n          };\n        }\n      }\n    } else if (action === ComponentActionTypes.MediaLayer) {\n      const {\n        layer\n      } = attr;\n      result.value = {\n        layer\n      };\n    } else if (action === ComponentActionTypes.Goto360) {\n      const {\n        gotoId\n      } = attr;\n      result.value = {\n        gotoId\n      };\n    } else if (action === ComponentActionTypes.CloseOrExit) {\n      const {\n        option\n      } = attr;\n      result.value = {\n        action: option\n      };\n    } else if (action === ComponentActionTypes.VideoMarker) {\n      const {\n        option\n      } = attr;\n      const options = option.split(\"-\");\n      result.value = {\n        video: options[0],\n        marker: options[1]\n      };\n    } else if (action === ComponentActionTypes.AudioMarker) {\n      const {\n        option\n      } = attr;\n      const options = option.split(\"-\");\n      result.value = {\n        sound: options[0],\n        marker: options[1]\n      };\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/model/component/common.ts"],"names":["ComponentAction","ComponentStyle","ComponentActionTypes","GotoActionTypes","StyleListTypes","toBoolean","toJSONObject","createTint","getBLMElement","getHTMLElement","GlTemplateBuilderStore","createComponentStyle","element","type","hasTint","tintSelector","style","getComponentStyle","tint","bgTint","tintOut","tintOver","hasDarkOut","classList","contains","hasDarkOver","isShadow","hasLight","styles","getStyles","classNames","Array","from","find","cls","includes","createAction","attr","wrapper","result","action","OpenSimpleConent","uid","target","display","option","startsWith","arr","exec","undefined","value","simpleContentId","OpenDocument","document","OpenLink","url","MailTo","email","ReplaceBackground","background","restore","ReplaceTarget","replaceTargetId","replaceId","Navigation","gotoId","PageScreen","Goto","Tooltip","label","innerHTML","Popover","popoverId","model","media","editorOptions","title","description","MediaHotspotPopover","position","getAttribute","button","checked","btnAction","onClick","MediaLayer","layer","Goto360","CloseOrExit","VideoMarker","options","split","video","marker","AudioMarker","sound"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAyE,OAAzE;AACA,SAASC,oBAAT,EAA+BC,eAA/B,EAA2DC,cAA3D,QAAiF,kBAAjF;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,OAAxC;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,cAApC,QAA0D,YAA1D;AACA,SAASC,sBAAT,QAAuC,aAAvC;AAEA,OAAO,SAASC,oBAAT,CACLC,OADK,EAELC,IAFK,EAGLC,OAAO,GAAG,KAHL,EAILC,YAJK,EAKL;AACA,QAAMC,KAAK,GAAG,IAAIf,cAAJ,EAAd;AAEAe,EAAAA,KAAK,CAACA,KAAN,GAAcC,iBAAiB,CAACL,OAAD,EAAUC,IAAV,CAA/B;;AAEA,MAAIC,OAAJ,EAAa;AACX,UAAMI,IAAI,GAAGH,YAAY,GAAGN,cAAc,CAACG,OAAD,EAAUG,YAAV,CAAjB,GAA2CH,OAApE;;AAEA,QAAIM,IAAJ,EAAU;AACRF,MAAAA,KAAK,CAACE,IAAN,GAAaX,UAAU,CAACW,IAAI,CAACF,KAAN,EAAa,kBAAb,EAAiC,oBAAjC,CAAvB;AACAA,MAAAA,KAAK,CAACG,MAAN,GAAeZ,UAAU,CAACW,IAAI,CAACF,KAAN,EAAa,uBAAb,EAAsC,yBAAtC,CAAzB;AACAA,MAAAA,KAAK,CAACI,OAAN,GAAgBb,UAAU,CAACW,IAAI,CAACF,KAAN,EAAa,WAAb,EAA0B,cAA1B,CAA1B;AACAA,MAAAA,KAAK,CAACK,QAAN,GAAiBd,UAAU,CAACW,IAAI,CAACF,KAAN,EAAa,YAAb,EAA2B,eAA3B,CAA3B;AACD;AACF;;AAEDA,EAAAA,KAAK,CAACM,UAAN,GAAmBV,OAAO,CAACW,SAAR,CAAkBC,QAAlB,CAA2B,SAA3B,CAAnB;AACAR,EAAAA,KAAK,CAACS,WAAN,GAAoBb,OAAO,CAACW,SAAR,CAAkBC,QAAlB,CAA2B,UAA3B,CAApB;AACAR,EAAAA,KAAK,CAACU,QAAN,GAAiBd,OAAO,CAACW,SAAR,CAAkBC,QAAlB,CAA2B,QAA3B,KAAwCZ,OAAO,CAACW,SAAR,CAAkBC,QAAlB,CAA2B,WAA3B,CAAzD;;AAEA,MAAIX,IAAI,KAAK,cAAT,IAA2BA,IAAI,KAAK,sBAAxC,EAAgE;AAC9DG,IAAAA,KAAK,CAACM,UAAN,GAAmBV,OAAO,CAACW,SAAR,CAAkBC,QAAlB,CAA2B,OAA3B,CAAnB;AACAR,IAAAA,KAAK,CAACS,WAAN,GAAoBb,OAAO,CAACW,SAAR,CAAkBC,QAAlB,CAA2B,WAA3B,CAApB;AACD;;AACD,MAAIX,IAAI,KAAK,cAAT,IAA2BA,IAAI,KAAK,sBAAxC,EAAgE;AAC9DG,IAAAA,KAAK,CAACW,QAAN,GAAiBf,OAAO,CAACW,SAAR,CAAkBC,QAAlB,CAA2B,OAA3B,CAAjB;AACD;;AAED,SAAOR,KAAP;AACD;AAED,OAAO,SAASC,iBAAT,CAA2BL,OAA3B,EAAiDC,IAAjD,EAAuE;AAAA;;AAC5E,QAAMU,SAAS,GAAGX,OAAO,CAACW,SAA1B;AACA,QAAMK,MAAM,GAAGlB,sBAAsB,CAACmB,SAAvB,EAAf;AACA,QAAMC,UAAU,GAAGF,MAAM,qBAAIA,MAAM,CAACf,IAAD,CAAV,iDAAI,aAAciB,UAAlB,CAAzB;AAEA,SAAOC,KAAK,CAACC,IAAN,CAAWT,SAAX,EAAsBU,IAAtB,CAA4BC,GAAD,IAASJ,UAAT,aAASA,UAAT,uBAASA,UAAU,CAAEK,QAAZ,CAAqBD,GAArB,CAApC,CAAP;AACD;AAED,OAAO,SAASE,YAAT,CAAsBvB,IAAtB,EAA8CwB,IAA9C,EAAmEC,OAAnE,EAA0F;AAC/F,QAAMC,MAAM,GAAG,IAAIvC,eAAJ,EAAf;;AAEA,MAAIqC,IAAJ,EAAU;AACR,UAAM;AAAEG,MAAAA;AAAF,QAAaH,IAAnB;AAEAE,IAAAA,MAAM,CAACC,MAAP,GAAgBA,MAAhB;;AAEA,QAAIA,MAAM,KAAKtC,oBAAoB,CAACuC,gBAApC,EAAsD;AACpD,YAAM;AAAEC,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAkBN,IAAxB;AACA,UAAI;AAAEO,QAAAA;AAAF,UAAcP,IAAlB;AACA,UAAIQ,MAAM,GAAGF,MAAb;;AAEA,UAAIA,MAAM,IAAIA,MAAM,CAACG,UAAP,CAAkB,QAAlB,CAAd,EAA2C;AACzC,cAAMC,GAAG,GAAG,QAAQC,IAAR,CAAaL,MAAb,CAAZ;AAEAE,QAAAA,MAAM,GAAG,QAAT;AACAD,QAAAA,OAAO,GAAGG,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAN,GAAYE,SAAzB;AACD;;AAEDV,MAAAA,MAAM,CAACW,KAAP,GAAe;AAAEC,QAAAA,eAAe,EAAET,GAAnB;AAAwBG,QAAAA,MAAxB;AAAgCD,QAAAA;AAAhC,OAAf;AACD,KAbD,MAaO,IAAIJ,MAAM,KAAKtC,oBAAoB,CAACkD,YAApC,EAAkD;AACvD,YAAM;AAAEC,QAAAA;AAAF,UAAehB,IAArB;AAEAE,MAAAA,MAAM,CAACW,KAAP,GAAe;AAAEG,QAAAA;AAAF,OAAf;AACD,KAJM,MAIA,IAAIb,MAAM,KAAKtC,oBAAoB,CAACoD,QAApC,EAA8C;AACnD,YAAM;AAAEC,QAAAA;AAAF,UAAUlB,IAAhB;AAEAE,MAAAA,MAAM,CAACW,KAAP,GAAe;AAAEK,QAAAA;AAAF,OAAf;AACD,KAJM,MAIA,IAAIf,MAAM,KAAKtC,oBAAoB,CAACsD,MAApC,EAA4C;AACjD,YAAM;AAAEC,QAAAA;AAAF,UAAYpB,IAAlB;AAEAE,MAAAA,MAAM,CAACW,KAAP,GAAe;AAAEO,QAAAA;AAAF,OAAf;AACD,KAJM,MAIA,IAAIjB,MAAM,KAAKtC,oBAAoB,CAACwD,iBAApC,EAAuD;AAC5D,YAAM;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAA0BvB,IAAhC;AACAE,MAAAA,MAAM,CAACW,KAAP,GAAe;AAAES,QAAAA,UAAF;AAAcC,QAAAA,OAAO,EAAEA;AAAvB,OAAf;AACD,KAHM,MAGA,IAAIpB,MAAM,KAAKtC,oBAAoB,CAAC2D,aAApC,EAAmD;AACxD,YAAM;AAAElB,QAAAA,MAAF;AAAUD,QAAAA,GAAV;AAAekB,QAAAA;AAAf,UAA2BvB,IAAjC;AACAE,MAAAA,MAAM,CAACW,KAAP,GAAe;AAAEY,QAAAA,eAAe,EAAEnB,MAAnB;AAA2BoB,QAAAA,SAAS,EAAErB,GAAtC;AAA2CkB,QAAAA,OAAO,EAAEA;AAApD,OAAf;AACD,KAHM,MAGA,IAAIpB,MAAM,KAAKtC,oBAAoB,CAAC8D,UAApC,EAAgD;AACrD,UAAI;AAAEnB,QAAAA;AAAF,UAAaR,IAAjB;AACA,UAAI4B,MAAJ;;AAEA,UAAIpB,MAAM,IAAIA,MAAM,CAACC,UAAP,CAAkB3C,eAAe,CAAC+D,UAAlC,CAAd,EAA6D;AAC3D,cAAMnB,GAAG,GAAG,QAAQC,IAAR,CAAaH,MAAb,CAAZ;AAEAA,QAAAA,MAAM,GAAG1C,eAAe,CAAC+D,UAAzB;AACAD,QAAAA,MAAM,GAAGlB,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAN,GAAYE,SAAxB;AACD;;AAEDV,MAAAA,MAAM,CAACW,KAAP,GAAe;AAAEV,QAAAA,MAAM,EAAEK,MAAV;AAAkBoB,QAAAA;AAAlB,OAAf;AACD,KAZM,MAYA,IAAIzB,MAAM,KAAKtC,oBAAoB,CAACiE,IAApC,EAA0C;AAC/C,UAAI;AAAEtB,QAAAA;AAAF,UAAaR,IAAjB;AACA,UAAI4B,MAAJ;;AACA,UAAIpB,MAAM,IAAIA,MAAM,CAACC,UAAP,CAAkB3C,eAAe,CAAC+D,UAAlC,CAAd,EAA6D;AAC3D,cAAMnB,GAAG,GAAG,QAAQC,IAAR,CAAaH,MAAb,CAAZ;AAEAA,QAAAA,MAAM,GAAG1C,eAAe,CAAC+D,UAAzB;AACAD,QAAAA,MAAM,GAAGlB,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAN,GAAYE,SAAxB;AACD;;AAEDV,MAAAA,MAAM,CAACW,KAAP,GAAe;AAAEV,QAAAA,MAAM,EAAEK,MAAV;AAAkBoB,QAAAA;AAAlB,OAAf;AACD,KAXM,MAWA,IAAIzB,MAAM,KAAKtC,oBAAoB,CAACkE,OAApC,EAA6C;AAAA;;AAClD,YAAM;AAAEpD,QAAAA;AAAF,UAAYqB,IAAlB;AAEAE,MAAAA,MAAM,CAACW,KAAP,GAAe;AACblC,QAAAA,KADa;AAEbqD,QAAAA,KAAK,UACF/B,OAAO,wBACN7B,cAAc,CAAC6B,OAAD,EAAUzB,IAAI,KAAK,OAAT,GAAmB,oBAAnB,GAA0C,mBAApD,CADR,oDACN,gBACIyD,SAFE,CADL,uCAIH;AANW,OAAf;AAQD,KAXM,MAWA,IAAI9B,MAAM,KAAKtC,oBAAoB,CAACqE,OAAhC,IAA2CjC,OAA/C,EAAwD;AAC7D,YAAM;AAAE,0BAAkBkC;AAApB,UAAkCnC,IAAxC;;AAEA,UAAImC,SAAJ,EAAe;AACb,cAAM5D,OAAO,GAAGH,cAAc,CAAC6B,OAAD,EAAW,oBAAmBkC,SAAU,IAAxC,CAA9B;;AAEA,YAAI5D,OAAJ,EAAa;AAAA;;AACX,gBAAM6D,KAAK,GAAGjE,aAAa,CAAgCI,OAAhC,CAA3B;AACA,gBAAM8D,KAAK,GAAG,yBAAAD,KAAK,CAACE,aAAN,8EAAqBD,KAArB,KAA8BzB,SAA5C;AACA,gBAAM2B,KAAK,GAAG,qBAAAnE,cAAc,CAACG,OAAD,EAAU,gBAAV,CAAd,sEAA2C0D,SAA3C,KAAwD,EAAtE;AACA,gBAAMO,WAAW,GAAG,qBAAApE,cAAc,CAACG,OAAD,EAAU,sBAAV,CAAd,sEAAiD0D,SAAjD,KAA8D,EAAlF;AACA,gBAAMtD,KAAK,GAAGC,iBAAiB,CAACL,OAAD,EAAUR,cAAc,CAAC0E,mBAAzB,CAA/B;AACA,gBAAMC,QAAQ,GAAInE,OAAO,CAACoE,YAAR,CAAqB,cAArB,CAAD,IAAuD/B,SAAxE;AACA,gBAAMgC,MAAM,GAAGxE,cAAc,CAACG,OAAD,EAAU,iBAAV,CAA7B;AACA,gBAAMsE,OAAO,GAAG7E,SAAS,CAAC4E,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAED,YAAR,CAAqB,aAArB,CAAD,CAAzB;AACA,gBAAMX,KAAK,GAAIY,MAAM,yBAAIxE,cAAc,CAACwE,MAAD,EAAS,gBAAT,CAAlB,qDAAI,iBAA0CX,SAA9C,CAAP,IAAmE,EAAjF;AACA,gBAAMa,SAAS,GACbF,MAAM,IACN3E,YAAY,CAET2E,MAAM,CAACD,YAAP,CAAoB,YAApB,CAFS,CAFd;AAMAzC,UAAAA,MAAM,CAACW,KAAP,GAAe;AACbwB,YAAAA,KADa;AAEbE,YAAAA,KAFa;AAGbC,YAAAA,WAHa;AAIb7D,YAAAA,KAJa;AAKb+D,YAAAA,QALa;AAMbE,YAAAA,MAAM,EAAE;AAAEC,cAAAA,OAAF;AAAWb,cAAAA,KAAX;AAAkB7B,cAAAA,MAAM,EAAEJ,YAAY,CAAC,OAAD,EAAU+C,SAAV,aAAUA,SAAV,uBAAUA,SAAS,CAAEC,OAArB;AAAtC;AANK,WAAf;AAQD;AACF;AACF,KAhCM,MAgCA,IAAI5C,MAAM,KAAKtC,oBAAoB,CAACmF,UAApC,EAAgD;AACrD,YAAM;AAAEC,QAAAA;AAAF,UAAYjD,IAAlB;AAEAE,MAAAA,MAAM,CAACW,KAAP,GAAe;AAAEoC,QAAAA;AAAF,OAAf;AACD,KAJM,MAIA,IAAI9C,MAAM,KAAKtC,oBAAoB,CAACqF,OAApC,EAA6C;AAClD,YAAM;AAAEtB,QAAAA;AAAF,UAAa5B,IAAnB;AAEAE,MAAAA,MAAM,CAACW,KAAP,GAAe;AAAEe,QAAAA;AAAF,OAAf;AACD,KAJM,MAIA,IAAIzB,MAAM,KAAKtC,oBAAoB,CAACsF,WAApC,EAAiD;AACtD,YAAM;AAAE3C,QAAAA;AAAF,UAAaR,IAAnB;AACAE,MAAAA,MAAM,CAACW,KAAP,GAAe;AAAEV,QAAAA,MAAM,EAAEK;AAAV,OAAf;AACD,KAHM,MAGA,IAAIL,MAAM,KAAKtC,oBAAoB,CAACuF,WAApC,EAAiD;AACtD,YAAM;AAAE5C,QAAAA;AAAF,UAAaR,IAAnB;AACA,YAAMqD,OAAO,GAAG7C,MAAM,CAAC8C,KAAP,CAAa,GAAb,CAAhB;AACApD,MAAAA,MAAM,CAACW,KAAP,GAAe;AAAE0C,QAAAA,KAAK,EAAEF,OAAO,CAAC,CAAD,CAAhB;AAAqBG,QAAAA,MAAM,EAAEH,OAAO,CAAC,CAAD;AAApC,OAAf;AACD,KAJM,MAIA,IAAIlD,MAAM,KAAKtC,oBAAoB,CAAC4F,WAApC,EAAiD;AACtD,YAAM;AAAEjD,QAAAA;AAAF,UAAaR,IAAnB;AACA,YAAMqD,OAAO,GAAG7C,MAAM,CAAC8C,KAAP,CAAa,GAAb,CAAhB;AACApD,MAAAA,MAAM,CAACW,KAAP,GAAe;AAAE6C,QAAAA,KAAK,EAAEL,OAAO,CAAC,CAAD,CAAhB;AAAqBG,QAAAA,MAAM,EAAEH,OAAO,CAAC,CAAD;AAApC,OAAf;AACD;AACF;;AAED,SAAOnD,MAAP;AACD","sourcesContent":["import { ComponentAction, ComponentStyle, MediaFile, SimpleObject } from \"types\";\r\nimport { ComponentActionTypes, GotoActionTypes, Positions, StyleListTypes } from \"editor-constants\";\r\nimport { toBoolean, toJSONObject } from \"utils\";\r\nimport { createTint, getBLMElement, getHTMLElement } from \"../../core\";\r\nimport { GlTemplateBuilderStore } from \"../../store\";\r\n\r\nexport function createComponentStyle(\r\n  element: HTMLElement,\r\n  type: StyleListTypes,\r\n  hasTint = false,\r\n  tintSelector?: string\r\n) {\r\n  const style = new ComponentStyle();\r\n\r\n  style.style = getComponentStyle(element, type);\r\n\r\n  if (hasTint) {\r\n    const tint = tintSelector ? getHTMLElement(element, tintSelector) : element;\r\n\r\n    if (tint) {\r\n      style.tint = createTint(tint.style, \"--blm_tint_color\", \"--blm_tint_opacity\");\r\n      style.bgTint = createTint(tint.style, \"--blm_undertext_color\", \"--blm_undertext_opacity\");\r\n      style.tintOut = createTint(tint.style, \"--tintout\", \"--opacityout\");\r\n      style.tintOver = createTint(tint.style, \"--tintover\", \"--opacityover\");\r\n    }\r\n  }\r\n\r\n  style.hasDarkOut = element.classList.contains(\"darkout\");\r\n  style.hasDarkOver = element.classList.contains(\"darkover\");\r\n  style.isShadow = element.classList.contains(\"shadow\") || element.classList.contains(\"blmshadow\");\r\n\r\n  if (type === \"media-button\" || type === \"media-button-summary\") {\r\n    style.hasDarkOut = element.classList.contains(\"light\");\r\n    style.hasDarkOver = element.classList.contains(\"lightover\");\r\n  }\r\n  if (type !== \"media-button\" && type !== \"media-button-summary\") {\r\n    style.hasLight = element.classList.contains(\"light\");\r\n  }\r\n\r\n  return style;\r\n}\r\n\r\nexport function getComponentStyle(element: HTMLElement, type: StyleListTypes) {\r\n  const classList = element.classList;\r\n  const styles = GlTemplateBuilderStore.getStyles();\r\n  const classNames = styles && styles[type]?.classNames;\r\n\r\n  return Array.from(classList).find((cls) => classNames?.includes(cls));\r\n}\r\n\r\nexport function createAction(type: \"click\" | \"over\", attr?: SimpleObject, wrapper?: HTMLElement) {\r\n  const result = new ComponentAction();\r\n\r\n  if (attr) {\r\n    const { action } = attr;\r\n\r\n    result.action = action;\r\n\r\n    if (action === ComponentActionTypes.OpenSimpleConent) {\r\n      const { uid, target } = attr;\r\n      let { display } = attr;\r\n      let option = target;\r\n\r\n      if (target && target.startsWith(\"target\")) {\r\n        const arr = /(\\d+)/.exec(target);\r\n\r\n        option = \"target\";\r\n        display = arr ? arr[0] : undefined;\r\n      }\r\n\r\n      result.value = { simpleContentId: uid, option, display };\r\n    } else if (action === ComponentActionTypes.OpenDocument) {\r\n      const { document } = attr;\r\n\r\n      result.value = { document };\r\n    } else if (action === ComponentActionTypes.OpenLink) {\r\n      const { url } = attr;\r\n\r\n      result.value = { url };\r\n    } else if (action === ComponentActionTypes.MailTo) {\r\n      const { email } = attr;\r\n\r\n      result.value = { email };\r\n    } else if (action === ComponentActionTypes.ReplaceBackground) {\r\n      const { background, restore } = attr;\r\n      result.value = { background, restore: restore };\r\n    } else if (action === ComponentActionTypes.ReplaceTarget) {\r\n      const { target, uid, restore } = attr;\r\n      result.value = { replaceTargetId: target, replaceId: uid, restore: restore };\r\n    } else if (action === ComponentActionTypes.Navigation) {\r\n      let { option } = attr;\r\n      let gotoId;\r\n\r\n      if (option && option.startsWith(GotoActionTypes.PageScreen)) {\r\n        const arr = /(\\d+)/.exec(option);\r\n\r\n        option = GotoActionTypes.PageScreen;\r\n        gotoId = arr ? arr[0] : undefined;\r\n      }\r\n\r\n      result.value = { action: option, gotoId };\r\n    } else if (action === ComponentActionTypes.Goto) {\r\n      let { option } = attr;\r\n      let gotoId;\r\n      if (option && option.startsWith(GotoActionTypes.PageScreen)) {\r\n        const arr = /(\\d+)/.exec(option);\r\n\r\n        option = GotoActionTypes.PageScreen;\r\n        gotoId = arr ? arr[0] : undefined;\r\n      }\r\n\r\n      result.value = { action: option, gotoId };\r\n    } else if (action === ComponentActionTypes.Tooltip) {\r\n      const { style } = attr;\r\n\r\n      result.value = {\r\n        style,\r\n        label:\r\n          (wrapper &&\r\n            getHTMLElement(wrapper, type === \"click\" ? \".tooltipclick span\" : \".tooltipover span\")\r\n              ?.innerHTML) ??\r\n          \"\",\r\n      };\r\n    } else if (action === ComponentActionTypes.Popover && wrapper) {\r\n      const { \"blm-popover-id\": popoverId } = attr;\r\n\r\n      if (popoverId) {\r\n        const element = getHTMLElement(wrapper, `[blm-popover-id='${popoverId}']`);\r\n\r\n        if (element) {\r\n          const model = getBLMElement<object, { media?: MediaFile }>(element);\r\n          const media = model.editorOptions?.media || undefined;\r\n          const title = getHTMLElement(element, \".hotspot_title\")?.innerHTML || \"\";\r\n          const description = getHTMLElement(element, \".hotspot_description\")?.innerHTML || \"\";\r\n          const style = getComponentStyle(element, StyleListTypes.MediaHotspotPopover);\r\n          const position = (element.getAttribute(\"blm-position\") as Positions) || undefined;\r\n          const button = getHTMLElement(element, \".hotspot_action\");\r\n          const checked = toBoolean(button?.getAttribute(\"blm-checked\"));\r\n          const label = (button && getHTMLElement(button, \".hotspot_label\")?.innerHTML) || \"\";\r\n          const btnAction =\r\n            button &&\r\n            toJSONObject<{\r\n              onClick?: SimpleObject;\r\n            }>(button.getAttribute(\"blm-action\"));\r\n\r\n          result.value = {\r\n            media,\r\n            title,\r\n            description,\r\n            style,\r\n            position,\r\n            button: { checked, label, action: createAction(\"click\", btnAction?.onClick) },\r\n          };\r\n        }\r\n      }\r\n    } else if (action === ComponentActionTypes.MediaLayer) {\r\n      const { layer } = attr;\r\n\r\n      result.value = { layer };\r\n    } else if (action === ComponentActionTypes.Goto360) {\r\n      const { gotoId } = attr;\r\n\r\n      result.value = { gotoId };\r\n    } else if (action === ComponentActionTypes.CloseOrExit) {\r\n      const { option } = attr;\r\n      result.value = { action: option };\r\n    } else if (action === ComponentActionTypes.VideoMarker) {\r\n      const { option } = attr;\r\n      const options = option.split(\"-\");\r\n      result.value = { video: options[0], marker: options[1] };\r\n    } else if (action === ComponentActionTypes.AudioMarker) {\r\n      const { option } = attr;\r\n      const options = option.split(\"-\");\r\n      result.value = { sound: options[0], marker: options[1] };\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}