{"ast":null,"code":"import { ClassAttribute, StyleAttribute, BLMElement } from \"types\";\nimport { ComponentTypes } from \"editor-constants\";\nimport { createHTMLElement, isButtonRepeater, isMediaRepeater, isSoundRepeater, toJSONString } from \"utils\";\nimport { getAllHTMLElements, getBLMElement, getHTMLElement, setBLMElement } from \"../../core\";\nimport { setButtonComponent } from \"./button\";\nimport { setMediaComponent } from \"./media\";\nimport { setSoundComponent } from \"./sound\";\nexport function getRepeaterElements(parent) {\n  const elements = getAllHTMLElements(parent, '[blm-component=\"repeater\"]');\n  const result = {\n    mediaEls: [],\n    buttonEls: [],\n    soundEls: []\n  };\n\n  for (const element of elements) {\n    const model = getBLMElement(element);\n    const {\n      options\n    } = model;\n    const {\n      allowcomponent\n    } = options || {};\n\n    if (allowcomponent === ComponentTypes.Media) {\n      result.mediaEls.push(element);\n    } else if (allowcomponent === ComponentTypes.Button) {\n      result.buttonEls.push(element);\n    } else if (allowcomponent === ComponentTypes.Sound) {\n      result.soundEls.push(element);\n    }\n  }\n\n  return result;\n}\nexport function setRepeaterComponent(element, repeater, startId) {\n  const model = createRepeater(repeater);\n  setBLMElement(element, model);\n  setRepeaterHTML(element, repeater, startId);\n}\n\nfunction createRepeater(repeater) {\n  const {\n    value,\n    variables\n  } = repeater;\n  const model = new BLMElement();\n  const classAttr = new ClassAttribute();\n  const styleAttr = new StyleAttribute();\n  const len = (value === null || value === void 0 ? void 0 : value.length) || 0;\n\n  if (isButtonRepeater(repeater)) {\n    classAttr.items = [`button_items_${len}`];\n    classAttr.removables = [/^button_items_(\\d+)$/g];\n  } else {\n    classAttr.items = [`repeater_items_${len}`];\n    classAttr.removables = [/^repeater_items_(\\d+)$/g];\n  }\n\n  for (const key in variables) {\n    styleAttr[key] = variables[key];\n  }\n\n  styleAttr[\"--blm_items\"] = len;\n  model.classAttr = classAttr;\n  model.styleAttr = styleAttr;\n  return model;\n}\n\nfunction setRepeaterHTML(parent, repeater, startId) {\n  const {\n    value\n  } = repeater;\n  const ids = [];\n  const nodes = [];\n  let newNode = null;\n\n  if (isMediaRepeater(repeater)) {\n    newNode = createMediaNode();\n  } else if (isButtonRepeater(repeater)) {\n    newNode = createButtonNode(parent, repeater.duplicate);\n  } else if (isSoundRepeater(repeater)) {\n    newNode = createSoundNode();\n  }\n\n  while (parent.firstChild) {\n    const child = parent.removeChild(parent.firstChild);\n\n    if (child.nodeType === Node.ELEMENT_NODE) {\n      ids.push(child.getAttribute(\"blm-id\"));\n      nodes.push(child);\n    }\n  }\n\n  if (value) {\n    value.forEach((component, i) => {\n      if (component.id && newNode) {\n        const newId = startId + i;\n        const lineBreak = document.createTextNode(\"\\n\"); //Remove this tag, if it runs slower\n\n        const ind = ids.indexOf(component.id);\n        const node = ind !== -1 && ind < nodes.length ? nodes[ind] : newNode.cloneNode(true);\n\n        if (component.isCreated || component.isEdited) {\n          if (isMediaRepeater(repeater)) {\n            setMediaNode(node, repeater, component);\n          } else if (isButtonRepeater(repeater)) {\n            setButtonNode(node, repeater, component);\n          } else if (isSoundRepeater(repeater)) {\n            setSoundNode(node, repeater, component);\n          }\n        }\n\n        node.setAttribute(\"blm-id\", newId.toString());\n        parent.appendChild(lineBreak);\n        parent.appendChild(node);\n      }\n    });\n  }\n}\n\nfunction duplicateNode(parent, selector) {\n  return getHTMLElement(parent, selector);\n}\n\nfunction createMediaNode() {\n  const str = `<div blm-component=\"media\" blm-id=\"\" class=\"\" blm-options=\"\">\n        <img src=\"\">\n    </div>\n  `;\n  return createHTMLElement(str);\n}\n\nfunction setMediaNode(element, repeater, media) {\n  if (element) {\n    const {\n      defaultClass = \"\",\n      mediaConfig\n    } = repeater;\n    const {\n      mediatype,\n      format,\n      style = \"\"\n    } = mediaConfig || {};\n    const options = toJSONString({\n      mediatype,\n      format\n    }) || \"\";\n    const {\n      isEdited\n    } = media;\n    element.setAttribute(\"blm-options\", options);\n    element.setAttribute(\"class\", defaultClass);\n    element.setAttribute(\"style\", style);\n\n    if (isEdited) {\n      setMediaComponent(element, media);\n    }\n  }\n}\n\nfunction createButtonNode(parent, duplicate) {\n  let result;\n\n  if (duplicate) {\n    result = duplicateNode(parent, '[blm-component=\"button\"]');\n  }\n\n  if (!result) {\n    const str = `<div blm-component=\"button\" blm-id=\"\" class=\"\"></div>`;\n    result = createHTMLElement(str);\n  }\n\n  return result;\n}\n\nfunction setButtonNode(element, repeater, button) {\n  if (element) {\n    const {\n      defaultClass = \"\"\n    } = repeater;\n    const {\n      isEdited\n    } = button;\n    element.setAttribute(\"class\", defaultClass);\n\n    if (isEdited) {\n      setButtonComponent(element, button);\n    }\n  }\n}\n\nfunction createSoundNode() {\n  let result;\n  const str = `<div blm-component=\"audio\" blm-id=\"\" class=\"\"></div>`;\n  result = createHTMLElement(str);\n  return result;\n}\n\nfunction setSoundNode(element, repeater, sound) {\n  if (element) {\n    const {\n      defaultClass = \"\"\n    } = repeater;\n    const {\n      isEdited\n    } = sound;\n    element.setAttribute(\"class\", defaultClass);\n\n    if (isEdited) {\n      setSoundComponent(element, sound);\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/html/component/repeater.ts"],"names":["ClassAttribute","StyleAttribute","BLMElement","ComponentTypes","createHTMLElement","isButtonRepeater","isMediaRepeater","isSoundRepeater","toJSONString","getAllHTMLElements","getBLMElement","getHTMLElement","setBLMElement","setButtonComponent","setMediaComponent","setSoundComponent","getRepeaterElements","parent","elements","result","mediaEls","buttonEls","soundEls","element","model","options","allowcomponent","Media","push","Button","Sound","setRepeaterComponent","repeater","startId","createRepeater","setRepeaterHTML","value","variables","classAttr","styleAttr","len","length","items","removables","key","ids","nodes","newNode","createMediaNode","createButtonNode","duplicate","createSoundNode","firstChild","child","removeChild","nodeType","Node","ELEMENT_NODE","getAttribute","forEach","component","i","id","newId","lineBreak","document","createTextNode","ind","indexOf","node","cloneNode","isCreated","isEdited","setMediaNode","setButtonNode","setSoundNode","setAttribute","toString","appendChild","duplicateNode","selector","str","media","defaultClass","mediaConfig","mediatype","format","style","button","sound"],"mappings":"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","sourcesContent":["import {\r\n  ClassAttribute,\r\n  StyleAttribute,\r\n  BLMElement,\r\n  ButtonComponent,\r\n  ButtonRepeaterComponent,\r\n  MediaComponent,\r\n  MediaRepeaterComponent,\r\n  RepeaterComponent,\r\n  RepeaterConfigJSON,\r\n  SoundComponent,\r\n  SoundRepeaterComponent,\r\n} from \"types\";\r\nimport { ComponentTypes } from \"editor-constants\";\r\nimport {\r\n  createHTMLElement,\r\n  isButtonRepeater,\r\n  isMediaRepeater,\r\n  isSoundRepeater,\r\n  toJSONString,\r\n} from \"utils\";\r\nimport { getAllHTMLElements, getBLMElement, getHTMLElement, setBLMElement } from \"../../core\";\r\nimport { setButtonComponent } from \"./button\";\r\nimport { setMediaComponent } from \"./media\";\r\nimport { setSoundComponent } from \"./sound\";\r\n\r\nexport function getRepeaterElements(parent: HTMLElement) {\r\n  const elements = getAllHTMLElements(parent, '[blm-component=\"repeater\"]');\r\n  const result: Record<\"mediaEls\" | \"buttonEls\" | \"soundEls\", HTMLElement[]> = {\r\n    mediaEls: [],\r\n    buttonEls: [],\r\n    soundEls: [],\r\n  };\r\n\r\n  for (const element of elements) {\r\n    const model = getBLMElement<RepeaterConfigJSON>(element);\r\n    const { options } = model;\r\n    const { allowcomponent } = options || {};\r\n\r\n    if (allowcomponent === ComponentTypes.Media) {\r\n      result.mediaEls.push(element);\r\n    } else if (allowcomponent === ComponentTypes.Button) {\r\n      result.buttonEls.push(element);\r\n    } else if (allowcomponent === ComponentTypes.Sound) {\r\n      result.soundEls.push(element);\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function setRepeaterComponent(\r\n  element: HTMLElement,\r\n  repeater: RepeaterComponent,\r\n  startId: number\r\n) {\r\n  const model = createRepeater(repeater);\r\n\r\n  setBLMElement(element, model);\r\n  setRepeaterHTML(element, repeater, startId);\r\n}\r\n\r\nfunction createRepeater(repeater: RepeaterComponent) {\r\n  const { value, variables } = repeater;\r\n  const model = new BLMElement();\r\n  const classAttr = new ClassAttribute();\r\n  const styleAttr = new StyleAttribute();\r\n  const len = value?.length || 0;\r\n\r\n  if (isButtonRepeater(repeater)) {\r\n    classAttr.items = [`button_items_${len}`];\r\n    classAttr.removables = [/^button_items_(\\d+)$/g];\r\n  } else {\r\n    classAttr.items = [`repeater_items_${len}`];\r\n    classAttr.removables = [/^repeater_items_(\\d+)$/g];\r\n  }\r\n\r\n  for (const key in variables) {\r\n    styleAttr[key] = variables[key];\r\n  }\r\n\r\n  styleAttr[\"--blm_items\"] = len;\r\n\r\n  model.classAttr = classAttr;\r\n  model.styleAttr = styleAttr;\r\n\r\n  return model;\r\n}\r\n\r\nfunction setRepeaterHTML(parent: HTMLElement, repeater: RepeaterComponent, startId: number) {\r\n  const { value } = repeater;\r\n  const ids: Array<string | null> = [];\r\n  const nodes: HTMLElement[] = [];\r\n  let newNode: HTMLElement | null = null;\r\n\r\n  if (isMediaRepeater(repeater)) {\r\n    newNode = createMediaNode();\r\n  } else if (isButtonRepeater(repeater)) {\r\n    newNode = createButtonNode(parent, repeater.duplicate);\r\n  } else if (isSoundRepeater(repeater)) {\r\n    newNode = createSoundNode();\r\n  }\r\n\r\n  while (parent.firstChild) {\r\n    const child = parent.removeChild(parent.firstChild) as HTMLElement;\r\n    if (child.nodeType === Node.ELEMENT_NODE) {\r\n      ids.push(child.getAttribute(\"blm-id\"));\r\n      nodes.push(child);\r\n    }\r\n  }\r\n\r\n  if (value) {\r\n    value.forEach((component, i) => {\r\n      if (component.id && newNode) {\r\n        const newId = startId + i;\r\n        const lineBreak = document.createTextNode(\"\\n\"); //Remove this tag, if it runs slower\r\n        const ind = ids.indexOf(component.id);\r\n        const node =\r\n          ind !== -1 && ind < nodes.length ? nodes[ind] : (newNode.cloneNode(true) as HTMLElement);\r\n        if (component.isCreated || component.isEdited) {\r\n          if (isMediaRepeater(repeater)) {\r\n            setMediaNode(node, repeater, component as MediaComponent);\r\n          } else if (isButtonRepeater(repeater)) {\r\n            setButtonNode(node, repeater, component as ButtonComponent);\r\n          } else if (isSoundRepeater(repeater)) {\r\n            setSoundNode(node, repeater, component as SoundComponent);\r\n          }\r\n        }\r\n\r\n        node.setAttribute(\"blm-id\", newId.toString());\r\n\r\n        parent.appendChild(lineBreak);\r\n        parent.appendChild(node);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction duplicateNode(parent: HTMLElement, selector: string): HTMLElement | null {\r\n  return getHTMLElement(parent, selector);\r\n}\r\n\r\nfunction createMediaNode() {\r\n  const str = `<div blm-component=\"media\" blm-id=\"\" class=\"\" blm-options=\"\">\r\n        <img src=\"\">\r\n    </div>\r\n  `;\r\n\r\n  return createHTMLElement(str);\r\n}\r\n\r\nfunction setMediaNode(\r\n  element: HTMLElement,\r\n  repeater: MediaRepeaterComponent,\r\n  media: MediaComponent\r\n) {\r\n  if (element) {\r\n    const { defaultClass = \"\", mediaConfig } = repeater;\r\n    const { mediatype, format, style = \"\" } = mediaConfig || {};\r\n    const options = toJSONString({ mediatype, format }) || \"\";\r\n    const { isEdited } = media;\r\n\r\n    element.setAttribute(\"blm-options\", options);\r\n    element.setAttribute(\"class\", defaultClass);\r\n    element.setAttribute(\"style\", style);\r\n\r\n    if (isEdited) {\r\n      setMediaComponent(element, media);\r\n    }\r\n  }\r\n}\r\n\r\nfunction createButtonNode(parent: HTMLElement, duplicate?: boolean) {\r\n  let result;\r\n\r\n  if (duplicate) {\r\n    result = duplicateNode(parent, '[blm-component=\"button\"]');\r\n  }\r\n\r\n  if (!result) {\r\n    const str = `<div blm-component=\"button\" blm-id=\"\" class=\"\"></div>`;\r\n    result = createHTMLElement(str);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction setButtonNode(\r\n  element: HTMLElement,\r\n  repeater: ButtonRepeaterComponent,\r\n  button: ButtonComponent\r\n) {\r\n  if (element) {\r\n    const { defaultClass = \"\" } = repeater;\r\n    const { isEdited } = button;\r\n\r\n    element.setAttribute(\"class\", defaultClass);\r\n\r\n    if (isEdited) {\r\n      setButtonComponent(element, button);\r\n    }\r\n  }\r\n}\r\n\r\nfunction createSoundNode() {\r\n  let result;\r\n\r\n  const str = `<div blm-component=\"audio\" blm-id=\"\" class=\"\"></div>`;\r\n  result = createHTMLElement(str);\r\n\r\n  return result;\r\n}\r\n\r\nfunction setSoundNode(\r\n  element: HTMLElement,\r\n  repeater: SoundRepeaterComponent,\r\n  sound: SoundComponent\r\n) {\r\n  if (element) {\r\n    const { defaultClass = \"\" } = repeater;\r\n    const { isEdited } = sound;\r\n\r\n    element.setAttribute(\"class\", defaultClass);\r\n\r\n    if (isEdited) {\r\n      setSoundComponent(element, sound);\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}