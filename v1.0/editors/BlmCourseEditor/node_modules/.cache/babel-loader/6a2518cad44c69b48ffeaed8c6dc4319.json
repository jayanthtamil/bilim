{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\question-editor\\\\panels\\\\introduction\\\\BlmQuestionIntroduction.tsx\";\nimport React, { Fragment, useMemo } from \"react\";\nimport clsx from \"clsx\";\nimport { FormControlLabel, RadioGroup, Radio, Select, MenuItem } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { QuestionIntroductionTypes, AcceptedFileTypes, TemplateEditorOptionTypes, ElementType } from \"editor-constants\";\nimport { getTheme, isVideo } from \"utils\";\nimport { BlmSubscriptInput } from \"shared\";\nimport { BlmMediaPicker, BlmMediaPickerEditor } from \"components/shared\";\nimport { useQuestionEditorCtx } from \"components/question-editor/core\";\nimport { updateQuestionIntroduction } from \"../../reducers\";\nimport \"./styles.scss\";\n\nfunction BlmQuestionIntroduction(props) {\n  const {\n    data,\n    themes,\n    dispatch\n  } = props;\n  const {\n    element\n  } = useQuestionEditorCtx();\n  const isPartpage = (element === null || element === void 0 ? void 0 : element.type) === ElementType.PartPage || (element === null || element === void 0 ? void 0 : element.type) === ElementType.SimplePartPage;\n  const {\n    t\n  } = useTranslation(\"question-editor\");\n  const isAllowedTheme = useMemo(() => {\n    const {\n      isEvaluation,\n      theme\n    } = (element === null || element === void 0 ? void 0 : element.parent) || {};\n    const themeObj = isEvaluation && theme && themes ? getTheme(themes, theme) : undefined;\n    return themeObj ? themeObj.allowIntroduction : true;\n  }, [element, themes]);\n  const disableIntro = isPartpage || !isAllowedTheme;\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newData = { ...data\n    };\n\n    if (name === \"introduction\") {\n      newData.introduction = value;\n    } else if (name === \"title\") {\n      newData.media.title.value = value;\n    } else if (name === \"description\") {\n      newData.media.text.value = value;\n    } else if (name === \"displayQuestion\") {\n      newData.media.display.button = false;\n      newData.media.display.timer.status = false;\n      newData.media.display.autoEnd = false;\n\n      switch (value) {\n        case \"button\":\n          newData.media.display.button = true;\n          break;\n\n        case \"timer\":\n          newData.media.display.timer.status = true;\n          break;\n\n        case \"autoEnd\":\n          newData.media.display.autoEnd = true;\n          break;\n      }\n    } else if (name === \"timerValue\") {\n      newData.media.display.timer.value = value;\n    } else if (name === \"media\") {\n      newData.media.media.value = value;\n    } else if (name === \"sound\") {\n      if (value && !value.subtitle) {\n        var _newData$media, _newData$media$sound, _newData$media$sound$;\n\n        value.subtitle = (_newData$media = newData.media) === null || _newData$media === void 0 ? void 0 : (_newData$media$sound = _newData$media.sound) === null || _newData$media$sound === void 0 ? void 0 : (_newData$media$sound$ = _newData$media$sound.value) === null || _newData$media$sound$ === void 0 ? void 0 : _newData$media$sound$.subtitle;\n      }\n\n      if (value && !value.marker) {\n        var _newData$media2, _newData$media2$sound, _newData$media2$sound2;\n\n        value.marker = (_newData$media2 = newData.media) === null || _newData$media2 === void 0 ? void 0 : (_newData$media2$sound = _newData$media2.sound) === null || _newData$media2$sound === void 0 ? void 0 : (_newData$media2$sound2 = _newData$media2$sound.value) === null || _newData$media2$sound2 === void 0 ? void 0 : _newData$media2$sound2.marker;\n      }\n\n      newData.media.sound.value = value;\n    } else if (name === \"simpleContent\") {\n      newData.simpleContentId = value;\n    }\n\n    if (dispatch) {\n      dispatch(updateQuestionIntroduction(newData));\n    }\n  };\n\n  const renderChildren = () => {\n    if (disableIntro) {\n      if (isPartpage) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"intro-warning\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 16\n          }\n        }, t(\"introduction.warning_1\"));\n      } else {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"intro-warning\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 16\n          }\n        }, t(\"introduction.warning_2\"));\n      }\n    } else if (data.introduction === QuestionIntroductionTypes.Media) {\n      const media = data.media;\n      const display = media.display;\n      let displayGrpValue = \"\";\n\n      if (display.button) {\n        displayGrpValue = \"button\";\n      } else if (display.timer.status) {\n        displayGrpValue = \"timer\";\n      } else if (display.autoEnd) {\n        displayGrpValue = \"autoEnd\";\n      }\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"intro-main-media-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(BlmMediaPicker, {\n        name: \"media\",\n        elementId: element.id,\n        acceptedFiles: [AcceptedFileTypes.Image, AcceptedFileTypes.Video],\n        data: data.media.media.value,\n        placeholder: t(\"label.select_media\"),\n        disabled: !data.media.media.isEditable,\n        className: \"media-picker-1\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"title\",\n        type: \"text\",\n        value: media.title.value || \"\",\n        disabled: !media.title.isEditable,\n        className: \"intro-media-title\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title-hr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"textarea\", {\n        name: \"description\",\n        value: media.text.value || \"\",\n        disabled: !media.text.isEditable,\n        className: \"intro-media-description\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(BlmMediaPickerEditor, {\n        name: \"sound\",\n        elementId: element.id,\n        acceptedFiles: [AcceptedFileTypes.Audio],\n        data: data.media.sound.value,\n        placeholder: t(\"introduction.select_sound\"),\n        disabled: !data.media.sound.isEditable,\n        className: \"sound-picker-1\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"intro-media-question-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, t(\"introduction.display_ques\")), /*#__PURE__*/React.createElement(RadioGroup, {\n        name: \"displayQuestion\",\n        value: displayGrpValue,\n        onChange: handleChange,\n        className: clsx(\"intro-media-question-grp\", displayGrpValue),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        label: t(\"introduction.button\"),\n        value: \"button\",\n        control: /*#__PURE__*/React.createElement(Radio, {\n          className: \"radio-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 24\n          }\n        }),\n        className: \"intro-question-btn-ctrl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        label: t(\"label.timer\"),\n        value: \"timer\",\n        control: /*#__PURE__*/React.createElement(Radio, {\n          className: \"radio-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 24\n          }\n        }),\n        className: \"intro-question-timer-ctrl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(BlmSubscriptInput, {\n        name: \"timerValue\",\n        label: t(\"label.sec\"),\n        min: 1,\n        max: 60,\n        value: display.timer.value || 1,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }), media.media.value && isVideo(media.media.value.type) && /*#__PURE__*/React.createElement(FormControlLabel, {\n        label: t(\"introduction.auto_end\"),\n        value: \"autoEnd\",\n        control: /*#__PURE__*/React.createElement(Radio, {\n          className: \"radio-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 26\n          }\n        }),\n        className: \"intro-question-video-ctrl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      })));\n    } else if (data.introduction === QuestionIntroductionTypes.SimpleContent) {\n      return /*#__PURE__*/React.createElement(Select, {\n        name: \"simpleContent\",\n        value: data.simpleContentId,\n        className: \"intro-simple-dropdown\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: TemplateEditorOptionTypes.None,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }, t(\"label.select\")), element === null || element === void 0 ? void 0 : element.children.map(item => {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: item.id,\n          value: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }\n        }, item.name);\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-introduction-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"introduction\",\n    value: disableIntro ? QuestionIntroductionTypes.None : data.introduction,\n    className: \"intro-dropdown\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: QuestionIntroductionTypes.None,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, t(\"introduction.none\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: QuestionIntroductionTypes.Media,\n    disabled: disableIntro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, t(\"introduction.media\"))), renderChildren());\n}\n\nexport default BlmQuestionIntroduction;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/question-editor/panels/introduction/BlmQuestionIntroduction.tsx"],"names":["React","Fragment","useMemo","clsx","FormControlLabel","RadioGroup","Radio","Select","MenuItem","useTranslation","QuestionIntroductionTypes","AcceptedFileTypes","TemplateEditorOptionTypes","ElementType","getTheme","isVideo","BlmSubscriptInput","BlmMediaPicker","BlmMediaPickerEditor","useQuestionEditorCtx","updateQuestionIntroduction","BlmQuestionIntroduction","props","data","themes","dispatch","element","isPartpage","type","PartPage","SimplePartPage","t","isAllowedTheme","isEvaluation","theme","parent","themeObj","undefined","allowIntroduction","disableIntro","handleChange","event","name","value","target","newData","introduction","media","title","text","display","button","timer","status","autoEnd","subtitle","sound","marker","simpleContentId","renderChildren","Media","displayGrpValue","id","Image","Video","isEditable","Audio","SimpleContent","None","children","map","item"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Fragment, useMemo } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { FormControlLabel, RadioGroup, Radio, Select, MenuItem } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomChangeEvent, MediaFile, QuestionIntroduction } from \"types\";\r\nimport {\r\n  QuestionIntroductionTypes,\r\n  AcceptedFileTypes,\r\n  TemplateEditorOptionTypes,\r\n  ElementType,\r\n} from \"editor-constants\";\r\nimport { getTheme, isVideo } from \"utils\";\r\nimport { BlmSubscriptInput } from \"shared\";\r\nimport { BlmMediaPicker, BlmMediaPickerEditor } from \"components/shared\";\r\nimport { useQuestionEditorCtx } from \"components/question-editor/core\";\r\nimport { QuestionEditorDispatch, updateQuestionIntroduction } from \"../../reducers\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\ninterface CompProps extends ContainerProps {\r\n  data: QuestionIntroduction;\r\n  dispatch: QuestionEditorDispatch;\r\n}\r\n\r\nfunction BlmQuestionIntroduction(props: CompProps) {\r\n  const { data, themes, dispatch } = props;\r\n  const { element } = useQuestionEditorCtx();\r\n  const isPartpage =\r\n    element?.type === ElementType.PartPage || element?.type === ElementType.SimplePartPage;\r\n  const { t } = useTranslation(\"question-editor\");\r\n\r\n  const isAllowedTheme = useMemo(() => {\r\n    const { isEvaluation, theme } = element?.parent || {};\r\n    const themeObj = isEvaluation && theme && themes ? getTheme(themes, theme) : undefined;\r\n\r\n    return themeObj ? themeObj.allowIntroduction : true;\r\n  }, [element, themes]);\r\n  const disableIntro = isPartpage || !isAllowedTheme;\r\n\r\n  const handleChange = (\r\n    event: ChangeEvent<any> | CustomChangeEvent<MediaFile | number | undefined>\r\n  ) => {\r\n    const { name, value } = event.target;\r\n    const newData: QuestionIntroduction = { ...data };\r\n\r\n    if (name === \"introduction\") {\r\n      newData.introduction = value;\r\n    } else if (name === \"title\") {\r\n      newData.media.title.value = value;\r\n    } else if (name === \"description\") {\r\n      newData.media.text.value = value;\r\n    } else if (name === \"displayQuestion\") {\r\n      newData.media.display.button = false;\r\n      newData.media.display.timer.status = false;\r\n      newData.media.display.autoEnd = false;\r\n\r\n      switch (value) {\r\n        case \"button\":\r\n          newData.media.display.button = true;\r\n          break;\r\n        case \"timer\":\r\n          newData.media.display.timer.status = true;\r\n          break;\r\n        case \"autoEnd\":\r\n          newData.media.display.autoEnd = true;\r\n          break;\r\n      }\r\n    } else if (name === \"timerValue\") {\r\n      newData.media.display.timer.value = value;\r\n    } else if (name === \"media\") {\r\n      newData.media.media.value = value;\r\n    } else if (name === \"sound\") {\r\n      if (value && !value.subtitle) {\r\n        value.subtitle = newData.media?.sound?.value?.subtitle;\r\n      }\r\n      if (value && !value.marker) {\r\n        value.marker = newData.media?.sound?.value?.marker;\r\n      }\r\n      newData.media.sound.value = value;\r\n    } else if (name === \"simpleContent\") {\r\n      newData.simpleContentId = value;\r\n    }\r\n\r\n    if (dispatch) {\r\n      dispatch(updateQuestionIntroduction(newData));\r\n    }\r\n  };\r\n\r\n  const renderChildren = () => {\r\n    if (disableIntro) {\r\n      if (isPartpage) {\r\n        return <span className=\"intro-warning\">{t(\"introduction.warning_1\")}</span>;\r\n      } else {\r\n        return <span className=\"intro-warning\">{t(\"introduction.warning_2\")}</span>;\r\n      }\r\n    } else if (data.introduction === QuestionIntroductionTypes.Media) {\r\n      const media = data.media;\r\n      const display = media.display;\r\n      let displayGrpValue = \"\";\r\n\r\n      if (display.button) {\r\n        displayGrpValue = \"button\";\r\n      } else if (display.timer.status) {\r\n        displayGrpValue = \"timer\";\r\n      } else if (display.autoEnd) {\r\n        displayGrpValue = \"autoEnd\";\r\n      }\r\n\r\n      return (\r\n        <Fragment>\r\n          <div className=\"intro-main-media-wrapper\">\r\n            <BlmMediaPicker\r\n              name=\"media\"\r\n              elementId={element!.id}\r\n              acceptedFiles={[AcceptedFileTypes.Image, AcceptedFileTypes.Video]}\r\n              data={data.media.media.value}\r\n              placeholder={t(\"label.select_media\")}\r\n              disabled={!data.media.media.isEditable}\r\n              className=\"media-picker-1\"\r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n              name=\"title\"\r\n              type=\"text\"\r\n              value={media.title.value || \"\"}\r\n              disabled={!media.title.isEditable}\r\n              className=\"intro-media-title\"\r\n              onChange={handleChange}\r\n            />\r\n            <div className=\"title-hr\" />\r\n            <textarea\r\n              name=\"description\"\r\n              value={media.text.value || \"\"}\r\n              disabled={!media.text.isEditable}\r\n              className=\"intro-media-description\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <BlmMediaPickerEditor\r\n            name=\"sound\"\r\n            elementId={element!.id}\r\n            acceptedFiles={[AcceptedFileTypes.Audio]}\r\n            data={data.media.sound.value}\r\n            placeholder={t(\"introduction.select_sound\")}\r\n            disabled={!data.media.sound.isEditable}\r\n            className=\"sound-picker-1\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"intro-media-question-title\">{t(\"introduction.display_ques\")}</div>\r\n          <RadioGroup\r\n            name=\"displayQuestion\"\r\n            value={displayGrpValue}\r\n            onChange={handleChange}\r\n            className={clsx(\"intro-media-question-grp\", displayGrpValue)}\r\n          >\r\n            <FormControlLabel\r\n              label={t(\"introduction.button\")}\r\n              value=\"button\"\r\n              control={<Radio className=\"radio-2\" />}\r\n              className=\"intro-question-btn-ctrl\"\r\n            />\r\n            <FormControlLabel\r\n              label={t(\"label.timer\")}\r\n              value=\"timer\"\r\n              control={<Radio className=\"radio-2\" />}\r\n              className=\"intro-question-timer-ctrl\"\r\n            />\r\n            <BlmSubscriptInput\r\n              name=\"timerValue\"\r\n              label={t(\"label.sec\")}\r\n              min={1}\r\n              max={60}\r\n              value={display.timer.value || 1}\r\n              onChange={handleChange}\r\n            />\r\n            {media.media.value && isVideo(media.media.value.type) && (\r\n              <FormControlLabel\r\n                label={t(\"introduction.auto_end\")}\r\n                value=\"autoEnd\"\r\n                control={<Radio className=\"radio-2\" />}\r\n                className=\"intro-question-video-ctrl\"\r\n              />\r\n            )}\r\n          </RadioGroup>\r\n        </Fragment>\r\n      );\r\n    } else if (data.introduction === QuestionIntroductionTypes.SimpleContent) {\r\n      return (\r\n        <Select\r\n          name=\"simpleContent\"\r\n          value={data.simpleContentId}\r\n          className=\"intro-simple-dropdown\"\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={TemplateEditorOptionTypes.None}>{t(\"label.select\")}</MenuItem>\r\n          {element?.children.map((item) => {\r\n            return (\r\n              <MenuItem key={item.id} value={item.id}>\r\n                {item.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-introduction-wrapper\">\r\n      <Select\r\n        name=\"introduction\"\r\n        value={disableIntro ? QuestionIntroductionTypes.None : data.introduction}\r\n        className=\"intro-dropdown\"\r\n        onChange={handleChange}\r\n      >\r\n        <MenuItem value={QuestionIntroductionTypes.None}>{t(\"introduction.none\")}</MenuItem>\r\n        <MenuItem value={QuestionIntroductionTypes.Media} disabled={disableIntro}>\r\n          {t(\"introduction.media\")}\r\n        </MenuItem>\r\n      </Select>\r\n      {renderChildren()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmQuestionIntroduction;\r\n"]},"metadata":{},"sourceType":"module"}