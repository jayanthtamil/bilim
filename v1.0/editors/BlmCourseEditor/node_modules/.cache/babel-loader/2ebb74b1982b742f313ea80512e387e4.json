{"ast":null,"code":"import * as types from \"./types\";\nexport function initQuestionEditor(data) {\n  return {\n    type: types.INIT_QUESTION_EDITOR_DATA,\n    payload: data\n  };\n}\nexport function updateQuestionEditor(data) {\n  return {\n    type: types.UPDATE_QUESTION_EDITOR_DATA,\n    payload: data\n  };\n}\nexport function updateQuestionIntroduction(data) {\n  return {\n    type: types.UPDATE_QUESTION_INTRODUCTION_DATA,\n    payload: data\n  };\n}\nexport function updateQuestionMain(data) {\n  return {\n    type: types.UPDATE_QUESTION_MAIN_DATA,\n    payload: data\n  };\n}\nexport function updateQuestionPropositions(data) {\n  return {\n    type: types.UPDATE_QUESTION_PROPOSITIONS_DATA,\n    payload: data\n  };\n}\nexport function addQuestionProposition(data) {\n  return {\n    type: types.ADD_QUESTION_PROPOSITION_DATA,\n    payload: data\n  };\n}\nexport function updateQuestionProposition(data) {\n  return {\n    type: types.UPDATE_QUESTION_PROPOSITION_DATA,\n    payload: data\n  };\n}\nexport function deleteQuestionProposition(data) {\n  return {\n    type: types.DELETE_QUESTION_PROPOSITION_DATA,\n    payload: data\n  };\n}\nexport function updateQuestionCustom(data) {\n  return {\n    type: types.UPDATE_QUESTION_CUSTOM_DATA,\n    payload: data\n  };\n}\nexport function updateQuestionFeedback(data) {\n  return {\n    type: types.UPDATE_QUESTION_FEEDBACK_DATA,\n    payload: data\n  };\n}\nexport function updateQuestionParameters(data) {\n  return {\n    type: types.UPDATE_QUESTION_PARAMETERS_DATA,\n    payload: data\n  };\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/question-editor/reducers/actions.ts"],"names":["types","initQuestionEditor","data","type","INIT_QUESTION_EDITOR_DATA","payload","updateQuestionEditor","UPDATE_QUESTION_EDITOR_DATA","updateQuestionIntroduction","UPDATE_QUESTION_INTRODUCTION_DATA","updateQuestionMain","UPDATE_QUESTION_MAIN_DATA","updateQuestionPropositions","UPDATE_QUESTION_PROPOSITIONS_DATA","addQuestionProposition","ADD_QUESTION_PROPOSITION_DATA","updateQuestionProposition","UPDATE_QUESTION_PROPOSITION_DATA","deleteQuestionProposition","DELETE_QUESTION_PROPOSITION_DATA","updateQuestionCustom","UPDATE_QUESTION_CUSTOM_DATA","updateQuestionFeedback","UPDATE_QUESTION_FEEDBACK_DATA","updateQuestionParameters","UPDATE_QUESTION_PARAMETERS_DATA"],"mappings":"AAUA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,OAAO,SAASC,kBAAT,CAA4BC,IAA5B,EAAoF;AACzF,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACI,yBADP;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASI,oBAAT,CAA8BJ,IAA9B,EAAwF;AAC7F,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACO,2BADP;AAELF,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASM,0BAAT,CACLN,IADK,EAEmC;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACS,iCADP;AAELJ,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASQ,kBAAT,CAA4BR,IAA5B,EAAgF;AACrF,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACW,yBADP;AAELN,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASU,0BAAT,CACLV,IADK,EAEmC;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACa,iCADP;AAELR,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASY,sBAAT,CACLZ,IADK,EAE+B;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACe,6BADP;AAELV,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASc,yBAAT,CACLd,IADK,EAEkC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACiB,gCADP;AAELZ,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASgB,yBAAT,CACLhB,IADK,EAEkC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACmB,gCADP;AAELd,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASkB,oBAAT,CACLlB,IADK,EAE6B;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACqB,2BADP;AAELhB,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASoB,sBAAT,CAAgCpB,IAAhC,EAA4F;AACjG,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACuB,6BADP;AAELlB,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASsB,wBAAT,CACLtB,IADK,EAEiC;AACtC,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACyB,+BADP;AAELpB,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID","sourcesContent":["import {\r\n  QuestionTemplate,\r\n  QuestionIntroduction,\r\n  QuestionMain,\r\n  QuestionPropositions,\r\n  QuestionProposition,\r\n  QuestionFeedback,\r\n  QuestionParameters,\r\n  QuestionCustomComponent,\r\n} from \"types\";\r\nimport * as types from \"./types\";\r\n\r\nexport function initQuestionEditor(data: QuestionTemplate): types.InitQuestionEditorAction {\r\n  return {\r\n    type: types.INIT_QUESTION_EDITOR_DATA,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function updateQuestionEditor(data: QuestionTemplate): types.UpdateQuestionEditorAction {\r\n  return {\r\n    type: types.UPDATE_QUESTION_EDITOR_DATA,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function updateQuestionIntroduction(\r\n  data: QuestionIntroduction\r\n): types.UpdateQuestionIntroductionAction {\r\n  return {\r\n    type: types.UPDATE_QUESTION_INTRODUCTION_DATA,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function updateQuestionMain(data: QuestionMain): types.UpdateQuestionMainAction {\r\n  return {\r\n    type: types.UPDATE_QUESTION_MAIN_DATA,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function updateQuestionPropositions(\r\n  data: QuestionPropositions\r\n): types.UpdateQuestionPropositionsAction {\r\n  return {\r\n    type: types.UPDATE_QUESTION_PROPOSITIONS_DATA,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function addQuestionProposition(\r\n  data: QuestionProposition\r\n): types.AddQuestionPropositionAction {\r\n  return {\r\n    type: types.ADD_QUESTION_PROPOSITION_DATA,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function updateQuestionProposition(\r\n  data: QuestionProposition\r\n): types.UpdateQuestionPropositionAction {\r\n  return {\r\n    type: types.UPDATE_QUESTION_PROPOSITION_DATA,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function deleteQuestionProposition(\r\n  data: QuestionProposition\r\n): types.DeleteQuestionPropositionAction {\r\n  return {\r\n    type: types.DELETE_QUESTION_PROPOSITION_DATA,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function updateQuestionCustom(\r\n  data: QuestionCustomComponent\r\n): types.UpdateQuestionCustomAction {\r\n  return {\r\n    type: types.UPDATE_QUESTION_CUSTOM_DATA,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function updateQuestionFeedback(data: QuestionFeedback): types.UpdateQuestionFeedbackAction {\r\n  return {\r\n    type: types.UPDATE_QUESTION_FEEDBACK_DATA,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function updateQuestionParameters(\r\n  data: QuestionParameters\r\n): types.UpdateQuestionParametersAction {\r\n  return {\r\n    type: types.UPDATE_QUESTION_PARAMETERS_DATA,\r\n    payload: data,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}