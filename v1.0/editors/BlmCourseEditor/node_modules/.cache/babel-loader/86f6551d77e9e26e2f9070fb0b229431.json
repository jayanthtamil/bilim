{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\structures\\\\panel\\\\context-menu\\\\BlmContextMenu.tsx\";\nimport React, { useState } from \"react\";\nimport { Popover, List, ListItem, ListItemIcon, Divider, Popper } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { CourseElement } from \"types\";\nimport { ElementType, ContextMenuLabels, ContextMenuActions, TreeActionTypes } from \"editor-constants\";\nimport { ConnectionCtxItemIcon, MoveToOpenIcon, MoveToCloseIcon } from \"assets/icons\";\nimport { hasAutoSummary, getElementType } from \"utils\";\nimport { getContextMenuActions, hasContextMenuAction, getElementTypeByAction, getConnectionTypeByAction, createConnection, validateSummary, validateAutoSummary } from \"./context-menu-utils\";\nimport { setContentTemplateHTML, getContentTemplateModel, setTemplateSizeHTML } from \"template-builders\";\nimport BlmCopyFrom from \"../copy-from\";\nimport \"./context-menu-styles.scss\";\nconst popperOptions = {\n  eventsEnabled: true\n};\n\nfunction BlmContextMenu(props) {\n  const {\n    data,\n    courseProps,\n    templates,\n    tree,\n    onItemClick,\n    onClose,\n    selectTreeItem,\n    setTreeAction,\n    createElement,\n    deleteElement,\n    duplicateElement,\n    updateElementConnection,\n    updateAutoSummary,\n    updateElementSummary,\n    resetElementTemplate,\n    openDialog,\n    openConfirmDialog,\n    getElementTemplateVal,\n    getElementTemplates,\n    saveTemplates,\n    subMenuPositionElement,\n    updateElementTemplates\n  } = props;\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const {\n    anchor,\n    treeType\n  } = data || {};\n  const open = data ? true : false;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [anchorEle, setAnchorEle] = React.useState(null);\n  const [actionVal, setActionVal] = React.useState(undefined);\n  const [copyFromOpen, setCopyFromOpen] = React.useState(false);\n  const [selectedElement, setSelectedElement] = React.useState(undefined);\n  const {\n    t\n  } = useTranslation(\"structures\");\n  React.useEffect(() => {\n    setSelectedIndex(-1);\n  }, [data]);\n  React.useEffect(() => {\n    async function apiCall() {\n      var element = data === null || data === void 0 ? void 0 : data.item;\n\n      if (element) {\n        var _data$item, _data$item$parent;\n\n        var value = {\n          id: await (data === null || data === void 0 ? void 0 : (_data$item = data.item) === null || _data$item === void 0 ? void 0 : (_data$item$parent = _data$item.parent) === null || _data$item$parent === void 0 ? void 0 : _data$item$parent.id)\n        };\n\n        if (value.id && element.type === \"partpage\") {\n          await getElementTemplates(value);\n        }\n      }\n    }\n\n    apiCall();\n  }, [data, getElementTemplates]);\n\n  const handleClose = () => {\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  const handleListItemClick = (event, index, action, element) => {\n    switch (action) {\n      case ContextMenuActions.AddChapter:\n      case ContextMenuActions.AddEvaluation:\n      case ContextMenuActions.AddPage:\n      case ContextMenuActions.AddScreen:\n      case ContextMenuActions.AddQuestion:\n      case ContextMenuActions.AddCustom:\n      case ContextMenuActions.AddSimpleContent:\n      case ContextMenuActions.AddSimplePage:\n      case ContextMenuActions.AddAnnexesFolder:\n        doAdd(action, element);\n        break;\n\n      case ContextMenuActions.EditPage:\n      case ContextMenuActions.EditScreen:\n      case ContextMenuActions.EditQuestion:\n      case ContextMenuActions.EditSimpleContent:\n      case ContextMenuActions.EditSimplePage:\n      case ContextMenuActions.EditPartPage:\n        doEdit(element);\n        break;\n\n      case ContextMenuActions.Rename:\n        doRename(element);\n        break;\n\n      case ContextMenuActions.Properties:\n        let htmlNode = data === null || data === void 0 ? void 0 : data.anchor.parentNode;\n\n        if (element && htmlNode) {\n          selectTreeItem(element, htmlNode);\n        }\n\n        break;\n\n      case ContextMenuActions.ResetTemplate:\n        doResetTemplate(element);\n        break;\n\n      case ContextMenuActions.ResetMargin:\n        doReset(element);\n        break;\n\n      case ContextMenuActions.Duplicate:\n        doDuplicate(element);\n        break;\n\n      case ContextMenuActions.Delete:\n        doDelete(element);\n        break;\n\n      case ContextMenuActions.ActivateSummary:\n        doAutoSummary(element, true);\n        break;\n\n      case ContextMenuActions.DeactivateSummary:\n        element.parent && doAutoSummary(element.parent, false);\n        break;\n\n      case ContextMenuActions.DefineSummary:\n      case ContextMenuActions.DeleteSummary:\n        doSummary(element);\n        break;\n\n      case ContextMenuActions.SwitchSummaryScreen:\n        doSwitchSummary(element, ElementType.Screen);\n        break;\n\n      case ContextMenuActions.SwitchSummaryPage:\n        doSwitchSummary(element, ElementType.Page);\n        break;\n\n      case ContextMenuActions.DefineFirstConnection:\n      case ContextMenuActions.DefineSecondConnection:\n      case ContextMenuActions.DefineRepeatConnection:\n        doConnection(action, element);\n        break;\n    }\n\n    if (action !== ContextMenuActions.EditPage && action !== ContextMenuActions.EditScreen && action !== ContextMenuActions.EditQuestion && action !== ContextMenuActions.EditSimpleContent && action !== ContextMenuActions.EditSimplePage && action !== ContextMenuActions.EditPartPage && action !== ContextMenuActions.Properties) {\n      selectTreeItem();\n    }\n\n    setSelectedIndex(index);\n    handleClose();\n\n    if (action === \"MoveTo\") {\n      setAnchorEl(null);\n    }\n\n    if (action === \"CopyFrom\") {\n      setAnchorEle(event.currentTarget);\n      setActionVal(\"CopyFrom\");\n      setCopyFromOpen(true);\n      setSelectedElement(element);\n      let htmlNode = data === null || data === void 0 ? void 0 : data.anchor.parentNode;\n\n      if (element && htmlNode) {\n        selectTreeItem(element, htmlNode);\n        setTreeAction({\n          type: TreeActionTypes.CopyFrom,\n          element\n        });\n      }\n    }\n\n    if (onItemClick) {\n      onItemClick && onItemClick(action, element);\n    }\n  };\n\n  const doReset = async element => {\n    if (templates) {\n      var _templates$templates;\n\n      var app;\n      await (templates === null || templates === void 0 ? void 0 : (_templates$templates = templates.templates) === null || _templates$templates === void 0 ? void 0 : _templates$templates.map(x => {\n        if (element.id === x.id) {\n          app = { ...x\n          };\n        }\n\n        return app;\n      }));\n      let sizeMode = {\n        width: {\n          type: \"full\",\n          width: {\n            value: \"50\",\n            isSelected: false\n          }\n        },\n        margin: {\n          top: {\n            value: \"0\",\n            isSelected: false\n          },\n          left: {\n            value: \"0\",\n            isSelected: false\n          },\n          right: {\n            value: \"0\",\n            isSelected: false\n          },\n          bottom: {\n            value: \"50\",\n            isSelected: false\n          }\n        },\n        padding: {\n          top: {\n            value: \"50\",\n            isSelected: false\n          },\n          bottom: {\n            value: \"50\",\n            isSelected: false\n          }\n        },\n        isFullscreen: false,\n        hasInnerContainer: true\n      };\n\n      if (element.parent && app) {\n        let newTemplate = setTemplateSizeHTML(app, sizeMode);\n        app.html = newTemplate;\n        saveTemplates(element === null || element === void 0 ? void 0 : element.parent, app);\n      }\n    }\n  };\n\n  const doAdd = (action, element) => {\n    const elementType = getElementTypeByAction(action);\n\n    if (elementType) {\n      setTreeAction({\n        type: TreeActionTypes.AddItem,\n        element,\n        elementType\n      });\n    }\n  };\n\n  const doEdit = element => {\n    var _data$anchor;\n\n    const htmlNode = data === null || data === void 0 ? void 0 : (_data$anchor = data.anchor) === null || _data$anchor === void 0 ? void 0 : _data$anchor.parentElement;\n    selectTreeItem(element, htmlNode);\n  };\n\n  const doRename = element => {\n    setTreeAction({\n      type: TreeActionTypes.RenameItem,\n      element\n    });\n  };\n\n  const doResetTemplate = element => {\n    const title = t(\"alert.reset_confirm\");\n    const message = t(\"alert.reset_msg\");\n\n    const onOk = () => resetElementTemplate(element);\n\n    openConfirmDialog(title, message, onOk);\n  };\n\n  const doDuplicate = element => {\n    if (!element.isSummary) {\n      duplicateElement(element).then(res => {\n        getElementTemplateVal(res.payload.node_duplicated.nid).then(res1 => {\n          if (res1.payload.templates) {\n            var newTemp = res1.payload.templates;\n\n            if (newTemp.length) {\n              var templates = [...newTemp];\n              newTemp.map((temp, ind) => {\n                const newContent = getContentTemplateModel(temp);\n                templates[ind].html = setContentTemplateHTML(temp, newContent, \"duplicate\");\n                return templates;\n              });\n              updateElementTemplates(res.payload.node_duplicated.nid, templates, \"duplicate\");\n            } else if (newTemp.html !== \"\") {\n              var template = newTemp;\n              const newContent = getContentTemplateModel(newTemp);\n              template.html = setContentTemplateHTML(newTemp, newContent, \"duplicate\");\n              updateElementTemplates(res.payload.node_duplicated.nid, template, \"duplicate\");\n            }\n          }\n        });\n      });\n    }\n  };\n\n  const doDelete = element => {\n    const title = t(\"alert.delete_confirm\");\n    const message = `${t(\"alert.delete_msg_1\")} ${element.type} ${t(\"alert.delete_msg_2\")}`;\n\n    const onOk = () => deleteElement(element);\n\n    openConfirmDialog(title, message, onOk);\n  };\n\n  const doAutoSummary = (element, status) => {\n    try {\n      if (status) {\n        validateAutoSummary(element);\n      }\n\n      updateAutoSummary(element, status);\n    } catch (error) {\n      openDialog(`${t(\"alert.warning\")}`, error.message);\n    }\n  };\n\n  const doSummary = element => {\n    if (treeType) {\n      try {\n        validateSummary(element, courseProps);\n\n        if (!element.isSummary && element.parent && hasAutoSummary(element.parent, Infinity)) {\n          updateAutoSummary(element.parent, false);\n        }\n\n        updateElementSummary(element, !element.isSummary);\n      } catch (error) {\n        openDialog(`${t(\"alert.warning\")}`, error.message, undefined, {\n          className: \"summary-warning\"\n        });\n      }\n    }\n  };\n\n  const doSwitchSummary = (element, type) => {\n    if (element.parent) {\n      const newElement = new CourseElement(\"\", t(\"title.new\") + t(`${getElementType(type)}`), type);\n      newElement.isSummary = true;\n      createElement(element.parent, newElement, 1);\n      updateAutoSummary(element.parent, false);\n    }\n  };\n\n  const doConnection = (action, element) => {\n    const connectionType = getConnectionTypeByAction(action);\n    const elements = element.type === ElementType.Page ? [element, ...element.children] : [element];\n\n    if (connectionType) {\n      const posts = elements.reduce((arr, item) => {\n        const result = createConnection(item, connectionType);\n\n        if (result) {\n          arr.push(result);\n        }\n\n        return arr;\n      }, []);\n\n      if (posts.length > 0) {\n        updateElementConnection(element, posts);\n      }\n    }\n  };\n\n  const isItemDisabled = (element, action) => {\n    const {\n      templateType,\n      isSummary,\n      isLinked,\n      theme,\n      isEvaluation\n    } = element;\n\n    if (action === ContextMenuActions.Duplicate && isSummary) {\n      return true;\n    } else if (action === ContextMenuActions.ResetTemplate && !templateType) {\n      return true;\n    } else if (action === ContextMenuActions.Delete && isLinked) {\n      return true;\n    }\n\n    if (theme !== \"None\" && action === ContextMenuActions.CopyFrom && isEvaluation) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const renderIcon = (element, action, open, type) => {\n    if (hasContextMenuAction(element, action)) {\n      return /*#__PURE__*/React.createElement(ListItemIcon, {\n        className: \"connexion-menue-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ConnectionCtxItemIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    if (action === \"MoveTo\" && type) {\n      return /*#__PURE__*/React.createElement(ListItemIcon, {\n        className: \"test-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 9\n        }\n      }, open ? /*#__PURE__*/React.createElement(MoveToOpenIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(MoveToCloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 40\n        }\n      }));\n    }\n  };\n\n  const handleMouseEnter = (event, action) => {\n    if (action === \"MoveTo\") {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  const handleMouseLeave = action => {\n    if (action === \"MoveTo\") {\n      setAnchorEl(null);\n    }\n  };\n\n  const handleSubMenuClick = (element, type, move) => {\n    if (type === ElementType.Starting && move === ElementType.Annexes) {\n      var _element$parent, _tree$annexes;\n\n      subMenuPositionElement(element === null || element === void 0 ? void 0 : element.id, element === null || element === void 0 ? void 0 : (_element$parent = element.parent) === null || _element$parent === void 0 ? void 0 : _element$parent.id, tree === null || tree === void 0 ? void 0 : (_tree$annexes = tree.annexes) === null || _tree$annexes === void 0 ? void 0 : _tree$annexes.id, 0);\n    } else if (type === ElementType.Starting && move === ElementType.Structure) {\n      var _element$parent2, _tree$structure;\n\n      subMenuPositionElement(element === null || element === void 0 ? void 0 : element.id, element === null || element === void 0 ? void 0 : (_element$parent2 = element.parent) === null || _element$parent2 === void 0 ? void 0 : _element$parent2.id, tree === null || tree === void 0 ? void 0 : (_tree$structure = tree.structure) === null || _tree$structure === void 0 ? void 0 : _tree$structure.id, 0);\n    } else if (type === ElementType.Structure && move === ElementType.Annexes) {\n      var _element$parent3, _tree$annexes2;\n\n      subMenuPositionElement(element === null || element === void 0 ? void 0 : element.id, element === null || element === void 0 ? void 0 : (_element$parent3 = element.parent) === null || _element$parent3 === void 0 ? void 0 : _element$parent3.id, tree === null || tree === void 0 ? void 0 : (_tree$annexes2 = tree.annexes) === null || _tree$annexes2 === void 0 ? void 0 : _tree$annexes2.id, 0);\n    } else if (type === ElementType.Structure && move === ElementType.Starting) {\n      var _element$parent4, _tree$starting;\n\n      subMenuPositionElement(element === null || element === void 0 ? void 0 : element.id, element === null || element === void 0 ? void 0 : (_element$parent4 = element.parent) === null || _element$parent4 === void 0 ? void 0 : _element$parent4.id, tree === null || tree === void 0 ? void 0 : (_tree$starting = tree.starting) === null || _tree$starting === void 0 ? void 0 : _tree$starting.id, 0);\n    } else if (type === ElementType.Annexes && move === ElementType.Structure) {\n      var _element$parent5, _tree$structure2;\n\n      subMenuPositionElement(element === null || element === void 0 ? void 0 : element.id, element === null || element === void 0 ? void 0 : (_element$parent5 = element.parent) === null || _element$parent5 === void 0 ? void 0 : _element$parent5.id, tree === null || tree === void 0 ? void 0 : (_tree$structure2 = tree.structure) === null || _tree$structure2 === void 0 ? void 0 : _tree$structure2.id, 0);\n    } else if (type === ElementType.Annexes && move === ElementType.Starting) {\n      var _element$parent6, _tree$starting2;\n\n      subMenuPositionElement(element === null || element === void 0 ? void 0 : element.id, element === null || element === void 0 ? void 0 : (_element$parent6 = element.parent) === null || _element$parent6 === void 0 ? void 0 : _element$parent6.id, tree === null || tree === void 0 ? void 0 : (_tree$starting2 = tree.starting) === null || _tree$starting2 === void 0 ? void 0 : _tree$starting2.id, 0);\n    }\n  };\n\n  const renderSubMenuVal = element => {\n    var _element$root;\n\n    var dataArray = [];\n    const type = element === null || element === void 0 ? void 0 : (_element$root = element.root) === null || _element$root === void 0 ? void 0 : _element$root.type;\n\n    if (element.children.length !== 0) {\n      element.children.map(value => {\n        var _value$template;\n\n        if (value === null || value === void 0 ? void 0 : (_value$template = value.template) === null || _value$template === void 0 ? void 0 : _value$template.course_context) {\n          var _value$template2;\n\n          var menu = value === null || value === void 0 ? void 0 : (_value$template2 = value.template) === null || _value$template2 === void 0 ? void 0 : _value$template2.course_context.split(/[ ,]+/);\n          menu.forEach(val => {\n            if (dataArray.indexOf(val) === -1 && val !== \"null\") {\n              dataArray.push(val);\n            }\n          });\n        }\n\n        return dataArray;\n      });\n    } else {\n      var _element$template;\n\n      if (element === null || element === void 0 ? void 0 : (_element$template = element.template) === null || _element$template === void 0 ? void 0 : _element$template.course_context) {\n        var _element$template2;\n\n        var menu = element === null || element === void 0 ? void 0 : (_element$template2 = element.template) === null || _element$template2 === void 0 ? void 0 : _element$template2.course_context.split(/[ ,]+/);\n        menu.forEach(val => {\n          if (dataArray.indexOf(val) === -1 && val !== \"null\") {\n            dataArray.push(val);\n          }\n        });\n      }\n    }\n\n    switch (type) {\n      case ElementType.Starting:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n          disabled: dataArray.indexOf(ElementType.Structure) === -1 && dataArray.length > 0 && dataArray !== null,\n          onClick: event => handleSubMenuClick(element, type, ElementType.Structure),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }\n        }, ElementType.Structure), /*#__PURE__*/React.createElement(ListItem, {\n          disabled: dataArray.indexOf(ElementType.Annexes) === -1 && dataArray.length > 0 && dataArray !== null,\n          onClick: event => handleSubMenuClick(element, type, ElementType.Annexes),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }\n        }, ElementType.Annexes));\n\n      case ElementType.Structure:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n          disabled: dataArray.indexOf(ElementType.Starting) === -1 && dataArray.length > 0,\n          onClick: event => handleSubMenuClick(element, type, ElementType.Starting),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }\n        }, ElementType.Starting), /*#__PURE__*/React.createElement(ListItem, {\n          disabled: dataArray.indexOf(ElementType.Annexes) === -1 && dataArray.length > 0,\n          onClick: event => handleSubMenuClick(element, type, ElementType.Annexes),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }\n        }, ElementType.Annexes));\n\n      case ElementType.Annexes:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n          disabled: dataArray.indexOf(ElementType.Starting) === -1 && dataArray.length > 0,\n          onClick: event => handleSubMenuClick(element, type, ElementType.Starting),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }\n        }, ElementType.Starting), /*#__PURE__*/React.createElement(ListItem, {\n          disabled: dataArray.indexOf(ElementType.Structure) === -1 && dataArray.length > 0,\n          onClick: event => handleSubMenuClick(element, type, ElementType.Structure),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }\n        }, ElementType.Structure));\n    }\n  };\n\n  const onPanelCLose = () => {\n    setCopyFromOpen(false);\n  };\n\n  const renderList = element => {\n    const open = Boolean(anchorEl);\n\n    if (treeType) {\n      const actions = getContextMenuActions(element, treeType, courseProps);\n      const items = actions.map((action, ind) => {\n        if (action === \"divider\") {\n          return /*#__PURE__*/React.createElement(Divider, {\n            key: ind,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 18\n            }\n          });\n        } else {\n          var _element$parent7;\n\n          return /*#__PURE__*/React.createElement(ListItem, {\n            button: true,\n            key: ind,\n            selected: selectedIndex === ind || action === \"MoveTo\" && open,\n            disabled: isItemDisabled(element, action),\n            onClick: event => handleListItemClick(event, ind, action, element),\n            onMouseEnter: event => handleMouseEnter(event, action),\n            onMouseLeave: event => handleMouseLeave(action),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 13\n            }\n          }, renderIcon(element, action, open, (_element$parent7 = element.parent) === null || _element$parent7 === void 0 ? void 0 : _element$parent7.type), t(ContextMenuLabels[action]), action === \"MoveTo\" && open && /*#__PURE__*/React.createElement(Popper, {\n            open: open,\n            anchorEl: anchorEl,\n            container: anchorEl === null || anchorEl === void 0 ? void 0 : anchorEl.ownerDocument.body,\n            placement: \"bottom-start\",\n            popperOptions: popperOptions,\n            className: \"sub-context-menu\",\n            modifiers: {\n              flip: {\n                enabled: false\n              },\n              offset: {\n                enabled: true,\n                offset: \"300,-28, 20\"\n              }\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(List, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 19\n            }\n          }, renderSubMenuVal(element))));\n        }\n      });\n      return items;\n    }\n  };\n\n  if (data) {\n    return /*#__PURE__*/React.createElement(Popover, {\n      id: \"structure-ctx\",\n      open: open,\n      anchorEl: anchor,\n      anchorOrigin: {\n        vertical: \"center\",\n        horizontal: \"right\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      PaperProps: {\n        square: true\n      },\n      transitionDuration: 0,\n      className: \"structrues-context-menu\",\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 7\n      }\n    }, open && /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 18\n      }\n    }, renderList(data.item)));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, actionVal === \"CopyFrom\" && copyFromOpen && /*#__PURE__*/React.createElement(BlmCopyFrom, {\n      anchor: anchorEle,\n      onClose: onPanelCLose,\n      open: copyFromOpen,\n      element: selectedElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 11\n      }\n    }));\n  }\n}\n\nexport default BlmContextMenu;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/structures/panel/context-menu/BlmContextMenu.tsx"],"names":["React","useState","Popover","List","ListItem","ListItemIcon","Divider","Popper","useTranslation","CourseElement","ElementType","ContextMenuLabels","ContextMenuActions","TreeActionTypes","ConnectionCtxItemIcon","MoveToOpenIcon","MoveToCloseIcon","hasAutoSummary","getElementType","getContextMenuActions","hasContextMenuAction","getElementTypeByAction","getConnectionTypeByAction","createConnection","validateSummary","validateAutoSummary","setContentTemplateHTML","getContentTemplateModel","setTemplateSizeHTML","BlmCopyFrom","popperOptions","eventsEnabled","BlmContextMenu","props","data","courseProps","templates","tree","onItemClick","onClose","selectTreeItem","setTreeAction","createElement","deleteElement","duplicateElement","updateElementConnection","updateAutoSummary","updateElementSummary","resetElementTemplate","openDialog","openConfirmDialog","getElementTemplateVal","getElementTemplates","saveTemplates","subMenuPositionElement","updateElementTemplates","selectedIndex","setSelectedIndex","anchor","treeType","open","anchorEl","setAnchorEl","anchorEle","setAnchorEle","actionVal","setActionVal","undefined","copyFromOpen","setCopyFromOpen","selectedElement","setSelectedElement","t","useEffect","apiCall","element","item","value","id","parent","type","handleClose","handleListItemClick","event","index","action","AddChapter","AddEvaluation","AddPage","AddScreen","AddQuestion","AddCustom","AddSimpleContent","AddSimplePage","AddAnnexesFolder","doAdd","EditPage","EditScreen","EditQuestion","EditSimpleContent","EditSimplePage","EditPartPage","doEdit","Rename","doRename","Properties","htmlNode","parentNode","ResetTemplate","doResetTemplate","ResetMargin","doReset","Duplicate","doDuplicate","Delete","doDelete","ActivateSummary","doAutoSummary","DeactivateSummary","DefineSummary","DeleteSummary","doSummary","SwitchSummaryScreen","doSwitchSummary","Screen","SwitchSummaryPage","Page","DefineFirstConnection","DefineSecondConnection","DefineRepeatConnection","doConnection","currentTarget","CopyFrom","app","map","x","sizeMode","width","isSelected","margin","top","left","right","bottom","padding","isFullscreen","hasInnerContainer","newTemplate","html","elementType","AddItem","parentElement","RenameItem","title","message","onOk","isSummary","then","res","payload","node_duplicated","nid","res1","newTemp","length","temp","ind","newContent","template","status","error","Infinity","className","newElement","connectionType","elements","children","posts","reduce","arr","result","push","isItemDisabled","templateType","isLinked","theme","isEvaluation","renderIcon","handleMouseEnter","handleMouseLeave","handleSubMenuClick","move","Starting","Annexes","annexes","Structure","structure","starting","renderSubMenuVal","dataArray","root","course_context","menu","split","forEach","val","indexOf","onPanelCLose","renderList","Boolean","actions","items","ownerDocument","body","flip","enabled","offset","vertical","horizontal","square"],"mappings":"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","sourcesContent":["import React, { useState, MouseEvent } from \"react\";\r\nimport { Popover, List, ListItem, ListItemIcon, Divider, Popper } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  CourseElement,\r\n  ContextMenu,\r\n  UpdateElementConnectionPost,\r\n  CourseElementTemplate,\r\n} from \"types\";\r\nimport {\r\n  ElementType,\r\n  ContextMenuLabels,\r\n  ContextMenuActions,\r\n  TreeActionTypes,\r\n} from \"editor-constants\";\r\nimport { ConnectionCtxItemIcon, MoveToOpenIcon, MoveToCloseIcon } from \"assets/icons\";\r\nimport { hasAutoSummary, getElementType } from \"utils\";\r\nimport {\r\n  getContextMenuActions,\r\n  hasContextMenuAction,\r\n  getElementTypeByAction,\r\n  getConnectionTypeByAction,\r\n  createConnection,\r\n  validateSummary,\r\n  validateAutoSummary,\r\n} from \"./context-menu-utils\";\r\nimport {\r\n  setContentTemplateHTML,\r\n  getContentTemplateModel,\r\n  setTemplateSizeHTML,\r\n} from \"template-builders\";\r\nimport BlmCopyFrom from \"../copy-from\";\r\nimport { ContainerProps } from \"./context-menu-container\";\r\nimport \"./context-menu-styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  data?: ContextMenu;\r\n  onItemClick?: (action: ContextMenuActions, element: CourseElement) => void;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst popperOptions = {\r\n  eventsEnabled: true,\r\n};\r\n\r\nfunction BlmContextMenu(props: CompProps) {\r\n  const {\r\n    data,\r\n    courseProps,\r\n    templates,\r\n    tree,\r\n    onItemClick,\r\n    onClose,\r\n    selectTreeItem,\r\n    setTreeAction,\r\n    createElement,\r\n    deleteElement,\r\n    duplicateElement,\r\n    updateElementConnection,\r\n    updateAutoSummary,\r\n    updateElementSummary,\r\n    resetElementTemplate,\r\n    openDialog,\r\n    openConfirmDialog,\r\n    getElementTemplateVal,\r\n    getElementTemplates,\r\n    saveTemplates,\r\n    subMenuPositionElement,\r\n    updateElementTemplates,\r\n  } = props;\r\n  const [selectedIndex, setSelectedIndex] = useState<number>(-1);\r\n  const { anchor, treeType } = data || {};\r\n  const open = data ? true : false;\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n  const [anchorEle, setAnchorEle] = React.useState<HTMLElement | null>(null);\r\n  const [actionVal, setActionVal] = React.useState<any>(undefined);\r\n  const [copyFromOpen, setCopyFromOpen] = React.useState<any>(false);\r\n  const [selectedElement, setSelectedElement] = React.useState<any>(undefined);\r\n\r\n  const { t } = useTranslation(\"structures\");\r\n\r\n  React.useEffect(() => {\r\n    setSelectedIndex(-1);\r\n  }, [data]);\r\n\r\n  React.useEffect(() => {\r\n    async function apiCall() {\r\n      var element = data?.item;\r\n      if (element) {\r\n        var value: any = { id: await data?.item?.parent?.id };\r\n        if (value.id && element.type === \"partpage\") {\r\n          await getElementTemplates(value);\r\n        }\r\n      }\r\n    }\r\n    apiCall();\r\n  }, [data, getElementTemplates]);\r\n\r\n  const handleClose = () => {\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleListItemClick = (\r\n    event: MouseEvent<HTMLDivElement>,\r\n    index: number,\r\n    action: ContextMenuActions,\r\n    element: CourseElement\r\n  ) => {\r\n    switch (action) {\r\n      case ContextMenuActions.AddChapter:\r\n      case ContextMenuActions.AddEvaluation:\r\n      case ContextMenuActions.AddPage:\r\n      case ContextMenuActions.AddScreen:\r\n      case ContextMenuActions.AddQuestion:\r\n      case ContextMenuActions.AddCustom:\r\n      case ContextMenuActions.AddSimpleContent:\r\n      case ContextMenuActions.AddSimplePage:\r\n      case ContextMenuActions.AddAnnexesFolder:\r\n        doAdd(action, element);\r\n        break;\r\n      case ContextMenuActions.EditPage:\r\n      case ContextMenuActions.EditScreen:\r\n      case ContextMenuActions.EditQuestion:\r\n      case ContextMenuActions.EditSimpleContent:\r\n      case ContextMenuActions.EditSimplePage:\r\n      case ContextMenuActions.EditPartPage:\r\n        doEdit(element);\r\n        break;\r\n      case ContextMenuActions.Rename:\r\n        doRename(element);\r\n        break;\r\n      case ContextMenuActions.Properties:\r\n        let htmlNode = data?.anchor.parentNode as HTMLElement;\r\n        if (element && htmlNode) {\r\n          selectTreeItem(element, htmlNode);\r\n        }\r\n        break;\r\n      case ContextMenuActions.ResetTemplate:\r\n        doResetTemplate(element);\r\n        break;\r\n      case ContextMenuActions.ResetMargin:\r\n        doReset(element);\r\n        break;\r\n      case ContextMenuActions.Duplicate:\r\n        doDuplicate(element);\r\n        break;\r\n      case ContextMenuActions.Delete:\r\n        doDelete(element);\r\n        break;\r\n      case ContextMenuActions.ActivateSummary:\r\n        doAutoSummary(element, true);\r\n        break;\r\n      case ContextMenuActions.DeactivateSummary:\r\n        element.parent && doAutoSummary(element.parent, false);\r\n        break;\r\n      case ContextMenuActions.DefineSummary:\r\n      case ContextMenuActions.DeleteSummary:\r\n        doSummary(element);\r\n        break;\r\n      case ContextMenuActions.SwitchSummaryScreen:\r\n        doSwitchSummary(element, ElementType.Screen);\r\n        break;\r\n      case ContextMenuActions.SwitchSummaryPage:\r\n        doSwitchSummary(element, ElementType.Page);\r\n        break;\r\n      case ContextMenuActions.DefineFirstConnection:\r\n      case ContextMenuActions.DefineSecondConnection:\r\n      case ContextMenuActions.DefineRepeatConnection:\r\n        doConnection(action, element);\r\n        break;\r\n    }\r\n\r\n    if (\r\n      action !== ContextMenuActions.EditPage &&\r\n      action !== ContextMenuActions.EditScreen &&\r\n      action !== ContextMenuActions.EditQuestion &&\r\n      action !== ContextMenuActions.EditSimpleContent &&\r\n      action !== ContextMenuActions.EditSimplePage &&\r\n      action !== ContextMenuActions.EditPartPage &&\r\n      action !== ContextMenuActions.Properties\r\n    ) {\r\n      selectTreeItem();\r\n    }\r\n\r\n    setSelectedIndex(index);\r\n    handleClose();\r\n\r\n    if (action === \"MoveTo\") {\r\n      setAnchorEl(null);\r\n    }\r\n\r\n    if (action === \"CopyFrom\") {\r\n      setAnchorEle(event.currentTarget);\r\n      setActionVal(\"CopyFrom\");\r\n      setCopyFromOpen(true);\r\n      setSelectedElement(element);\r\n      let htmlNode = data?.anchor.parentNode as HTMLElement;\r\n      if (element && htmlNode) {\r\n        selectTreeItem(element, htmlNode);\r\n        setTreeAction({ type: TreeActionTypes.CopyFrom, element });\r\n      }\r\n    }\r\n\r\n    if (onItemClick) {\r\n      onItemClick && onItemClick(action, element);\r\n    }\r\n  };\r\n\r\n  const doReset = async (element: CourseElement) => {\r\n    if (templates) {\r\n      var app: any;\r\n      await templates?.templates?.map((x: any) => {\r\n        if (element.id === x.id) {\r\n          app = {\r\n            ...x,\r\n          };\r\n        }\r\n        return app;\r\n      });\r\n\r\n      let sizeMode: any = {\r\n        width: {\r\n          type: \"full\",\r\n          width: {\r\n            value: \"50\",\r\n            isSelected: false,\r\n          },\r\n        },\r\n        margin: {\r\n          top: {\r\n            value: \"0\",\r\n            isSelected: false,\r\n          },\r\n          left: {\r\n            value: \"0\",\r\n            isSelected: false,\r\n          },\r\n          right: {\r\n            value: \"0\",\r\n            isSelected: false,\r\n          },\r\n          bottom: {\r\n            value: \"50\",\r\n            isSelected: false,\r\n          },\r\n        },\r\n        padding: {\r\n          top: {\r\n            value: \"50\",\r\n            isSelected: false,\r\n          },\r\n          bottom: {\r\n            value: \"50\",\r\n            isSelected: false,\r\n          },\r\n        },\r\n        isFullscreen: false,\r\n        hasInnerContainer: true,\r\n      };\r\n\r\n      if (element.parent && app) {\r\n        let newTemplate = setTemplateSizeHTML(app, sizeMode);\r\n        app.html = newTemplate;\r\n        saveTemplates(element?.parent, app);\r\n      }\r\n    }\r\n  };\r\n\r\n  const doAdd = (action: ContextMenuActions, element: CourseElement) => {\r\n    const elementType = getElementTypeByAction(action);\r\n\r\n    if (elementType) {\r\n      setTreeAction({ type: TreeActionTypes.AddItem, element, elementType });\r\n    }\r\n  };\r\n\r\n  const doEdit = (element: CourseElement) => {\r\n    const htmlNode = data?.anchor?.parentElement as HTMLElement;\r\n\r\n    selectTreeItem(element, htmlNode);\r\n  };\r\n\r\n  const doRename = (element: CourseElement) => {\r\n    setTreeAction({ type: TreeActionTypes.RenameItem, element });\r\n  };\r\n\r\n  const doResetTemplate = (element: CourseElement) => {\r\n    const title = t(\"alert.reset_confirm\");\r\n    const message = t(\"alert.reset_msg\");\r\n    const onOk = () => resetElementTemplate(element);\r\n\r\n    openConfirmDialog(title, message, onOk);\r\n  };\r\n\r\n  const doDuplicate = (element: CourseElement) => {\r\n    if (!element.isSummary) {\r\n      duplicateElement(element).then((res) => {\r\n        getElementTemplateVal(res.payload.node_duplicated.nid).then((res1) => {\r\n          if (res1.payload.templates) {\r\n            var newTemp = res1.payload.templates;\r\n            if (newTemp.length) {\r\n              var templates: CourseElementTemplate[] = [...newTemp];\r\n              newTemp.map((temp: CourseElementTemplate, ind: number) => {\r\n                const newContent = getContentTemplateModel(temp);\r\n                templates[ind].html = setContentTemplateHTML(temp, newContent, \"duplicate\");\r\n                return templates;\r\n              });\r\n              updateElementTemplates(res.payload.node_duplicated.nid, templates, \"duplicate\");\r\n            } else if (newTemp.html !== \"\") {\r\n              var template: CourseElementTemplate = newTemp;\r\n              const newContent = getContentTemplateModel(newTemp);\r\n              template.html = setContentTemplateHTML(newTemp, newContent, \"duplicate\");\r\n              updateElementTemplates(res.payload.node_duplicated.nid, template, \"duplicate\");\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const doDelete = (element: CourseElement) => {\r\n    const title = t(\"alert.delete_confirm\");\r\n    const message = `${t(\"alert.delete_msg_1\")} ${element.type} ${t(\"alert.delete_msg_2\")}`;\r\n    const onOk = () => deleteElement(element);\r\n\r\n    openConfirmDialog(title, message, onOk);\r\n  };\r\n\r\n  const doAutoSummary = (element: CourseElement, status: boolean) => {\r\n    try {\r\n      if (status) {\r\n        validateAutoSummary(element);\r\n      }\r\n      updateAutoSummary(element, status);\r\n    } catch (error) {\r\n      openDialog(`${t(\"alert.warning\")}`, (error as Error).message);\r\n    }\r\n  };\r\n\r\n  const doSummary = (element: CourseElement) => {\r\n    if (treeType) {\r\n      try {\r\n        validateSummary(element, courseProps);\r\n\r\n        if (!element.isSummary && element.parent && hasAutoSummary(element.parent, Infinity)) {\r\n          updateAutoSummary(element.parent, false);\r\n        }\r\n\r\n        updateElementSummary(element, !element.isSummary);\r\n      } catch (error) {\r\n        openDialog(`${t(\"alert.warning\")}`, (error as Error).message, undefined, {\r\n          className: \"summary-warning\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const doSwitchSummary = (element: CourseElement, type: ElementType) => {\r\n    if (element.parent) {\r\n      const newElement = new CourseElement(\"\", t(\"title.new\") + t(`${getElementType(type)}`), type);\r\n      newElement.isSummary = true;\r\n\r\n      createElement(element.parent, newElement, 1);\r\n      updateAutoSummary(element.parent, false);\r\n    }\r\n  };\r\n\r\n  const doConnection = (action: ContextMenuActions, element: CourseElement) => {\r\n    const connectionType = getConnectionTypeByAction(action);\r\n    const elements = element.type === ElementType.Page ? [element, ...element.children] : [element];\r\n\r\n    if (connectionType) {\r\n      const posts = elements.reduce((arr, item) => {\r\n        const result = createConnection(item, connectionType);\r\n\r\n        if (result) {\r\n          arr.push(result);\r\n        }\r\n\r\n        return arr;\r\n      }, [] as UpdateElementConnectionPost[]);\r\n\r\n      if (posts.length > 0) {\r\n        updateElementConnection(element, posts);\r\n      }\r\n    }\r\n  };\r\n\r\n  const isItemDisabled = (element: CourseElement, action: ContextMenuActions) => {\r\n    const { templateType, isSummary, isLinked, theme, isEvaluation } = element;\r\n\r\n    if (action === ContextMenuActions.Duplicate && isSummary) {\r\n      return true;\r\n    } else if (action === ContextMenuActions.ResetTemplate && !templateType) {\r\n      return true;\r\n    } else if (action === ContextMenuActions.Delete && isLinked) {\r\n      return true;\r\n    }\r\n\r\n    if (theme !== \"None\" && action === ContextMenuActions.CopyFrom && isEvaluation) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const renderIcon = (\r\n    element: CourseElement,\r\n    action: ContextMenuActions,\r\n    open: boolean,\r\n    type?: string\r\n  ) => {\r\n    if (hasContextMenuAction(element, action)) {\r\n      return (\r\n        <ListItemIcon className=\"connexion-menue-icon\">\r\n          <ConnectionCtxItemIcon />\r\n        </ListItemIcon>\r\n      );\r\n    }\r\n    if (action === \"MoveTo\" && type) {\r\n      return (\r\n        <ListItemIcon className=\"test-icon\">\r\n          {open ? <MoveToOpenIcon /> : <MoveToCloseIcon />}\r\n        </ListItemIcon>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleMouseEnter = (event: MouseEvent<HTMLDivElement>, action: ContextMenuActions) => {\r\n    if (action === \"MoveTo\") {\r\n      setAnchorEl(event.currentTarget);\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = (action: ContextMenuActions) => {\r\n    if (action === \"MoveTo\") {\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n\r\n  const handleSubMenuClick = (element: CourseElement, type: ElementType, move: ElementType) => {\r\n    if (type === ElementType.Starting && move === ElementType.Annexes) {\r\n      subMenuPositionElement(element?.id, element?.parent?.id, tree?.annexes?.id, 0);\r\n    } else if (type === ElementType.Starting && move === ElementType.Structure) {\r\n      subMenuPositionElement(element?.id, element?.parent?.id, tree?.structure?.id, 0);\r\n    } else if (type === ElementType.Structure && move === ElementType.Annexes) {\r\n      subMenuPositionElement(element?.id, element?.parent?.id, tree?.annexes?.id, 0);\r\n    } else if (type === ElementType.Structure && move === ElementType.Starting) {\r\n      subMenuPositionElement(element?.id, element?.parent?.id, tree?.starting?.id, 0);\r\n    } else if (type === ElementType.Annexes && move === ElementType.Structure) {\r\n      subMenuPositionElement(element?.id, element?.parent?.id, tree?.structure?.id, 0);\r\n    } else if (type === ElementType.Annexes && move === ElementType.Starting) {\r\n      subMenuPositionElement(element?.id, element?.parent?.id, tree?.starting?.id, 0);\r\n    }\r\n  };\r\n\r\n  const renderSubMenuVal = (element: CourseElement) => {\r\n    var dataArray: Array<any> = [];\r\n    const type = element?.root?.type;\r\n    if (element.children.length !== 0) {\r\n      element.children.map((value: CourseElement) => {\r\n        if (value?.template?.course_context) {\r\n          var menu = value?.template?.course_context.split(/[ ,]+/);\r\n          menu.forEach((val: string) => {\r\n            if (dataArray.indexOf(val) === -1 && val !== \"null\") {\r\n              dataArray.push(val);\r\n            }\r\n          });\r\n        }\r\n        return dataArray;\r\n      });\r\n    } else {\r\n      if (element?.template?.course_context) {\r\n        var menu = element?.template?.course_context.split(/[ ,]+/);\r\n        menu.forEach((val: string) => {\r\n          if (dataArray.indexOf(val) === -1 && val !== \"null\") {\r\n            dataArray.push(val);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    switch (type) {\r\n      case ElementType.Starting:\r\n        return (\r\n          <>\r\n            <ListItem\r\n              disabled={\r\n                dataArray.indexOf(ElementType.Structure) === -1 &&\r\n                dataArray.length > 0 &&\r\n                dataArray !== null\r\n              }\r\n              onClick={(event) => handleSubMenuClick(element, type, ElementType.Structure)}\r\n            >\r\n              {ElementType.Structure}\r\n            </ListItem>\r\n            <ListItem\r\n              disabled={\r\n                dataArray.indexOf(ElementType.Annexes) === -1 &&\r\n                dataArray.length > 0 &&\r\n                dataArray !== null\r\n              }\r\n              onClick={(event) => handleSubMenuClick(element, type, ElementType.Annexes)}\r\n            >\r\n              {ElementType.Annexes}\r\n            </ListItem>\r\n          </>\r\n        );\r\n      case ElementType.Structure:\r\n        return (\r\n          <>\r\n            <ListItem\r\n              disabled={dataArray.indexOf(ElementType.Starting) === -1 && dataArray.length > 0}\r\n              onClick={(event) => handleSubMenuClick(element, type, ElementType.Starting)}\r\n            >\r\n              {ElementType.Starting}\r\n            </ListItem>\r\n            <ListItem\r\n              disabled={dataArray.indexOf(ElementType.Annexes) === -1 && dataArray.length > 0}\r\n              onClick={(event) => handleSubMenuClick(element, type, ElementType.Annexes)}\r\n            >\r\n              {ElementType.Annexes}\r\n            </ListItem>\r\n          </>\r\n        );\r\n      case ElementType.Annexes:\r\n        return (\r\n          <>\r\n            <ListItem\r\n              disabled={dataArray.indexOf(ElementType.Starting) === -1 && dataArray.length > 0}\r\n              onClick={(event) => handleSubMenuClick(element, type, ElementType.Starting)}\r\n            >\r\n              {ElementType.Starting}\r\n            </ListItem>\r\n            <ListItem\r\n              disabled={dataArray.indexOf(ElementType.Structure) === -1 && dataArray.length > 0}\r\n              onClick={(event) => handleSubMenuClick(element, type, ElementType.Structure)}\r\n            >\r\n              {ElementType.Structure}\r\n            </ListItem>\r\n          </>\r\n        );\r\n    }\r\n  };\r\n\r\n  const onPanelCLose = () => {\r\n    setCopyFromOpen(false);\r\n  };\r\n\r\n  const renderList = (element: CourseElement) => {\r\n    const open = Boolean(anchorEl);\r\n    if (treeType) {\r\n      const actions = getContextMenuActions(element, treeType, courseProps);\r\n      const items = actions.map((action, ind) => {\r\n        if (action === \"divider\") {\r\n          return <Divider key={ind} />;\r\n        } else {\r\n          return (\r\n            <ListItem\r\n              button\r\n              key={ind}\r\n              selected={selectedIndex === ind || (action === \"MoveTo\" && open)}\r\n              disabled={isItemDisabled(element, action)}\r\n              onClick={(event) => handleListItemClick(event, ind, action, element)}\r\n              onMouseEnter={(event) => handleMouseEnter(event, action)}\r\n              onMouseLeave={(event) => handleMouseLeave(action)}\r\n            >\r\n              {renderIcon(element, action, open, element.parent?.type)}\r\n              {t(ContextMenuLabels[action])}\r\n              {action === \"MoveTo\" && open && (\r\n                <Popper\r\n                  open={open}\r\n                  anchorEl={anchorEl}\r\n                  container={anchorEl?.ownerDocument.body}\r\n                  placement=\"bottom-start\"\r\n                  popperOptions={popperOptions}\r\n                  className=\"sub-context-menu\"\r\n                  modifiers={{\r\n                    flip: {\r\n                      enabled: false,\r\n                    },\r\n                    offset: {\r\n                      enabled: true,\r\n                      offset: \"300,-28, 20\",\r\n                    },\r\n                  }}\r\n                >\r\n                  <List>{renderSubMenuVal(element)}</List>\r\n                </Popper>\r\n              )}\r\n            </ListItem>\r\n          );\r\n        }\r\n      });\r\n\r\n      return items;\r\n    }\r\n  };\r\n\r\n  if (data) {\r\n    return (\r\n      <Popover\r\n        id=\"structure-ctx\"\r\n        open={open}\r\n        anchorEl={anchor}\r\n        anchorOrigin={{\r\n          vertical: \"center\",\r\n          horizontal: \"right\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n        PaperProps={{ square: true }}\r\n        transitionDuration={0}\r\n        className=\"structrues-context-menu\"\r\n        onClose={handleClose}\r\n      >\r\n        {open && <List>{renderList(data.item)}</List>}\r\n      </Popover>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        {actionVal === \"CopyFrom\" && copyFromOpen && (\r\n          <BlmCopyFrom\r\n            anchor={anchorEle}\r\n            onClose={onPanelCLose}\r\n            open={copyFromOpen}\r\n            element={selectedElement}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlmContextMenu;\r\n"]},"metadata":{},"sourceType":"module"}