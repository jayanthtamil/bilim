{"ast":null,"code":"import { Parser } from \"html-to-react\";\nimport { isValidNode, processDefaultNode } from \"utils\";\nconst parser = new Parser();\n\nfunction BlmHTMLParser(props) {\n  const {\n    html,\n    processingInstructions = []\n  } = props;\n  const instructrions = [...processingInstructions, {\n    // Anything else\n    shouldProcessNode: function (node) {\n      return true;\n    },\n    processNode: processDefaultNode\n  }];\n  return parser.parseWithInstructions(html, isValidNode, instructrions);\n}\n\nexport default BlmHTMLParser;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/shared/html-parser/html-parser.tsx"],"names":["Parser","isValidNode","processDefaultNode","parser","BlmHTMLParser","props","html","processingInstructions","instructrions","shouldProcessNode","node","processNode","parseWithInstructions"],"mappings":"AAAA,SAASA,MAAT,QAA+C,eAA/C;AAEA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,OAAhD;AAOA,MAAMC,MAAM,GAAG,IAAIH,MAAJ,EAAf;;AAEA,SAASI,aAAT,CAAuBC,KAAvB,EAAyC;AACvC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,sBAAsB,GAAG;AAAjC,MAAwCF,KAA9C;AAEA,QAAMG,aAAuC,GAAG,CAC9C,GAAGD,sBAD2C,EAE9C;AACE;AACAE,IAAAA,iBAAiB,EAAE,UAAUC,IAAV,EAAgB;AACjC,aAAO,IAAP;AACD,KAJH;AAKEC,IAAAA,WAAW,EAAET;AALf,GAF8C,CAAhD;AAWA,SAAOC,MAAM,CAACS,qBAAP,CAA6BN,IAA7B,EAAmCL,WAAnC,EAAgDO,aAAhD,CAAP;AACD;;AAED,eAAeJ,aAAf","sourcesContent":["import { Parser, TProcessingInstruction } from \"html-to-react\";\r\n\r\nimport { isValidNode, processDefaultNode } from \"utils\";\r\n\r\nexport interface CompProps {\r\n  html: string;\r\n  processingInstructions?: TProcessingInstruction[];\r\n}\r\n\r\nconst parser = new Parser();\r\n\r\nfunction BlmHTMLParser(props: CompProps) {\r\n  const { html, processingInstructions = [] } = props;\r\n\r\n  const instructrions: TProcessingInstruction[] = [\r\n    ...processingInstructions,\r\n    {\r\n      // Anything else\r\n      shouldProcessNode: function (node) {\r\n        return true;\r\n      },\r\n      processNode: processDefaultNode,\r\n    },\r\n  ];\r\n\r\n  return parser.parseWithInstructions(html, isValidNode, instructrions);\r\n}\r\n\r\nexport default BlmHTMLParser;\r\n"]},"metadata":{},"sourceType":"module"}