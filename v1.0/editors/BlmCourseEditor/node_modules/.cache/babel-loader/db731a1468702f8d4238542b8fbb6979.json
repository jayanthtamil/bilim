{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\hotspot\\\\picker\\\\360\\\\Blm360Preview.tsx\";\nimport React, { Component, createRef } from \"react\";\nimport clsx from \"clsx\";\nimport { ImagePanorama, Viewer } from \"panolens\";\nimport { Scene } from \"three\";\nimport { CSS3DRenderer, CSS3DSprite } from \"three/examples/jsm/renderers/CSS3DRenderer.js\";\nimport { MediaHotspotItem } from \"types\";\nimport { StyleListTypes } from \"editor-constants\";\nimport { createShortUUID, findIndex } from \"utils\";\nimport { withBlmTemplateFrame } from \"components/frames\";\nimport { getDefaultComponentStyle } from \"components/content-editor/reducers\";\nimport { getViewerPosition } from \"./utils\";\nimport { DragControls } from \"./drag-controls\";\nimport { with360PreviewStyles } from \"./styles\";\n\nclass Blm360Preview extends Component {\n  constructor(props) {\n    super(props);\n    this.containerRef = void 0;\n    this.styleType = StyleListTypes.MediaHotspotItem360;\n    this.itemMap = new Map();\n    this.objMap = new Map();\n    this.deleteMap = new Map();\n    this.options2 = void 0;\n    this.viewer = void 0;\n    this.panorama = void 0;\n    this.scene2 = void 0;\n    this.renderer2 = void 0;\n    this.controls = void 0;\n    this.state = {\n      items: []\n    };\n    this.containerRef = createRef();\n    this.viewer = null;\n    this.panorama = null;\n    this.scene2 = null;\n    this.renderer2 = null;\n    this.controls = null;\n    this.options2 = props.options2;\n    this.animate = this.animate.bind(this);\n    this.handleViewerResize = this.handleViewerResize.bind(this);\n    this.handlePanoramaClick = this.handlePanoramaClick.bind(this);\n    this.handleDragEnd = this.handleDragEnd.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n  }\n\n  updateChange(name, value) {\n    const {\n      onChange\n    } = this.props;\n\n    if (onChange) {\n      onChange({\n        target: {\n          name,\n          value\n        }\n      });\n    }\n  }\n\n  animate() {\n    if (this.viewer && this.scene2) {\n      requestAnimationFrame(this.animate);\n      this.renderer2.render(this.scene2, this.viewer.camera);\n    }\n  }\n\n  addItem(item) {\n    var _this$scene;\n\n    const {\n      id,\n      x,\n      y,\n      z,\n      callToAction,\n      hasDark,\n      name,\n      style = getDefaultComponentStyle(this.styleType)\n    } = item;\n    const {\n      selectedItem,\n      classes\n    } = this.props;\n    const root = document.createElement(\"div\");\n    const mediaWrapper = document.createElement(\"div\");\n    const deleteWrapper = document.createElement(\"div\");\n    const lblWrapper = document.createElement(\"div\");\n    const img = document.createElement(\"img\");\n    const deleteBtn = document.createElement(\"div\");\n    const lbl = document.createElement(\"span\");\n    root.setAttribute(\"blm-role\", \"hotspot\");\n    root.setAttribute(\"blm-order\", \"1\");\n    root.setAttribute(\"blm-calltoaction\", callToAction.toString());\n    root.setAttribute(\"blm-action\", \"action\");\n    root.classList.add(...clsx(classes.itemRoot, style, {\n      light: !hasDark,\n      [classes.selected]: item === selectedItem\n    }).split(\" \"));\n    mediaWrapper.classList.add(\"mediawrapper\");\n    lblWrapper.classList.add(\"hotspotlabel\");\n    deleteWrapper.classList.add(classes.deleteWrapper);\n    deleteBtn.classList.add(classes.deleteBtn);\n    lbl.textContent = name;\n    mediaWrapper.appendChild(img);\n    lblWrapper.appendChild(lbl);\n    deleteWrapper.appendChild(deleteBtn);\n    root.appendChild(mediaWrapper);\n    root.appendChild(lblWrapper);\n    root.appendChild(deleteWrapper);\n    deleteBtn.addEventListener(\"click\", this.handleDeleteClick);\n    const object = new CSS3DSprite(root);\n    object.position.set(x, y, z);\n    object.rotation.y = Math.PI;\n    object.scale.set(1.3, 1.3, 1);\n    (_this$scene = this.scene2) === null || _this$scene === void 0 ? void 0 : _this$scene.add(object);\n    this.controls.add(object);\n    this.itemMap.set(id, item);\n    this.objMap.set(id, object);\n    this.deleteMap.set(id, deleteBtn);\n  }\n\n  updateItem(item) {\n    const {\n      id\n    } = item;\n    const {\n      selectedItem,\n      classes,\n      styleConfig\n    } = this.props;\n    const object = this.objMap.get(id);\n\n    if (object) {\n      var _styleConfig$this$sty;\n\n      const root = object.element;\n      const config = styleConfig ? (_styleConfig$this$sty = styleConfig[this.styleType]) === null || _styleConfig$this$sty === void 0 ? void 0 : _styleConfig$this$sty.classNames : undefined;\n\n      if (config && item === selectedItem && selectedItem.style) {\n        config.forEach(function (item) {\n          if (root.classList.contains(item)) {\n            root.classList.remove(item);\n          }\n        });\n        root.classList.add(selectedItem.style);\n      }\n\n      if (item === selectedItem && !root.classList.contains(classes.selected)) {\n        root.classList.add(classes.selected);\n      } else if (item !== selectedItem && root.classList.contains(classes.selected)) {\n        root.classList.remove(classes.selected);\n      }\n    }\n\n    this.itemMap.set(id, item);\n  }\n\n  removeItem(itemId) {\n    const object = this.objMap.get(itemId);\n    const deleteBtn = this.deleteMap.get(itemId);\n\n    if (object) {\n      var _this$scene2;\n\n      (_this$scene2 = this.scene2) === null || _this$scene2 === void 0 ? void 0 : _this$scene2.remove(object);\n      this.controls.remove(object);\n    }\n\n    deleteBtn === null || deleteBtn === void 0 ? void 0 : deleteBtn.removeEventListener(\"click\", this.handleDeleteClick);\n    this.itemMap.delete(itemId);\n    this.objMap.delete(itemId);\n    this.deleteMap.delete(itemId);\n  }\n\n  updateItems() {\n    const {\n      items\n    } = this.state;\n    Array.from(this.itemMap.keys()).forEach(id => {\n      const ind = findIndex(items, id, \"id\");\n\n      if (ind === -1) {\n        this.removeItem(id);\n      }\n    });\n    items.forEach(item => {\n      const oldItem = this.itemMap.get(item.id);\n\n      if (!oldItem) {\n        this.addItem(item);\n      } else {\n        this.updateItem(item);\n      }\n    });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    var _data$media;\n\n    const {\n      data,\n      selectedItem\n    } = props;\n    let result = state;\n\n    if (((_data$media = data.media) === null || _data$media === void 0 ? void 0 : _data$media.url) !== state.url) {\n      var _props$data$media;\n\n      result = { ...result,\n        url: (_props$data$media = props.data.media) === null || _props$data$media === void 0 ? void 0 : _props$data$media.url\n      };\n    }\n\n    if (data.items !== state.items) {\n      result = { ...result,\n        items: data.items\n      };\n    }\n\n    if (selectedItem !== state.selectedItem) {\n      result = { ...result,\n        selectedItem\n      };\n    }\n\n    return result;\n  }\n\n  componentDidMount() {\n    const container = this.containerRef.current;\n\n    if (container) {\n      this.viewer = new Viewer({\n        container,\n        controlBar: false,\n        autoHideInfospot: false\n      });\n      this.panorama = new ImagePanorama(this.state.url);\n      this.panorama.animationDuration = 0;\n      this.updateViewerSetting(this.options2);\n      this.viewer.add(this.panorama);\n      this.scene2 = new Scene();\n      this.renderer2 = new CSS3DRenderer({\n        alpha: true\n      });\n      this.renderer2.setSize(container.clientWidth, container.clientHeight);\n      this.renderer2.domElement.style.pointerEvents = \"none\";\n      this.renderer2.domElement.style.position = \"absolute\";\n      this.renderer2.domElement.style.top = 0;\n      this.controls = new DragControls(this.viewer, container);\n      container.appendChild(this.renderer2.domElement);\n      this.viewer.addEventListener(\"window-resize\", this.handleViewerResize);\n      this.panorama.addEventListener(\"click\", this.handlePanoramaClick);\n      this.controls.addEventListener(\"dragend\", this.handleDragEnd);\n      this.animate();\n      this.updateItems();\n    }\n  }\n\n  updateViewerSetting(options2) {\n    if (options2) {\n      this.viewer.OrbitControls.minPolarAngle = 0;\n      this.viewer.OrbitControls.maxPolarAngle = Math.PI;\n      this.viewer.OrbitControls.minAzimuthAngle = -Infinity;\n      this.viewer.OrbitControls.maxAzimuthAngle = Infinity;\n      this.viewer.OrbitControls.noZoom = false;\n      if (!options2.zoom) this.viewer.OrbitControls.noZoom = true;\n\n      if (options2.vertical === \"lock\") {\n        this.viewer.OrbitControls.minPolarAngle = Math.PI * 2 / 4;\n        this.viewer.OrbitControls.maxPolarAngle = Math.PI * 2 / 4;\n      }\n\n      if (options2.vertical === \"half\") {\n        this.viewer.OrbitControls.minPolarAngle = Math.PI / 3;\n        this.viewer.OrbitControls.maxPolarAngle = Math.PI * 2 / 3;\n      }\n\n      if (options2.horizontal === \"lock\") {\n        this.viewer.OrbitControls.minAzimuthAngle = 0;\n        this.viewer.OrbitControls.maxAzimuthAngle = 0;\n      }\n\n      if (options2.horizontal === \"half\") {\n        this.viewer.OrbitControls.minAzimuthAngle = -Math.PI / 3;\n        this.viewer.OrbitControls.maxAzimuthAngle = Math.PI / 3;\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      url,\n      items,\n      selectedItem\n    } = this.state;\n    const {\n      options2\n    } = this.props;\n\n    if (url !== prevState.url && this.panorama) {\n      var _this$panorama$materi;\n\n      this.panorama.material.opacity = 0;\n      (_this$panorama$materi = this.panorama.material.map) === null || _this$panorama$materi === void 0 ? void 0 : _this$panorama$materi.dispose();\n      this.panorama.updateTexture(null);\n      this.panorama.load(url);\n    }\n\n    if (items !== prevState.items || selectedItem !== prevState.selectedItem) {\n      this.updateItems();\n    }\n\n    if (options2 !== prevProps.options2) {\n      this.updateViewerSetting(options2);\n    }\n  }\n\n  componentWillUnmount() {\n    const container = this.containerRef.current;\n\n    while (container === null || container === void 0 ? void 0 : container.lastChild) container.removeChild(container.lastChild);\n\n    this.viewer.removeEventListener(\"window-resize\", this.handleViewerResize);\n    this.panorama.removeEventListener(\"click\", this.handlePanoramaClick);\n    this.viewer.dispose();\n    this.controls.dispose();\n    this.viewer = null;\n    this.panorama = null;\n    this.scene2 = null;\n    this.renderer2 = null;\n    this.controls = null;\n  }\n\n  handleViewerResize(event) {\n    var _this$renderer;\n\n    const {\n      width,\n      height\n    } = event;\n    (_this$renderer = this.renderer2) === null || _this$renderer === void 0 ? void 0 : _this$renderer.setSize(width, height);\n  }\n\n  handlePanoramaClick(event) {\n    if (event.intersects.length || event.mouseEvent.button !== 0) {\n      return;\n    }\n\n    const {\n      data\n    } = this.props;\n    const {\n      items,\n      style\n    } = data;\n\n    if (this.viewer) {\n      const position = getViewerPosition(this.viewer);\n\n      if (position) {\n        var _items$length;\n\n        const item = new MediaHotspotItem();\n        item.id = createShortUUID();\n        item.name = `Hotspot ${((_items$length = items === null || items === void 0 ? void 0 : items.length) !== null && _items$length !== void 0 ? _items$length : 0) + 1}`;\n        item.x = position.x;\n        item.y = position.y;\n        item.z = position.z;\n        item.style = style !== null && style !== void 0 ? style : getDefaultComponentStyle(this.styleType);\n        this.updateChange(\"add\", item);\n      }\n    }\n  }\n\n  handleDragEnd(event) {\n    const object = event.object;\n\n    if (object) {\n      this.objMap.forEach((value, key) => {\n        if (object === value) {\n          const item = this.itemMap.get(key);\n\n          if (item) {\n            item.x = object.position.x;\n            item.y = object.position.y;\n            item.z = object.position.z;\n            this.updateChange(\"move\", item);\n          }\n        }\n      });\n    }\n  }\n\n  handleDeleteClick(event) {\n    const target = event.target;\n    this.deleteMap.forEach((value, id) => {\n      if (target === value) {\n        const item = this.itemMap.get(id);\n\n        if (item) {\n          this.updateChange(\"delete\", item);\n        }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.containerRef,\n      className: this.props.classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default withBlmTemplateFrame(with360PreviewStyles(Blm360Preview));","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/hotspot/picker/360/Blm360Preview.tsx"],"names":["React","Component","createRef","clsx","ImagePanorama","Viewer","Scene","CSS3DRenderer","CSS3DSprite","MediaHotspotItem","StyleListTypes","createShortUUID","findIndex","withBlmTemplateFrame","getDefaultComponentStyle","getViewerPosition","DragControls","with360PreviewStyles","Blm360Preview","constructor","props","containerRef","styleType","MediaHotspotItem360","itemMap","Map","objMap","deleteMap","options2","viewer","panorama","scene2","renderer2","controls","state","items","animate","bind","handleViewerResize","handlePanoramaClick","handleDragEnd","handleDeleteClick","updateChange","name","value","onChange","target","requestAnimationFrame","render","camera","addItem","item","id","x","y","z","callToAction","hasDark","style","selectedItem","classes","root","document","createElement","mediaWrapper","deleteWrapper","lblWrapper","img","deleteBtn","lbl","setAttribute","toString","classList","add","itemRoot","light","selected","split","textContent","appendChild","addEventListener","object","position","set","rotation","Math","PI","scale","updateItem","styleConfig","get","element","config","classNames","undefined","forEach","contains","remove","removeItem","itemId","removeEventListener","delete","updateItems","Array","from","keys","ind","oldItem","getDerivedStateFromProps","data","result","media","url","componentDidMount","container","current","controlBar","autoHideInfospot","animationDuration","updateViewerSetting","alpha","setSize","clientWidth","clientHeight","domElement","pointerEvents","top","OrbitControls","minPolarAngle","maxPolarAngle","minAzimuthAngle","Infinity","maxAzimuthAngle","noZoom","zoom","vertical","horizontal","componentDidUpdate","prevProps","prevState","material","opacity","map","dispose","updateTexture","load","componentWillUnmount","lastChild","removeChild","event","width","height","intersects","length","mouseEvent","button","key"],"mappings":"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","sourcesContent":["import React, { ReactNode, Component, createRef, RefObject } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { ImagePanorama, Viewer } from \"panolens\";\r\nimport { Scene } from \"three\";\r\nimport { CSS3DRenderer, CSS3DSprite } from \"three/examples/jsm/renderers/CSS3DRenderer.js\";\r\n\r\nimport { CustomChangeEvent, MediaConfigOptions, MediaHotspot, MediaHotspotItem } from \"types\";\r\nimport { StyleListTypes } from \"editor-constants\";\r\nimport { createShortUUID, findIndex } from \"utils\";\r\nimport { withBlmTemplateFrame } from \"components/frames\";\r\nimport { getDefaultComponentStyle } from \"components/content-editor/reducers\";\r\nimport { getViewerPosition } from \"./utils\";\r\nimport { DragControls } from \"./drag-controls\";\r\nimport { with360PreviewStyles, H360PreviewStyleProps } from \"./styles\";\r\nimport { ContainerProps } from \"./container\";\r\n\r\nexport type HotspotChangeEvent = CustomChangeEvent<MediaHotspotItem>;\r\n\r\nexport interface HotspotPanoramaProps extends H360PreviewStyleProps, ContainerProps {\r\n  data: MediaHotspot;\r\n  selectedItem?: MediaHotspotItem;\r\n  onChange?: (event: HotspotChangeEvent) => void;\r\n  options2?: MediaConfigOptions;\r\n}\r\n\r\ninterface HotspotPanoramaState {\r\n  url?: string;\r\n  items: MediaHotspotItem[];\r\n  selectedItem?: MediaHotspotItem;\r\n}\r\n\r\nclass Blm360Preview extends Component<HotspotPanoramaProps, HotspotPanoramaState> {\r\n  containerRef: RefObject<HTMLDivElement>;\r\n  styleType = StyleListTypes.MediaHotspotItem360;\r\n  itemMap = new Map<string, MediaHotspotItem>();\r\n  objMap = new Map<string, any>();\r\n  deleteMap = new Map<string, HTMLDivElement>();\r\n  options2?: MediaConfigOptions;\r\n  viewer: any;\r\n  panorama: any;\r\n  scene2: any;\r\n  renderer2: any;\r\n  controls: any;\r\n\r\n  constructor(props: HotspotPanoramaProps) {\r\n    super(props);\r\n\r\n    this.state = { items: [] };\r\n    this.containerRef = createRef();\r\n    this.viewer = null;\r\n    this.panorama = null;\r\n    this.scene2 = null;\r\n    this.renderer2 = null;\r\n    this.controls = null;\r\n    this.options2 = props.options2;\r\n    this.animate = this.animate.bind(this);\r\n    this.handleViewerResize = this.handleViewerResize.bind(this);\r\n    this.handlePanoramaClick = this.handlePanoramaClick.bind(this);\r\n    this.handleDragEnd = this.handleDragEnd.bind(this);\r\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n  }\r\n\r\n  updateChange(name: string, value: MediaHotspotItem) {\r\n    const { onChange } = this.props;\r\n\r\n    if (onChange) {\r\n      onChange({ target: { name, value } });\r\n    }\r\n  }\r\n\r\n  animate() {\r\n    if (this.viewer && this.scene2) {\r\n      requestAnimationFrame(this.animate);\r\n      this.renderer2.render(this.scene2, this.viewer.camera);\r\n    }\r\n  }\r\n\r\n  addItem(item: MediaHotspotItem) {\r\n    const {\r\n      id,\r\n      x,\r\n      y,\r\n      z,\r\n      callToAction,\r\n      hasDark,\r\n      name,\r\n      style = getDefaultComponentStyle(this.styleType),\r\n    } = item;\r\n    const { selectedItem, classes } = this.props;\r\n    const root = document.createElement(\"div\");\r\n    const mediaWrapper = document.createElement(\"div\");\r\n    const deleteWrapper = document.createElement(\"div\");\r\n    const lblWrapper = document.createElement(\"div\");\r\n    const img = document.createElement(\"img\");\r\n    const deleteBtn = document.createElement(\"div\");\r\n    const lbl = document.createElement(\"span\");\r\n\r\n    root.setAttribute(\"blm-role\", \"hotspot\");\r\n    root.setAttribute(\"blm-order\", \"1\");\r\n    root.setAttribute(\"blm-calltoaction\", callToAction.toString());\r\n    root.setAttribute(\"blm-action\", \"action\");\r\n    root.classList.add(\r\n      ...clsx(classes.itemRoot, style, {\r\n        light: !hasDark,\r\n        [classes.selected]: item === selectedItem,\r\n      }).split(\" \")\r\n    );\r\n\r\n    mediaWrapper.classList.add(\"mediawrapper\");\r\n    lblWrapper.classList.add(\"hotspotlabel\");\r\n    deleteWrapper.classList.add(classes.deleteWrapper);\r\n    deleteBtn.classList.add(classes.deleteBtn);\r\n    lbl.textContent = name;\r\n\r\n    mediaWrapper.appendChild(img);\r\n    lblWrapper.appendChild(lbl);\r\n    deleteWrapper.appendChild(deleteBtn);\r\n\r\n    root.appendChild(mediaWrapper);\r\n    root.appendChild(lblWrapper);\r\n    root.appendChild(deleteWrapper);\r\n\r\n    deleteBtn.addEventListener(\"click\", this.handleDeleteClick);\r\n\r\n    const object = new CSS3DSprite(root);\r\n    object.position.set(x, y, z);\r\n    object.rotation.y = Math.PI;\r\n    object.scale.set(1.3, 1.3, 1);\r\n\r\n    this.scene2?.add(object);\r\n    this.controls.add(object);\r\n    this.itemMap.set(id, item);\r\n    this.objMap.set(id, object);\r\n    this.deleteMap.set(id, deleteBtn);\r\n  }\r\n\r\n  updateItem(item: MediaHotspotItem) {\r\n    const { id } = item;\r\n    const { selectedItem, classes, styleConfig } = this.props;\r\n    const object = this.objMap.get(id);\r\n\r\n    if (object) {\r\n      const root = object.element as HTMLDivElement;\r\n      const config = styleConfig ? styleConfig[this.styleType]?.classNames : undefined;\r\n\r\n      if (config && item === selectedItem && selectedItem.style) {\r\n        config.forEach(function (item) {\r\n          if (root.classList.contains(item)) {\r\n            root.classList.remove(item);\r\n          }\r\n        });\r\n        root.classList.add(selectedItem.style);\r\n      }\r\n\r\n      if (item === selectedItem && !root.classList.contains(classes.selected)) {\r\n        root.classList.add(classes.selected);\r\n      } else if (item !== selectedItem && root.classList.contains(classes.selected)) {\r\n        root.classList.remove(classes.selected);\r\n      }\r\n    }\r\n\r\n    this.itemMap.set(id, item);\r\n  }\r\n\r\n  removeItem(itemId: string) {\r\n    const object = this.objMap.get(itemId);\r\n    const deleteBtn = this.deleteMap.get(itemId);\r\n\r\n    if (object) {\r\n      this.scene2?.remove(object);\r\n      this.controls.remove(object);\r\n    }\r\n\r\n    deleteBtn?.removeEventListener(\"click\", this.handleDeleteClick);\r\n\r\n    this.itemMap.delete(itemId);\r\n    this.objMap.delete(itemId);\r\n    this.deleteMap.delete(itemId);\r\n  }\r\n\r\n  updateItems() {\r\n    const { items } = this.state;\r\n\r\n    Array.from(this.itemMap.keys()).forEach((id) => {\r\n      const ind = findIndex(items, id, \"id\");\r\n\r\n      if (ind === -1) {\r\n        this.removeItem(id);\r\n      }\r\n    });\r\n\r\n    items.forEach((item) => {\r\n      const oldItem = this.itemMap.get(item.id);\r\n\r\n      if (!oldItem) {\r\n        this.addItem(item);\r\n      } else {\r\n        this.updateItem(item);\r\n      }\r\n    });\r\n  }\r\n\r\n  static getDerivedStateFromProps(props: HotspotPanoramaProps, state: HotspotPanoramaState) {\r\n    const { data, selectedItem } = props;\r\n    let result = state;\r\n\r\n    if (data.media?.url !== state.url) {\r\n      result = { ...result, url: props.data.media?.url };\r\n    }\r\n\r\n    if (data.items !== state.items) {\r\n      result = { ...result, items: data.items };\r\n    }\r\n\r\n    if (selectedItem !== state.selectedItem) {\r\n      result = { ...result, selectedItem };\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    const container = this.containerRef.current;\r\n\r\n    if (container) {\r\n      this.viewer = new Viewer({\r\n        container,\r\n        controlBar: false,\r\n        autoHideInfospot: false,\r\n      });\r\n      this.panorama = new ImagePanorama(this.state.url);\r\n      this.panorama.animationDuration = 0;\r\n      this.updateViewerSetting(this.options2);\r\n\r\n      this.viewer.add(this.panorama);\r\n\r\n      this.scene2 = new Scene();\r\n      this.renderer2 = new CSS3DRenderer({ alpha: true });\r\n      this.renderer2.setSize(container.clientWidth, container.clientHeight);\r\n      this.renderer2.domElement.style.pointerEvents = \"none\";\r\n      this.renderer2.domElement.style.position = \"absolute\";\r\n      this.renderer2.domElement.style.top = 0;\r\n\r\n      this.controls = new DragControls(this.viewer, container);\r\n\r\n      container.appendChild(this.renderer2.domElement);\r\n\r\n      this.viewer.addEventListener(\"window-resize\", this.handleViewerResize);\r\n      this.panorama.addEventListener(\"click\", this.handlePanoramaClick);\r\n      this.controls.addEventListener(\"dragend\", this.handleDragEnd);\r\n      this.animate();\r\n\r\n      this.updateItems();\r\n    }\r\n  }\r\n\r\n  private updateViewerSetting(options2?: MediaConfigOptions) {\r\n    if (options2) {\r\n      this.viewer.OrbitControls.minPolarAngle = 0;\r\n      this.viewer.OrbitControls.maxPolarAngle = Math.PI;\r\n      this.viewer.OrbitControls.minAzimuthAngle = -Infinity;\r\n      this.viewer.OrbitControls.maxAzimuthAngle = Infinity;\r\n      this.viewer.OrbitControls.noZoom = false;\r\n      if (!options2.zoom) this.viewer.OrbitControls.noZoom = true;\r\n      if (options2.vertical === \"lock\") {\r\n        this.viewer.OrbitControls.minPolarAngle = (Math.PI * 2) / 4;\r\n        this.viewer.OrbitControls.maxPolarAngle = (Math.PI * 2) / 4;\r\n      }\r\n      if (options2.vertical === \"half\") {\r\n        this.viewer.OrbitControls.minPolarAngle = Math.PI / 3;\r\n        this.viewer.OrbitControls.maxPolarAngle = (Math.PI * 2) / 3;\r\n      }\r\n      if (options2.horizontal === \"lock\") {\r\n        this.viewer.OrbitControls.minAzimuthAngle = 0;\r\n        this.viewer.OrbitControls.maxAzimuthAngle = 0;\r\n      }\r\n      if (options2.horizontal === \"half\") {\r\n        this.viewer.OrbitControls.minAzimuthAngle = -Math.PI / 3;\r\n        this.viewer.OrbitControls.maxAzimuthAngle = Math.PI / 3;\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(\r\n    prevProps: Readonly<HotspotPanoramaProps>,\r\n    prevState: Readonly<HotspotPanoramaState>\r\n  ): void {\r\n    const { url, items, selectedItem } = this.state;\r\n    const { options2 } = this.props;\r\n\r\n    if (url !== prevState.url && this.panorama) {\r\n      this.panorama.material.opacity = 0;\r\n      this.panorama.material.map?.dispose();\r\n      this.panorama.updateTexture(null);\r\n      this.panorama.load(url);\r\n    }\r\n\r\n    if (items !== prevState.items || selectedItem !== prevState.selectedItem) {\r\n      this.updateItems();\r\n    }\r\n\r\n    if (options2 !== prevProps.options2) {\r\n      this.updateViewerSetting(options2);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const container = this.containerRef.current;\r\n\r\n    while (container?.lastChild) container.removeChild(container.lastChild);\r\n\r\n    this.viewer.removeEventListener(\"window-resize\", this.handleViewerResize);\r\n    this.panorama.removeEventListener(\"click\", this.handlePanoramaClick);\r\n    this.viewer.dispose();\r\n    this.controls!.dispose();\r\n    this.viewer = null;\r\n    this.panorama = null;\r\n    this.scene2 = null;\r\n    this.renderer2 = null;\r\n    this.controls = null;\r\n  }\r\n\r\n  handleViewerResize(event: any) {\r\n    const { width, height } = event;\r\n\r\n    this.renderer2?.setSize(width, height);\r\n  }\r\n\r\n  handlePanoramaClick(event: any) {\r\n    if (event.intersects.length || event.mouseEvent.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    const { data } = this.props;\r\n    const { items, style } = data;\r\n\r\n    if (this.viewer) {\r\n      const position = getViewerPosition(this.viewer);\r\n\r\n      if (position) {\r\n        const item = new MediaHotspotItem();\r\n\r\n        item.id = createShortUUID();\r\n        item.name = `Hotspot ${(items?.length ?? 0) + 1}`;\r\n        item.x = position.x;\r\n        item.y = position.y;\r\n        item.z = position.z;\r\n        item.style = style ?? getDefaultComponentStyle(this.styleType);\r\n\r\n        this.updateChange(\"add\", item);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDragEnd(event: any) {\r\n    const object = event.object;\r\n\r\n    if (object) {\r\n      this.objMap.forEach((value, key) => {\r\n        if (object === value) {\r\n          const item = this.itemMap.get(key);\r\n\r\n          if (item) {\r\n            item.x = object.position.x;\r\n            item.y = object.position.y;\r\n            item.z = object.position.z;\r\n            this.updateChange(\"move\", item);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDeleteClick(event: MouseEvent) {\r\n    const target = event.target;\r\n\r\n    this.deleteMap.forEach((value, id) => {\r\n      if (target === value) {\r\n        const item = this.itemMap.get(id);\r\n\r\n        if (item) {\r\n          this.updateChange(\"delete\", item);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render(): ReactNode {\r\n    return <div ref={this.containerRef} className={this.props.classes.root} />;\r\n  }\r\n}\r\n\r\nexport default withBlmTemplateFrame(with360PreviewStyles(Blm360Preview));\r\n"]},"metadata":{},"sourceType":"module"}