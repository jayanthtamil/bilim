{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\shared\\\\media-editor\\\\components\\\\seek-bar\\\\BlmSeekBar.tsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { MediaPlayerTypes } from \"editor-constants\";\nimport { formatTime } from \"utils\";\nimport { BlmTransformComponent, DragGeometry, MovementConstraint } from \"shared\";\nimport \"./styles.scss\";\nconst initModel = new DragGeometry(0, 0, 0, 26);\nconst HANDLE_WIDTH = 18;\n\nfunction BlmSeekBar(props) {\n  var _wrapperRef$current$o, _wrapperRef$current;\n\n  const {\n    type,\n    currentTime,\n    duration,\n    subtitles,\n    markers,\n    onChange\n  } = props;\n  const wrapperRef = useRef(null);\n  const [dragModel, setDragModel] = useState();\n  const wrapperWidth = ((_wrapperRef$current$o = (_wrapperRef$current = wrapperRef.current) === null || _wrapperRef$current === void 0 ? void 0 : _wrapperRef$current.offsetWidth) !== null && _wrapperRef$current$o !== void 0 ? _wrapperRef$current$o : 0) - HANDLE_WIDTH;\n  const currentPercentage = currentTime / duration || 0;\n  const constraints = [new MovementConstraint(0, 0, wrapperWidth, 0)];\n  const model = { ...initModel,\n    x: currentPercentage * wrapperWidth\n  };\n  useEffect(() => {\n    if (dragModel) {\n      setDragModel(undefined);\n    }\n  }, [dragModel]);\n\n  const format = (time = 0) => {\n    if (type === MediaPlayerTypes.Lottie) {\n      return Math.floor(time);\n    } else {\n      return formatTime(time);\n    }\n  };\n\n  const updateChange = time => {\n    if (onChange) {\n      onChange(time);\n    }\n  };\n\n  const handleClick = event => {\n    var _wrapperRef$current2;\n\n    const rect = (_wrapperRef$current2 = wrapperRef.current) === null || _wrapperRef$current2 === void 0 ? void 0 : _wrapperRef$current2.getBoundingClientRect();\n\n    if (rect) {\n      const xPos = event.clientX - rect.x;\n      const percentage = Math.min(Math.max(xPos / rect.width, 0), 1);\n      const newTime = percentage * duration;\n      updateChange(newTime);\n    }\n  };\n\n  const handleChange = newModel => {\n    const newTime = newModel.x / wrapperWidth * duration;\n    updateChange(newTime);\n    setDragModel(newModel);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"seekbar-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"seekbar-duration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, format(currentTime)), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, ` / ${format(duration)}`)), /*#__PURE__*/React.createElement(\"div\", {\n    ref: wrapperRef,\n    className: \"seekbar-pg-wrapper\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"seekbar-progress\",\n    style: {\n      width: `${currentPercentage * 100}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"seekbar-handle-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BlmTransformComponent, {\n    data: dragModel !== null && dragModel !== void 0 ? dragModel : model,\n    constraints: constraints,\n    className: \"seekbar-handle\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"seekbar-subtitles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, subtitles.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      style: {\n        left: `${item.startTime / duration * 100}%`,\n        width: `${(item.endTime - item.startTime) / duration * 100}%`\n      },\n      className: \"seekbar-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"seekbar-markers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, markers.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      style: {\n        left: `${item.startTime / duration * 100}%`\n      },\n      className: \"seekbar-marker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    });\n  }))));\n}\n\nexport default BlmSeekBar;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/media-editor/components/seek-bar/BlmSeekBar.tsx"],"names":["React","useRef","useEffect","useState","MediaPlayerTypes","formatTime","BlmTransformComponent","DragGeometry","MovementConstraint","initModel","HANDLE_WIDTH","BlmSeekBar","props","type","currentTime","duration","subtitles","markers","onChange","wrapperRef","dragModel","setDragModel","wrapperWidth","current","offsetWidth","currentPercentage","constraints","model","x","undefined","format","time","Lottie","Math","floor","updateChange","handleClick","event","rect","getBoundingClientRect","xPos","clientX","percentage","min","max","width","newTime","handleChange","newModel","map","item","index","left","startTime","endTime"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, MouseEvent as ReactMouseEvent } from \"react\";\r\n\r\nimport { MediaTrackCue } from \"types\";\r\nimport { MediaPlayerTypes } from \"editor-constants\";\r\nimport { formatTime } from \"utils\";\r\nimport { BlmTransformComponent, DragGeometry, MovementConstraint } from \"shared\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  type: MediaPlayerTypes;\r\n  currentTime: number;\r\n  duration: number;\r\n  subtitles: MediaTrackCue[];\r\n  markers: MediaTrackCue[];\r\n  onChange: (time: number) => void;\r\n}\r\n\r\nconst initModel = new DragGeometry(0, 0, 0, 26);\r\nconst HANDLE_WIDTH = 18;\r\n\r\nfunction BlmSeekBar(props: CompProps) {\r\n  const { type, currentTime, duration, subtitles, markers, onChange } = props;\r\n  const wrapperRef = useRef<HTMLDivElement>(null);\r\n  const [dragModel, setDragModel] = useState<DragGeometry>();\r\n  const wrapperWidth = (wrapperRef.current?.offsetWidth ?? 0) - HANDLE_WIDTH;\r\n  const currentPercentage = currentTime / duration || 0;\r\n  const constraints = [new MovementConstraint(0, 0, wrapperWidth, 0)];\r\n  const model = {\r\n    ...initModel,\r\n    x: currentPercentage * wrapperWidth,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dragModel) {\r\n      setDragModel(undefined);\r\n    }\r\n  }, [dragModel]);\r\n\r\n  const format = (time = 0) => {\r\n    if (type === MediaPlayerTypes.Lottie) {\r\n      return Math.floor(time);\r\n    } else {\r\n      return formatTime(time);\r\n    }\r\n  };\r\n\r\n  const updateChange = (time: number) => {\r\n    if (onChange) {\r\n      onChange(time);\r\n    }\r\n  };\r\n\r\n  const handleClick = (event: ReactMouseEvent) => {\r\n    const rect = wrapperRef.current?.getBoundingClientRect();\r\n\r\n    if (rect) {\r\n      const xPos = event.clientX - rect.x;\r\n      const percentage = Math.min(Math.max(xPos / rect.width, 0), 1);\r\n      const newTime = percentage * duration;\r\n\r\n      updateChange(newTime);\r\n    }\r\n  };\r\n\r\n  const handleChange = (newModel: DragGeometry) => {\r\n    const newTime = (newModel.x / wrapperWidth) * duration;\r\n\r\n    updateChange(newTime);\r\n    setDragModel(newModel);\r\n  };\r\n\r\n  return (\r\n    <div className=\"seekbar-wrapper\">\r\n      <div className=\"seekbar-duration\">\r\n        <span>{format(currentTime)}</span>\r\n        <span>{` / ${format(duration)}`}</span>\r\n      </div>\r\n      <div ref={wrapperRef} className=\"seekbar-pg-wrapper\" onClick={handleClick}>\r\n        <div className=\"seekbar-progress\" style={{ width: `${currentPercentage * 100}%` }} />\r\n        <div className=\"seekbar-handle-wrapper\">\r\n          <BlmTransformComponent\r\n            data={dragModel ?? model}\r\n            constraints={constraints}\r\n            className=\"seekbar-handle\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"seekbar-subtitles\">\r\n          {subtitles.map((item, index) => {\r\n            return (\r\n              <span\r\n                key={index}\r\n                style={{\r\n                  left: `${(item.startTime / duration) * 100}%`,\r\n                  width: `${((item.endTime - item.startTime) / duration) * 100}%`,\r\n                }}\r\n                className=\"seekbar-subtitle\"\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"seekbar-markers\">\r\n          {markers.map((item, index) => {\r\n            return (\r\n              <span\r\n                key={index}\r\n                style={{\r\n                  left: `${(item.startTime / duration) * 100}%`,\r\n                }}\r\n                className=\"seekbar-marker\"\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmSeekBar;\r\n"]},"metadata":{},"sourceType":"module"}