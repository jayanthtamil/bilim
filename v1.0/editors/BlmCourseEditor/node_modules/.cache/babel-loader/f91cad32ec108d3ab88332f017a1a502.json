{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\shared\\\\material-ui\\\\tabs\\\\tabs.tsx\";\nimport React, { useState, isValidElement } from \"react\";\nimport clsx from \"clsx\";\nimport MuiAppBar from \"@material-ui/core/AppBar\";\nimport MuiTabs from \"@material-ui/core/Tabs\";\nimport MuiTab from \"@material-ui/core/Tab\";\nimport \"./tabs-styles.scss\";\nexport default function Tabs(props) {\n  const {\n    children,\n    selectedIndex = 0,\n    closableTab = false,\n    className,\n    onTabChange\n  } = props;\n  const [currentIndex, setCurrentIndex] = useState(selectedIndex);\n  const tabs = children.filter(isValidElement);\n  React.useEffect(() => {\n    setCurrentIndex(selectedIndex);\n  }, [selectedIndex, setCurrentIndex]);\n\n  const handleChange = (event, newValue) => {\n    // const { ctrlKey, altKey, shiftKey } = event;\n    const selectedTabText = event.currentTarget.textContent;\n\n    if ((selectedTabText === \"Flap\" || selectedTabText === \"Detailed\") && !(event.ctrlKey && event.altKey && event.shiftKey)) {\n      return;\n    }\n\n    const curInd = closableTab && currentIndex === newValue ? false : newValue;\n    setCurrentIndex(curInd);\n\n    if (onTabChange) {\n      onTabChange(newValue);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"tabs-container\", className, {\n      \"tab-selected\": currentIndex !== false,\n      \"tab-disabled\": currentIndex >= 0 && currentIndex < tabs.length ? tabs[currentIndex || 0].props.disabled : false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MuiAppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MuiTabs, {\n    value: currentIndex,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, tabs.map((tab, index) => /*#__PURE__*/React.createElement(MuiTab, {\n    key: index,\n    label: tab.props.label,\n    disableRipple: true,\n    disabled: tab.props.disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-panel-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, tabs.map((tab, index) => {\n    if (currentIndex === index) {\n      return tab;\n    } else {\n      return null;\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/shared/material-ui/tabs/tabs.tsx"],"names":["React","useState","isValidElement","clsx","MuiAppBar","MuiTabs","MuiTab","Tabs","props","children","selectedIndex","closableTab","className","onTabChange","currentIndex","setCurrentIndex","tabs","filter","useEffect","handleChange","event","newValue","selectedTabText","currentTarget","textContent","ctrlKey","altKey","shiftKey","curInd","length","disabled","map","tab","index","label"],"mappings":"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","sourcesContent":["import React, { useState, isValidElement, ReactElement } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport MuiAppBar from \"@material-ui/core/AppBar\";\r\nimport MuiTabs from \"@material-ui/core/Tabs\";\r\nimport MuiTab from \"@material-ui/core/Tab\";\r\n\r\nimport { TabProps } from \"./tab\";\r\nimport \"./tabs-styles.scss\";\r\n\r\ninterface CompProps {\r\n  children: (ReactElement<TabProps> | boolean | null | undefined)[];\r\n  selectedIndex?: false | number;\r\n  closableTab?: boolean;\r\n  className?: string;\r\n  onTabChange?: (value: number) => void;\r\n}\r\n\r\nexport default function Tabs(props: CompProps) {\r\n  const { children, selectedIndex = 0, closableTab = false, className, onTabChange } = props;\r\n  const [currentIndex, setCurrentIndex] = useState(selectedIndex);\r\n  const tabs = children.filter<ReactElement<TabProps>>(isValidElement);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentIndex(selectedIndex);\r\n  }, [selectedIndex, setCurrentIndex]);\r\n\r\n  const handleChange = (event: any, newValue: number) => {\r\n    // const { ctrlKey, altKey, shiftKey } = event;\r\n    const selectedTabText = event.currentTarget.textContent;\r\n    if (\r\n      (selectedTabText === \"Flap\" || selectedTabText === \"Detailed\") &&\r\n      !(event.ctrlKey && event.altKey && event.shiftKey)\r\n    ) {\r\n      return;\r\n    }\r\n    const curInd = closableTab && currentIndex === newValue ? false : newValue;\r\n    setCurrentIndex(curInd);\r\n\r\n    if (onTabChange) {\r\n      onTabChange(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\"tabs-container\", className, {\r\n        \"tab-selected\": currentIndex !== false,\r\n        \"tab-disabled\":\r\n          currentIndex >= 0 && currentIndex < tabs.length\r\n            ? tabs[currentIndex || 0].props.disabled\r\n            : false,\r\n      })}\r\n    >\r\n      <MuiAppBar position=\"static\">\r\n        <MuiTabs value={currentIndex} onChange={handleChange}>\r\n          {tabs.map((tab, index) => (\r\n            <MuiTab\r\n              key={index}\r\n              label={tab.props.label}\r\n              disableRipple\r\n              disabled={tab.props.disabled}\r\n            />\r\n          ))}\r\n        </MuiTabs>\r\n      </MuiAppBar>\r\n      <div className=\"tab-panel-container\">\r\n        {tabs.map((tab, index) => {\r\n          if (currentIndex === index) {\r\n            return tab;\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}