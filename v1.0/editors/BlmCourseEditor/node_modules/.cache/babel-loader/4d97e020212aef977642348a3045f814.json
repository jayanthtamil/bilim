{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\styles\\\\tint-picker\\\\BlmStyleTintPicker.tsx\";\nimport React, { Fragment } from \"react\";\nimport { FormControlLabel, Switch, Checkbox } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { StyleListTypes } from \"editor-constants\";\nimport { BlmTintPicker } from \"shared\";\nimport BlmStylePicker from \"../picker\";\nimport \"./styles.scss\";\nconst defaultTint = {\n  alpha: 50\n};\n\nfunction BlmStyleTintPicker(props) {\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n  const {\n    type,\n    name,\n    data,\n    tintTitle = t(\"label.tint\"),\n    tintSubTitle = t(\"title.opacity\"),\n    tintBgTitle = t(\"style.secondary_tint_opacity\"),\n    showBgTint = false,\n    styleConfig,\n    tintColors,\n    bgTintColors,\n    buttonTintOut,\n    buttonTintOver,\n    onChange,\n    ...others\n  } = props;\n  const {\n    map,\n    classNames\n  } = styleConfig || {};\n  const {\n    style,\n    tint,\n    bgTint,\n    tintOver,\n    tintOut,\n    hasLight,\n    hasDarkOut,\n    hasDarkOver,\n    isShadow\n  } = data;\n  const currentStyle = classNames && (style && classNames.includes(style) ? style : classNames[0]);\n  const currentItem = map && currentStyle ? map[currentStyle] : undefined;\n\n  const updateChange = value => {\n    if (onChange) {\n      onChange({\n        target: {\n          name,\n          value\n        }\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const target = event.target;\n    const {\n      name,\n      type: typeVal,\n      checked\n    } = target;\n    const value = typeVal === \"checkbox\" ? target.checked : target.value;\n    const newData = { ...data\n    };\n\n    if (name === \"style\") {\n      newData.style = value;\n    } else if (name === \"tint\" || name === \"bgTint\" || name === \"tintOut\" || name === \"tintOver\") {\n      newData[name] = value;\n    } else if (name === \"light\") {\n      newData.hasLight = !value;\n    } else if (name === \"lightOut\") {\n      newData.hasDarkOut = type === StyleListTypes.MediaButton || type === StyleListTypes.MediaButtonSummary ? !value : value;\n    } else if (name === \"lightOver\") {\n      newData.hasDarkOver = type === StyleListTypes.MediaButton || type === StyleListTypes.MediaButtonSummary ? !value : value;\n    } else if (name === \"shadow\") {\n      newData.isShadow = checked;\n    }\n\n    updateChange(newData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"style-tint-picker-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BlmStylePicker, Object.assign({\n    type: type,\n    name: \"style\",\n    value: style,\n    style: data,\n    onChange: handleChange\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  })), currentItem && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"style-picker-params-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"style-picker-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, t(\"style.style_name\"), \" :\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"style-picker-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, currentItem.name), type !== StyleListTypes.Button && type !== StyleListTypes.MediaButton && type !== StyleListTypes.MediaVideo && type !== StyleListTypes.MediaButtonSummary && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BlmTintPicker, {\n    title: tintTitle,\n    subTitle: tintSubTitle,\n    data: tint,\n    defaultTint: currentItem.tint || defaultTint,\n    colors: tintColors,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), showBgTint && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"style-picker-bg-tint-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, tintBgTitle), /*#__PURE__*/React.createElement(BlmTintPicker, {\n    name: \"bgTint\",\n    data: bgTint,\n    defaultTint: currentItem.bgTint || defaultTint,\n    colors: bgTintColors,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"style-picker-image-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"style-picker-image-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, t(\"label.image\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"style-picker-light-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, t(\"label.light\")), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"light\",\n    label: t(\"label.dark\"),\n    control: /*#__PURE__*/React.createElement(Switch, {\n      className: \"switch-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 30\n      }\n    }),\n    checked: !hasLight,\n    className: \"style-picker-img-switch-ctrl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }))), (type === StyleListTypes.Button || type === StyleListTypes.MediaButton || type === StyleListTypes.MediaButtonSummary) && /*#__PURE__*/React.createElement(React.Fragment, null, (type === StyleListTypes.MediaButton || type === StyleListTypes.MediaButtonSummary) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BlmTintPicker, {\n    title: tintTitle,\n    subTitle: tintSubTitle,\n    outOver: \"OUT\",\n    data: tint,\n    defaultTint: currentItem.tint || defaultTint,\n    colors: tintColors,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(BlmTintPicker, {\n    title: tintTitle,\n    subTitle: tintSubTitle,\n    name: \"bgTint\",\n    outOver: \"OVER\",\n    data: bgTint,\n    defaultTint: currentItem.bgTint || defaultTint,\n    colors: bgTintColors,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  })), type === StyleListTypes.Button && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BlmTintPicker, {\n    title: tintTitle,\n    subTitle: tintSubTitle,\n    name: \"tintOut\",\n    outOver: \"OUT\",\n    data: tintOut,\n    defaultTint: currentItem.tintOut || defaultTint,\n    colors: buttonTintOut,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(BlmTintPicker, {\n    title: tintTitle,\n    subTitle: tintSubTitle,\n    name: \"tintOver\",\n    outOver: \"OVER\",\n    data: tintOver,\n    defaultTint: currentItem.tintOver || defaultTint,\n    colors: buttonTintOver,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"style-picker-image-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"style-picker-light-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, t(\"label.light\")), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"lightOut\",\n    label: t(\"label.dark\"),\n    control: /*#__PURE__*/React.createElement(Switch, {\n      className: \"switch-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 28\n      }\n    }),\n    checked: type === StyleListTypes.Button ? hasDarkOut : !hasDarkOut,\n    className: \"style-picker-img-switch-ctrl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"style-picker-image-box-over\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"style-picker-light-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, t(\"label.light\")), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"lightOver\",\n    label: t(\"label.dark\"),\n    control: /*#__PURE__*/React.createElement(Switch, {\n      className: \"switch-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 28\n      }\n    }),\n    checked: type === StyleListTypes.Button ? hasDarkOver : !hasDarkOver,\n    className: \"style-picker-img-switch-ctrl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }))), (type === StyleListTypes.Button || type === StyleListTypes.MediaButton || type === StyleListTypes.MediaImage || type === StyleListTypes.MediaVideo || type === StyleListTypes.Sound || type === StyleListTypes.MediaButtonSummary) && /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"shadow\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"switch-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 24\n      }\n    }),\n    checked: isShadow,\n    label: t(\"label.shadow\"),\n    className: `${\"style-shadow-\" + type}`,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 27\n    }\n  })));\n}\n\nexport default BlmStyleTintPicker;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/styles/tint-picker/BlmStyleTintPicker.tsx"],"names":["React","Fragment","FormControlLabel","Switch","Checkbox","useTranslation","StyleListTypes","BlmTintPicker","BlmStylePicker","defaultTint","alpha","BlmStyleTintPicker","props","t","type","name","data","tintTitle","tintSubTitle","tintBgTitle","showBgTint","styleConfig","tintColors","bgTintColors","buttonTintOut","buttonTintOver","onChange","others","map","classNames","style","tint","bgTint","tintOver","tintOut","hasLight","hasDarkOut","hasDarkOver","isShadow","currentStyle","includes","currentItem","undefined","updateChange","value","target","handleChange","event","typeVal","checked","newData","MediaButton","MediaButtonSummary","Button","MediaVideo","MediaImage","Sound"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Fragment } from \"react\";\r\nimport { FormControlLabel, Switch, Checkbox } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StyleListTypes } from \"editor-constants\";\r\nimport { ComponentStyle, CustomChangeEvent, Tint } from \"types\";\r\nimport { BlmTintPicker } from \"shared\";\r\nimport BlmStylePicker, { StylePickerProps } from \"../picker\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport type StyleTintPickerChangeEvent = CustomChangeEvent<ComponentStyle>;\r\n\r\nexport interface CompProps extends ContainerProps, Omit<StylePickerProps, \"style\" | \"onChange\"> {\r\n  data: ComponentStyle;\r\n  tintTitle?: string;\r\n  tintSubTitle?: string;\r\n  tintBgTitle?: string;\r\n  showBgTint?: boolean;\r\n  onChange?: (event: StyleTintPickerChangeEvent) => void;\r\n}\r\n\r\nconst defaultTint: Tint = { alpha: 50 };\r\n\r\nfunction BlmStyleTintPicker(props: CompProps) {\r\n  const { t } = useTranslation(\"content-editor\");\r\n  const {\r\n    type,\r\n    name,\r\n    data,\r\n    tintTitle = t(\"label.tint\"),\r\n    tintSubTitle = t(\"title.opacity\"),\r\n    tintBgTitle = t(\"style.secondary_tint_opacity\"),\r\n    showBgTint = false,\r\n    styleConfig,\r\n    tintColors,\r\n    bgTintColors,\r\n    buttonTintOut,\r\n    buttonTintOver,\r\n    onChange,\r\n    ...others\r\n  } = props;\r\n    const { map, classNames } = styleConfig || {};\r\n  const { style, tint, bgTint, tintOver, tintOut, hasLight, hasDarkOut, hasDarkOver, isShadow } =\r\n    data;\r\n  const currentStyle = classNames && (style && classNames.includes(style) ? style : classNames[0]);\r\n  const currentItem = map && currentStyle ? map[currentStyle] : undefined;\r\n  const updateChange = (value: ComponentStyle) => {\r\n    if (onChange) {\r\n      onChange({ target: { name, value } });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<any> | CustomChangeEvent<Tint | string>) => {\r\n    const target = event.target;\r\n    const {\r\n      name,\r\n      type: typeVal,\r\n      checked,\r\n    }: { name: string; type: string; checked: boolean } = target;\r\n    const value = typeVal === \"checkbox\" ? target.checked : target.value;\r\n    const newData = { ...data };\r\n\r\n    if (name === \"style\") {\r\n      newData.style = value as string;\r\n    } else if (name === \"tint\" || name === \"bgTint\" || name === \"tintOut\" || name === \"tintOver\") {\r\n      newData[name] = value as Tint;\r\n    } else if (name === \"light\") {\r\n      newData.hasLight = !(value as boolean);\r\n    } else if (name === \"lightOut\") {\r\n      newData.hasDarkOut =\r\n        type === StyleListTypes.MediaButton || type === StyleListTypes.MediaButtonSummary\r\n          ? (!value as boolean)\r\n          : (value as boolean);\r\n    } else if (name === \"lightOver\") {\r\n      newData.hasDarkOver =\r\n        type === StyleListTypes.MediaButton || type === StyleListTypes.MediaButtonSummary\r\n          ? (!value as boolean)\r\n          : (value as boolean);\r\n    } else if (name === \"shadow\") {\r\n      newData.isShadow = checked;\r\n    }\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"style-tint-picker-wrapper\">\r\n      <BlmStylePicker\r\n        type={type}\r\n        name=\"style\"\r\n        value={style}\r\n        style={data}\r\n        onChange={handleChange}\r\n        {...others}\r\n      />\r\n      {currentItem && (\r\n        <div className=\"style-picker-params-wrapper\">\r\n          <div className=\"style-picker-lbl\">{t(\"style.style_name\")} :</div>\r\n          <div className=\"style-picker-name\">{currentItem.name}</div>\r\n\r\n          {type !== StyleListTypes.Button &&\r\n            type !== StyleListTypes.MediaButton &&\r\n            type !== StyleListTypes.MediaVideo &&\r\n            type !== StyleListTypes.MediaButtonSummary && (\r\n              <>\r\n                <BlmTintPicker\r\n                  title={tintTitle}\r\n                  subTitle={tintSubTitle}\r\n                  data={tint}\r\n                  defaultTint={currentItem.tint || defaultTint}\r\n                  colors={tintColors}\r\n                  onChange={handleChange}\r\n                />\r\n                {showBgTint && (\r\n                  <Fragment>\r\n                    <div className=\"style-picker-bg-tint-lbl\">{tintBgTitle}</div>\r\n                    <BlmTintPicker\r\n                      name=\"bgTint\"\r\n                      data={bgTint}\r\n                      defaultTint={currentItem.bgTint || defaultTint}\r\n                      colors={bgTintColors}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Fragment>\r\n                )}\r\n                <div className=\"style-picker-image-box\">\r\n                  <span className=\"style-picker-image-lbl\">{t(\"label.image\")}</span>\r\n                  <span className=\"style-picker-light-lbl\">{t(\"label.light\")}</span>\r\n                  <FormControlLabel\r\n                    name=\"light\"\r\n                    label={t(\"label.dark\")}\r\n                    control={<Switch className=\"switch-2\" />}\r\n                    checked={!hasLight}\r\n                    className=\"style-picker-img-switch-ctrl\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n          {(type === StyleListTypes.Button ||\r\n            type === StyleListTypes.MediaButton ||\r\n            type === StyleListTypes.MediaButtonSummary) && (\r\n            <>\r\n              {(type === StyleListTypes.MediaButton ||\r\n                type === StyleListTypes.MediaButtonSummary) && (\r\n                <>\r\n                  <BlmTintPicker\r\n                    title={tintTitle}\r\n                    subTitle={tintSubTitle}\r\n                    outOver={\"OUT\"}\r\n                    data={tint}\r\n                    defaultTint={currentItem.tint || defaultTint}\r\n                    colors={tintColors}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <BlmTintPicker\r\n                    title={tintTitle}\r\n                    subTitle={tintSubTitle}\r\n                    name=\"bgTint\"\r\n                    outOver={\"OVER\"}\r\n                    data={bgTint}\r\n                    defaultTint={currentItem.bgTint || defaultTint}\r\n                    colors={bgTintColors}\r\n                    onChange={handleChange}\r\n                  />\r\n                </>\r\n              )}\r\n              {type === StyleListTypes.Button && (\r\n                <>\r\n                  <BlmTintPicker\r\n                    title={tintTitle}\r\n                    subTitle={tintSubTitle}\r\n                    name=\"tintOut\"\r\n                    outOver={\"OUT\"}\r\n                    data={tintOut}\r\n                    defaultTint={currentItem.tintOut || defaultTint}\r\n                    colors={buttonTintOut}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <BlmTintPicker\r\n                    title={tintTitle}\r\n                    subTitle={tintSubTitle}\r\n                    name=\"tintOver\"\r\n                    outOver={\"OVER\"}\r\n                    data={tintOver}\r\n                    defaultTint={currentItem.tintOver || defaultTint}\r\n                    colors={buttonTintOver}\r\n                    onChange={handleChange}\r\n                  />\r\n                </>\r\n              )}\r\n\r\n              <div className=\"style-picker-image-box\">\r\n                <span className=\"style-picker-light-lbl\">{t(\"label.light\")}</span>\r\n                <FormControlLabel\r\n                  name=\"lightOut\"\r\n                  label={t(\"label.dark\")}\r\n                  control={<Switch className=\"switch-2\" />}\r\n                  checked={type === StyleListTypes.Button ? hasDarkOut : !hasDarkOut}\r\n                  className=\"style-picker-img-switch-ctrl\"\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"style-picker-image-box-over\">\r\n                <span className=\"style-picker-light-lbl\">{t(\"label.light\")}</span>\r\n                <FormControlLabel\r\n                  name=\"lightOver\"\r\n                  label={t(\"label.dark\")}\r\n                  control={<Switch className=\"switch-2\" />}\r\n                  checked={type === StyleListTypes.Button ? hasDarkOver : !hasDarkOver}\r\n                  className=\"style-picker-img-switch-ctrl\"\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {(type === StyleListTypes.Button ||\r\n            type === StyleListTypes.MediaButton ||\r\n            type === StyleListTypes.MediaImage ||\r\n            type === StyleListTypes.MediaVideo ||\r\n            type === StyleListTypes.Sound ||\r\n            type === StyleListTypes.MediaButtonSummary) && (\r\n                          <FormControlLabel\r\n              name=\"shadow\"\r\n              control={<Checkbox className=\"switch-2\" />}\r\n              checked={isShadow}\r\n              label={t(\"label.shadow\")}\r\n              className={`${\"style-shadow-\" + type}`}\r\n              onChange={handleChange}\r\n            />\r\n                      )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default BlmStyleTintPicker;\r\n"]},"metadata":{},"sourceType":"module"}