{"ast":null,"code":"import { ContentTemplateAction, BackgroundMedia } from \"types\";\nimport { BackgroundOptionTypes } from \"editor-constants\";\nimport { fromRgbaStr, getElementBySelector, toJSONObject } from \"utils\";\nexport const getTemplateActionModel = (template, view) => {\n  var _onload$always, _onload$hidenext, _onload$hideprevious, _onload$hidehome, _oncomplete$keepnextk, _oncomplete$showprevi, _oncomplete$showhome, _view$complete, _view$complete2, _view$complete3;\n\n  const {\n    options\n  } = template;\n  const rootElement = getElementBySelector(template.html, \".outercontainer\");\n  const editorOptions = toJSONObject(rootElement === null || rootElement === void 0 ? void 0 : rootElement.getAttribute(\"blm-editor-options\"));\n  const data = new ContentTemplateAction();\n  const {\n    load,\n    complete\n  } = data;\n  const {\n    onload,\n    oncomplete\n  } = options || {};\n  const {\n    onLoad,\n    onComplete\n  } = editorOptions || {};\n  load.navigation.always = view.load.always ? (_onload$always = onload === null || onload === void 0 ? void 0 : onload.always) !== null && _onload$always !== void 0 ? _onload$always : view.load.always.default : undefined;\n  load.navigation.next = (_onload$hidenext = onload === null || onload === void 0 ? void 0 : onload.hidenext) !== null && _onload$hidenext !== void 0 ? _onload$hidenext : false;\n  load.navigation.previous = (_onload$hideprevious = onload === null || onload === void 0 ? void 0 : onload.hideprevious) !== null && _onload$hideprevious !== void 0 ? _onload$hideprevious : false;\n  load.navigation.home = (_onload$hidehome = onload === null || onload === void 0 ? void 0 : onload.hidehome) !== null && _onload$hidehome !== void 0 ? _onload$hidehome : false;\n  load.simpleContent = createSimpleContent(onload === null || onload === void 0 ? void 0 : onload.opensimplecontent, false, view.load.simpleContent);\n  load.background = createBackground(onload === null || onload === void 0 ? void 0 : onload.changebackground, onLoad === null || onLoad === void 0 ? void 0 : onLoad.background, true, view.load.background);\n  load.sound = createLoadSound(onload === null || onload === void 0 ? void 0 : onload.playsound, onload === null || onload === void 0 ? void 0 : onload.stopsound, onLoad === null || onLoad === void 0 ? void 0 : onLoad.sound, true, view.load.sound);\n  load.backgroundSound = createBackgroundSound(onload === null || onload === void 0 ? void 0 : onload.playbackgroundsound, onload === null || onload === void 0 ? void 0 : onload.stopbackgroundsound, onLoad === null || onLoad === void 0 ? void 0 : onLoad.backgroundsounds, true, view.load.backgroundSound);\n  complete.navigation.next = (_oncomplete$keepnextk = oncomplete === null || oncomplete === void 0 ? void 0 : oncomplete.keepnextkidden) !== null && _oncomplete$keepnextk !== void 0 ? _oncomplete$keepnextk : false;\n  complete.navigation.previous = (_oncomplete$showprevi = oncomplete === null || oncomplete === void 0 ? void 0 : oncomplete.showprevious) !== null && _oncomplete$showprevi !== void 0 ? _oncomplete$showprevi : false;\n  complete.navigation.home = (_oncomplete$showhome = oncomplete === null || oncomplete === void 0 ? void 0 : oncomplete.showhome) !== null && _oncomplete$showhome !== void 0 ? _oncomplete$showhome : false;\n  complete.simpleContent = createSimpleContent(oncomplete === null || oncomplete === void 0 ? void 0 : oncomplete.opensimplecontent, undefined, (_view$complete = view.complete) === null || _view$complete === void 0 ? void 0 : _view$complete.simpleContent);\n  complete.background = createBackground(oncomplete === null || oncomplete === void 0 ? void 0 : oncomplete.changebackground, onComplete === null || onComplete === void 0 ? void 0 : onComplete.background, undefined, (_view$complete2 = view.complete) === null || _view$complete2 === void 0 ? void 0 : _view$complete2.background);\n  complete.sound = createSound(oncomplete === null || oncomplete === void 0 ? void 0 : oncomplete.playsound, onComplete === null || onComplete === void 0 ? void 0 : onComplete.sound, undefined, (_view$complete3 = view.complete) === null || _view$complete3 === void 0 ? void 0 : _view$complete3.sound);\n  return data;\n};\n\nconst createSimpleContent = (obj, defAlways, hasAlways = false) => {\n  const {\n    checked = false,\n    always = defAlways,\n    id: simpleContentId,\n    option,\n    display\n  } = obj || {};\n  return {\n    checked,\n    always: hasAlways ? always : undefined,\n    simpleContentId,\n    option,\n    display\n  };\n};\n\nconst createBackground = (obj, editorObj, defAlways, hasAlways = false) => {\n  const {\n    checked = false,\n    always = defAlways,\n    tint,\n    option1,\n    option2,\n    parallaxe,\n    loop,\n    restore\n  } = obj || {};\n  const {\n    main,\n    webm,\n    image\n  } = editorObj || {};\n  const result = {\n    checked,\n    always: hasAlways ? always : undefined\n  };\n\n  if (main) {\n    const background = new BackgroundMedia();\n    background.main = main;\n    background.webm = webm;\n    background.image = image;\n    background.restore = restore;\n\n    if (tint) {\n      background.tint = fromRgbaStr(tint);\n    }\n\n    if (option1) {\n      background.option = option1;\n\n      if (background.option === BackgroundOptionTypes.Autoplay) {\n        background.optionValue = loop !== null && loop !== void 0 ? loop : false;\n      } else {\n        background.optionValue = parallaxe || 0;\n      }\n\n      if (option2) {\n        background.option2 = option2;\n      }\n    }\n\n    result.background = background;\n  }\n\n  return result;\n};\n\nconst createLoadSound = (obj, object, sound, defAlways, hasAlways = false) => {\n  const {\n    checked = false,\n    always = defAlways\n  } = obj || {};\n  return {\n    checked,\n    unChecked: object === null || object === void 0 ? void 0 : object.checked,\n    always: hasAlways ? always : undefined,\n    sound\n  };\n};\n\nconst createSound = (obj, sound, defAlways, hasAlways = false) => {\n  const {\n    checked = false,\n    always = defAlways\n  } = obj || {};\n  return {\n    checked,\n    always: hasAlways ? always : undefined,\n    sound\n  };\n};\n\nconst createBackgroundSound = (obj, object, backgroundsounds, defAlways, hasAlways = false) => {\n  const {\n    checked = false,\n    always = defAlways\n  } = obj || {};\n  return {\n    checked,\n    unChecked: object === null || object === void 0 ? void 0 : object.checked,\n    always: hasAlways ? always : undefined,\n    backgroundsounds\n  };\n};","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/model/action/index.ts"],"names":["ContentTemplateAction","BackgroundMedia","BackgroundOptionTypes","fromRgbaStr","getElementBySelector","toJSONObject","getTemplateActionModel","template","view","options","rootElement","html","editorOptions","getAttribute","data","load","complete","onload","oncomplete","onLoad","onComplete","navigation","always","default","undefined","next","hidenext","previous","hideprevious","home","hidehome","simpleContent","createSimpleContent","opensimplecontent","background","createBackground","changebackground","sound","createLoadSound","playsound","stopsound","backgroundSound","createBackgroundSound","playbackgroundsound","stopbackgroundsound","backgroundsounds","keepnextkidden","showprevious","showhome","createSound","obj","defAlways","hasAlways","checked","id","simpleContentId","option","display","editorObj","tint","option1","option2","parallaxe","loop","restore","main","webm","image","result","Autoplay","optionValue","object","unChecked"],"mappings":"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","sourcesContent":["import {\r\n  CourseElementTemplate,\r\n  ContentTemplateAction,\r\n  TemplateBackgroundAction,\r\n  TemplateSimpleContentJSON,\r\n  TemplateBackgroundJSON,\r\n  TemplateSoundJSON,\r\n  TemplateEditorOptionsJSON,\r\n  MediaFile,\r\n  BackgroundMedia,\r\n  TemplateEditorBackgroundJSON,\r\n  TempalteActionView,\r\n  TemplateBackgroundSoundAction,\r\n} from \"types\";\r\nimport { BackgroundOption2Types, BackgroundOptionTypes } from \"editor-constants\";\r\nimport { fromRgbaStr, getElementBySelector, toJSONObject } from \"utils\";\r\n\r\nexport const getTemplateActionModel = (\r\n  template: CourseElementTemplate,\r\n  view: TempalteActionView\r\n) => {\r\n  const { options } = template;\r\n  const rootElement = getElementBySelector(template.html, \".outercontainer\");\r\n  const editorOptions = toJSONObject<TemplateEditorOptionsJSON>(\r\n    rootElement?.getAttribute(\"blm-editor-options\")\r\n  );\r\n\r\n  const data = new ContentTemplateAction();\r\n  const { load, complete } = data;\r\n  const { onload, oncomplete } = options || {};\r\n  const { onLoad, onComplete } = editorOptions || {};\r\n\r\n  load.navigation.always = view.load.always\r\n    ? onload?.always ?? view.load.always.default\r\n    : undefined;\r\n  load.navigation.next = onload?.hidenext ?? false;\r\n  load.navigation.previous = onload?.hideprevious ?? false;\r\n  load.navigation.home = onload?.hidehome ?? false;\r\n  load.simpleContent = createSimpleContent(\r\n    onload?.opensimplecontent,\r\n    false,\r\n    view.load.simpleContent\r\n  );\r\n  load.background = createBackground(\r\n    onload?.changebackground,\r\n    onLoad?.background,\r\n    true,\r\n    view.load.background\r\n  );\r\n  load.sound = createLoadSound(\r\n    onload?.playsound,\r\n    onload?.stopsound,\r\n    onLoad?.sound,\r\n    true,\r\n    view.load.sound\r\n  );\r\n  load.backgroundSound = createBackgroundSound(\r\n    onload?.playbackgroundsound,\r\n    onload?.stopbackgroundsound,\r\n    onLoad?.backgroundsounds,\r\n    true,\r\n    view.load.backgroundSound\r\n  );\r\n\r\n  complete.navigation.next = oncomplete?.keepnextkidden ?? false;\r\n  complete.navigation.previous = oncomplete?.showprevious ?? false;\r\n  complete.navigation.home = oncomplete?.showhome ?? false;\r\n  complete.simpleContent = createSimpleContent(\r\n    oncomplete?.opensimplecontent,\r\n    undefined,\r\n    view.complete?.simpleContent\r\n  );\r\n  complete.background = createBackground(\r\n    oncomplete?.changebackground,\r\n    onComplete?.background,\r\n    undefined,\r\n    view.complete?.background\r\n  );\r\n  complete.sound = createSound(\r\n    oncomplete?.playsound,\r\n    onComplete?.sound,\r\n    undefined,\r\n    view.complete?.sound\r\n  );\r\n  return data;\r\n};\r\n\r\nconst createSimpleContent = (\r\n  obj?: TemplateSimpleContentJSON,\r\n  defAlways?: boolean,\r\n  hasAlways = false\r\n) => {\r\n  const { checked = false, always = defAlways, id: simpleContentId, option, display } = obj || {};\r\n\r\n  return { checked, always: hasAlways ? always : undefined, simpleContentId, option, display };\r\n};\r\n\r\nconst createBackground = (\r\n  obj?: TemplateBackgroundJSON,\r\n  editorObj?: TemplateEditorBackgroundJSON,\r\n  defAlways?: boolean,\r\n  hasAlways = false\r\n) => {\r\n  const {\r\n    checked = false,\r\n    always = defAlways,\r\n    tint,\r\n    option1,\r\n    option2,\r\n    parallaxe,\r\n    loop,\r\n    restore,\r\n  } = obj || {};\r\n  const { main, webm, image } = editorObj || {};\r\n  const result: TemplateBackgroundAction = {\r\n    checked,\r\n    always: hasAlways ? always : undefined,\r\n  };\r\n\r\n  if (main) {\r\n    const background = new BackgroundMedia();\r\n\r\n    background.main = main;\r\n    background.webm = webm;\r\n    background.image = image;\r\n    background.restore = restore;\r\n\r\n    if (tint) {\r\n      background.tint = fromRgbaStr(tint);\r\n    }\r\n\r\n    if (option1) {\r\n      background.option = option1 as BackgroundOptionTypes;\r\n\r\n      if (background.option === BackgroundOptionTypes.Autoplay) {\r\n        background.optionValue = loop ?? false;\r\n      } else {\r\n        background.optionValue = parallaxe || 0;\r\n      }\r\n\r\n      if (option2) {\r\n        background.option2 = option2 as BackgroundOption2Types;\r\n      }\r\n    }\r\n\r\n    result.background = background;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst createLoadSound = (\r\n  obj?: TemplateSoundJSON,\r\n  object?: TemplateSoundJSON,\r\n  sound?: MediaFile,\r\n  defAlways?: boolean,\r\n  hasAlways = false\r\n) => {\r\n  const { checked = false, always = defAlways } = obj || {};\r\n\r\n  return { checked, unChecked: object?.checked, always: hasAlways ? always : undefined, sound };\r\n};\r\n\r\nconst createSound = (\r\n  obj?: TemplateSoundJSON,\r\n  sound?: MediaFile,\r\n  defAlways?: boolean,\r\n  hasAlways = false\r\n) => {\r\n  const { checked = false, always = defAlways } = obj || {};\r\n\r\n  return { checked, always: hasAlways ? always : undefined, sound };\r\n};\r\n\r\nconst createBackgroundSound = (\r\n  obj?: TemplateBackgroundSoundAction,\r\n  object?: TemplateBackgroundSoundAction,\r\n  backgroundsounds?: MediaFile,\r\n  defAlways?: boolean,\r\n  hasAlways = false\r\n) => {\r\n  const { checked = false, always = defAlways } = obj || {};\r\n  return {\r\n    checked,\r\n    unChecked: object?.checked,\r\n    always: hasAlways ? always : undefined,\r\n    backgroundsounds,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}