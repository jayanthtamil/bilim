{"ast":null,"code":"import { fetchAPI } from \"redux/api\";\nimport * as actions from \"../types\";\nimport { createExportAPI, createPropertiesAPI } from \"../utils\";\nexport const initializeCourseProperties = id => {\n  return {\n    type: actions.INITIALIZE_COURSE_PROPERTIES,\n    payload: {\n      id: id\n    }\n  };\n};\nexport const getCourseProperties = id => {\n  return fetchAPI({\n    url: \"api/course_document_module/\" + id,\n    method: \"GET\",\n    authenticated: true,\n    types: [actions.GET_COURSE_PROPERTIES_STARTED, actions.GET_COURSE_PROPERTIES_SUCCESS, actions.GET_COURSE_PROPERTIES_ERROR]\n  });\n};\nexport const updateCourseProperties = properties => {\n  const body = createPropertiesAPI(properties);\n  return fetchAPI({\n    url: \"api/course_document_module/\" + properties.id,\n    method: \"PATCH\",\n    authenticated: true,\n    meta: properties,\n    body: JSON.stringify(body),\n    types: [actions.UPDATE_COURSE_PROPERTIES_STARTED, actions.UPDATE_COURSE_PROPERTIES_SUCCESS, actions.UPDATE_COURSE_PROPERTIES_ERROR]\n  });\n};\nexport const replaceCourseFile = (external, file) => {\n  const headers = {\n    \"Content-Disposition\": 'file; filename=\"' + file.name + '\"'\n  };\n  const {\n    id,\n    path\n  } = external;\n  const formData = new FormData();\n  formData.append(\"id\", id);\n  formData.append(\"path\", path);\n  formData.append(\"file\", file, file.name);\n  return fetchAPI({\n    url: \"service/replace-external-file\",\n    method: \"POST\",\n    authenticated: false,\n    headers,\n    body: formData,\n    meta: {\n      id,\n      external\n    },\n    types: [actions.REPLACE_COURSE_FILE_STARTED, actions.REPLACE_COURSE_FILE_SUCCESS, actions.REPLACE_COURSE_FILE_ERROR]\n  });\n};\nexport const getCoursePreview = (courseId, elementId, eventCLick) => {\n  const body = {\n    crs_id: courseId,\n    element_id: elementId || \"\",\n    ctrl_click: eventCLick\n  };\n  return fetchAPI({\n    url: \"preview-course\",\n    method: \"POST\",\n    authenticated: true,\n    body: JSON.stringify(body),\n    types: [actions.GET_COURSE_EXPORTED_STARTED, actions.GET_COURSE_EXPORTED_SUCCESS, actions.GET_COURSE_EXPORTED_ERROR]\n  });\n};\nexport const getCourseExport = (id, exports) => {\n  const body = createExportAPI(id, exports);\n  return fetchAPI({\n    url: \"export-course\",\n    method: \"POST\",\n    authenticated: true,\n    body: JSON.stringify(body),\n    types: [actions.GET_COURSE_EXPORTED_STARTED, actions.GET_COURSE_EXPORTED_SUCCESS, actions.GET_COURSE_EXPORTED_ERROR]\n  });\n};","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/redux/course/properties/actions/index.ts"],"names":["fetchAPI","actions","createExportAPI","createPropertiesAPI","initializeCourseProperties","id","type","INITIALIZE_COURSE_PROPERTIES","payload","getCourseProperties","url","method","authenticated","types","GET_COURSE_PROPERTIES_STARTED","GET_COURSE_PROPERTIES_SUCCESS","GET_COURSE_PROPERTIES_ERROR","updateCourseProperties","properties","body","meta","JSON","stringify","UPDATE_COURSE_PROPERTIES_STARTED","UPDATE_COURSE_PROPERTIES_SUCCESS","UPDATE_COURSE_PROPERTIES_ERROR","replaceCourseFile","external","file","headers","name","path","formData","FormData","append","REPLACE_COURSE_FILE_STARTED","REPLACE_COURSE_FILE_SUCCESS","REPLACE_COURSE_FILE_ERROR","getCoursePreview","courseId","elementId","eventCLick","crs_id","element_id","ctrl_click","GET_COURSE_EXPORTED_STARTED","GET_COURSE_EXPORTED_SUCCESS","GET_COURSE_EXPORTED_ERROR","getCourseExport","exports"],"mappings":"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","sourcesContent":["import { CourseProps, CourseExport, CourseExternalFile } from \"types\";\r\nimport { fetchAPI } from \"redux/api\";\r\nimport * as actions from \"../types\";\r\nimport { createExportAPI, createPropertiesAPI } from \"../utils\";\r\n\r\nexport const initializeCourseProperties = (id: string): actions.InitCourseAction => {\r\n  return {\r\n    type: actions.INITIALIZE_COURSE_PROPERTIES,\r\n    payload: {\r\n      id: id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getCourseProperties = (id: string) => {\r\n  return fetchAPI({\r\n    url: \"api/course_document_module/\" + id,\r\n    method: \"GET\",\r\n    authenticated: true,\r\n    types: [\r\n      actions.GET_COURSE_PROPERTIES_STARTED,\r\n      actions.GET_COURSE_PROPERTIES_SUCCESS,\r\n      actions.GET_COURSE_PROPERTIES_ERROR,\r\n    ],\r\n  });\r\n};\r\n\r\nexport const updateCourseProperties = (properties: CourseProps) => {\r\n  const body = createPropertiesAPI(properties);\r\n\r\n  return fetchAPI({\r\n    url: \"api/course_document_module/\" + properties.id,\r\n    method: \"PATCH\",\r\n    authenticated: true,\r\n    meta: properties,\r\n    body: JSON.stringify(body),\r\n    types: [\r\n      actions.UPDATE_COURSE_PROPERTIES_STARTED,\r\n      actions.UPDATE_COURSE_PROPERTIES_SUCCESS,\r\n      actions.UPDATE_COURSE_PROPERTIES_ERROR,\r\n    ],\r\n  });\r\n};\r\n\r\nexport const replaceCourseFile = (external: CourseExternalFile, file: File) => {\r\n  const headers = { \"Content-Disposition\": 'file; filename=\"' + file.name + '\"' };\r\n  const { id, path } = external;\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"id\", id);\r\n  formData.append(\"path\", path);\r\n  formData.append(\"file\", file, file.name);\r\n\r\n  return fetchAPI({\r\n    url: \"service/replace-external-file\",\r\n    method: \"POST\",\r\n    authenticated: false,\r\n    headers,\r\n    body: formData,\r\n    meta: { id, external },\r\n    types: [\r\n      actions.REPLACE_COURSE_FILE_STARTED,\r\n      actions.REPLACE_COURSE_FILE_SUCCESS,\r\n      actions.REPLACE_COURSE_FILE_ERROR,\r\n    ],\r\n  });\r\n};\r\n\r\nexport const getCoursePreview = (\r\n  courseId: string | number,\r\n  elementId?: string | undefined,\r\n  eventCLick?: boolean\r\n) => {\r\n  const body = { crs_id: courseId, element_id: elementId || \"\", ctrl_click: eventCLick };\r\n\r\n  return fetchAPI({\r\n    url: \"preview-course\",\r\n    method: \"POST\",\r\n    authenticated: true,\r\n    body: JSON.stringify(body),\r\n    types: [\r\n      actions.GET_COURSE_EXPORTED_STARTED,\r\n      actions.GET_COURSE_EXPORTED_SUCCESS,\r\n      actions.GET_COURSE_EXPORTED_ERROR,\r\n    ],\r\n  });\r\n};\r\n\r\nexport const getCourseExport = (id: string, exports: CourseExport) => {\r\n  const body = createExportAPI(id, exports);\r\n\r\n  return fetchAPI({\r\n    url: \"export-course\",\r\n    method: \"POST\",\r\n    authenticated: true,\r\n    body: JSON.stringify(body),\r\n    types: [\r\n      actions.GET_COURSE_EXPORTED_STARTED,\r\n      actions.GET_COURSE_EXPORTED_SUCCESS,\r\n      actions.GET_COURSE_EXPORTED_ERROR,\r\n    ],\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}