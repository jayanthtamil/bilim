{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\actions\\\\replace-background\\\\BlmReplaceBackgroundAction.tsx\";\nimport React from \"react\";\nimport { AcceptedFileTypes } from \"editor-constants\";\nimport { BlmMediaPicker } from \"components/shared\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport \"./styles.scss\";\nimport { Checkbox } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction BlmReplaceBackgroundAction(props) {\n  const {\n    data,\n    onChange,\n    name\n  } = props;\n  const {\n    element\n  } = useContentEditorCtx();\n  const {\n    background,\n    restore\n  } = data || {};\n  const {\n    t\n  } = useTranslation(\"shared\");\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange({\n        target: {\n          name: \"replaceBackground\",\n          value: newData\n        }\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name,\n      checked\n    } = event.target;\n    let newData = {\n      background: value\n    };\n\n    if (name === \"restoreOnMouseOut\" && props.name === \"overAction\") {\n      newData = {\n        background: data === null || data === void 0 ? void 0 : data.background,\n        restore: checked\n      };\n    } else if (name === \"media\" && props.name === \"overAction\") {\n      newData = {\n        background: value,\n        restore: data === null || data === void 0 ? void 0 : data.restore\n      };\n    }\n\n    updateChange(newData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"replace-background-action-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"media\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Image, AcceptedFileTypes.Video],\n    data: background,\n    placeholder: \"Select media\",\n    className: \"replace-background-picker\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), name === \"overAction\" && (restore === false || restore === true) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"restore-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"restoreOnMouseOut\",\n    checked: restore,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"restore-check-box-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, t(\"roll_over.restoreMouseOut\"))));\n}\n\nexport default BlmReplaceBackgroundAction;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/actions/replace-background/BlmReplaceBackgroundAction.tsx"],"names":["React","AcceptedFileTypes","BlmMediaPicker","useContentEditorCtx","Checkbox","useTranslation","BlmReplaceBackgroundAction","props","data","onChange","name","element","background","restore","t","updateChange","newData","target","value","handleChange","event","checked","id","Image","Video"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { CustomChangeEvent, ReplaceBackgroundAction } from \"types\";\r\nimport { AcceptedFileTypes } from \"editor-constants\";\r\nimport { BlmMediaPicker, MediaPickerChangeEvent } from \"components/shared\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport \"./styles.scss\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport interface CompProps {\r\n  data?: ReplaceBackgroundAction;\r\n  onChange?: (event: CustomChangeEvent<ReplaceBackgroundAction>) => void;\r\n  name: String;\r\n}\r\n\r\nfunction BlmReplaceBackgroundAction(props: CompProps) {\r\n  const { data, onChange, name } = props;\r\n  const { element } = useContentEditorCtx();\r\n  const { background, restore } = data || {};\r\n  const { t } = useTranslation(\"shared\");\r\n\r\n  const updateChange = (newData: ReplaceBackgroundAction) => {\r\n    if (onChange) {\r\n      onChange({ target: { name: \"replaceBackground\", value: newData } });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: MediaPickerChangeEvent | any) => {\r\n    const { value, name, checked } = event.target;\r\n    let newData: ReplaceBackgroundAction = { background: value };\r\n\r\n    if (name === \"restoreOnMouseOut\" && props.name === \"overAction\") {\r\n      newData = { background: data?.background, restore: checked };\r\n    } else if (name === \"media\" && props.name === \"overAction\") {\r\n      newData = { background: value, restore: data?.restore };\r\n    }\r\n    updateChange(newData);\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"replace-background-action-wrapper\">\r\n      <BlmMediaPicker\r\n        name=\"media\"\r\n        elementId={element!.id}\r\n        acceptedFiles={[AcceptedFileTypes.Image, AcceptedFileTypes.Video]}\r\n        data={background}\r\n        placeholder=\"Select media\"\r\n        className=\"replace-background-picker\"\r\n        onChange={handleChange}\r\n      />\r\n      {name === \"overAction\" && (restore === false || restore === true) && (\r\n        <div className=\"restore-box\">\r\n          <Checkbox name=\"restoreOnMouseOut\" checked={restore} onChange={handleChange} />\r\n          <strong className=\"restore-check-box-label\">{t(\"roll_over.restoreMouseOut\")}</strong>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default BlmReplaceBackgroundAction;\r\n"]},"metadata":{},"sourceType":"module"}