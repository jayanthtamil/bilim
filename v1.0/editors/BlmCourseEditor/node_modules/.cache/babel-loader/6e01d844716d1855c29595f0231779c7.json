{"ast":null,"code":"import { BLMElement } from \"types\";\nimport { MediaOptionTypes } from \"editor-constants\";\nimport { isAudio, removeAllChildren } from \"utils\";\nimport { getHTMLElement, setBLMElementBy } from \"../../core\";\nexport function setQuestionSoundComponent(parent, selector, sound) {\n  const {\n    value,\n    isEditable\n  } = sound;\n\n  if (isEditable) {\n    const model = createSound(value);\n    const element = getHTMLElement(parent, selector);\n\n    if (element) {\n      setBLMElementBy(parent, selector, model);\n      setSoundHTML(element, value);\n    }\n  }\n}\n\nfunction createSound(media) {\n  const model = new BLMElement();\n\n  if (media) {\n    model.option = MediaOptionTypes.Sound;\n    model.editorOptions = media;\n  } else {\n    model.option = MediaOptionTypes.None;\n    model.editorOptions = null;\n  }\n\n  return model;\n}\n\nfunction setSoundHTML(element, file) {\n  if (file) {\n    const {\n      type,\n      url,\n      subtitle,\n      marker\n    } = file;\n\n    if (isAudio(type)) {\n      element.innerHTML = `\n      <audio>\n        <source src=\"${url}\" type=\"${type}\">${subtitle ? `\\n\\t<track label=\"english\" kind=\"subtitles\" srclang=\"en\" src=\"${subtitle.url}\" default/>` : \"\"}${marker ? `\\n\\t<track label=\"english\" kind=\"chapters\" srclang=\"en\" src=\"${marker.url}\"/>` : \"\"} \n        Your browser does not support the audio element.\n      </audio>\n      `;\n    }\n  } else {\n    removeAllChildren(element);\n  }\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/html/component/quiz-sound.ts"],"names":["BLMElement","MediaOptionTypes","isAudio","removeAllChildren","getHTMLElement","setBLMElementBy","setQuestionSoundComponent","parent","selector","sound","value","isEditable","model","createSound","element","setSoundHTML","media","option","Sound","editorOptions","None","file","type","url","subtitle","marker","innerHTML"],"mappings":"AAAA,SAASA,UAAT,QAA8D,OAA9D;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,OAAT,EAAkBC,iBAAlB,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,YAAhD;AAEA,OAAO,SAASC,yBAAT,CACLC,MADK,EAELC,QAFK,EAGLC,KAHK,EAIL;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBF,KAA9B;;AAEA,MAAIE,UAAJ,EAAgB;AACd,UAAMC,KAAK,GAAGC,WAAW,CAACH,KAAD,CAAzB;AACA,UAAMI,OAAO,GAAGV,cAAc,CAACG,MAAD,EAASC,QAAT,CAA9B;;AAEA,QAAIM,OAAJ,EAAa;AACXT,MAAAA,eAAe,CAACE,MAAD,EAASC,QAAT,EAAmBI,KAAnB,CAAf;AACAG,MAAAA,YAAY,CAACD,OAAD,EAAUJ,KAAV,CAAZ;AACD;AACF;AACF;;AAED,SAASG,WAAT,CAAqBG,KAArB,EAAwC;AACtC,QAAMJ,KAAK,GAAG,IAAIZ,UAAJ,EAAd;;AAEA,MAAIgB,KAAJ,EAAW;AACTJ,IAAAA,KAAK,CAACK,MAAN,GAAehB,gBAAgB,CAACiB,KAAhC;AACAN,IAAAA,KAAK,CAACO,aAAN,GAAsBH,KAAtB;AACD,GAHD,MAGO;AACLJ,IAAAA,KAAK,CAACK,MAAN,GAAehB,gBAAgB,CAACmB,IAAhC;AACAR,IAAAA,KAAK,CAACO,aAAN,GAAsB,IAAtB;AACD;;AAED,SAAOP,KAAP;AACD;;AAED,SAASG,YAAT,CAAsBD,OAAtB,EAA4CO,IAA5C,EAA8D;AAC5D,MAAIA,IAAJ,EAAU;AACR,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA;AAAvB,QAAkCJ,IAAxC;;AAEA,QAAInB,OAAO,CAACoB,IAAD,CAAX,EAAmB;AACjBR,MAAAA,OAAO,CAACY,SAAR,GAAqB;;uBAEJH,GAAI,WAAUD,IAAK,KAClCE,QAAQ,GACH,iEAAgEA,QAAQ,CAACD,GAAI,aAD1E,GAEJ,EACL,GACCE,MAAM,GACD,gEAA+DA,MAAM,CAACF,GAAI,KADzE,GAEF,EACL;;;OAVD;AAcD;AACF,GAnBD,MAmBO;AACLpB,IAAAA,iBAAiB,CAACW,OAAD,CAAjB;AACD;AACF","sourcesContent":["import { BLMElement, QuestionMediaComponent, MediaFile } from \"types\";\r\nimport { MediaOptionTypes } from \"editor-constants\";\r\nimport { isAudio, removeAllChildren } from \"utils\";\r\nimport { getHTMLElement, setBLMElementBy } from \"../../core\";\r\n\r\nexport function setQuestionSoundComponent(\r\n  parent: HTMLElement,\r\n  selector: string,\r\n  sound: QuestionMediaComponent<MediaFile>\r\n) {\r\n  const { value, isEditable } = sound;\r\n\r\n  if (isEditable) {\r\n    const model = createSound(value);\r\n    const element = getHTMLElement(parent, selector);\r\n\r\n    if (element) {\r\n      setBLMElementBy(parent, selector, model);\r\n      setSoundHTML(element, value);\r\n    }\r\n  }\r\n}\r\n\r\nfunction createSound(media?: MediaFile) {\r\n  const model = new BLMElement();\r\n\r\n  if (media) {\r\n    model.option = MediaOptionTypes.Sound;\r\n    model.editorOptions = media;\r\n  } else {\r\n    model.option = MediaOptionTypes.None;\r\n    model.editorOptions = null;\r\n  }\r\n\r\n  return model;\r\n}\r\n\r\nfunction setSoundHTML(element: HTMLElement, file?: MediaFile) {\r\n  if (file) {\r\n    const { type, url, subtitle, marker } = file;\r\n\r\n    if (isAudio(type)) {\r\n      element.innerHTML = `\r\n      <audio>\r\n        <source src=\"${url}\" type=\"${type}\">${\r\n        subtitle\r\n          ? `\\n\\t<track label=\"english\" kind=\"subtitles\" srclang=\"en\" src=\"${subtitle.url}\" default/>`\r\n          : \"\"\r\n      }${\r\n        marker\r\n          ? `\\n\\t<track label=\"english\" kind=\"chapters\" srclang=\"en\" src=\"${marker.url}\"/>`\r\n          : \"\"\r\n      } \r\n        Your browser does not support the audio element.\r\n      </audio>\r\n      `;\r\n    }\r\n  } else {\r\n    removeAllChildren(element);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}