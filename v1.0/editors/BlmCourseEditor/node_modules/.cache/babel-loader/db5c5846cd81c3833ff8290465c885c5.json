{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\template-editors\\\\controls\\\\templates\\\\width\\\\BlmTemplateWidth.tsx\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { TemplateWidthTypes } from \"editor-constants\";\nimport \"./styles.scss\";\n\nfunction BlmTemplateWidth(props) {\n  const {\n    type,\n    isSelected,\n    onChange\n  } = props;\n\n  const handleClick = event => {\n    if (onChange) {\n      onChange({\n        target: {\n          name: \"type\",\n          value: type\n        }\n      });\n    }\n  };\n\n  const getLabel = () => {\n    switch (type) {\n      case TemplateWidthTypes.Full:\n        return \"100%\";\n\n      case TemplateWidthTypes.Left:\n        return \"Left\";\n\n      case TemplateWidthTypes.Center:\n        return \"Center\";\n\n      case TemplateWidthTypes.Right:\n        return \"Right\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"template-width-container\", type),\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: type,\n    className: clsx(\"template-width-img\", {\n      selected: isSelected\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-width-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, getLabel()));\n}\n\nexport default BlmTemplateWidth;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/template-editors/controls/templates/width/BlmTemplateWidth.tsx"],"names":["React","clsx","TemplateWidthTypes","BlmTemplateWidth","props","type","isSelected","onChange","handleClick","event","target","name","value","getLabel","Full","Left","Center","Right","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,OAAO,eAAP;;AAeA,SAASC,gBAAT,CAA0BC,KAA1B,EAA4C;AAC1C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA;AAApB,MAAiCH,KAAvC;;AAEA,QAAMI,WAAW,GAAIC,KAAD,IAAuB;AACzC,QAAIF,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,KAAK,EAAEP;AAAvB;AAAV,OAAD,CAAR;AACD;AACF,GAJD;;AAMA,QAAMQ,QAAQ,GAAG,MAAM;AACrB,YAAQR,IAAR;AACE,WAAKH,kBAAkB,CAACY,IAAxB;AACE,eAAO,MAAP;;AACF,WAAKZ,kBAAkB,CAACa,IAAxB;AACE,eAAO,MAAP;;AACF,WAAKb,kBAAkB,CAACc,MAAxB;AACE,eAAO,QAAP;;AACF,WAAKd,kBAAkB,CAACe,KAAxB;AACE,eAAO,OAAP;AARJ;AAUD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAEhB,IAAI,CAAC,0BAAD,EAA6BI,IAA7B,CAApB;AAAwD,IAAA,OAAO,EAAEG,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAEH,IAAT;AAAe,IAAA,SAAS,EAAEJ,IAAI,CAAC,oBAAD,EAAuB;AAAEiB,MAAAA,QAAQ,EAAEZ;AAAZ,KAAvB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCO,QAAQ,EAA7C,CAFF,CADF;AAMD;;AAED,eAAeV,gBAAf","sourcesContent":["import React, { MouseEvent } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { TemplateWidthTypes } from \"editor-constants\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  type: TemplateWidthTypes;\r\n  isSelected?: boolean;\r\n  onChange: (event: TemplateWidthChangeEvent) => void;\r\n}\r\n\r\nexport interface TemplateWidthChangeEvent {\r\n  target: {\r\n    name: string;\r\n    value: TemplateWidthTypes;\r\n  };\r\n}\r\n\r\nfunction BlmTemplateWidth(props: CompProps) {\r\n  const { type, isSelected, onChange } = props;\r\n\r\n  const handleClick = (event: MouseEvent) => {\r\n    if (onChange) {\r\n      onChange({ target: { name: \"type\", value: type } });\r\n    }\r\n  };\r\n\r\n  const getLabel = () => {\r\n    switch (type) {\r\n      case TemplateWidthTypes.Full:\r\n        return \"100%\";\r\n      case TemplateWidthTypes.Left:\r\n        return \"Left\";\r\n      case TemplateWidthTypes.Center:\r\n        return \"Center\";\r\n      case TemplateWidthTypes.Right:\r\n        return \"Right\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(\"template-width-container\", type)} onClick={handleClick}>\r\n      <div id={type} className={clsx(\"template-width-img\", { selected: isSelected })} />\r\n      <div className=\"template-width-lbl\">{getLabel()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmTemplateWidth;\r\n"]},"metadata":{},"sourceType":"module"}