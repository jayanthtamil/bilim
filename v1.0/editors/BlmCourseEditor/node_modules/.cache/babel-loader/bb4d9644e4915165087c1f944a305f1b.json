{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\shared\\\\animation\\\\tranaslation\\\\item\\\\BlmTranslationItem.tsx\";\nimport React, { useRef } from \"react\";\nimport BlmAutoTextArea from \"shared/auto-textarea\";\nimport \"./styles.scss\";\n\nfunction BlmTranslationItem(props) {\n  const {\n    data,\n    onChange\n  } = props;\n  const {\n    text\n  } = data;\n  const {\n    current: label\n  } = useRef(text);\n\n  const handleChange = event => {\n    if (onChange) {\n      const newData = { ...data\n      };\n      newData.text = event.target.value;\n      onChange(newData);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"translation-item-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"translation-item-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(BlmAutoTextArea, {\n    value: text,\n    className: \"translation-item-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BlmTranslationItem;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/animation/tranaslation/item/BlmTranslationItem.tsx"],"names":["React","useRef","BlmAutoTextArea","BlmTranslationItem","props","data","onChange","text","current","label","handleChange","event","newData","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAA6BC,MAA7B,QAA2C,OAA3C;AAGA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAO,eAAP;;AAOA,SAASC,kBAAT,CAA4BC,KAA5B,EAA8C;AAC5C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBF,KAA3B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAWF,IAAjB;AACA,QAAM;AAAEG,IAAAA,OAAO,EAAEC;AAAX,MAAqBR,MAAM,CAACM,IAAD,CAAjC;;AAEA,QAAMG,YAAY,GAAIC,KAAD,IAA6C;AAChE,QAAIL,QAAJ,EAAc;AACZ,YAAMM,OAAO,GAAG,EAAE,GAAGP;AAAL,OAAhB;AACAO,MAAAA,OAAO,CAACL,IAAR,GAAeI,KAAK,CAACE,MAAN,CAAaC,KAA5B;AAEAR,MAAAA,QAAQ,CAACM,OAAD,CAAR;AACD;AACF,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCH,KAAvC,CADF,eAEE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEF,IAAxB;AAA8B,IAAA,SAAS,EAAC,sBAAxC;AAA+D,IAAA,QAAQ,EAAEG,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeP,kBAAf","sourcesContent":["import React, { ChangeEvent, useRef } from \"react\";\r\n\r\nimport { AnimationTranslation } from \"types\";\r\nimport BlmAutoTextArea from \"shared/auto-textarea\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  data: AnimationTranslation;\r\n  onChange?: (data: AnimationTranslation) => void;\r\n}\r\n\r\nfunction BlmTranslationItem(props: CompProps) {\r\n  const { data, onChange } = props;\r\n  const { text } = data;\r\n  const { current: label } = useRef(text);\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    if (onChange) {\r\n      const newData = { ...data };\r\n      newData.text = event.target.value;\r\n\r\n      onChange(newData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"translation-item-wrapper\">\r\n      <div className=\"translation-item-lbl\">{label}</div>\r\n      <BlmAutoTextArea value={text} className=\"translation-item-txt\" onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmTranslationItem;\r\n"]},"metadata":{},"sourceType":"module"}