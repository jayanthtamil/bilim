{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\structures\\\\select\\\\accordion\\\\BlmAccordion.tsx\";\nimport React, { useState } from \"react\";\nimport { Accordion, AccordionDetails } from \"@material-ui/core\";\nimport { RepoExpandIcon } from \"assets/icons\";\nimport { BlmAccordionSummary } from \"shared/material-ui\";\n\nfunction BlmAccordion(props) {\n  const {\n    title,\n    children\n  } = props;\n  const [expanded, setExpanded] = useState(true);\n\n  const handleOnChange = (event, isExpanded) => {\n    //state.expanded exclusively used for expand icon rotation in panel summary, because we can't get this value from AccordionContext.\n    setExpanded(isExpanded);\n  };\n\n  return /*#__PURE__*/React.createElement(Accordion, {\n    square: true,\n    defaultExpanded: true,\n    className: \"mui-accordion-2\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BlmAccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(RepoExpandIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 40\n      }\n    }),\n    expanded: expanded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(AccordionDetails, {\n    className: \"mui-accordion-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nexport default BlmAccordion;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/structures/select/accordion/BlmAccordion.tsx"],"names":["React","useState","Accordion","AccordionDetails","RepoExpandIcon","BlmAccordionSummary","BlmAccordion","props","title","children","expanded","setExpanded","handleOnChange","event","isExpanded"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgE,OAAhE;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,mBAA5C;AAEA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,mBAAT,QAAoC,oBAApC;;AAMA,SAASC,YAAT,CAAsBC,KAAtB,EAA2D;AACzD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBF,KAA5B;AAEA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMW,cAAc,GAAG,CAACC,KAAD,EAAyBC,UAAzB,KAAiD;AACtE;AACAH,IAAAA,WAAW,CAACG,UAAD,CAAX;AACD,GAHD;;AAKA,sBACE,oBAAC,SAAD;AAAW,IAAA,MAAM,MAAjB;AAAkB,IAAA,eAAe,EAAE,IAAnC;AAAyC,IAAA,SAAS,EAAC,iBAAnD;AAAqE,IAAA,QAAQ,EAAEF,cAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AAAqB,IAAA,UAAU,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC;AAAqD,IAAA,QAAQ,EAAEF,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KADH,CADF,eAIE,oBAAC,gBAAD;AAAkB,IAAA,SAAS,EAAC,uBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDC,QAArD,CAJF,CADF;AAQD;;AAED,eAAeH,YAAf","sourcesContent":["import React, { useState, ChangeEvent, PropsWithChildren } from \"react\";\r\nimport { Accordion, AccordionDetails } from \"@material-ui/core\";\r\n\r\nimport { RepoExpandIcon } from \"assets/icons\";\r\nimport { BlmAccordionSummary } from \"shared/material-ui\";\r\n\r\nexport interface CompProps {\r\n  title: string;\r\n}\r\n\r\nfunction BlmAccordion(props: PropsWithChildren<CompProps>) {\r\n  const { title, children } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  const handleOnChange = (event: ChangeEvent<{}>, isExpanded: boolean) => {\r\n    //state.expanded exclusively used for expand icon rotation in panel summary, because we can't get this value from AccordionContext.\r\n    setExpanded(isExpanded);\r\n  };\r\n\r\n  return (\r\n    <Accordion square defaultExpanded={true} className=\"mui-accordion-2\" onChange={handleOnChange}>\r\n      <BlmAccordionSummary expandIcon={<RepoExpandIcon />} expanded={expanded}>\r\n        {title}\r\n      </BlmAccordionSummary>\r\n      <AccordionDetails className=\"mui-accordion-details\">{children}</AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default BlmAccordion;\r\n"]},"metadata":{},"sourceType":"module"}