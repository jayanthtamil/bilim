{"ast":null,"code":"import { ElementType, ContextMenuActions, ConnectionType } from \"editor-constants\";\nimport { hasChildTemplate, hasConnection, hasSummary, findIndex, hasAutoSummary, hasAutoSummaryAllowed } from \"utils\";\nconst {\n  AddChapter,\n  AddPage,\n  AddScreen,\n  AddQuestion,\n  AddEvaluation,\n  AddCustom,\n  AddSimpleContent,\n  AddSimplePage,\n  AddAnnexesFolder,\n  EditScreen,\n  EditPage,\n  EditQuestion,\n  EditSimpleContent,\n  EditSimplePage,\n  EditPartPage,\n  CopyFrom,\n  DefineFirstConnection,\n  DefineSecondConnection,\n  DefineRepeatConnection,\n  Duplicate,\n  MoveTo,\n  Rename,\n  ResetTemplate,\n  Delete,\n  ResetMargin,\n  Properties,\n  ActivateSummary,\n  DeactivateSummary,\n  DefineSummary,\n  DeleteSummary,\n  SwitchSummaryScreen,\n  SwitchSummaryPage,\n  Divider\n} = ContextMenuActions;\nconst connectItems = [Divider, DefineFirstConnection, DefineSecondConnection, DefineRepeatConnection];\nconst addItems = [AddChapter, AddPage, AddScreen, AddQuestion, AddEvaluation, AddCustom];\nconst editItems = [Divider, Duplicate, Rename, Delete];\nconst editItems2 = [Divider, Duplicate, Rename, ResetTemplate, Delete];\nconst simpleItems = [Divider, AddSimpleContent, AddSimplePage];\nconst ResetMargin1 = [Divider, ResetMargin];\nconst editItems3 = [Divider, Duplicate, MoveTo];\nconst editItems4 = [Divider, Rename, Delete];\nconst editItemScreen1 = [Divider, Duplicate, MoveTo];\nconst editItemScreen2 = [Divider, Rename, ResetTemplate, Delete];\nexport const getContextMenuActions = (element, treeType, courseProps) => {\n  const {\n    type,\n    isEvaluation,\n    theme,\n    parent,\n    isSummary,\n    styleSummary\n  } = element;\n  const {\n    navigation\n  } = courseProps || {};\n  const hasActivateSummary = hasAutoSummaryAllowed(element, navigation === null || navigation === void 0 ? void 0 : navigation.navigationlevel) && !styleSummary;\n\n  if (treeType === ElementType.Starting) {\n    if (type === ElementType.Starting) {\n      return [AddPage, AddScreen];\n    } else if (type === ElementType.Page) {\n      return [EditPage, ...connectItems, ...editItems3, ...editItems4];\n    } else if (type === ElementType.Screen) {\n      return [EditScreen, ...connectItems, ...simpleItems, ...editItemScreen1, ...editItemScreen2];\n    } else if (type === ElementType.PartPage) {\n      return [EditPartPage, ...connectItems, ...simpleItems, ...ResetMargin1];\n    }\n  } else if (treeType === ElementType.Structure) {\n    if (type === ElementType.Structure) {\n      return [...addItems, ...(hasActivateSummary ? [Divider, ActivateSummary] : []), Divider, CopyFrom];\n    } else {\n      var _parent$parent;\n\n      const summaryItems = [Divider, isSummary ? DeleteSummary : DefineSummary];\n\n      if (type === ElementType.Page) {\n        return [EditPage, ...summaryItems, ...editItems3, ...editItems4];\n      } else if (type === ElementType.Screen) {\n        return [EditScreen, ...summaryItems, ...simpleItems, ...editItemScreen1, ...editItemScreen2];\n      } else if ((parent === null || parent === void 0 ? void 0 : parent.type) === ElementType.PartPage ? (_parent$parent = parent.parent) === null || _parent$parent === void 0 ? void 0 : _parent$parent.isSummary : parent === null || parent === void 0 ? void 0 : parent.isSummary) {\n        if (type === ElementType.SimpleContent) {\n          return [EditSimpleContent, ...summaryItems, ...editItems2];\n        } else if (type === ElementType.SimplePage) {\n          return [EditSimplePage, ...summaryItems, ...editItems2];\n        }\n      }\n    }\n  } else if (treeType === ElementType.Annexes) {\n    if (type === ElementType.Annexes) {\n      return [AddPage, AddScreen, AddAnnexesFolder];\n    }\n  }\n\n  if (type === ElementType.Chapter) {\n    const chapterItems = [...(hasActivateSummary ? [Divider, ActivateSummary] : []), Divider, CopyFrom, Divider, Properties, Duplicate, Rename, Delete];\n\n    if (isEvaluation && theme && theme.toLowerCase() !== \"none\") {\n      return [AddQuestion, ...chapterItems];\n    } else {\n      return [...addItems, ...chapterItems];\n    }\n  } else if (type === ElementType.Page) {\n    return [EditPage, ...editItems3, ...editItems4];\n  } else if (type === ElementType.Screen) {\n    return [EditScreen, ...simpleItems, ...editItemScreen1, ...editItemScreen2];\n  } else if (type === ElementType.Question) {\n    return [EditQuestion, ...simpleItems, ...editItems2];\n  } else if (type === ElementType.PartPage) {\n    return [EditPartPage, ...simpleItems, ...ResetMargin1, Duplicate];\n  } else if (type === ElementType.Feedback) {\n    return [AddSimpleContent];\n  } else if (type === ElementType.SimpleContent) {\n    return [EditSimpleContent, ...editItems2];\n  } else if (type === ElementType.SimplePage) {\n    return [EditSimplePage, ...editItems];\n  } else if (type === ElementType.Custom) {\n    return [Properties, Duplicate, Rename, Delete];\n  } else if (type === ElementType.AnnexesFolder) {\n    return [AddAnnexesFolder, AddPage, AddScreen, Divider, CopyFrom, Divider, Rename, Delete];\n  } else if (type === ElementType.Summary) {\n    return [SwitchSummaryScreen, SwitchSummaryPage, DeactivateSummary];\n  } else {\n    return [];\n  }\n};\nexport const hasContextMenuAction = (element, action) => {\n  const connections = element.connections || [];\n\n  switch (action) {\n    case DefineFirstConnection:\n      return findIndex(connections, ConnectionType.First, \"value\") !== -1;\n\n    case DefineSecondConnection:\n      return findIndex(connections, ConnectionType.Second, \"value\") !== -1;\n\n    case DefineRepeatConnection:\n      return findIndex(connections, ConnectionType.Repeat, \"value\") !== -1;\n\n    default:\n      return false;\n  }\n};\nexport const getElementTypeByAction = action => {\n  switch (action) {\n    case ContextMenuActions.AddChapter:\n      return ElementType.Chapter;\n\n    case ContextMenuActions.AddEvaluation:\n      return ElementType.Evaluation;\n\n    case ContextMenuActions.AddScreen:\n      return ElementType.Screen;\n\n    case ContextMenuActions.AddPage:\n      return ElementType.Page;\n\n    case ContextMenuActions.AddQuestion:\n      return ElementType.Question;\n\n    case ContextMenuActions.AddCustom:\n      return ElementType.Custom;\n\n    case ContextMenuActions.AddSimpleContent:\n      return ElementType.SimpleContent;\n\n    case ContextMenuActions.AddSimplePage:\n      return ElementType.SimplePage;\n\n    case ContextMenuActions.AddAnnexesFolder:\n      return ElementType.AnnexesFolder;\n  }\n};\nexport const getConnectionTypeByAction = action => {\n  switch (action) {\n    case ContextMenuActions.DefineSecondConnection:\n      return ConnectionType.Second;\n\n    case ContextMenuActions.DefineFirstConnection:\n      return ConnectionType.First;\n\n    case ContextMenuActions.DefineRepeatConnection:\n      return ConnectionType.Repeat;\n  }\n};\nexport const createConnection = (element, connectionType) => {\n  const connections = element.connections || [];\n\n  if (!hasConnection(connections, connectionType)) {\n    return {\n      id: element.id,\n      connections: [connectionType]\n    };\n  }\n};\nexport const validateAutoSummary = element => {\n  if (hasSummary(element)) {\n    throw new Error(\"You cannot reactivate the Auto Summary because you have created a screen or page as summary. Please delete it before reactivating the Auto Summary\");\n  }\n};\nexport const validateSummary = (element, courseProps) => {\n  const {\n    type,\n    isSummary,\n    templateType,\n    parent\n  } = element;\n  const {\n    navigation\n  } = courseProps || {};\n  const target = type === ElementType.Screen ? \"screen\" : type === ElementType.Page ? \"page\" : type === ElementType.SimpleContent ? \"simple content\" : \"simple page\";\n\n  if (isSummary) {\n    if ((type === ElementType.Screen || type === ElementType.SimpleContent) && templateType) {\n      throw new Error(`You cannot remove the summary tag from a ${target} with a summary template. You should delete the ${target}.`);\n    } else if ((type === ElementType.Screen || type === ElementType.Page || type === ElementType.SimplePage) && hasSummary(element)) {\n      const target2 = type === ElementType.Screen ? \"simple content/page\" : \"partpage\";\n      throw new Error(`You cannot remove the summary tag from a ${target} who has summary ${target2}. You should delete all summary ${target2} first.`);\n    }\n  } else {\n    if (parent && hasAutoSummary(parent, navigation === null || navigation === void 0 ? void 0 : navigation.navigationlevel)) {\n      throw new Error(\"There is an Auto Summary. Auto Summary and template summary cannot be mixed. Deactivate the Auto Summary before define this screen/page as summary.\");\n    } else if (parent && [ElementType.Structure, ElementType.Chapter].includes(parent.type) && hasSummary(parent)) {\n      throw new Error(`There is already a summary. Only one summary can be defined in a chapter. Remove the summary before define this screen/page as summary`);\n    } else if ((type === ElementType.Screen || type === ElementType.SimpleContent) && templateType) {\n      throw new Error(`You cannot define a ${target} as summary if it has already a template assigned. You have to delete this ${target} or choose another one.`);\n    } else if ((type === ElementType.Page || type === ElementType.SimplePage) && hasChildTemplate(element, ElementType.Question)) {\n      throw new Error(`You cannot define a ${target} as summary if it has a question partpage. You should delete all questions partpage first.`);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/structures/panel/context-menu/context-menu-utils.ts"],"names":["ElementType","ContextMenuActions","ConnectionType","hasChildTemplate","hasConnection","hasSummary","findIndex","hasAutoSummary","hasAutoSummaryAllowed","AddChapter","AddPage","AddScreen","AddQuestion","AddEvaluation","AddCustom","AddSimpleContent","AddSimplePage","AddAnnexesFolder","EditScreen","EditPage","EditQuestion","EditSimpleContent","EditSimplePage","EditPartPage","CopyFrom","DefineFirstConnection","DefineSecondConnection","DefineRepeatConnection","Duplicate","MoveTo","Rename","ResetTemplate","Delete","ResetMargin","Properties","ActivateSummary","DeactivateSummary","DefineSummary","DeleteSummary","SwitchSummaryScreen","SwitchSummaryPage","Divider","connectItems","addItems","editItems","editItems2","simpleItems","ResetMargin1","editItems3","editItems4","editItemScreen1","editItemScreen2","getContextMenuActions","element","treeType","courseProps","type","isEvaluation","theme","parent","isSummary","styleSummary","navigation","hasActivateSummary","navigationlevel","Starting","Page","Screen","PartPage","Structure","summaryItems","SimpleContent","SimplePage","Annexes","Chapter","chapterItems","toLowerCase","Question","Feedback","Custom","AnnexesFolder","Summary","hasContextMenuAction","action","connections","First","Second","Repeat","getElementTypeByAction","Evaluation","getConnectionTypeByAction","createConnection","connectionType","id","validateAutoSummary","Error","validateSummary","templateType","target","target2","includes"],"mappings":"AACA,SAASA,WAAT,EAAsBC,kBAAtB,EAA0CC,cAA1C,QAAgE,kBAAhE;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,cALF,EAMEC,qBANF,QAOO,OAPP;AASA,MAAM;AACJC,EAAAA,UADI;AAEJC,EAAAA,OAFI;AAGJC,EAAAA,SAHI;AAIJC,EAAAA,WAJI;AAKJC,EAAAA,aALI;AAMJC,EAAAA,SANI;AAOJC,EAAAA,gBAPI;AAQJC,EAAAA,aARI;AASJC,EAAAA,gBATI;AAUJC,EAAAA,UAVI;AAWJC,EAAAA,QAXI;AAYJC,EAAAA,YAZI;AAaJC,EAAAA,iBAbI;AAcJC,EAAAA,cAdI;AAeJC,EAAAA,YAfI;AAgBJC,EAAAA,QAhBI;AAiBJC,EAAAA,qBAjBI;AAkBJC,EAAAA,sBAlBI;AAmBJC,EAAAA,sBAnBI;AAoBJC,EAAAA,SApBI;AAqBJC,EAAAA,MArBI;AAsBJC,EAAAA,MAtBI;AAuBJC,EAAAA,aAvBI;AAwBJC,EAAAA,MAxBI;AAyBJC,EAAAA,WAzBI;AA0BJC,EAAAA,UA1BI;AA2BJC,EAAAA,eA3BI;AA4BJC,EAAAA,iBA5BI;AA6BJC,EAAAA,aA7BI;AA8BJC,EAAAA,aA9BI;AA+BJC,EAAAA,mBA/BI;AAgCJC,EAAAA,iBAhCI;AAiCJC,EAAAA;AAjCI,IAkCFxC,kBAlCJ;AAoCA,MAAMyC,YAAY,GAAG,CACnBD,OADmB,EAEnBhB,qBAFmB,EAGnBC,sBAHmB,EAInBC,sBAJmB,CAArB;AAMA,MAAMgB,QAAQ,GAAG,CAAClC,UAAD,EAAaC,OAAb,EAAsBC,SAAtB,EAAiCC,WAAjC,EAA8CC,aAA9C,EAA6DC,SAA7D,CAAjB;AACA,MAAM8B,SAAS,GAAG,CAACH,OAAD,EAAUb,SAAV,EAAqBE,MAArB,EAA6BE,MAA7B,CAAlB;AACA,MAAMa,UAAU,GAAG,CAACJ,OAAD,EAAUb,SAAV,EAAqBE,MAArB,EAA6BC,aAA7B,EAA4CC,MAA5C,CAAnB;AACA,MAAMc,WAAW,GAAG,CAACL,OAAD,EAAU1B,gBAAV,EAA4BC,aAA5B,CAApB;AACA,MAAM+B,YAAY,GAAG,CAACN,OAAD,EAAUR,WAAV,CAArB;AAEA,MAAMe,UAAU,GAAG,CAACP,OAAD,EAAUb,SAAV,EAAqBC,MAArB,CAAnB;AACA,MAAMoB,UAAU,GAAG,CAACR,OAAD,EAAUX,MAAV,EAAkBE,MAAlB,CAAnB;AAEA,MAAMkB,eAAe,GAAG,CAACT,OAAD,EAAUb,SAAV,EAAqBC,MAArB,CAAxB;AACA,MAAMsB,eAAe,GAAG,CAACV,OAAD,EAAUX,MAAV,EAAkBC,aAAlB,EAAiCC,MAAjC,CAAxB;AAEA,OAAO,MAAMoB,qBAAqB,GAAG,CACnCC,OADmC,EAEnCC,QAFmC,EAGnCC,WAHmC,KAIhC;AACH,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA,MAA7B;AAAqCC,IAAAA,SAArC;AAAgDC,IAAAA;AAAhD,MAAiER,OAAvE;AACA,QAAM;AAAES,IAAAA;AAAF,MAAiBP,WAAW,IAAI,EAAtC;AACA,QAAMQ,kBAAkB,GACtBvD,qBAAqB,CAAC6C,OAAD,EAAUS,UAAV,aAAUA,UAAV,uBAAUA,UAAU,CAAEE,eAAtB,CAArB,IAA+D,CAACH,YADlE;;AAGA,MAAIP,QAAQ,KAAKtD,WAAW,CAACiE,QAA7B,EAAuC;AACrC,QAAIT,IAAI,KAAKxD,WAAW,CAACiE,QAAzB,EAAmC;AACjC,aAAO,CAACvD,OAAD,EAAUC,SAAV,CAAP;AACD,KAFD,MAEO,IAAI6C,IAAI,KAAKxD,WAAW,CAACkE,IAAzB,EAA+B;AACpC,aAAO,CAAC/C,QAAD,EAAW,GAAGuB,YAAd,EAA4B,GAAGM,UAA/B,EAA2C,GAAGC,UAA9C,CAAP;AACD,KAFM,MAEA,IAAIO,IAAI,KAAKxD,WAAW,CAACmE,MAAzB,EAAiC;AACtC,aAAO,CAACjD,UAAD,EAAa,GAAGwB,YAAhB,EAA8B,GAAGI,WAAjC,EAA8C,GAAGI,eAAjD,EAAkE,GAAGC,eAArE,CAAP;AACD,KAFM,MAEA,IAAIK,IAAI,KAAKxD,WAAW,CAACoE,QAAzB,EAAmC;AACxC,aAAO,CAAC7C,YAAD,EAAe,GAAGmB,YAAlB,EAAgC,GAAGI,WAAnC,EAAgD,GAAGC,YAAnD,CAAP;AACD;AACF,GAVD,MAUO,IAAIO,QAAQ,KAAKtD,WAAW,CAACqE,SAA7B,EAAwC;AAC7C,QAAIb,IAAI,KAAKxD,WAAW,CAACqE,SAAzB,EAAoC;AAClC,aAAO,CACL,GAAG1B,QADE,EAEL,IAAIoB,kBAAkB,GAAG,CAACtB,OAAD,EAAUN,eAAV,CAAH,GAAgC,EAAtD,CAFK,EAGLM,OAHK,EAILjB,QAJK,CAAP;AAMD,KAPD,MAOO;AAAA;;AACL,YAAM8C,YAAY,GAAG,CAAC7B,OAAD,EAAUmB,SAAS,GAAGtB,aAAH,GAAmBD,aAAtC,CAArB;;AAEA,UAAImB,IAAI,KAAKxD,WAAW,CAACkE,IAAzB,EAA+B;AAC7B,eAAO,CAAC/C,QAAD,EAAW,GAAGmD,YAAd,EAA4B,GAAGtB,UAA/B,EAA2C,GAAGC,UAA9C,CAAP;AACD,OAFD,MAEO,IAAIO,IAAI,KAAKxD,WAAW,CAACmE,MAAzB,EAAiC;AACtC,eAAO,CACLjD,UADK,EAEL,GAAGoD,YAFE,EAGL,GAAGxB,WAHE,EAIL,GAAGI,eAJE,EAKL,GAAGC,eALE,CAAP;AAOD,OARM,MAQA,IACL,CAAAQ,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEH,IAAR,MAAiBxD,WAAW,CAACoE,QAA7B,qBAAwCT,MAAM,CAACA,MAA/C,mDAAwC,eAAeC,SAAvD,GAAmED,MAAnE,aAAmEA,MAAnE,uBAAmEA,MAAM,CAAEC,SADtE,EAEL;AACA,YAAIJ,IAAI,KAAKxD,WAAW,CAACuE,aAAzB,EAAwC;AACtC,iBAAO,CAAClD,iBAAD,EAAoB,GAAGiD,YAAvB,EAAqC,GAAGzB,UAAxC,CAAP;AACD,SAFD,MAEO,IAAIW,IAAI,KAAKxD,WAAW,CAACwE,UAAzB,EAAqC;AAC1C,iBAAO,CAAClD,cAAD,EAAiB,GAAGgD,YAApB,EAAkC,GAAGzB,UAArC,CAAP;AACD;AACF;AACF;AACF,GA/BM,MA+BA,IAAIS,QAAQ,KAAKtD,WAAW,CAACyE,OAA7B,EAAsC;AAC3C,QAAIjB,IAAI,KAAKxD,WAAW,CAACyE,OAAzB,EAAkC;AAChC,aAAO,CAAC/D,OAAD,EAAUC,SAAV,EAAqBM,gBAArB,CAAP;AACD;AACF;;AAED,MAAIuC,IAAI,KAAKxD,WAAW,CAAC0E,OAAzB,EAAkC;AAChC,UAAMC,YAAY,GAAG,CACnB,IAAIZ,kBAAkB,GAAG,CAACtB,OAAD,EAAUN,eAAV,CAAH,GAAgC,EAAtD,CADmB,EAEnBM,OAFmB,EAGnBjB,QAHmB,EAInBiB,OAJmB,EAKnBP,UALmB,EAMnBN,SANmB,EAOnBE,MAPmB,EAQnBE,MARmB,CAArB;;AAUA,QAAIyB,YAAY,IAAIC,KAAhB,IAAyBA,KAAK,CAACkB,WAAN,OAAwB,MAArD,EAA6D;AAC3D,aAAO,CAAChE,WAAD,EAAc,GAAG+D,YAAjB,CAAP;AACD,KAFD,MAEO;AACL,aAAO,CAAC,GAAGhC,QAAJ,EAAc,GAAGgC,YAAjB,CAAP;AACD;AACF,GAhBD,MAgBO,IAAInB,IAAI,KAAKxD,WAAW,CAACkE,IAAzB,EAA+B;AACpC,WAAO,CAAC/C,QAAD,EAAW,GAAG6B,UAAd,EAA0B,GAAGC,UAA7B,CAAP;AACD,GAFM,MAEA,IAAIO,IAAI,KAAKxD,WAAW,CAACmE,MAAzB,EAAiC;AACtC,WAAO,CAACjD,UAAD,EAAa,GAAG4B,WAAhB,EAA6B,GAAGI,eAAhC,EAAiD,GAAGC,eAApD,CAAP;AACD,GAFM,MAEA,IAAIK,IAAI,KAAKxD,WAAW,CAAC6E,QAAzB,EAAmC;AACxC,WAAO,CAACzD,YAAD,EAAe,GAAG0B,WAAlB,EAA+B,GAAGD,UAAlC,CAAP;AACD,GAFM,MAEA,IAAIW,IAAI,KAAKxD,WAAW,CAACoE,QAAzB,EAAmC;AACxC,WAAO,CAAC7C,YAAD,EAAe,GAAGuB,WAAlB,EAA+B,GAAGC,YAAlC,EAAgDnB,SAAhD,CAAP;AACD,GAFM,MAEA,IAAI4B,IAAI,KAAKxD,WAAW,CAAC8E,QAAzB,EAAmC;AACxC,WAAO,CAAC/D,gBAAD,CAAP;AACD,GAFM,MAEA,IAAIyC,IAAI,KAAKxD,WAAW,CAACuE,aAAzB,EAAwC;AAC7C,WAAO,CAAClD,iBAAD,EAAoB,GAAGwB,UAAvB,CAAP;AACD,GAFM,MAEA,IAAIW,IAAI,KAAKxD,WAAW,CAACwE,UAAzB,EAAqC;AAC1C,WAAO,CAAClD,cAAD,EAAiB,GAAGsB,SAApB,CAAP;AACD,GAFM,MAEA,IAAIY,IAAI,KAAKxD,WAAW,CAAC+E,MAAzB,EAAiC;AACtC,WAAO,CAAC7C,UAAD,EAAaN,SAAb,EAAwBE,MAAxB,EAAgCE,MAAhC,CAAP;AACD,GAFM,MAEA,IAAIwB,IAAI,KAAKxD,WAAW,CAACgF,aAAzB,EAAwC;AAC7C,WAAO,CAAC/D,gBAAD,EAAmBP,OAAnB,EAA4BC,SAA5B,EAAuC8B,OAAvC,EAAgDjB,QAAhD,EAA0DiB,OAA1D,EAAmEX,MAAnE,EAA2EE,MAA3E,CAAP;AACD,GAFM,MAEA,IAAIwB,IAAI,KAAKxD,WAAW,CAACiF,OAAzB,EAAkC;AACvC,WAAO,CAAC1C,mBAAD,EAAsBC,iBAAtB,EAAyCJ,iBAAzC,CAAP;AACD,GAFM,MAEA;AACL,WAAO,EAAP;AACD;AACF,CAhGM;AAkGP,OAAO,MAAM8C,oBAAoB,GAAG,CAAC7B,OAAD,EAAyB8B,MAAzB,KAAwD;AAC1F,QAAMC,WAAW,GAAG/B,OAAO,CAAC+B,WAAR,IAAuB,EAA3C;;AAEA,UAAQD,MAAR;AACE,SAAK1D,qBAAL;AACE,aAAOnB,SAAS,CAAC8E,WAAD,EAAclF,cAAc,CAACmF,KAA7B,EAAoC,OAApC,CAAT,KAA0D,CAAC,CAAlE;;AACF,SAAK3D,sBAAL;AACE,aAAOpB,SAAS,CAAC8E,WAAD,EAAclF,cAAc,CAACoF,MAA7B,EAAqC,OAArC,CAAT,KAA2D,CAAC,CAAnE;;AACF,SAAK3D,sBAAL;AACE,aAAOrB,SAAS,CAAC8E,WAAD,EAAclF,cAAc,CAACqF,MAA7B,EAAqC,OAArC,CAAT,KAA2D,CAAC,CAAnE;;AACF;AACE,aAAO,KAAP;AARJ;AAUD,CAbM;AAeP,OAAO,MAAMC,sBAAsB,GAAIL,MAAD,IAAgC;AACpE,UAAQA,MAAR;AACE,SAAKlF,kBAAkB,CAACQ,UAAxB;AACE,aAAOT,WAAW,CAAC0E,OAAnB;;AACF,SAAKzE,kBAAkB,CAACY,aAAxB;AACE,aAAOb,WAAW,CAACyF,UAAnB;;AACF,SAAKxF,kBAAkB,CAACU,SAAxB;AACE,aAAOX,WAAW,CAACmE,MAAnB;;AACF,SAAKlE,kBAAkB,CAACS,OAAxB;AACE,aAAOV,WAAW,CAACkE,IAAnB;;AACF,SAAKjE,kBAAkB,CAACW,WAAxB;AACE,aAAOZ,WAAW,CAAC6E,QAAnB;;AACF,SAAK5E,kBAAkB,CAACa,SAAxB;AACE,aAAOd,WAAW,CAAC+E,MAAnB;;AACF,SAAK9E,kBAAkB,CAACc,gBAAxB;AACE,aAAOf,WAAW,CAACuE,aAAnB;;AACF,SAAKtE,kBAAkB,CAACe,aAAxB;AACE,aAAOhB,WAAW,CAACwE,UAAnB;;AACF,SAAKvE,kBAAkB,CAACgB,gBAAxB;AACE,aAAOjB,WAAW,CAACgF,aAAnB;AAlBJ;AAoBD,CArBM;AAuBP,OAAO,MAAMU,yBAAyB,GAAIP,MAAD,IAAgC;AACvE,UAAQA,MAAR;AACE,SAAKlF,kBAAkB,CAACyB,sBAAxB;AACE,aAAOxB,cAAc,CAACoF,MAAtB;;AACF,SAAKrF,kBAAkB,CAACwB,qBAAxB;AACE,aAAOvB,cAAc,CAACmF,KAAtB;;AACF,SAAKpF,kBAAkB,CAAC0B,sBAAxB;AACE,aAAOzB,cAAc,CAACqF,MAAtB;AANJ;AAQD,CATM;AAWP,OAAO,MAAMI,gBAAgB,GAAG,CAC9BtC,OAD8B,EAE9BuC,cAF8B,KAGc;AAC5C,QAAMR,WAAW,GAAG/B,OAAO,CAAC+B,WAAR,IAAuB,EAA3C;;AAEA,MAAI,CAAChF,aAAa,CAACgF,WAAD,EAAcQ,cAAd,CAAlB,EAAiD;AAC/C,WAAO;AAAEC,MAAAA,EAAE,EAAExC,OAAO,CAACwC,EAAd;AAAkBT,MAAAA,WAAW,EAAE,CAACQ,cAAD;AAA/B,KAAP;AACD;AACF,CATM;AAWP,OAAO,MAAME,mBAAmB,GAAIzC,OAAD,IAA4B;AAC7D,MAAIhD,UAAU,CAACgD,OAAD,CAAd,EAAyB;AACvB,UAAM,IAAI0C,KAAJ,CACJ,oJADI,CAAN;AAGD;AACF,CANM;AAQP,OAAO,MAAMC,eAAe,GAAG,CAC7B3C,OAD6B,EAG7BE,WAH6B,KAI1B;AACH,QAAM;AAAEC,IAAAA,IAAF;AAAQI,IAAAA,SAAR;AAAmBqC,IAAAA,YAAnB;AAAiCtC,IAAAA;AAAjC,MAA4CN,OAAlD;AACA,QAAM;AAAES,IAAAA;AAAF,MAAiBP,WAAW,IAAI,EAAtC;AACA,QAAM2C,MAAM,GACV1C,IAAI,KAAKxD,WAAW,CAACmE,MAArB,GACI,QADJ,GAEIX,IAAI,KAAKxD,WAAW,CAACkE,IAArB,GACA,MADA,GAEAV,IAAI,KAAKxD,WAAW,CAACuE,aAArB,GACA,gBADA,GAEA,aAPN;;AASA,MAAIX,SAAJ,EAAe;AACb,QAAI,CAACJ,IAAI,KAAKxD,WAAW,CAACmE,MAArB,IAA+BX,IAAI,KAAKxD,WAAW,CAACuE,aAArD,KAAuE0B,YAA3E,EAAyF;AACvF,YAAM,IAAIF,KAAJ,CACH,4CAA2CG,MAAO,mDAAkDA,MAAO,GADxG,CAAN;AAGD,KAJD,MAIO,IACL,CAAC1C,IAAI,KAAKxD,WAAW,CAACmE,MAArB,IACCX,IAAI,KAAKxD,WAAW,CAACkE,IADtB,IAECV,IAAI,KAAKxD,WAAW,CAACwE,UAFvB,KAGAnE,UAAU,CAACgD,OAAD,CAJL,EAKL;AACA,YAAM8C,OAAO,GAAG3C,IAAI,KAAKxD,WAAW,CAACmE,MAArB,GAA8B,qBAA9B,GAAsD,UAAtE;AAEA,YAAM,IAAI4B,KAAJ,CACH,4CAA2CG,MAAO,oBAAmBC,OAAQ,mCAAkCA,OAAQ,SADpH,CAAN;AAGD;AACF,GAjBD,MAiBO;AACL,QAAIxC,MAAM,IAAIpD,cAAc,CAACoD,MAAD,EAASG,UAAT,aAASA,UAAT,uBAASA,UAAU,CAAEE,eAArB,CAA5B,EAAmE;AACjE,YAAM,IAAI+B,KAAJ,CACJ,qJADI,CAAN;AAGD,KAJD,MAIO,IACLpC,MAAM,IACN,CAAC3D,WAAW,CAACqE,SAAb,EAAwBrE,WAAW,CAAC0E,OAApC,EAA6C0B,QAA7C,CAAsDzC,MAAM,CAACH,IAA7D,CADA,IAEAnD,UAAU,CAACsD,MAAD,CAHL,EAIL;AACA,YAAM,IAAIoC,KAAJ,CACH,wIADG,CAAN;AAGD,KARM,MAQA,IACL,CAACvC,IAAI,KAAKxD,WAAW,CAACmE,MAArB,IAA+BX,IAAI,KAAKxD,WAAW,CAACuE,aAArD,KACA0B,YAFK,EAGL;AACA,YAAM,IAAIF,KAAJ,CACH,uBAAsBG,MAAO,8EAA6EA,MAAO,yBAD9G,CAAN;AAGD,KAPM,MAOA,IACL,CAAC1C,IAAI,KAAKxD,WAAW,CAACkE,IAArB,IAA6BV,IAAI,KAAKxD,WAAW,CAACwE,UAAnD,KACArE,gBAAgB,CAACkD,OAAD,EAAUrD,WAAW,CAAC6E,QAAtB,CAFX,EAGL;AACA,YAAM,IAAIkB,KAAJ,CACH,uBAAsBG,MAAO,4FAD1B,CAAN;AAGD;AACF;AACF,CA9DM","sourcesContent":["import { CourseElement, CourseProps, UpdateElementConnectionPost } from \"types\";\r\nimport { ElementType, ContextMenuActions, ConnectionType } from \"editor-constants\";\r\nimport {\r\n  hasChildTemplate,\r\n  hasConnection,\r\n  hasSummary,\r\n  findIndex,\r\n  hasAutoSummary,\r\n  hasAutoSummaryAllowed,\r\n} from \"utils\";\r\n\r\nconst {\r\n  AddChapter,\r\n  AddPage,\r\n  AddScreen,\r\n  AddQuestion,\r\n  AddEvaluation,\r\n  AddCustom,\r\n  AddSimpleContent,\r\n  AddSimplePage,\r\n  AddAnnexesFolder,\r\n  EditScreen,\r\n  EditPage,\r\n  EditQuestion,\r\n  EditSimpleContent,\r\n  EditSimplePage,\r\n  EditPartPage,\r\n  CopyFrom,\r\n  DefineFirstConnection,\r\n  DefineSecondConnection,\r\n  DefineRepeatConnection,\r\n  Duplicate,\r\n  MoveTo,\r\n  Rename,\r\n  ResetTemplate,\r\n  Delete,\r\n  ResetMargin,\r\n  Properties,\r\n  ActivateSummary,\r\n  DeactivateSummary,\r\n  DefineSummary,\r\n  DeleteSummary,\r\n  SwitchSummaryScreen,\r\n  SwitchSummaryPage,\r\n  Divider,\r\n} = ContextMenuActions;\r\n\r\nconst connectItems = [\r\n  Divider,\r\n  DefineFirstConnection,\r\n  DefineSecondConnection,\r\n  DefineRepeatConnection,\r\n];\r\nconst addItems = [AddChapter, AddPage, AddScreen, AddQuestion, AddEvaluation, AddCustom];\r\nconst editItems = [Divider, Duplicate, Rename, Delete];\r\nconst editItems2 = [Divider, Duplicate, Rename, ResetTemplate, Delete];\r\nconst simpleItems = [Divider, AddSimpleContent, AddSimplePage];\r\nconst ResetMargin1 = [Divider, ResetMargin];\r\n\r\nconst editItems3 = [Divider, Duplicate, MoveTo];\r\nconst editItems4 = [Divider, Rename, Delete];\r\n\r\nconst editItemScreen1 = [Divider, Duplicate, MoveTo];\r\nconst editItemScreen2 = [Divider, Rename, ResetTemplate, Delete];\r\n\r\nexport const getContextMenuActions = (\r\n  element: CourseElement,\r\n  treeType: ElementType,\r\n  courseProps?: CourseProps\r\n) => {\r\n  const { type, isEvaluation, theme, parent, isSummary, styleSummary } = element;\r\n  const { navigation } = courseProps || {};\r\n  const hasActivateSummary =\r\n    hasAutoSummaryAllowed(element, navigation?.navigationlevel) && !styleSummary;\r\n\r\n  if (treeType === ElementType.Starting) {\r\n    if (type === ElementType.Starting) {\r\n      return [AddPage, AddScreen];\r\n    } else if (type === ElementType.Page) {\r\n      return [EditPage, ...connectItems, ...editItems3, ...editItems4];\r\n    } else if (type === ElementType.Screen) {\r\n      return [EditScreen, ...connectItems, ...simpleItems, ...editItemScreen1, ...editItemScreen2];\r\n    } else if (type === ElementType.PartPage) {\r\n      return [EditPartPage, ...connectItems, ...simpleItems, ...ResetMargin1];\r\n    }\r\n  } else if (treeType === ElementType.Structure) {\r\n    if (type === ElementType.Structure) {\r\n      return [\r\n        ...addItems,\r\n        ...(hasActivateSummary ? [Divider, ActivateSummary] : []),\r\n        Divider,\r\n        CopyFrom,\r\n      ];\r\n    } else {\r\n      const summaryItems = [Divider, isSummary ? DeleteSummary : DefineSummary];\r\n\r\n      if (type === ElementType.Page) {\r\n        return [EditPage, ...summaryItems, ...editItems3, ...editItems4];\r\n      } else if (type === ElementType.Screen) {\r\n        return [\r\n          EditScreen,\r\n          ...summaryItems,\r\n          ...simpleItems,\r\n          ...editItemScreen1,\r\n          ...editItemScreen2,\r\n        ];\r\n      } else if (\r\n        parent?.type === ElementType.PartPage ? parent.parent?.isSummary : parent?.isSummary\r\n      ) {\r\n        if (type === ElementType.SimpleContent) {\r\n          return [EditSimpleContent, ...summaryItems, ...editItems2];\r\n        } else if (type === ElementType.SimplePage) {\r\n          return [EditSimplePage, ...summaryItems, ...editItems2];\r\n        }\r\n      }\r\n    }\r\n  } else if (treeType === ElementType.Annexes) {\r\n    if (type === ElementType.Annexes) {\r\n      return [AddPage, AddScreen, AddAnnexesFolder];\r\n    }\r\n  }\r\n\r\n  if (type === ElementType.Chapter) {\r\n    const chapterItems = [\r\n      ...(hasActivateSummary ? [Divider, ActivateSummary] : []),\r\n      Divider,\r\n      CopyFrom,\r\n      Divider,\r\n      Properties,\r\n      Duplicate,\r\n      Rename,\r\n      Delete,\r\n    ];\r\n    if (isEvaluation && theme && theme.toLowerCase() !== \"none\") {\r\n      return [AddQuestion, ...chapterItems];\r\n    } else {\r\n      return [...addItems, ...chapterItems];\r\n    }\r\n  } else if (type === ElementType.Page) {\r\n    return [EditPage, ...editItems3, ...editItems4];\r\n  } else if (type === ElementType.Screen) {\r\n    return [EditScreen, ...simpleItems, ...editItemScreen1, ...editItemScreen2];\r\n  } else if (type === ElementType.Question) {\r\n    return [EditQuestion, ...simpleItems, ...editItems2];\r\n  } else if (type === ElementType.PartPage) {\r\n    return [EditPartPage, ...simpleItems, ...ResetMargin1, Duplicate];\r\n  } else if (type === ElementType.Feedback) {\r\n    return [AddSimpleContent];\r\n  } else if (type === ElementType.SimpleContent) {\r\n    return [EditSimpleContent, ...editItems2];\r\n  } else if (type === ElementType.SimplePage) {\r\n    return [EditSimplePage, ...editItems];\r\n  } else if (type === ElementType.Custom) {\r\n    return [Properties, Duplicate, Rename, Delete];\r\n  } else if (type === ElementType.AnnexesFolder) {\r\n    return [AddAnnexesFolder, AddPage, AddScreen, Divider, CopyFrom, Divider, Rename, Delete];\r\n  } else if (type === ElementType.Summary) {\r\n    return [SwitchSummaryScreen, SwitchSummaryPage, DeactivateSummary];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const hasContextMenuAction = (element: CourseElement, action: ContextMenuActions) => {\r\n  const connections = element.connections || [];\r\n\r\n  switch (action) {\r\n    case DefineFirstConnection:\r\n      return findIndex(connections, ConnectionType.First, \"value\") !== -1;\r\n    case DefineSecondConnection:\r\n      return findIndex(connections, ConnectionType.Second, \"value\") !== -1;\r\n    case DefineRepeatConnection:\r\n      return findIndex(connections, ConnectionType.Repeat, \"value\") !== -1;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport const getElementTypeByAction = (action: ContextMenuActions) => {\r\n  switch (action) {\r\n    case ContextMenuActions.AddChapter:\r\n      return ElementType.Chapter;\r\n    case ContextMenuActions.AddEvaluation:\r\n      return ElementType.Evaluation;\r\n    case ContextMenuActions.AddScreen:\r\n      return ElementType.Screen;\r\n    case ContextMenuActions.AddPage:\r\n      return ElementType.Page;\r\n    case ContextMenuActions.AddQuestion:\r\n      return ElementType.Question;\r\n    case ContextMenuActions.AddCustom:\r\n      return ElementType.Custom;\r\n    case ContextMenuActions.AddSimpleContent:\r\n      return ElementType.SimpleContent;\r\n    case ContextMenuActions.AddSimplePage:\r\n      return ElementType.SimplePage;\r\n    case ContextMenuActions.AddAnnexesFolder:\r\n      return ElementType.AnnexesFolder;\r\n  }\r\n};\r\n\r\nexport const getConnectionTypeByAction = (action: ContextMenuActions) => {\r\n  switch (action) {\r\n    case ContextMenuActions.DefineSecondConnection:\r\n      return ConnectionType.Second;\r\n    case ContextMenuActions.DefineFirstConnection:\r\n      return ConnectionType.First;\r\n    case ContextMenuActions.DefineRepeatConnection:\r\n      return ConnectionType.Repeat;\r\n  }\r\n};\r\n\r\nexport const createConnection = (\r\n  element: CourseElement,\r\n  connectionType: ConnectionType\r\n): UpdateElementConnectionPost | undefined => {\r\n  const connections = element.connections || [];\r\n\r\n  if (!hasConnection(connections, connectionType)) {\r\n    return { id: element.id, connections: [connectionType] };\r\n  }\r\n};\r\n\r\nexport const validateAutoSummary = (element: CourseElement) => {\r\n  if (hasSummary(element)) {\r\n    throw new Error(\r\n      \"You cannot reactivate the Auto Summary because you have created a screen or page as summary. Please delete it before reactivating the Auto Summary\"\r\n    );\r\n  }\r\n};\r\n\r\nexport const validateSummary = (\r\n  element: CourseElement,\r\n\r\n  courseProps?: CourseProps\r\n) => {\r\n  const { type, isSummary, templateType, parent } = element;\r\n  const { navigation } = courseProps || {};\r\n  const target =\r\n    type === ElementType.Screen\r\n      ? \"screen\"\r\n      : type === ElementType.Page\r\n      ? \"page\"\r\n      : type === ElementType.SimpleContent\r\n      ? \"simple content\"\r\n      : \"simple page\";\r\n\r\n  if (isSummary) {\r\n    if ((type === ElementType.Screen || type === ElementType.SimpleContent) && templateType) {\r\n      throw new Error(\r\n        `You cannot remove the summary tag from a ${target} with a summary template. You should delete the ${target}.`\r\n      );\r\n    } else if (\r\n      (type === ElementType.Screen ||\r\n        type === ElementType.Page ||\r\n        type === ElementType.SimplePage) &&\r\n      hasSummary(element)\r\n    ) {\r\n      const target2 = type === ElementType.Screen ? \"simple content/page\" : \"partpage\";\r\n\r\n      throw new Error(\r\n        `You cannot remove the summary tag from a ${target} who has summary ${target2}. You should delete all summary ${target2} first.`\r\n      );\r\n    }\r\n  } else {\r\n    if (parent && hasAutoSummary(parent, navigation?.navigationlevel)) {\r\n      throw new Error(\r\n        \"There is an Auto Summary. Auto Summary and template summary cannot be mixed. Deactivate the Auto Summary before define this screen/page as summary.\"\r\n      );\r\n    } else if (\r\n      parent &&\r\n      [ElementType.Structure, ElementType.Chapter].includes(parent.type) &&\r\n      hasSummary(parent)\r\n    ) {\r\n      throw new Error(\r\n        `There is already a summary. Only one summary can be defined in a chapter. Remove the summary before define this screen/page as summary`\r\n      );\r\n    } else if (\r\n      (type === ElementType.Screen || type === ElementType.SimpleContent) &&\r\n      templateType\r\n    ) {\r\n      throw new Error(\r\n        `You cannot define a ${target} as summary if it has already a template assigned. You have to delete this ${target} or choose another one.`\r\n      );\r\n    } else if (\r\n      (type === ElementType.Page || type === ElementType.SimplePage) &&\r\n      hasChildTemplate(element, ElementType.Question)\r\n    ) {\r\n      throw new Error(\r\n        `You cannot define a ${target} as summary if it has a question partpage. You should delete all questions partpage first.`\r\n      );\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}