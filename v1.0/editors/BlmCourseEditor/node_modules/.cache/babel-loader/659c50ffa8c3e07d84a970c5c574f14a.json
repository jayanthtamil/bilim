{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\shared\\\\feedback-slider\\\\threshold\\\\BlmThreshold.tsx\";\nimport React from \"react\";\nimport { Select, MenuItem } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { findIndex } from \"utils\";\nimport \"./threshold.scss\";\n\nfunction BlmThreshold(props) {\n  const {\n    data,\n    elements,\n    onChange\n  } = props;\n  let {\n    threshold = 100,\n    feedback = \"\"\n  } = data || {};\n  const title = data && \"start\" in data ? data.start + \" - \" + data.end : threshold;\n  const {\n    t\n  } = useTranslation(); //We need unselect if previously selcted element is deleted\n\n  if (!elements || findIndex(elements, feedback, \"id\") === -1) {\n    feedback = \"\";\n  }\n\n  const handleChange = event => {\n    if (data) {\n      const {\n        value\n      } = event.target;\n      const newData = { ...data,\n        feedback: value\n      };\n\n      if (onChange) {\n        onChange(newData);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"threshold-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"threshold-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(Select, {\n    displayEmpty: true,\n    value: feedback,\n    className: \"threshold-dropdown\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"default\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, t(\"label.select_1\"))), elements && elements.map(element => /*#__PURE__*/React.createElement(MenuItem, {\n    key: element.id,\n    value: element.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, element.name))));\n}\n\nexport default BlmThreshold;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/feedback-slider/threshold/BlmThreshold.tsx"],"names":["React","Select","MenuItem","useTranslation","findIndex","BlmThreshold","props","data","elements","onChange","threshold","feedback","title","start","end","t","handleChange","event","value","target","newData","map","element","id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,mBAAjC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAO,kBAAP;;AAQA,SAASC,YAAT,CAAsBC,KAAtB,EAAwC;AACtC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAA+BH,KAArC;AACA,MAAI;AAAEI,IAAAA,SAAS,GAAG,GAAd;AAAmBC,IAAAA,QAAQ,GAAG;AAA9B,MAAqCJ,IAAI,IAAI,EAAjD;AACA,QAAMK,KAAK,GAAGL,IAAI,IAAI,WAAWA,IAAnB,GAA0BA,IAAI,CAACM,KAAL,GAAa,KAAb,GAAqBN,IAAI,CAACO,GAApD,GAA0DJ,SAAxE;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAQZ,cAAc,EAA5B,CAJsC,CAMtC;;AACA,MAAI,CAACK,QAAD,IAAaJ,SAAS,CAACI,QAAD,EAAWG,QAAX,EAAqB,IAArB,CAAT,KAAwC,CAAC,CAA1D,EAA6D;AAC3DA,IAAAA,QAAQ,GAAG,EAAX;AACD;;AAED,QAAMK,YAAY,GAAIC,KAAD,IAA4C;AAC/D,QAAIV,IAAJ,EAAU;AACR,YAAM;AAAEW,QAAAA;AAAF,UAAYD,KAAK,CAACE,MAAxB;AACA,YAAMC,OAAO,GAAG,EAAE,GAAGb,IAAL;AAAWI,QAAAA,QAAQ,EAAEO;AAArB,OAAhB;;AAEA,UAAIT,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACW,OAAD,CAAR;AACD;AACF;AACF,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCR,KAAhC,CADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,YAAY,MAApB;AAAqB,IAAA,KAAK,EAAED,QAA5B;AAAsC,IAAA,SAAS,EAAC,oBAAhD;AAAqE,IAAA,QAAQ,EAAEK,YAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAC,SAAd;AAAwB,IAAA,KAAK,EAAC,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAAC,gBAAD,CAAN,CADF,CADF,EAIGP,QAAQ,IACPA,QAAQ,CAACa,GAAT,CAAcC,OAAD,iBACX,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,OAAO,CAACC,EAAvB;AAA2B,IAAA,KAAK,EAAED,OAAO,CAACC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,IADX,CADF,CALJ,CAFF,CADF;AAgBD;;AAED,eAAenB,YAAf","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport { Select, MenuItem } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CourseElement, Threshold } from \"types\";\r\nimport { findIndex } from \"utils\";\r\nimport { MarkerThreshold } from \"./types\";\r\nimport \"./threshold.scss\";\r\n\r\ninterface CompProps {\r\n  data?: MarkerThreshold | Threshold;\r\n  elements?: CourseElement[];\r\n  onChange?: (data: MarkerThreshold | Threshold) => void;\r\n}\r\n\r\nfunction BlmThreshold(props: CompProps) {\r\n  const { data, elements, onChange } = props;\r\n  let { threshold = 100, feedback = \"\" } = data || {};\r\n  const title = data && \"start\" in data ? data.start + \" - \" + data.end : threshold;\r\n  const { t } = useTranslation();\r\n\r\n  //We need unselect if previously selcted element is deleted\r\n  if (!elements || findIndex(elements, feedback, \"id\") === -1) {\r\n    feedback = \"\";\r\n  }\r\n\r\n  const handleChange = (event: ChangeEvent<{ value: unknown }>) => {\r\n    if (data) {\r\n      const { value } = event.target;\r\n      const newData = { ...data, feedback: value as string };\r\n\r\n      if (onChange) {\r\n        onChange(newData);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"threshold-wrapper\">\r\n      <div className=\"threshold-lbl\">{title}</div>\r\n      <Select displayEmpty value={feedback} className=\"threshold-dropdown\" onChange={handleChange}>\r\n        <MenuItem key=\"default\" value=\"\">\r\n          <em>{t(\"label.select_1\")}</em>\r\n        </MenuItem>\r\n        {elements &&\r\n          elements.map((element) => (\r\n            <MenuItem key={element.id} value={element.id}>\r\n              {element.name}\r\n            </MenuItem>\r\n          ))}\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmThreshold;\r\n"]},"metadata":{},"sourceType":"module"}