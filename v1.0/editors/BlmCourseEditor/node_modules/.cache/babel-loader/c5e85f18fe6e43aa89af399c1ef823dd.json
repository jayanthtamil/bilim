{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\shared\\\\feedback-slider\\\\BlmFeedbackSlider.tsx\";\nimport React from \"react\";\nimport { BlmSlider } from \"shared\";\nimport BlmThreshold from \"./threshold\";\nimport { createMarkers, getFeedbackElements } from \"./utils\";\nimport \"./feedback-slider.scss\";\n\nfunction BlmFeedbackSlider(props) {\n  const {\n    element,\n    thresholds,\n    onChange,\n    ...others\n  } = props;\n  const {\n    markers,\n    completion\n  } = createMarkers(thresholds);\n  const fbElements = getFeedbackElements(element);\n  const hasCompletion = completion ? true : false;\n  const hasAddBtn = markers.length <= 2;\n\n  const updateChange = newThresholds => {\n    if (onChange) {\n      onChange(newThresholds);\n    }\n  };\n\n  const addThreshold = value => {\n    const len = thresholds ? thresholds.length : 0;\n\n    if (completion && len === 3 || !completion && len === 2) {\n      const [first, last, ...other] = thresholds;\n\n      if (first.threshold < value && value < last.threshold) {\n        const middle = {\n          threshold: value,\n          feedback: \"\"\n        };\n        const newThresholds = [first, middle, last, ...other];\n        updateChange(newThresholds);\n      }\n    }\n  };\n\n  const removeThreshold = () => {\n    const len = thresholds.length;\n\n    if (completion && len === 4 || !completion && len === 3) {\n      const [first,, ...other] = thresholds;\n      const newThresholds = [first, ...other];\n      updateChange(newThresholds);\n    }\n  };\n\n  const handleChange = newMarkers => {\n    let newThresholds;\n    newThresholds = newMarkers.map(marker => {\n      const {\n        start,\n        end,\n        ...other\n      } = marker;\n      const threshold = { ...other,\n        threshold: start\n      };\n      return threshold;\n    });\n\n    if (completion) {\n      newThresholds.push({ ...completion\n      });\n    }\n\n    updateChange(newThresholds);\n  };\n\n  const handleThresholdFbChange = newMarker => {\n    if (!(\"start\" in newMarker)) {\n      if (completion) {\n        const newCompletionThreshold = { ...completion,\n          feedback: newMarker.feedback\n        };\n        let newThresholds;\n        thresholds.splice(thresholds.length - 1, 1);\n        newThresholds = [...thresholds, newCompletionThreshold];\n        updateChange(newThresholds);\n      }\n    } else {\n      const newMarkers = markers.map(marker => {\n        if (marker.start === newMarker.start) {\n          return { ...marker,\n            feedback: newMarker.feedback\n          };\n        }\n\n        return { ...marker\n        };\n      });\n      handleChange(newMarkers);\n    }\n  };\n\n  const handleAddClick = value => {\n    if (typeof value !== \"number\") {\n      const [first, second] = thresholds;\n      value = Math.round((second.threshold - first.threshold) / 2);\n    }\n\n    addThreshold(value);\n  };\n\n  const handleRemoveClick = () => {\n    removeThreshold();\n  };\n\n  const handleCompletionClick = () => {\n    const len = thresholds.length;\n\n    if (len > 0) {\n      const last = thresholds[len - 1];\n      let newThresholds;\n\n      if (!completion) {\n        if (last.threshold !== 100) {\n          newThresholds = [...thresholds, {\n            threshold: 100,\n            feedback: \"\"\n          }];\n          updateChange(newThresholds);\n        }\n      } else {\n        if (last.threshold === 100) {\n          thresholds.splice(len - 1, 1);\n          newThresholds = [...thresholds];\n          updateChange(newThresholds);\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"feedback-slider-wrapper\"\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(BlmSlider, {\n    markers: markers,\n    hasCompletion: hasCompletion,\n    onChange: handleChange,\n    onAddClick: handleAddClick,\n    onRemoveClick: handleRemoveClick,\n    onCompletionClick: handleCompletionClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BlmThreshold, {\n    data: markers[0],\n    elements: fbElements,\n    onChange: handleThresholdFbChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), hasAddBtn ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-threshold-btn\",\n    onClick: handleAddClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(BlmThreshold, {\n    data: markers[1],\n    elements: fbElements,\n    onChange: handleThresholdFbChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BlmThreshold, {\n    data: markers[markers.length - 1],\n    elements: fbElements,\n    onChange: handleThresholdFbChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }), hasCompletion ? /*#__PURE__*/React.createElement(BlmThreshold, {\n    data: completion,\n    elements: fbElements,\n    onChange: handleThresholdFbChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-threshold-btn\",\n    onClick: handleCompletionClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default BlmFeedbackSlider;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/feedback-slider/BlmFeedbackSlider.tsx"],"names":["React","BlmSlider","BlmThreshold","createMarkers","getFeedbackElements","BlmFeedbackSlider","props","element","thresholds","onChange","others","markers","completion","fbElements","hasCompletion","hasAddBtn","length","updateChange","newThresholds","addThreshold","value","len","first","last","other","threshold","middle","feedback","removeThreshold","handleChange","newMarkers","map","marker","start","end","push","handleThresholdFbChange","newMarker","newCompletionThreshold","splice","handleAddClick","second","Math","round","handleRemoveClick","handleCompletionClick"],"mappings":"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","sourcesContent":["import React, { MouseEvent, HTMLAttributes } from \"react\";\r\n\r\nimport { CourseElement, Threshold } from \"types\";\r\nimport { BlmSlider, Marker } from \"shared\";\r\nimport BlmThreshold, { MarkerThreshold } from \"./threshold\";\r\nimport { createMarkers, getFeedbackElements } from \"./utils\";\r\nimport \"./feedback-slider.scss\";\r\n\r\ninterface CompProps extends Omit<HTMLAttributes<HTMLDivElement>, \"onChange\"> {\r\n  element: CourseElement;\r\n  thresholds: Threshold[];\r\n  onChange?: (threshols: Threshold[]) => void;\r\n}\r\n\r\nfunction BlmFeedbackSlider(props: CompProps) {\r\n  const { element, thresholds, onChange, ...others } = props;\r\n  const { markers, completion } = createMarkers(thresholds);\r\n  const fbElements = getFeedbackElements(element);\r\n  const hasCompletion = completion ? true : false;\r\n  const hasAddBtn = markers.length <= 2;\r\n\r\n  const updateChange = (newThresholds: Threshold[]) => {\r\n    if (onChange) {\r\n      onChange(newThresholds);\r\n    }\r\n  };\r\n\r\n  const addThreshold = (value: number) => {\r\n    const len = thresholds ? thresholds.length : 0;\r\n\r\n    if ((completion && len === 3) || (!completion && len === 2)) {\r\n      const [first, last, ...other] = thresholds;\r\n\r\n      if (first.threshold < value && value < last.threshold) {\r\n        const middle = { threshold: value, feedback: \"\" };\r\n        const newThresholds = [first, middle, last, ...other];\r\n\r\n        updateChange(newThresholds);\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeThreshold = () => {\r\n    const len = thresholds.length;\r\n\r\n    if ((completion && len === 4) || (!completion && len === 3)) {\r\n      const [first, , ...other] = thresholds;\r\n      const newThresholds = [first, ...other];\r\n\r\n      updateChange(newThresholds);\r\n    }\r\n  };\r\n\r\n  const handleChange = (newMarkers: Marker[]) => {\r\n    let newThresholds;\r\n\r\n    newThresholds = newMarkers.map((marker) => {\r\n      const { start, end, ...other } = marker;\r\n      const threshold = { ...other, threshold: start } as Threshold;\r\n\r\n      return threshold;\r\n    });\r\n\r\n    if (completion) {\r\n      newThresholds.push({\r\n        ...completion,\r\n      });\r\n    }\r\n\r\n    updateChange(newThresholds);\r\n  };\r\n\r\n  const handleThresholdFbChange = (newMarker: MarkerThreshold | Threshold) => {\r\n    if (!(\"start\" in newMarker)) {\r\n      if (completion) {\r\n        const newCompletionThreshold = {\r\n          ...completion,\r\n          feedback: newMarker.feedback,\r\n        };\r\n        let newThresholds;\r\n\r\n        thresholds.splice(thresholds.length - 1, 1);\r\n        newThresholds = [...thresholds, newCompletionThreshold];\r\n        updateChange(newThresholds);\r\n      }\r\n    } else {\r\n      const newMarkers = markers.map((marker) => {\r\n        if (marker.start === newMarker.start) {\r\n          return { ...marker, feedback: newMarker.feedback };\r\n        }\r\n        return { ...marker };\r\n      });\r\n\r\n      handleChange(newMarkers);\r\n    }\r\n  };\r\n\r\n  const handleAddClick = (value: number | MouseEvent) => {\r\n    if (typeof value !== \"number\") {\r\n      const [first, second] = thresholds;\r\n      value = Math.round((second.threshold - first.threshold) / 2);\r\n    }\r\n    addThreshold(value);\r\n  };\r\n\r\n  const handleRemoveClick = () => {\r\n    removeThreshold();\r\n  };\r\n\r\n  const handleCompletionClick = () => {\r\n    const len = thresholds.length;\r\n    if (len > 0) {\r\n      const last = thresholds[len - 1];\r\n      let newThresholds;\r\n\r\n      if (!completion) {\r\n        if (last.threshold !== 100) {\r\n          newThresholds = [\r\n            ...thresholds,\r\n            {\r\n              threshold: 100,\r\n              feedback: \"\",\r\n            },\r\n          ];\r\n\r\n          updateChange(newThresholds);\r\n        }\r\n      } else {\r\n        if (last.threshold === 100) {\r\n          thresholds.splice(len - 1, 1);\r\n          newThresholds = [...thresholds];\r\n\r\n          updateChange(newThresholds);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"feedback-slider-wrapper\" {...others}>\r\n      <BlmSlider\r\n        markers={markers}\r\n        hasCompletion={hasCompletion}\r\n        onChange={handleChange}\r\n        onAddClick={handleAddClick}\r\n        onRemoveClick={handleRemoveClick}\r\n        onCompletionClick={handleCompletionClick}\r\n      />\r\n      <BlmThreshold data={markers[0]} elements={fbElements} onChange={handleThresholdFbChange} />\r\n      {hasAddBtn ? (\r\n        <div className=\"add-threshold-btn\" onClick={handleAddClick} />\r\n      ) : (\r\n        <BlmThreshold data={markers[1]} elements={fbElements} onChange={handleThresholdFbChange} />\r\n      )}\r\n      <BlmThreshold\r\n        data={markers[markers.length - 1]}\r\n        elements={fbElements}\r\n        onChange={handleThresholdFbChange}\r\n      />\r\n      {hasCompletion ? (\r\n        <BlmThreshold data={completion} elements={fbElements} onChange={handleThresholdFbChange} />\r\n      ) : (\r\n        <div className=\"add-threshold-btn\" onClick={handleCompletionClick} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmFeedbackSlider;\r\n"]},"metadata":{},"sourceType":"module"}