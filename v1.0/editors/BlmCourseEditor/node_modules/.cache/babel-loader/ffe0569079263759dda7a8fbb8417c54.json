{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\question-editor\\\\components\\\\main\\\\proposition\\\\BlmQuestionProposition.tsx\";\nimport React, { useState, memo, forwardRef } from \"react\";\nimport clsx from \"clsx\";\nimport { Checkbox, Collapse } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { AcceptedFileTypes } from \"editor-constants\";\nimport { deepCopy } from \"utils\";\nimport { BlmMediaPicker, BlmMediaPickerEditor } from \"components/shared\";\nimport { useQuestionEditorCtx } from \"components/question-editor/core\";\nimport { updateQuestionProposition, deleteQuestionProposition } from \"components/question-editor/reducers\";\nimport BlmQuestionPropositionInfo from \"../proposition-info\";\nimport BlmQuestionPropositionFeedback from \"../proposition-feedback\";\nimport \"./styles.scss\";\n\nconst BlmQuestionProposition = (props, ref) => {\n  const {\n    drag,\n    isDeletable,\n    data,\n    showFeedback = false,\n    className,\n    dispatch,\n    ...others\n  } = props;\n  const {\n    title,\n    text,\n    media,\n    sound,\n    validity,\n    info,\n    feedback\n  } = data;\n  const [isExpaned, setIsExpanded] = useState(false);\n  const {\n    element\n  } = useQuestionEditorCtx();\n  const {\n    t\n  } = useTranslation(\"question-editor\");\n\n  const updateChange = newData => {\n    if (dispatch) {\n      dispatch(updateQuestionProposition(newData));\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      target\n    } = event;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const newData = deepCopy(data);\n\n    if (name === \"validity\") {\n      newData.validity.value = value;\n    } else if (name === \"title\") {\n      newData.title.value = value;\n    } else if (name === \"text\") {\n      newData.text.value = value;\n    } else if (name === \"media\") {\n      newData.media.value = value;\n    } else if (name === \"sound\") {\n      if (value && !value.subtitle) {\n        var _newData$sound, _newData$sound$value;\n\n        value.subtitle = (_newData$sound = newData.sound) === null || _newData$sound === void 0 ? void 0 : (_newData$sound$value = _newData$sound.value) === null || _newData$sound$value === void 0 ? void 0 : _newData$sound$value.subtitle;\n      }\n\n      if (value && !value.marker) {\n        var _newData$sound2, _newData$sound2$value;\n\n        value.marker = (_newData$sound2 = newData.sound) === null || _newData$sound2 === void 0 ? void 0 : (_newData$sound2$value = _newData$sound2.value) === null || _newData$sound2$value === void 0 ? void 0 : _newData$sound2$value.marker;\n      }\n\n      newData.sound.value = value;\n    }\n\n    updateChange(newData);\n  };\n\n  const handleInfoChange = info => {\n    const newData = { ...data,\n      info: { ...data.info,\n        value: info\n      }\n    };\n    updateChange(newData);\n  };\n\n  const handleFeedbackChange = feedback => {\n    const newData = { ...data,\n      feedback\n    };\n    updateChange(newData);\n  };\n\n  const handleDeleteClick = event => {\n    if (isDeletable && dispatch) {\n      dispatch(deleteQuestionProposition(data));\n    }\n  };\n\n  const handleExpandClick = event => {\n    setIsExpanded(prevValue => !prevValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: ref,\n    className: clsx(\"question-proposition-wrapper\", className, {\n      expanded: isExpaned\n    })\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-proposition-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-proposition-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"media\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Image, AcceptedFileTypes.Video],\n    data: media.value,\n    placeholder: t(\"main.no_media\"),\n    disabled: !media.isEditable,\n    className: \"media-picker-2\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BlmMediaPickerEditor, {\n    name: \"sound\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Audio],\n    data: sound.value,\n    placeholder: t(\"label.no_sound\"),\n    disabled: !sound.isEditable,\n    className: \"sound-picker-2\",\n    onChange: handleChange,\n    showDesign: \"showDesign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"validity\",\n    checked: validity.value || false,\n    disabled: !validity.isEditable,\n    className: \"checkbox-2\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: title.value || \"\",\n    disabled: !title.isEditable,\n    className: \"question-proposition-title\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-proposition-title-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"text\",\n    value: text.value || \"\",\n    disabled: !text.isEditable,\n    className: \"question-proposition-description\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"question-proposition-delete-btn\", {\n      disabled: !isDeletable\n    }),\n    onClick: handleDeleteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-proposition-expand-btn\",\n    onClick: handleExpandClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"question-proposition-drag-box\"\n  }, drag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Collapse, {\n    in: isExpaned,\n    className: \"question-proposition-collapse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, info.value && /*#__PURE__*/React.createElement(BlmQuestionPropositionInfo, {\n    data: info.value,\n    isEditable: info.isEditable,\n    onChange: handleInfoChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }), showFeedback && /*#__PURE__*/React.createElement(BlmQuestionPropositionFeedback, {\n    data: feedback,\n    onChange: handleFeedbackChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default memo(forwardRef(BlmQuestionProposition));","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/question-editor/components/main/proposition/BlmQuestionProposition.tsx"],"names":["React","useState","memo","forwardRef","clsx","Checkbox","Collapse","useTranslation","AcceptedFileTypes","deepCopy","BlmMediaPicker","BlmMediaPickerEditor","useQuestionEditorCtx","updateQuestionProposition","deleteQuestionProposition","BlmQuestionPropositionInfo","BlmQuestionPropositionFeedback","BlmQuestionProposition","props","ref","drag","isDeletable","data","showFeedback","className","dispatch","others","title","text","media","sound","validity","info","feedback","isExpaned","setIsExpanded","element","t","updateChange","newData","handleChange","event","target","name","value","type","checked","subtitle","marker","handleInfoChange","handleFeedbackChange","handleDeleteClick","handleExpandClick","prevValue","expanded","id","Image","Video","isEditable","Audio","disabled"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  ChangeEvent,\r\n  MouseEvent,\r\n  memo,\r\n  forwardRef,\r\n  ForwardRefRenderFunction,\r\n  HTMLAttributes,\r\n} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Checkbox, Collapse } from \"@material-ui/core\";\r\nimport { DraggableProvidedDragHandleProps } from \"react-beautiful-dnd\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { QuestionProposition, QuestionPropositionInfo, QuestionPropositionFeedback } from \"types\";\r\nimport { AcceptedFileTypes } from \"editor-constants\";\r\nimport { deepCopy } from \"utils\";\r\nimport { BlmMediaPicker, MediaPickerChangeEvent, BlmMediaPickerEditor } from \"components/shared\";\r\nimport { useQuestionEditorCtx } from \"components/question-editor/core\";\r\nimport {\r\n  QuestionEditorDispatch,\r\n  updateQuestionProposition,\r\n  deleteQuestionProposition,\r\n} from \"components/question-editor/reducers\";\r\nimport BlmQuestionPropositionInfo from \"../proposition-info\";\r\nimport BlmQuestionPropositionFeedback from \"../proposition-feedback\";\r\n\r\nimport \"./styles.scss\";\r\n\r\ninterface CompProps extends HTMLAttributes<HTMLDivElement> {\r\n  drag: DraggableProvidedDragHandleProps | undefined;\r\n  data: QuestionProposition;\r\n  isDeletable: boolean;\r\n  showFeedback?: boolean;\r\n  dispatch: QuestionEditorDispatch;\r\n}\r\n\r\nconst BlmQuestionProposition: ForwardRefRenderFunction<HTMLDivElement, CompProps> = (\r\n  props,\r\n  ref\r\n) => {\r\n  const { drag, isDeletable, data, showFeedback = false, className, dispatch, ...others } = props;\r\n  const { title, text, media, sound, validity, info, feedback } = data;\r\n  const [isExpaned, setIsExpanded] = useState(false);\r\n  const { element } = useQuestionEditorCtx();\r\n  const { t } = useTranslation(\"question-editor\");\r\n\r\n  const updateChange = (newData: QuestionProposition) => {\r\n    if (dispatch) {\r\n      dispatch(updateQuestionProposition(newData));\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<any> | MediaPickerChangeEvent) => {\r\n    const { target } = event;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const newData: QuestionProposition = deepCopy(data);\r\n\r\n    if (name === \"validity\") {\r\n      newData.validity.value = value;\r\n    } else if (name === \"title\") {\r\n      newData.title.value = value;\r\n    } else if (name === \"text\") {\r\n      newData.text.value = value;\r\n    } else if (name === \"media\") {\r\n      newData.media.value = value;\r\n    } else if (name === \"sound\") {\r\n      if (value && !value.subtitle) {\r\n        value.subtitle = newData.sound?.value?.subtitle;\r\n      }\r\n      if (value && !value.marker) {\r\n        value.marker = newData.sound?.value?.marker;\r\n      }\r\n      newData.sound.value = value;\r\n    }\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleInfoChange = (info: QuestionPropositionInfo) => {\r\n    const newData: QuestionProposition = {\r\n      ...data,\r\n      info: { ...data.info, value: info },\r\n    };\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleFeedbackChange = (feedback: QuestionPropositionFeedback) => {\r\n    const newData = { ...data, feedback };\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleDeleteClick = (event: MouseEvent) => {\r\n    if (isDeletable && dispatch) {\r\n      dispatch(deleteQuestionProposition(data));\r\n    }\r\n  };\r\n\r\n  const handleExpandClick = (event: MouseEvent) => {\r\n    setIsExpanded((prevValue) => !prevValue);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={clsx(\"question-proposition-wrapper\", className, {\r\n        expanded: isExpaned,\r\n      })}\r\n      {...others}\r\n    >\r\n      <div className=\"question-proposition-main\">\r\n        <div className=\"question-proposition-media\">\r\n          <BlmMediaPicker\r\n            name=\"media\"\r\n            elementId={element!.id}\r\n            acceptedFiles={[AcceptedFileTypes.Image, AcceptedFileTypes.Video]}\r\n            data={media.value}\r\n            placeholder={t(\"main.no_media\")}\r\n            disabled={!media.isEditable}\r\n            className=\"media-picker-2\"\r\n            onChange={handleChange}\r\n          />\r\n          <BlmMediaPickerEditor\r\n            name=\"sound\"\r\n            elementId={element!.id}\r\n            acceptedFiles={[AcceptedFileTypes.Audio]}\r\n            data={sound.value}\r\n            placeholder={t(\"label.no_sound\")}\r\n            disabled={!sound.isEditable}\r\n            className=\"sound-picker-2\"\r\n            onChange={handleChange}\r\n            showDesign=\"showDesign\"\r\n          />\r\n        </div>\r\n        <Checkbox\r\n          name=\"validity\"\r\n          checked={validity.value || false}\r\n          disabled={!validity.isEditable}\r\n          className=\"checkbox-2\"\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={title.value || \"\"}\r\n          disabled={!title.isEditable}\r\n          className=\"question-proposition-title\"\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"question-proposition-title-hr\" />\r\n        <textarea\r\n          name=\"text\"\r\n          value={text.value || \"\"}\r\n          disabled={!text.isEditable}\r\n          className=\"question-proposition-description\"\r\n          onChange={handleChange}\r\n        />\r\n        <div\r\n          className={clsx(\"question-proposition-delete-btn\", {\r\n            disabled: !isDeletable,\r\n          })}\r\n          onClick={handleDeleteClick}\r\n        />\r\n        <div className=\"question-proposition-expand-btn\" onClick={handleExpandClick} />\r\n      </div>\r\n      <div className=\"question-proposition-drag-box\" {...drag} />\r\n      <Collapse in={isExpaned} className=\"question-proposition-collapse\">\r\n        {info.value && (\r\n          <BlmQuestionPropositionInfo\r\n            data={info.value}\r\n            isEditable={info.isEditable}\r\n            onChange={handleInfoChange}\r\n          />\r\n        )}\r\n        {showFeedback && (\r\n          <BlmQuestionPropositionFeedback data={feedback} onChange={handleFeedbackChange} />\r\n        )}\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(forwardRef(BlmQuestionProposition));\r\n"]},"metadata":{},"sourceType":"module"}