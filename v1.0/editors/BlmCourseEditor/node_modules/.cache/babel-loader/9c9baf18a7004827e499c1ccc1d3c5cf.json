{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { getMediaProperties, uploadFiles, clearFile, addFiles, getFile, openDialog } from \"redux/actions\";\nimport BlmMediaEditor from \"./BlmMediaEditor\";\n\nconst mapStateToProps = ({\n  course: {\n    file: {\n      files: {\n        uploaded,\n        loaded\n      },\n      properties\n    }\n  }\n}, props) => {\n  var _properties$id;\n\n  const {\n    data\n  } = props;\n  const {\n    id,\n    subtitle,\n    marker\n  } = data;\n  return {\n    files: uploaded,\n    waveformUrl: (_properties$id = properties[id]) === null || _properties$id === void 0 ? void 0 : _properties$id.waveform,\n    waveformFile: loaded[id],\n    subtitleFile: (subtitle === null || subtitle === void 0 ? void 0 : subtitle.id) && loaded[subtitle.id],\n    markerFile: (marker === null || marker === void 0 ? void 0 : marker.id) && loaded[marker.id]\n  };\n};\n\nconst mapDispatchToProps = {\n  getMediaProperties,\n  uploadFiles,\n  clearFile,\n  addFiles,\n  getFile,\n  openDialog\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default connector(BlmMediaEditor);","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/media-editor/core/main/container.tsx"],"names":["connect","getMediaProperties","uploadFiles","clearFile","addFiles","getFile","openDialog","BlmMediaEditor","mapStateToProps","course","file","files","uploaded","loaded","properties","props","data","id","subtitle","marker","waveformUrl","waveform","waveformFile","subtitleFile","markerFile","mapDispatchToProps","connector"],"mappings":"AAAA,SAASA,OAAT,QAAwC,aAAxC;AAGA,SACEC,kBADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,QAJF,EAKEC,OALF,EAMEC,UANF,QAOO,eAPP;AAQA,OAAOC,cAAP,MAAiD,kBAAjD;;AAEA,MAAMC,eAAe,GAAG,CACtB;AACEC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OADH;AAEJC,MAAAA;AAFI;AADA;AADV,CADsB,EAStBC,KATsB,KAUnB;AAAA;;AACH,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAM;AAAEE,IAAAA,EAAF;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA;AAAhB,MAA2BH,IAAjC;AAEA,SAAO;AACLL,IAAAA,KAAK,EAAEC,QADF;AAELQ,IAAAA,WAAW,oBAAEN,UAAU,CAACG,EAAD,CAAZ,mDAAE,eAAgBI,QAFxB;AAGLC,IAAAA,YAAY,EAAET,MAAM,CAACI,EAAD,CAHf;AAILM,IAAAA,YAAY,EAAE,CAAAL,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAED,EAAV,KAAgBJ,MAAM,CAACK,QAAQ,CAACD,EAAV,CAJ/B;AAKLO,IAAAA,UAAU,EAAE,CAAAL,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEF,EAAR,KAAcJ,MAAM,CAACM,MAAM,CAACF,EAAR;AAL3B,GAAP;AAOD,CArBD;;AAuBA,MAAMQ,kBAAkB,GAAG;AACzBxB,EAAAA,kBADyB;AAEzBC,EAAAA,WAFyB;AAGzBC,EAAAA,SAHyB;AAIzBC,EAAAA,QAJyB;AAKzBC,EAAAA,OALyB;AAMzBC,EAAAA;AANyB,CAA3B;AASA,MAAMoB,SAAS,GAAG1B,OAAO,CAACQ,eAAD,EAAkBiB,kBAAlB,CAAzB;AAGA,eAAeC,SAAS,CAACnB,cAAD,CAAxB","sourcesContent":["import { connect, ConnectedProps } from \"react-redux\";\r\n\r\nimport { RootState } from \"redux/types\";\r\nimport {\r\n  getMediaProperties,\r\n  uploadFiles,\r\n  clearFile,\r\n  addFiles,\r\n  getFile,\r\n  openDialog,\r\n} from \"redux/actions\";\r\nimport BlmMediaEditor, { MediaEditorProps } from \"./BlmMediaEditor\";\r\n\r\nconst mapStateToProps = (\r\n  {\r\n    course: {\r\n      file: {\r\n        files: { uploaded, loaded },\r\n        properties,\r\n      },\r\n    },\r\n  }: RootState,\r\n  props: MediaEditorProps\r\n) => {\r\n  const { data } = props;\r\n  const { id, subtitle, marker } = data;\r\n\r\n  return {\r\n    files: uploaded,\r\n    waveformUrl: properties[id]?.waveform,\r\n    waveformFile: loaded[id],\r\n    subtitleFile: subtitle?.id && loaded[subtitle.id],\r\n    markerFile: marker?.id && loaded[marker.id],\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getMediaProperties,\r\n  uploadFiles,\r\n  clearFile,\r\n  addFiles,\r\n  getFile,\r\n  openDialog,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport type ContainerProps = ConnectedProps<typeof connector>;\r\nexport default connector(BlmMediaEditor);\r\n"]},"metadata":{},"sourceType":"module"}