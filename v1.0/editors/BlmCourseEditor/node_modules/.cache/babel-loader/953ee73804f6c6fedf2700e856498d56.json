{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\actions\\\\main\\\\videomarker\\\\BlmVideoMarkerAction.tsx\";\nimport React, { useMemo, useCallback } from \"react\";\nimport { Select, MenuItem, Divider, ListItemText, ListItemIcon } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { MediaVariants } from \"editor-constants\";\nimport \"./styles.scss\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { createMediaCues, isVideoMediaComponent } from \"utils\";\n\nfunction BlmVideoMarkerAction(props) {\n  const {\n    data,\n    onChange,\n    getFile,\n    markerFiles,\n    action,\n    name\n  } = props;\n  const {\n    video,\n    marker\n  } = data || {};\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n  const {\n    template\n  } = useContentEditorCtx();\n  const [selectedComponentId, setSelectedComponentId] = React.useState(video);\n  const [selectedVideoMarkers, setSelectedVideoMarkers] = React.useState([]);\n  const [selectedmarkerId, setSelectedMarkerId] = React.useState(marker);\n\n  const filterTemplate = template => {\n    return template === null || template === void 0 ? void 0 : template.medias.filter(media => media.variant === MediaVariants.VideoStandard);\n  };\n\n  const items = useMemo(() => {\n    const components = filterTemplate(template);\n    let result = [];\n\n    if (components) {\n      components === null || components === void 0 ? void 0 : components.forEach((component, index) => {\n        result.push({\n          label: `${t(\"video_marker.video_label\")}${index + 1}`,\n          type: `${index + 1}`\n        });\n      });\n    }\n\n    return result;\n  }, [template, t]);\n  const updateChange = useCallback(newData => {\n    if (onChange) {\n      onChange({\n        target: {\n          name: action ? action : \"videomarker\",\n          value: newData\n        }\n      });\n    }\n  }, [onChange, action]);\n  var getFirstVideo = useCallback(val => {\n    if (val) {\n      const components = filterTemplate(template);\n      const component = components === null || components === void 0 ? void 0 : components.find((media, ind) => ind + 1 === parseInt(val));\n\n      if (component && isVideoMediaComponent(component) && (component === null || component === void 0 ? void 0 : component.value) && (component === null || component === void 0 ? void 0 : component.value.main)) {\n        var _component$value, _component$value$main, _component$value$main2;\n\n        const markerId = ((_component$value = component.value) === null || _component$value === void 0 ? void 0 : (_component$value$main = _component$value.main) === null || _component$value$main === void 0 ? void 0 : (_component$value$main2 = _component$value$main.marker) === null || _component$value$main2 === void 0 ? void 0 : _component$value$main2.id) || 0;\n        return markerId;\n      }\n    }\n  }, [template]);\n  React.useEffect(() => {\n    if (selectedComponentId === undefined && items.length === 1) {\n      let newData = {\n        video,\n        marker\n      };\n      newData.video = items[0].type;\n      var firstVidoe = getFirstVideo(items[0].type);\n\n      if (firstVidoe === 0) {\n        newData.marker = \"none\";\n        setSelectedMarkerId(\"none\");\n      } else {\n        newData.marker = \"\";\n        setSelectedMarkerId(\"\");\n      }\n\n      updateChange(newData);\n      setSelectedComponentId(items[0].type);\n    }\n  }, [items, marker, video, selectedComponentId, updateChange, getFirstVideo]);\n  React.useEffect(() => {\n    if (selectedComponentId) {\n      const components = filterTemplate(template);\n      const component = components === null || components === void 0 ? void 0 : components.find((media, ind) => ind + 1 === parseInt(selectedComponentId));\n\n      if (component && isVideoMediaComponent(component)) {\n        var _component$value2, _component$value2$mai;\n\n        const marker = component === null || component === void 0 ? void 0 : (_component$value2 = component.value) === null || _component$value2 === void 0 ? void 0 : (_component$value2$mai = _component$value2.main) === null || _component$value2$mai === void 0 ? void 0 : _component$value2$mai.marker;\n\n        if (marker && !markerFiles[marker.id]) {\n          getFile(marker.id, marker.url);\n        }\n      }\n    }\n  }, [template, selectedComponentId, getFile, markerFiles]);\n\n  const renderPlaceholder = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 12\n      }\n    }, \"Select video\");\n  };\n\n  const renderMarkerPlaceholder = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"markerIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, \"Select marker\"));\n  };\n\n  const renderNoVideoFound = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 12\n      }\n    }, \"No video\");\n  };\n\n  const renderNoMarkerFound = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 12\n      }\n    }, \"No marker\");\n  };\n\n  const renderSelectedVideoItem = () => {\n    const selectedItem = items.find(item => item.type === selectedComponentId);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectedItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      className: \"videoIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, selectedItem.label));\n  };\n\n  const renderSelectedMarkerItem = () => {\n    if (selectedVideoMarkers.length > 0) {\n      const selectedItem = selectedVideoMarkers.find((item, index) => (index + 1).toString() === (marker === null || marker === void 0 ? void 0 : marker.toString()));\n\n      if (selectedItem) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"selectedItem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(ListItemIcon, {\n          className: \"markerIcon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"selectedMarkerIndex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }\n        }, marker && parseInt(marker) < 10 ? `0${marker}` : marker), /*#__PURE__*/React.createElement(ListItemText, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }\n        }, selectedItem.text));\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"markerIcon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }\n        }, \"Select marker\"));\n      }\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    let newData = {\n      video,\n      marker\n    };\n\n    if (name === \"video\") {\n      var firstVidoe = getFirstVideo(value);\n      newData.video = value;\n\n      if (firstVidoe === 0) {\n        newData.marker = \"none\";\n        setSelectedMarkerId(\"none\");\n      } else {\n        newData.marker = \"\";\n        setSelectedMarkerId(\"\");\n      }\n\n      setSelectedComponentId(value);\n    } else if (name === \"marker\") {\n      newData.marker = value;\n    }\n\n    updateChange(newData);\n  };\n\n  React.useEffect(() => {\n    if (selectedComponentId) {\n      const components = filterTemplate(template);\n      const component = components === null || components === void 0 ? void 0 : components.find((media, ind) => ind + 1 === parseInt(selectedComponentId));\n\n      if (component && isVideoMediaComponent(component) && (component === null || component === void 0 ? void 0 : component.value) && (component === null || component === void 0 ? void 0 : component.value.main)) {\n        var _component$value3, _component$value3$mai, _component$value3$mai2;\n\n        const markerId = ((_component$value3 = component.value) === null || _component$value3 === void 0 ? void 0 : (_component$value3$mai = _component$value3.main) === null || _component$value3$mai === void 0 ? void 0 : (_component$value3$mai2 = _component$value3$mai.marker) === null || _component$value3$mai2 === void 0 ? void 0 : _component$value3$mai2.id) || 0;\n        const markerFile = markerFiles[markerId];\n\n        if (typeof markerFile === \"string\") {\n          const markers = createMediaCues(markerFile).map(cue => ({ ...cue,\n            endTime: NaN\n          }));\n\n          if (selectedmarkerId === \"none\" && markers.length > 0) {\n            let newData = {\n              video,\n              marker\n            };\n            newData.marker = \"\";\n            setSelectedMarkerId(\"\");\n            updateChange(newData);\n          }\n\n          if (markerFile === \"WEBVTT\" && markers.length === 0 && marker !== \"none\") {\n            let newData = {\n              video,\n              marker\n            };\n            newData.marker = \"none\";\n            updateChange(newData);\n          }\n\n          const selectedItem = markers.find((item, index) => (index + 1).toString() === (marker === null || marker === void 0 ? void 0 : marker.toString()));\n\n          if (marker && selectedItem === undefined && markers.length < parseInt(marker)) {\n            let newData = {\n              video,\n              marker\n            };\n            newData.marker = \"\";\n            updateChange(newData);\n          }\n\n          setSelectedVideoMarkers(markers);\n        } else {\n          setSelectedVideoMarkers([]);\n        }\n      }\n    }\n  }, [markerFiles, selectedComponentId, marker, selectedmarkerId, video, template, updateChange]);\n\n  const renderItems = () => {\n    if (items) {\n      return items.map((item, ind) => {\n        if (typeof item === \"object\") {\n          const {\n            type,\n            label\n          } = item;\n          return /*#__PURE__*/React.createElement(MenuItem, {\n            key: type,\n            value: type,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(ListItemText, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }\n          }, label));\n        } else if (item === \"divider\") {\n          return /*#__PURE__*/React.createElement(Divider, {\n            key: item + ind,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 18\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: item,\n            className: \"goto-dropdown-menu-title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 13\n            }\n          }, item);\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: \"none\",\n        value: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }\n      }, \"No Video\"));\n    }\n  };\n\n  const renderMarkerItems = () => {\n    if (selectedVideoMarkers.length > 0) {\n      return selectedVideoMarkers.map((item, index) => {\n        if (typeof item === \"object\") {\n          const {\n            text\n          } = item;\n          return /*#__PURE__*/React.createElement(MenuItem, {\n            key: index,\n            value: index + 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"selectedMarkerIndex\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }\n          }, index + 1 > 10 ? index + 1 : `0${index + 1}`), /*#__PURE__*/React.createElement(ListItemText, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }\n          }, text));\n        } else if (item === \"divider\") {\n          return /*#__PURE__*/React.createElement(Divider, {\n            key: item + (index + 1),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 18\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: item,\n            className: \"goto-dropdown-menu-title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 13\n            }\n          }, item);\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: \"none\",\n        value: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }\n      }, \"No Marker\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"videomaker-action-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: name ? name : \"video\",\n    value: selectedComponentId || \"\",\n    displayEmpty: true,\n    MenuProps: {\n      className: \"videomaker-actions-dropdown-popover\"\n    },\n    className: \"videomaker-actions-dropdown\",\n    renderValue: selectedComponentId ? renderSelectedVideoItem : items.length > 0 ? renderPlaceholder : renderNoVideoFound,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }\n  }, renderItems()), items.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"videomarker-warning-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, \"THERE IS NO VIDEO IN THIS TEMPLATE.\")), selectedComponentId && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n    name: \"marker\",\n    value: marker || \"\",\n    MenuProps: {\n      className: \"videomaker-actions-dropdown-popover\"\n    },\n    className: \"videomaker-actions-dropdown\",\n    displayEmpty: true,\n    renderValue: marker !== undefined && marker !== \"none\" ? renderSelectedMarkerItem : selectedVideoMarkers.length > 0 ? renderMarkerPlaceholder : renderNoMarkerFound,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }, renderMarkerItems()), selectedVideoMarkers.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"videomarker-warning-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }, \"THERE IS NO MARKERS IN THIS VIDEO.\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }, \"PLEASE DEFINE MARKERS IN THIS VIDEO\"))));\n}\n\nexport default BlmVideoMarkerAction;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/actions/main/videomarker/BlmVideoMarkerAction.tsx"],"names":["React","useMemo","useCallback","Select","MenuItem","Divider","ListItemText","ListItemIcon","useTranslation","MediaVariants","useContentEditorCtx","createMediaCues","isVideoMediaComponent","BlmVideoMarkerAction","props","data","onChange","getFile","markerFiles","action","name","video","marker","t","template","selectedComponentId","setSelectedComponentId","useState","selectedVideoMarkers","setSelectedVideoMarkers","selectedmarkerId","setSelectedMarkerId","filterTemplate","medias","filter","media","variant","VideoStandard","items","components","result","forEach","component","index","push","label","type","updateChange","newData","target","value","getFirstVideo","val","find","ind","parseInt","main","markerId","id","useEffect","undefined","length","firstVidoe","url","renderPlaceholder","renderMarkerPlaceholder","renderNoVideoFound","renderNoMarkerFound","renderSelectedVideoItem","selectedItem","item","renderSelectedMarkerItem","toString","text","handleChange","event","markerFile","markers","map","cue","endTime","NaN","renderItems","renderMarkerItems","className"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useMemo, useCallback } from \"react\";\r\nimport { Select, MenuItem, Divider, ListItemText, ListItemIcon } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomChangeEvent, MediaComponent, MediaTrackCue, VideoMarkerAction } from \"types\";\r\nimport { MediaVariants } from \"editor-constants\";\r\nimport \"./styles.scss\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { createMediaCues, isVideoMediaComponent } from \"utils\";\r\nimport { ContainerProps } from \"./continer\";\r\n\r\nexport interface CompProps {\r\n  data?: VideoMarkerAction;\r\n  showNavigation?: boolean;\r\n  showPage?: boolean;\r\n  onChange?: (event: CustomChangeEvent<VideoMarkerAction>) => void;\r\n  action?: string;\r\n  name?: string;\r\n}\r\n\r\nfunction BlmVideoMarkerAction(props: CompProps & ContainerProps) {\r\n  const { data, onChange, getFile, markerFiles, action, name } = props;\r\n  const { video, marker } = data || {};\r\n  const { t } = useTranslation(\"content-editor\");\r\n  const { template } = useContentEditorCtx();\r\n  const [selectedComponentId, setSelectedComponentId] = React.useState<string | undefined>(video);\r\n  const [selectedVideoMarkers, setSelectedVideoMarkers] = React.useState<MediaTrackCue[]>([]);\r\n  const [selectedmarkerId, setSelectedMarkerId] = React.useState<string | undefined>(marker);\r\n\r\n  const filterTemplate = (template: any) => {\r\n    return template?.medias.filter(\r\n      (media: MediaComponent) => media.variant === MediaVariants.VideoStandard\r\n    );\r\n  };\r\n\r\n  const items = useMemo(() => {\r\n    const components = filterTemplate(template);\r\n    let result: any[] = [];\r\n    if (components) {\r\n      components?.forEach((component: MediaComponent, index: number) => {\r\n        result.push({\r\n          label: `${t(\"video_marker.video_label\")}${index + 1}`,\r\n          type: `${index + 1}`,\r\n        });\r\n      });\r\n    }\r\n\r\n    return result;\r\n  }, [template, t]);\r\n\r\n  const updateChange = useCallback(\r\n    (newData: VideoMarkerAction) => {\r\n      if (onChange) {\r\n        onChange({\r\n          target: { name: action ? action : \"videomarker\", value: newData },\r\n        });\r\n      }\r\n    },\r\n    [onChange, action]\r\n  );\r\n\r\n  var getFirstVideo = useCallback(\r\n    (val: any) => {\r\n      if (val) {\r\n        const components = filterTemplate(template);\r\n        const component = components?.find(\r\n          (media: MediaComponent, ind: number) => ind + 1 === parseInt(val)\r\n        );\r\n\r\n        if (\r\n          component &&\r\n          isVideoMediaComponent(component) &&\r\n          component?.value &&\r\n          component?.value.main\r\n        ) {\r\n          const markerId = component.value?.main?.marker?.id || 0;\r\n          return markerId;\r\n        }\r\n      }\r\n    },\r\n    [template]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (selectedComponentId === undefined && items.length === 1) {\r\n      let newData = { video, marker } as VideoMarkerAction;\r\n      newData.video = items[0].type;\r\n\r\n      var firstVidoe = getFirstVideo(items[0].type);\r\n      if (firstVidoe === 0) {\r\n        newData.marker = \"none\";\r\n        setSelectedMarkerId(\"none\");\r\n      } else {\r\n        newData.marker = \"\";\r\n        setSelectedMarkerId(\"\");\r\n      }\r\n\r\n      updateChange(newData);\r\n      setSelectedComponentId(items[0].type);\r\n    }\r\n  }, [items, marker, video, selectedComponentId, updateChange, getFirstVideo]);\r\n\r\n  React.useEffect(() => {\r\n    if (selectedComponentId) {\r\n      const components = filterTemplate(template);\r\n      const component = components?.find(\r\n        (media: MediaComponent, ind: number) => ind + 1 === parseInt(selectedComponentId)\r\n      );\r\n      if (component && isVideoMediaComponent(component)) {\r\n        const marker = component?.value?.main?.marker;\r\n        if (marker && !markerFiles[marker.id]) {\r\n          getFile(marker.id, marker.url);\r\n        }\r\n      }\r\n    }\r\n  }, [template, selectedComponentId, getFile, markerFiles]);\r\n\r\n  const renderPlaceholder = () => {\r\n    return <div>Select video</div>;\r\n  };\r\n\r\n  const renderMarkerPlaceholder = () => {\r\n    return (\r\n      <>\r\n        <span className={\"markerIcon\"} />\r\n        <div>Select marker</div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderNoVideoFound = () => {\r\n    return <div>No video</div>;\r\n  };\r\n\r\n  const renderNoMarkerFound = () => {\r\n    return <div>No marker</div>;\r\n  };\r\n\r\n  const renderSelectedVideoItem = () => {\r\n    const selectedItem = items.find((item: any) => item.type === selectedComponentId)!;\r\n    return (\r\n      <div className=\"selectedItem\">\r\n        <ListItemIcon className={\"videoIcon\"} />\r\n        <ListItemText>{selectedItem.label}</ListItemText>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderSelectedMarkerItem = () => {\r\n    if (selectedVideoMarkers.length > 0) {\r\n      const selectedItem = selectedVideoMarkers.find(\r\n        (item: MediaTrackCue, index: number) => (index + 1).toString() === marker?.toString()\r\n      )!;\r\n      if (selectedItem) {\r\n        return (\r\n          <div className=\"selectedItem\">\r\n            <ListItemIcon className={\"markerIcon\"} />\r\n            <p className=\"selectedMarkerIndex\">\r\n              {marker && parseInt(marker) < 10 ? `0${marker}` : marker}\r\n            </p>\r\n            <ListItemText>{selectedItem.text}</ListItemText>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <>\r\n            <span className={\"markerIcon\"} />\r\n            <div>Select marker</div>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<any> | CustomChangeEvent<string>) => {\r\n    const { name, value } = event.target;\r\n    let newData = { video, marker } as VideoMarkerAction;\r\n\r\n    if (name === \"video\") {\r\n      var firstVidoe = getFirstVideo(value);\r\n      newData.video = value;\r\n\r\n      if (firstVidoe === 0) {\r\n        newData.marker = \"none\";\r\n        setSelectedMarkerId(\"none\");\r\n      } else {\r\n        newData.marker = \"\";\r\n        setSelectedMarkerId(\"\");\r\n      }\r\n\r\n      setSelectedComponentId(value);\r\n    } else if (name === \"marker\") {\r\n      newData.marker = value;\r\n    }\r\n    updateChange(newData);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (selectedComponentId) {\r\n      const components = filterTemplate(template);\r\n      const component = components?.find(\r\n        (media: MediaComponent, ind: number) => ind + 1 === parseInt(selectedComponentId)\r\n      );\r\n\r\n      if (\r\n        component &&\r\n        isVideoMediaComponent(component) &&\r\n        component?.value &&\r\n        component?.value.main\r\n      ) {\r\n        const markerId = component.value?.main?.marker?.id || 0;\r\n        const markerFile = markerFiles[markerId];\r\n        if (typeof markerFile === \"string\") {\r\n          const markers: MediaTrackCue[] = createMediaCues(markerFile).map((cue) => ({\r\n            ...cue,\r\n            endTime: NaN,\r\n          }));\r\n          if (selectedmarkerId === \"none\" && markers.length > 0) {\r\n            let newData = { video, marker } as VideoMarkerAction;\r\n            newData.marker = \"\";\r\n            setSelectedMarkerId(\"\");\r\n\r\n            updateChange(newData);\r\n          }\r\n\r\n          if (markerFile === \"WEBVTT\" && markers.length === 0 && marker !== \"none\") {\r\n            let newData = { video, marker } as VideoMarkerAction;\r\n            newData.marker = \"none\";\r\n            updateChange(newData);\r\n          }\r\n\r\n          const selectedItem = markers.find(\r\n            (item: MediaTrackCue, index: number) => (index + 1).toString() === marker?.toString()\r\n          );\r\n          if (marker && selectedItem === undefined && markers.length < parseInt(marker)) {\r\n            let newData = { video, marker } as VideoMarkerAction;\r\n            newData.marker = \"\";\r\n            updateChange(newData);\r\n          }\r\n\r\n          setSelectedVideoMarkers(markers);\r\n        } else {\r\n          setSelectedVideoMarkers([]);\r\n        }\r\n      }\r\n    }\r\n  }, [markerFiles, selectedComponentId, marker, selectedmarkerId, video, template, updateChange]);\r\n\r\n  const renderItems = () => {\r\n    if (items) {\r\n      return items.map((item, ind) => {\r\n        if (typeof item === \"object\") {\r\n          const { type, label } = item;\r\n          return (\r\n            <MenuItem key={type} value={type}>\r\n              <ListItemText>{label}</ListItemText>\r\n            </MenuItem>\r\n          );\r\n        } else if (item === \"divider\") {\r\n          return <Divider key={item + ind} />;\r\n        } else {\r\n          return (\r\n            <div key={item} className=\"goto-dropdown-menu-title\">\r\n              {item}\r\n            </div>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      return (\r\n        <MenuItem key={\"none\"} value={\"none\"}>\r\n          <ListItemText>{\"No Video\"}</ListItemText>\r\n        </MenuItem>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderMarkerItems = () => {\r\n    if (selectedVideoMarkers.length > 0) {\r\n      return selectedVideoMarkers.map((item: MediaTrackCue, index: number) => {\r\n        if (typeof item === \"object\") {\r\n          const { text } = item;\r\n          return (\r\n            <MenuItem key={index} value={index + 1}>\r\n              <p className=\"selectedMarkerIndex\">{index + 1 > 10 ? index + 1 : `0${index + 1}`}</p>\r\n              <ListItemText>{text}</ListItemText>\r\n            </MenuItem>\r\n          );\r\n        } else if (item === \"divider\") {\r\n          return <Divider key={item + (index + 1)} />;\r\n        } else {\r\n          return (\r\n            <div key={item} className=\"goto-dropdown-menu-title\">\r\n              {item}\r\n            </div>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      return (\r\n        <MenuItem key={\"none\"} value={\"none\"}>\r\n          <ListItemText>{\"No Marker\"}</ListItemText>\r\n        </MenuItem>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"videomaker-action-wrapper\">\r\n      <Select\r\n        name={name ? name : \"video\"}\r\n        value={selectedComponentId || \"\"}\r\n        displayEmpty={true}\r\n        MenuProps={{\r\n          className: \"videomaker-actions-dropdown-popover\",\r\n        }}\r\n        className=\"videomaker-actions-dropdown\"\r\n        renderValue={\r\n          selectedComponentId\r\n            ? renderSelectedVideoItem\r\n            : items.length > 0\r\n            ? renderPlaceholder\r\n            : renderNoVideoFound\r\n        }\r\n        onChange={handleChange}\r\n      >\r\n        {renderItems()}\r\n      </Select>\r\n      {items.length === 0 && (\r\n        <div className=\"videomarker-warning-lbl\">\r\n          <span>THERE IS NO VIDEO IN THIS TEMPLATE.</span>\r\n        </div>\r\n      )}\r\n      {selectedComponentId && (\r\n        <>\r\n          <Select\r\n            name=\"marker\"\r\n            value={marker || \"\"}\r\n            MenuProps={{\r\n              className: \"videomaker-actions-dropdown-popover\",\r\n            }}\r\n            className=\"videomaker-actions-dropdown\"\r\n            displayEmpty={true}\r\n            renderValue={\r\n              marker !== undefined && marker !== \"none\"\r\n                ? renderSelectedMarkerItem\r\n                : selectedVideoMarkers.length > 0\r\n                ? renderMarkerPlaceholder\r\n                : renderNoMarkerFound\r\n            }\r\n            onChange={handleChange}\r\n          >\r\n            {renderMarkerItems()}\r\n          </Select>\r\n          {selectedVideoMarkers.length === 0 && (\r\n            <div className=\"videomarker-warning-lbl\">\r\n              <span>THERE IS NO MARKERS IN THIS VIDEO.</span>\r\n              <span>PLEASE DEFINE MARKERS IN THIS VIDEO</span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default BlmVideoMarkerAction;\r\n"]},"metadata":{},"sourceType":"module"}