{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\flipcard\\\\side\\\\BlmFlipCardSide.tsx\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { ListItemIcon, ListItemText, MenuItem, Select } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { StyleListTypes, AcceptedFileTypes, ImageDisplayTypes } from \"editor-constants\";\nimport { CoverOptionIcon, ContainOptionIcon, NoResizeOptionIcon } from \"assets/icons\";\nimport { BlmMediaPicker } from \"components/shared\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { BlmStyleTintPicker } from \"../../../styles\";\nimport { BlmPosition } from \"shared\";\nimport \"./styles.scss\";\nconst NUMBER_REG = /^$|^[\\d\\b]+$/;\n\nfunction BlmFlipCardSide(props) {\n  const {\n    name,\n    data,\n    type = \"recto\",\n    onChange\n  } = props;\n  const {\n    element\n  } = useContentEditorCtx();\n  const {\n    media,\n    icon,\n    title,\n    description,\n    caption,\n    label,\n    number,\n    duration,\n    option,\n    style,\n    position\n  } = data;\n  const isRecto = type === \"recto\";\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  const updateChange = value => {\n    if (onChange) {\n      onChange({\n        target: {\n          name,\n          value\n        }\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newData = { ...data\n    };\n\n    if (name === \"media\" || name === \"icon\" || name === \"title\" || name === \"description\" || name === \"caption\" || name === \"label\" || name === \"number\" && NUMBER_REG.test(value) || name === \"duration\" || name === \"option\" || name === \"style\") {\n      newData[name] = value;\n    } else if (name === \"position\") {\n      newData[name] = value;\n    }\n\n    updateChange(newData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"flipcard-side-wrapper\", type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flipcard-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, isRecto ? `${t(\"flipkart.recto\")}` : `${t(\"flipkart.verso\")}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flipcard-media-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"media\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Image],\n    data: media,\n    placeholder: \"Select media\",\n    className: \"media-picker-3 flipcard-media\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flipcard-icon-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, t(\"title.icon\")), /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"icon\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Image],\n    data: icon,\n    placeholder: \"Select media\",\n    className: \"media-picker-3 flipcard-icon\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    name: \"option\",\n    value: option,\n    MenuProps: {\n      className: \"flipcard-option-dropdown-menu\",\n      disableRestoreFocus: true //If It is false, BlmBackgroundEditor is not positioned to anchor element after choosing the item\n\n    },\n    className: \"flipcard-option-dropdown\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: ImageDisplayTypes.Cover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CoverOptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, t(\"list.cover\"))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: ImageDisplayTypes.Contain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ContainOptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, t(\"list.contain\"))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: ImageDisplayTypes.NoResize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NoResizeOptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, t(\"list.no_resize\")))), /*#__PURE__*/React.createElement(BlmPosition, {\n    name: \"position\",\n    media: \"media-item\",\n    value: position,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flipcard-txt-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"label\",\n    placeholder: t(\"label.lbl\"),\n    value: label,\n    className: \"flipcard-lbl-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"number\",\n    placeholder: t(\"label.number\"),\n    value: number,\n    className: \"flipcard-num-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"duration\",\n    placeholder: t(\"label.duration\"),\n    value: duration,\n    className: \"flipcard-duration-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: t(\"label.title\"),\n    value: title,\n    className: \"flipcard-title-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    placeholder: t(\"label.description\"),\n    value: description.replace(/(<([^>]+)>)/gi, \"\"),\n    className: \"flipcard-desc-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"caption\",\n    placeholder: isRecto ? `${t(\"label.caption\")}` : `${t(\"label.action_label\")}`,\n    value: caption,\n    className: \"flipcard-caption-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flipcard-styles-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flipcard-styles-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, t(\"title.style\")), /*#__PURE__*/React.createElement(BlmStyleTintPicker, {\n    type: isRecto ? StyleListTypes.MediaFlipCardRecto : StyleListTypes.MediaFlipCardVerso,\n    name: \"style\",\n    data: style,\n    tintTitle: t(\"style.background_tint\"),\n    tintBgTitle: t(\"style.secondary_tint\"),\n    showBgTint: true,\n    showApplyStyle: false,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default BlmFlipCardSide;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/flipcard/side/BlmFlipCardSide.tsx"],"names":["React","clsx","ListItemIcon","ListItemText","MenuItem","Select","useTranslation","StyleListTypes","AcceptedFileTypes","ImageDisplayTypes","CoverOptionIcon","ContainOptionIcon","NoResizeOptionIcon","BlmMediaPicker","useContentEditorCtx","BlmStyleTintPicker","BlmPosition","NUMBER_REG","BlmFlipCardSide","props","name","data","type","onChange","element","media","icon","title","description","caption","label","number","duration","option","style","position","isRecto","t","updateChange","value","target","handleChange","event","newData","test","id","Image","className","disableRestoreFocus","Cover","Contain","NoResize","replace","MediaFlipCardRecto","MediaFlipCardVerso"],"mappings":"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","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { ListItemIcon, ListItemText, MenuItem, Select } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { ComponentStyle, CustomChangeEvent, MediaFile, ComponentAction, FlipCardSide } from \"types\";\r\nimport {\r\n  StyleListTypes,\r\n  AcceptedFileTypes,\r\n  ImageDisplayTypes,\r\n  MediaPosition,\r\n  Positions,\r\n  MediaBackgroundPosition,\r\n} from \"editor-constants\";\r\nimport { CoverOptionIcon, ContainOptionIcon, NoResizeOptionIcon } from \"assets/icons\";\r\nimport { BlmMediaPicker } from \"components/shared\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { BlmStyleTintPicker } from \"../../../styles\";\r\nimport { BlmPosition } from \"shared\";\r\nimport \"./styles.scss\";\r\n\r\nexport type FlipCardSideChangeEvent = CustomChangeEvent<FlipCardSide>;\r\n\r\nexport interface CompProps {\r\n  name: string;\r\n  data: FlipCardSide;\r\n  type?: \"recto\" | \"verso\";\r\n  onChange?: (event: FlipCardSideChangeEvent) => void;\r\n}\r\n\r\nconst NUMBER_REG = /^$|^[\\d\\b]+$/;\r\n\r\nfunction BlmFlipCardSide(props: CompProps) {\r\n  const { name, data, type = \"recto\", onChange } = props;\r\n  const { element } = useContentEditorCtx();\r\n  const {\r\n    media,\r\n    icon,\r\n    title,\r\n    description,\r\n    caption,\r\n    label,\r\n    number,\r\n    duration,\r\n    option,\r\n    style,\r\n    position,\r\n  } = data;\r\n  const isRecto = type === \"recto\";\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const updateChange = (value: FlipCardSide) => {\r\n    if (onChange) {\r\n      onChange({ target: { name, value } });\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event:\r\n      | ChangeEvent<any>\r\n      | CustomChangeEvent<\r\n          | MediaFile\r\n          | ComponentAction\r\n          | ComponentStyle\r\n          | MediaPosition\r\n          | Positions\r\n          | MediaBackgroundPosition\r\n          | undefined\r\n        >\r\n  ) => {\r\n    const {\r\n      name,\r\n      value,\r\n    }: {\r\n      name: string;\r\n      value: any;\r\n    } = event.target;\r\n    const newData = { ...data };\r\n\r\n    if (\r\n      name === \"media\" ||\r\n      name === \"icon\" ||\r\n      name === \"title\" ||\r\n      name === \"description\" ||\r\n      name === \"caption\" ||\r\n      name === \"label\" ||\r\n      (name === \"number\" && NUMBER_REG.test(value)) ||\r\n      name === \"duration\" ||\r\n      name === \"option\" ||\r\n      name === \"style\"\r\n    ) {\r\n      newData[name] = value;\r\n    } else if (name === \"position\") {\r\n      newData[name] = value;\r\n    }\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(\"flipcard-side-wrapper\", type)}>\r\n      <div className=\"flipcard-title\">\r\n        {isRecto ? `${t(\"flipkart.recto\")}` : `${t(\"flipkart.verso\")}`}\r\n      </div>\r\n      <div className=\"flipcard-media-wrapper\">\r\n        <BlmMediaPicker\r\n          name=\"media\"\r\n          elementId={element!.id}\r\n          acceptedFiles={[AcceptedFileTypes.Image]}\r\n          data={media}\r\n          placeholder=\"Select media\"\r\n          className=\"media-picker-3 flipcard-media\"\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"flipcard-icon-title\">{t(\"title.icon\")}</div>\r\n        <BlmMediaPicker\r\n          name=\"icon\"\r\n          elementId={element!.id}\r\n          acceptedFiles={[AcceptedFileTypes.Image]}\r\n          data={icon}\r\n          placeholder=\"Select media\"\r\n          className=\"media-picker-3 flipcard-icon\"\r\n          onChange={handleChange}\r\n        />\r\n        <Select\r\n          name=\"option\"\r\n          value={option}\r\n          MenuProps={{\r\n            className: \"flipcard-option-dropdown-menu\",\r\n            disableRestoreFocus: true, //If It is false, BlmBackgroundEditor is not positioned to anchor element after choosing the item\r\n          }}\r\n          className=\"flipcard-option-dropdown\"\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={ImageDisplayTypes.Cover}>\r\n            <ListItemIcon>\r\n              <CoverOptionIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>{t(\"list.cover\")}</ListItemText>\r\n          </MenuItem>\r\n          <MenuItem value={ImageDisplayTypes.Contain}>\r\n            <ListItemIcon>\r\n              <ContainOptionIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>{t(\"list.contain\")}</ListItemText>\r\n          </MenuItem>\r\n          <MenuItem value={ImageDisplayTypes.NoResize}>\r\n            <ListItemIcon>\r\n              <NoResizeOptionIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>{t(\"list.no_resize\")}</ListItemText>\r\n          </MenuItem>\r\n        </Select>\r\n        <BlmPosition name=\"position\" media=\"media-item\" value={position} onChange={handleChange} />\r\n      </div>\r\n      <div className=\"flipcard-txt-wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"label\"\r\n          placeholder={t(\"label.lbl\")}\r\n          value={label}\r\n          className=\"flipcard-lbl-txt\"\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          placeholder={t(\"label.number\")}\r\n          value={number}\r\n          className=\"flipcard-num-txt\"\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"duration\"\r\n          placeholder={t(\"label.duration\")}\r\n          value={duration}\r\n          className=\"flipcard-duration-txt\"\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder={t(\"label.title\")}\r\n          value={title}\r\n          className=\"flipcard-title-txt\"\r\n          onChange={handleChange}\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder={t(\"label.description\")}\r\n          value={description.replace(/(<([^>]+)>)/gi, \"\")}\r\n          className=\"flipcard-desc-txt\"\r\n          onChange={handleChange}\r\n        />\r\n        <textarea\r\n          name=\"caption\"\r\n          placeholder={isRecto ? `${t(\"label.caption\")}` : `${t(\"label.action_label\")}`}\r\n          value={caption}\r\n          className=\"flipcard-caption-txt\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"flipcard-styles-wrapper\">\r\n        <div className=\"flipcard-styles-title\">{t(\"title.style\")}</div>\r\n        <BlmStyleTintPicker\r\n          type={isRecto ? StyleListTypes.MediaFlipCardRecto : StyleListTypes.MediaFlipCardVerso}\r\n          name=\"style\"\r\n          data={style}\r\n          tintTitle={t(\"style.background_tint\")}\r\n          tintBgTitle={t(\"style.secondary_tint\")}\r\n          showBgTint={true}\r\n          showApplyStyle={false}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmFlipCardSide;\r\n"]},"metadata":{},"sourceType":"module"}