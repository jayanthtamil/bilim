{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\shared\\\\media-editor\\\\components\\\\list\\\\BlmCueList.tsx\";\nimport React, { useMemo, useRef } from \"react\";\nimport clsx from \"clsx\";\nimport { AutoSizer, CellMeasurerCache, List, CellMeasurer } from \"react-virtualized\";\nimport { AcceptedFileTypes } from \"editor-constants\";\nimport { MediaTrackTypes } from \"editor-constants\";\nimport { createMediaCues, removeObject } from \"utils\";\nimport { cloneCues, getSubtitleMarkerCues, validateCue } from \"../../utils\";\nimport BlmTextTrackItem from \"./item\";\nimport \"./styles.scss\";\n\nfunction BlmCueList(props) {\n  const {\n    type,\n    data,\n    currentCue,\n    duration,\n    elementId,\n    className,\n    onTrackClick,\n    onChange,\n    onClickExport\n  } = props;\n  const currentIndex = currentCue ? data.indexOf(currentCue) : -1;\n  const fileRef = useRef(null); //To fix chrome display issue\n\n  const cache = useMemo(() => new CellMeasurerCache({\n    minHeight: 69,\n    defaultHeight: 69,\n    fixedWidth: true\n  }), []);\n\n  const getTitle = () => {\n    switch (type) {\n      case MediaTrackTypes.Subtitles:\n        return \"Subtitles\";\n\n      case MediaTrackTypes.Markers:\n        return \"Markers\";\n\n      case MediaTrackTypes.Labels:\n        return \"Labels\";\n\n      case MediaTrackTypes.Contents:\n        return \"Content\";\n    }\n  };\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange(type, newData);\n    }\n  };\n\n  const handleClick = track => {\n    if (onTrackClick) {\n      onTrackClick(track);\n    }\n  };\n\n  const handleChange = (track, ind) => {\n    if (0 <= ind && ind < data.length) {\n      const newData = cloneCues(data, data[ind], track);\n      updateChange(newData);\n    }\n  };\n\n  const handleDeleteClick = track => {\n    if (track) {\n      const newData = removeObject(data, track);\n      updateChange(newData);\n    }\n  };\n\n  const rowRenderer = props => {\n    var _next$startTime;\n\n    const {\n      key,\n      parent,\n      index,\n      style\n    } = props;\n    const rowData = data[index];\n    const next = index >= 0 && index < data.length ? data[index + 1] : undefined;\n    const maxTime = (_next$startTime = next === null || next === void 0 ? void 0 : next.startTime) !== null && _next$startTime !== void 0 ? _next$startTime : duration;\n    return /*#__PURE__*/React.createElement(CellMeasurer, {\n      key: key,\n      cache: cache,\n      parent: parent,\n      columnIndex: 0,\n      rowIndex: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, ({\n      measure,\n      registerChild\n    }) => /*#__PURE__*/React.createElement(BlmTextTrackItem, {\n      ref: registerChild,\n      type: type,\n      data: rowData,\n      index: index,\n      maxTime: maxTime,\n      selected: currentCue === rowData,\n      invalid: !validateCue(type, data, rowData),\n      elementId: elementId,\n      style: style,\n      measure: measure,\n      onClick: handleClick,\n      onChange: handleChange,\n      onDelete: handleDeleteClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }));\n  };\n\n  const handleImportClick = () => {\n    if (fileRef.current) {\n      let file = fileRef.current;\n      file.click();\n      file.value = \"\";\n    }\n  };\n\n  const handleExportClick = () => {\n    onClickExport(type);\n  };\n\n  const handleFileChange = event => {\n    var _event$target;\n\n    if (event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.files) {\n      const reader = new FileReader();\n\n      reader.onload = async e => {\n        var _e$target;\n\n        const text = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result;\n\n        if (text) {\n          var content = createMediaCues(text);\n          var validatedContent = getSubtitleMarkerCues(content, duration);\n\n          if (onChange) {\n            onChange(type, validatedContent);\n          }\n        }\n      };\n\n      reader.readAsText(event.target.files[0]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"cue-list-wrapper\", type, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"import-btn\",\n    onClick: handleImportClick,\n    title: type === MediaTrackTypes.Subtitles ? \"Import subtitles VTT\" : \"Import Marker VTT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: fileRef,\n    type: \"file\",\n    accept: AcceptedFileTypes.Vtt,\n    className: \"input-file\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"export-btn\",\n    onClick: handleExportClick,\n    title: type === MediaTrackTypes.Subtitles ? \"Export subtitles VTT\" : \"Export Marker VTT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cue-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, getTitle()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cue-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoSizer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, ({\n    height,\n    width\n  }) => /*#__PURE__*/React.createElement(List, {\n    width: width,\n    height: height,\n    deferredMeasurementCache: cache,\n    rowHeight: cache.rowHeight,\n    scrollToIndex: currentIndex,\n    rowCount: data.length,\n    rowRenderer: rowRenderer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default BlmCueList;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/media-editor/components/list/BlmCueList.tsx"],"names":["React","useMemo","useRef","clsx","AutoSizer","CellMeasurerCache","List","CellMeasurer","AcceptedFileTypes","MediaTrackTypes","createMediaCues","removeObject","cloneCues","getSubtitleMarkerCues","validateCue","BlmTextTrackItem","BlmCueList","props","type","data","currentCue","duration","elementId","className","onTrackClick","onChange","onClickExport","currentIndex","indexOf","fileRef","cache","minHeight","defaultHeight","fixedWidth","getTitle","Subtitles","Markers","Labels","Contents","updateChange","newData","handleClick","track","handleChange","ind","length","handleDeleteClick","rowRenderer","key","parent","index","style","rowData","next","undefined","maxTime","startTime","measure","registerChild","handleImportClick","current","file","click","value","handleExportClick","handleFileChange","event","target","files","reader","FileReader","onload","e","text","result","content","validatedContent","readAsText","Vtt","height","width","rowHeight"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useMemo, useRef } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { AutoSizer, CellMeasurerCache, List, ListRowProps, CellMeasurer } from \"react-virtualized\";\r\n\r\nimport { AcceptedFileTypes } from \"editor-constants\";\r\nimport { MediaTrackCue } from \"types\";\r\nimport { MediaTrackTypes } from \"editor-constants\";\r\nimport { createMediaCues, removeObject } from \"utils\";\r\nimport { cloneCues, getSubtitleMarkerCues, validateCue } from \"../../utils\";\r\nimport BlmTextTrackItem from \"./item\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  type: MediaTrackTypes;\r\n  data: MediaTrackCue[];\r\n  currentCue?: MediaTrackCue;\r\n  duration: number;\r\n  elementId?: string;\r\n  className?: string;\r\n  onChange?: (type: MediaTrackTypes, tracks: MediaTrackCue[]) => void;\r\n  onTrackClick?: (track: MediaTrackCue) => void;\r\n  onClickExport?: any;\r\n}\r\n\r\nfunction BlmCueList(props: CompProps) {\r\n  const {\r\n    type,\r\n    data,\r\n    currentCue,\r\n    duration,\r\n    elementId,\r\n    className,\r\n    onTrackClick,\r\n    onChange,\r\n    onClickExport,\r\n  } = props;\r\n  const currentIndex = currentCue ? data.indexOf(currentCue) : -1;\r\n  const fileRef = useRef<HTMLInputElement>(null);\r\n\r\n  //To fix chrome display issue\r\n  const cache = useMemo(\r\n    () =>\r\n      new CellMeasurerCache({\r\n        minHeight: 69,\r\n        defaultHeight: 69,\r\n        fixedWidth: true,\r\n      }),\r\n    []\r\n  );\r\n\r\n  const getTitle = () => {\r\n    switch (type) {\r\n      case MediaTrackTypes.Subtitles:\r\n        return \"Subtitles\";\r\n      case MediaTrackTypes.Markers:\r\n        return \"Markers\";\r\n      case MediaTrackTypes.Labels:\r\n        return \"Labels\";\r\n      case MediaTrackTypes.Contents:\r\n        return \"Content\";\r\n    }\r\n  };\r\n  const updateChange = (newData: MediaTrackCue[]) => {\r\n    if (onChange) {\r\n      onChange(type, newData);\r\n    }\r\n  };\r\n\r\n  const handleClick = (track: MediaTrackCue) => {\r\n    if (onTrackClick) {\r\n      onTrackClick(track);\r\n    }\r\n  };\r\n\r\n  const handleChange = (track: MediaTrackCue, ind: number) => {\r\n    if (0 <= ind && ind < data.length) {\r\n      const newData = cloneCues(data, data[ind], track);\r\n\r\n      updateChange(newData);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = (track: MediaTrackCue) => {\r\n    if (track) {\r\n      const newData = removeObject(data, track);\r\n\r\n      updateChange(newData);\r\n    }\r\n  };\r\n\r\n  const rowRenderer = (props: ListRowProps) => {\r\n    const { key, parent, index, style } = props;\r\n    const rowData = data[index];\r\n    const next = index >= 0 && index < data.length ? data[index + 1] : undefined;\r\n    const maxTime = next?.startTime ?? duration;\r\n\r\n    return (\r\n      <CellMeasurer key={key} cache={cache} parent={parent} columnIndex={0} rowIndex={index}>\r\n        {({ measure, registerChild }) => (\r\n          <BlmTextTrackItem\r\n            ref={registerChild as any}\r\n            type={type}\r\n            data={rowData}\r\n            index={index}\r\n            maxTime={maxTime}\r\n            selected={currentCue === rowData}\r\n            invalid={!validateCue(type, data, rowData)}\r\n            elementId={elementId}\r\n            style={style}\r\n            measure={measure}\r\n            onClick={handleClick}\r\n            onChange={handleChange}\r\n            onDelete={handleDeleteClick}\r\n          />\r\n        )}\r\n      </CellMeasurer>\r\n    );\r\n  };\r\n\r\n  const handleImportClick = () => {\r\n    if (fileRef.current) {\r\n      let file = fileRef.current;\r\n      file.click();\r\n      file.value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleExportClick = () => {\r\n    onClickExport(type);\r\n  };\r\n\r\n  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (event?.target?.files) {\r\n      const reader = new FileReader();\r\n      reader.onload = async (e) => {\r\n        const text = e.target?.result;\r\n        if (text) {\r\n          var content = createMediaCues(text as string);\r\n          var validatedContent = getSubtitleMarkerCues(content, duration);\r\n\r\n          if (onChange) {\r\n            onChange(type, validatedContent);\r\n          }\r\n        }\r\n      };\r\n\r\n      reader.readAsText(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={clsx(\"cue-list-wrapper\", type, className)}>\r\n        <div className=\"button-wrap\">\r\n          <span\r\n            className=\"import-btn\"\r\n            onClick={handleImportClick}\r\n            title={\r\n              type === MediaTrackTypes.Subtitles ? \"Import subtitles VTT\" : \"Import Marker VTT\"\r\n            }\r\n          >\r\n            <input\r\n              ref={fileRef}\r\n              type=\"file\"\r\n              accept={AcceptedFileTypes.Vtt}\r\n              className=\"input-file\"\r\n              onChange={handleFileChange}\r\n            />\r\n          </span>\r\n          <span\r\n            className=\"export-btn\"\r\n            onClick={handleExportClick}\r\n            title={\r\n              type === MediaTrackTypes.Subtitles ? \"Export subtitles VTT\" : \"Export Marker VTT\"\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"cue-list-title\">{getTitle()}</div>\r\n        <div className=\"cue-list\">\r\n          <AutoSizer>\r\n            {({ height, width }) => (\r\n              <List\r\n                width={width}\r\n                height={height}\r\n                deferredMeasurementCache={cache}\r\n                rowHeight={cache.rowHeight}\r\n                scrollToIndex={currentIndex}\r\n                rowCount={data.length}\r\n                rowRenderer={rowRenderer}\r\n              />\r\n            )}\r\n          </AutoSizer>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BlmCueList;\r\n"]},"metadata":{},"sourceType":"module"}