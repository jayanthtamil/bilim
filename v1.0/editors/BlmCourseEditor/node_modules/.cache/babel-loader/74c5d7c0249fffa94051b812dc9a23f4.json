{"ast":null,"code":"import * as actions from \"../types\";\nexport const initState = {\n  accessToken: undefined,\n  isAuthorized: undefined\n};\nexport default function userReducer(state = initState, action) {\n  switch (action.type) {\n    case actions.GET_AUTHORIZATION_STARTED:\n      return { ...state,\n        isAuthorized: undefined\n      };\n\n    case actions.GET_AUTHORIZATION_SUCCESS:\n      const {\n        access_token,\n        csrf_token\n      } = action.payload;\n      return { ...state,\n        accessToken: access_token,\n        csrfToken: csrf_token,\n        isAuthorized: true\n      };\n\n    case actions.GET_AUTHORIZATION_ERROR:\n      return { ...state,\n        isAuthorized: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/redux/user/reducers/index.ts"],"names":["actions","initState","accessToken","undefined","isAuthorized","userReducer","state","action","type","GET_AUTHORIZATION_STARTED","GET_AUTHORIZATION_SUCCESS","access_token","csrf_token","payload","csrfToken","GET_AUTHORIZATION_ERROR"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,UAAzB;AAEA,OAAO,MAAMC,SAA4B,GAAG;AAC1CC,EAAAA,WAAW,EAAEC,SAD6B;AAE1CC,EAAAA,YAAY,EAAED;AAF4B,CAArC;AAKP,eAAe,SAASE,WAAT,CACbC,KAAK,GAAGL,SADK,EAEbM,MAFa,EAGM;AACnB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,OAAO,CAACS,yBAAb;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,YAAY,EAAED;AAFT,OAAP;;AAIF,SAAKH,OAAO,CAACU,yBAAb;AACE,YAAM;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,UAA+BL,MAAM,CAACM,OAA5C;AAEA,aAAO,EACL,GAAGP,KADE;AAELJ,QAAAA,WAAW,EAAES,YAFR;AAGLG,QAAAA,SAAS,EAAEF,UAHN;AAILR,QAAAA,YAAY,EAAE;AAJT,OAAP;;AAMF,SAAKJ,OAAO,CAACe,uBAAb;AACE,aAAO,EACL,GAAGT,KADE;AAELF,QAAAA,YAAY,EAAE;AAFT,OAAP;;AAIF;AACE,aAAOE,KAAP;AArBJ;AAuBD","sourcesContent":["import * as actions from \"../types\";\r\n\r\nexport const initState: actions.UserState = {\r\n  accessToken: undefined,\r\n  isAuthorized: undefined,\r\n};\r\n\r\nexport default function userReducer(\r\n  state = initState,\r\n  action: actions.UserActions\r\n): actions.UserState {\r\n  switch (action.type) {\r\n    case actions.GET_AUTHORIZATION_STARTED:\r\n      return {\r\n        ...state,\r\n        isAuthorized: undefined,\r\n      };\r\n    case actions.GET_AUTHORIZATION_SUCCESS:\r\n      const { access_token, csrf_token } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        accessToken: access_token,\r\n        csrfToken: csrf_token,\r\n        isAuthorized: true,\r\n      };\r\n    case actions.GET_AUTHORIZATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isAuthorized: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}