{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\template-editors\\\\core\\\\properties-editor\\\\BlmPropertiesEditor.tsx\";\nimport React, { Fragment, useRef } from \"react\";\nimport { Popper, Backdrop } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { BlmPartPageProps } from \"components/properties\";\nimport { createModifiersForIFrame } from \"../../utils\";\nimport \"./styles.scss\";\nconst popperOptions = {\n  eventsEnabled: true\n};\nconst modifiers = createModifiersForIFrame(-51, 5);\n\nfunction BlmPropertiesEditor(props) {\n  const {\n    open,\n    anchorEle,\n    element,\n    type,\n    onClose,\n    openConfirmDialog\n  } = props;\n  const editorRef = useRef(null);\n  const {\n    t\n  } = useTranslation();\n\n  const openSaveConfirmDialog = () => {\n    const options = {\n      className: \"template-editor-warning-dialog\",\n      okLabel: `${t(\"button.save\")}`,\n      cancelLabel: `${t(\"button.cancel\")}`\n    };\n    openConfirmDialog(\"\", `${t(\"alert.save_changes\")}`, handleSave, handleCancel, options);\n  };\n\n  const handleSave = event => {\n    const editor = editorRef.current;\n\n    if (editor && editor.isEdited) {\n      editor.save();\n    }\n\n    handleClose(event);\n  };\n\n  const handleCancel = event => {\n    const editor = editorRef.current;\n\n    if (editor && editor.isEdited) {\n      editor.revert();\n    }\n\n    handleClose(event);\n  };\n\n  const handleBackdropClick = event => {\n    const editor = editorRef.current;\n\n    if (editor && editor.isEdited) {\n      openSaveConfirmDialog();\n    } else {\n      handleClose(event);\n    }\n  };\n\n  const handleClose = event => {\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popper, {\n    id: \"properties-popper\",\n    open: open,\n    anchorEl: open ? anchorEle : null,\n    placement: \"bottom-start\",\n    popperOptions: popperOptions,\n    modifiers: modifiers,\n    className: \"template-props-editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, element && /*#__PURE__*/React.createElement(BlmPartPageProps, {\n    ref: editorRef,\n    element: element,\n    type: type,\n    autoSave: false,\n    autoClear: false,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Backdrop, {\n    open: open,\n    className: \"template-props-editor-backdrop\",\n    onClick: handleBackdropClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BlmPropertiesEditor;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/template-editors/core/properties-editor/BlmPropertiesEditor.tsx"],"names":["React","Fragment","useRef","Popper","Backdrop","useTranslation","BlmPartPageProps","createModifiersForIFrame","popperOptions","eventsEnabled","modifiers","BlmPropertiesEditor","props","open","anchorEle","element","type","onClose","openConfirmDialog","editorRef","t","openSaveConfirmDialog","options","className","okLabel","cancelLabel","handleSave","handleCancel","event","editor","current","isEdited","save","handleClose","revert","handleBackdropClick"],"mappings":"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","sourcesContent":["import React, { Fragment, MouseEvent, useRef } from \"react\";\r\nimport { Popper, Backdrop } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CourseElement, PropertiesEditorComponent } from \"types\";\r\nimport { TemplateEditorTypes } from \"editor-constants\";\r\nimport { BlmPartPageProps } from \"components/properties\";\r\nimport { createModifiersForIFrame } from \"../../utils\";\r\nimport { ContainerProps } from \"./properties-editor-container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  open: boolean;\r\n  anchorEle: HTMLElement;\r\n  element: CourseElement;\r\n  type: TemplateEditorTypes;\r\n  onClose: (event: MouseEvent) => void;\r\n}\r\n\r\nconst popperOptions = {\r\n  eventsEnabled: true,\r\n};\r\nconst modifiers = createModifiersForIFrame(-51, 5);\r\n\r\nfunction BlmPropertiesEditor(props: CompProps) {\r\n  const { open, anchorEle, element, type, onClose, openConfirmDialog } = props;\r\n  const editorRef = useRef<PropertiesEditorComponent | null>(null);\r\n  const { t } = useTranslation();\r\n\r\n  const openSaveConfirmDialog = () => {\r\n    const options = {\r\n      className: \"template-editor-warning-dialog\",\r\n      okLabel: `${t(\"button.save\")}`,\r\n      cancelLabel: `${t(\"button.cancel\")}`,\r\n    };\r\n\r\n    openConfirmDialog(\"\", `${t(\"alert.save_changes\")}`, handleSave, handleCancel, options);\r\n  };\r\n\r\n  const handleSave = (event: MouseEvent) => {\r\n    const editor = editorRef.current;\r\n\r\n    if (editor && editor.isEdited) {\r\n      editor.save();\r\n    }\r\n\r\n    handleClose(event);\r\n  };\r\n\r\n  const handleCancel = (event: MouseEvent) => {\r\n    const editor = editorRef.current;\r\n\r\n    if (editor && editor.isEdited) {\r\n      editor.revert();\r\n    }\r\n\r\n    handleClose(event);\r\n  };\r\n\r\n  const handleBackdropClick = (event: MouseEvent) => {\r\n    const editor = editorRef.current;\r\n\r\n    if (editor && editor.isEdited) {\r\n      openSaveConfirmDialog();\r\n    } else {\r\n      handleClose(event);\r\n    }\r\n  };\r\n\r\n  const handleClose = (event: MouseEvent) => {\r\n    if (onClose) {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Popper\r\n        id=\"properties-popper\"\r\n        open={open}\r\n        anchorEl={open ? anchorEle : null}\r\n        placement=\"bottom-start\"\r\n        popperOptions={popperOptions}\r\n        modifiers={modifiers}\r\n        className=\"template-props-editor\"\r\n      >\r\n        {element && (\r\n          <BlmPartPageProps\r\n            ref={editorRef}\r\n            element={element}\r\n            type={type}\r\n            autoSave={false}\r\n            autoClear={false}\r\n            onClose={handleClose}\r\n          />\r\n        )}\r\n      </Popper>\r\n      <Backdrop\r\n        open={open}\r\n        className=\"template-props-editor-backdrop\"\r\n        onClick={handleBackdropClick}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default BlmPropertiesEditor;\r\n"]},"metadata":{},"sourceType":"module"}