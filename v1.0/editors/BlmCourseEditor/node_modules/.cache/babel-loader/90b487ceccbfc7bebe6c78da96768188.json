{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\question-editor\\\\components\\\\main\\\\proposition-info\\\\BlmQuestionPropositionInfo.tsx\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { FormControlLabel, RadioGroup, Radio, Select, MenuItem } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { QuestionPropositionInfoTypes, TemplateEditorOptionTypes } from \"editor-constants\";\nimport { useQuestionEditorCtx } from \"components/question-editor/core\";\nimport \"./styles.scss\";\n\nfunction BlmQuestionPropositionInfo(props) {\n  const {\n    data,\n    isEditable = true,\n    onChange\n  } = props;\n  const {\n    type,\n    simple: {\n      title,\n      text\n    },\n    simpleContentId\n  } = data;\n  const {\n    element\n  } = useQuestionEditorCtx();\n  const {\n    t\n  } = useTranslation(\"question-editor\");\n\n  const handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    const newData = { ...data\n    };\n\n    if (name === \"infoType\") {\n      newData.type = value;\n    } else if (name === \"title\") {\n      newData.simple.title.value = value;\n    } else if (name === \"text\") {\n      newData.simple.text.value = value;\n    } else if (name === \"simpleContent\") {\n      newData.simpleContentId = value;\n    }\n\n    if (onChange) {\n      onChange(newData);\n    }\n  };\n\n  const renderOptions = () => {\n    if (type === QuestionPropositionInfoTypes.None) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"question-proposition-info-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, t(\"main.add_info\")));\n    } else if (type === QuestionPropositionInfoTypes.Simple) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"question-proposition-info-simple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: \"title\",\n        type: \"text\",\n        value: title.value || \"\",\n        disabled: !title.isEditable,\n        className: \"question-proposition-info-title\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"question-proposition-info-title-hr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"textarea\", {\n        name: \"text\",\n        value: text.value || \"\",\n        disabled: !text.isEditable,\n        className: \"question-proposition-info-descrition\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }));\n    } else if (type === QuestionPropositionInfoTypes.Detailed) {\n      return /*#__PURE__*/React.createElement(Select, {\n        name: \"simpleContent\",\n        value: simpleContentId,\n        disabled: !isEditable,\n        className: \"question-proposition-info-simple-dropdown\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: TemplateEditorOptionTypes.None,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, t(\"main.select_simple_content\")), element === null || element === void 0 ? void 0 : element.children.map(item => {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: item.id,\n          value: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }\n        }, item.name);\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"question-proposition-info-wrapper\", {\n      disabled: !isEditable\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-proposition-info-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, t(\"main.info\"))), /*#__PURE__*/React.createElement(RadioGroup, {\n    name: \"infoType\",\n    value: type,\n    className: \"question-proposition-info-grp\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    label: t(\"main.options.none\"),\n    control: /*#__PURE__*/React.createElement(Radio, {\n      className: \"radio-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 20\n      }\n    }),\n    value: QuestionPropositionInfoTypes.None,\n    disabled: !isEditable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    label: t(\"main.options.simple\"),\n    control: /*#__PURE__*/React.createElement(Radio, {\n      className: \"radio-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 20\n      }\n    }),\n    value: QuestionPropositionInfoTypes.Simple,\n    disabled: !isEditable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    label: t(\"main.options.detailed\"),\n    control: /*#__PURE__*/React.createElement(Radio, {\n      className: \"radio-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 20\n      }\n    }),\n    value: QuestionPropositionInfoTypes.Detailed,\n    disabled: !isEditable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-proposition-info-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, renderOptions()));\n}\n\nexport default BlmQuestionPropositionInfo;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/question-editor/components/main/proposition-info/BlmQuestionPropositionInfo.tsx"],"names":["React","clsx","FormControlLabel","RadioGroup","Radio","Select","MenuItem","useTranslation","QuestionPropositionInfoTypes","TemplateEditorOptionTypes","useQuestionEditorCtx","BlmQuestionPropositionInfo","props","data","isEditable","onChange","type","simple","title","text","simpleContentId","element","t","handleChange","event","target","name","value","newData","renderOptions","None","Simple","Detailed","children","map","item","id","disabled"],"mappings":";AAAA,OAAOA,KAAP,MAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,KAAvC,EAA8CC,MAA9C,EAAsDC,QAAtD,QAAsE,mBAAtE;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,4BAAT,EAAuCC,yBAAvC,QAAwE,kBAAxE;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,OAAO,eAAP;;AAQA,SAASC,0BAAT,CAAoCC,KAApC,EAAsD;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAU,GAAG,IAArB;AAA2BC,IAAAA;AAA3B,MAAwCH,KAA9C;AACA,QAAM;AACJI,IAAAA,IADI;AAEJC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAFJ;AAGJC,IAAAA;AAHI,MAIFP,IAJJ;AAKA,QAAM;AAAEQ,IAAAA;AAAF,MAAcX,oBAAoB,EAAxC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAQf,cAAc,CAAC,iBAAD,CAA5B;;AAEA,QAAMgB,YAAY,GAAIC,KAAD,IAA6B;AAChD,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,UAAMC,KAAK,GAAGF,MAAM,CAACE,KAArB;AACA,UAAMC,OAAgC,GAAG,EAAE,GAAGf;AAAL,KAAzC;;AAEA,QAAIa,IAAI,KAAK,UAAb,EAAyB;AACvBE,MAAAA,OAAO,CAACZ,IAAR,GAAeW,KAAf;AACD,KAFD,MAEO,IAAID,IAAI,KAAK,OAAb,EAAsB;AAC3BE,MAAAA,OAAO,CAACX,MAAR,CAAeC,KAAf,CAAqBS,KAArB,GAA6BA,KAA7B;AACD,KAFM,MAEA,IAAID,IAAI,KAAK,MAAb,EAAqB;AAC1BE,MAAAA,OAAO,CAACX,MAAR,CAAeE,IAAf,CAAoBQ,KAApB,GAA4BA,KAA5B;AACD,KAFM,MAEA,IAAID,IAAI,KAAK,eAAb,EAA8B;AACnCE,MAAAA,OAAO,CAACR,eAAR,GAA0BO,KAA1B;AACD;;AAED,QAAIZ,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACa,OAAD,CAAR;AACD;AACF,GAnBD;;AAqBA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIb,IAAI,KAAKR,4BAA4B,CAACsB,IAA1C,EAAgD;AAC9C,0BACE;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOR,CAAC,CAAC,eAAD,CAAR,CADF,CADF;AAKD,KAND,MAMO,IAAIN,IAAI,KAAKR,4BAA4B,CAACuB,MAA1C,EAAkD;AACvD,0BACE;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEb,KAAK,CAACS,KAAN,IAAe,EAHxB;AAIE,QAAA,QAAQ,EAAE,CAACT,KAAK,CAACJ,UAJnB;AAKE,QAAA,SAAS,EAAC,iCALZ;AAME,QAAA,QAAQ,EAAES,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eASE;AAAK,QAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,eAUE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEJ,IAAI,CAACQ,KAAL,IAAc,EAFvB;AAGE,QAAA,QAAQ,EAAE,CAACR,IAAI,CAACL,UAHlB;AAIE,QAAA,SAAS,EAAC,sCAJZ;AAKE,QAAA,QAAQ,EAAES,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF;AAoBD,KArBM,MAqBA,IAAIP,IAAI,KAAKR,4BAA4B,CAACwB,QAA1C,EAAoD;AACzD,0BACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,KAAK,EAAEZ,eAFT;AAGE,QAAA,QAAQ,EAAE,CAACN,UAHb;AAIE,QAAA,SAAS,EAAC,2CAJZ;AAKE,QAAA,QAAQ,EAAES,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEd,yBAAyB,CAACqB,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,CAAC,CAAC,4BAAD,CADJ,CAPF,EAUGD,OAVH,aAUGA,OAVH,uBAUGA,OAAO,CAAEY,QAAT,CAAkBC,GAAlB,CAAuBC,IAAD,IAAU;AAC/B,4BACE,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,UAAA,KAAK,EAAED,IAAI,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IAAI,CAACT,IADR,CADF;AAKD,OANA,CAVH,CADF;AAoBD;AACF,GAlDD;;AAoDA,sBACE;AAAK,IAAA,SAAS,EAAEzB,IAAI,CAAC,mCAAD,EAAsC;AAAEoC,MAAAA,QAAQ,EAAE,CAACvB;AAAb,KAAtC,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOQ,CAAC,CAAC,WAAD,CAAR,CADF,CADF,eAIE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAEN,IAFT;AAGE,IAAA,SAAS,EAAC,+BAHZ;AAIE,IAAA,QAAQ,EAAEO,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAED,CAAC,CAAC,mBAAD,CADV;AAEE,IAAA,OAAO,eAAE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFX;AAGE,IAAA,KAAK,EAAEd,4BAA4B,CAACsB,IAHtC;AAIE,IAAA,QAAQ,EAAE,CAAChB,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAYE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEQ,CAAC,CAAC,qBAAD,CADV;AAEE,IAAA,OAAO,eAAE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFX;AAGE,IAAA,KAAK,EAAEd,4BAA4B,CAACuB,MAHtC;AAIE,IAAA,QAAQ,EAAE,CAACjB,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAkBE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEQ,CAAC,CAAC,uBAAD,CADV;AAEE,IAAA,OAAO,eAAE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFX;AAGE,IAAA,KAAK,EAAEd,4BAA4B,CAACwB,QAHtC;AAIE,IAAA,QAAQ,EAAE,CAAClB,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CAJF,eA6BE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDe,aAAa,EAA9D,CA7BF,CADF;AAiCD;;AAED,eAAelB,0BAAf","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { FormControlLabel, RadioGroup, Radio, Select, MenuItem } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { QuestionPropositionInfo } from \"types\";\r\nimport { QuestionPropositionInfoTypes, TemplateEditorOptionTypes } from \"editor-constants\";\r\nimport { useQuestionEditorCtx } from \"components/question-editor/core\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  data: QuestionPropositionInfo;\r\n  isEditable?: boolean;\r\n  onChange: (data: QuestionPropositionInfo) => void;\r\n}\r\n\r\nfunction BlmQuestionPropositionInfo(props: CompProps) {\r\n  const { data, isEditable = true, onChange } = props;\r\n  const {\r\n    type,\r\n    simple: { title, text },\r\n    simpleContentId,\r\n  } = data;\r\n  const { element } = useQuestionEditorCtx();\r\n  const { t } = useTranslation(\"question-editor\");\r\n\r\n  const handleChange = (event: ChangeEvent<any>) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    const newData: QuestionPropositionInfo = { ...data };\r\n\r\n    if (name === \"infoType\") {\r\n      newData.type = value;\r\n    } else if (name === \"title\") {\r\n      newData.simple.title.value = value;\r\n    } else if (name === \"text\") {\r\n      newData.simple.text.value = value;\r\n    } else if (name === \"simpleContent\") {\r\n      newData.simpleContentId = value;\r\n    }\r\n\r\n    if (onChange) {\r\n      onChange(newData);\r\n    }\r\n  };\r\n\r\n  const renderOptions = () => {\r\n    if (type === QuestionPropositionInfoTypes.None) {\r\n      return (\r\n        <div className=\"question-proposition-info-none\">\r\n          <span>{t(\"main.add_info\")}</span>\r\n        </div>\r\n      );\r\n    } else if (type === QuestionPropositionInfoTypes.Simple) {\r\n      return (\r\n        <div className=\"question-proposition-info-simple\">\r\n          <input\r\n            name=\"title\"\r\n            type=\"text\"\r\n            value={title.value || \"\"}\r\n            disabled={!title.isEditable}\r\n            className=\"question-proposition-info-title\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"question-proposition-info-title-hr\" />\r\n          <textarea\r\n            name=\"text\"\r\n            value={text.value || \"\"}\r\n            disabled={!text.isEditable}\r\n            className=\"question-proposition-info-descrition\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (type === QuestionPropositionInfoTypes.Detailed) {\r\n      return (\r\n        <Select\r\n          name=\"simpleContent\"\r\n          value={simpleContentId}\r\n          disabled={!isEditable}\r\n          className=\"question-proposition-info-simple-dropdown\"\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={TemplateEditorOptionTypes.None}>\r\n            {t(\"main.select_simple_content\")}\r\n          </MenuItem>\r\n          {element?.children.map((item) => {\r\n            return (\r\n              <MenuItem key={item.id} value={item.id}>\r\n                {item.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(\"question-proposition-info-wrapper\", { disabled: !isEditable })}>\r\n      <div className=\"question-proposition-info-lbl\">\r\n        <span>{t(\"main.info\")}</span>\r\n      </div>\r\n      <RadioGroup\r\n        name=\"infoType\"\r\n        value={type}\r\n        className=\"question-proposition-info-grp\"\r\n        onChange={handleChange}\r\n      >\r\n        <FormControlLabel\r\n          label={t(\"main.options.none\")}\r\n          control={<Radio className=\"radio-2\" />}\r\n          value={QuestionPropositionInfoTypes.None}\r\n          disabled={!isEditable}\r\n        />\r\n        <FormControlLabel\r\n          label={t(\"main.options.simple\")}\r\n          control={<Radio className=\"radio-2\" />}\r\n          value={QuestionPropositionInfoTypes.Simple}\r\n          disabled={!isEditable}\r\n        />\r\n        <FormControlLabel\r\n          label={t(\"main.options.detailed\")}\r\n          control={<Radio className=\"radio-2\" />}\r\n          value={QuestionPropositionInfoTypes.Detailed}\r\n          disabled={!isEditable}\r\n        />\r\n      </RadioGroup>\r\n      <div className=\"question-proposition-info-main\">{renderOptions()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmQuestionPropositionInfo;\r\n"]},"metadata":{},"sourceType":"module"}