{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall draft_js\n */\n'use strict';\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar isElement = require(\"./isElement\");\n\nvar React = require(\"react\"); // In IE, spans with <br> tags render as two newlines. By rendering a span\n// with only a newline character, we can be sure to render a single line.\n\n\nvar useNewlineChar = UserAgent.isBrowser('IE <= 11');\n/**\n * Check whether the node should be considered a newline.\n */\n\nfunction isNewline(node) {\n  return useNewlineChar ? node.textContent === '\\n' : node.tagName === 'BR';\n}\n/**\n * Placeholder elements for empty text content.\n *\n * What is this `data-text` attribute, anyway? It turns out that we need to\n * put an attribute on the lowest-level text node in order to preserve correct\n * spellcheck handling. If the <span> is naked, Chrome and Safari may do\n * bizarre things to do the DOM -- split text nodes, create extra spans, etc.\n * If the <span> has an attribute, this appears not to happen.\n * See http://jsfiddle.net/9khdavod/ for the failure case, and\n * http://jsfiddle.net/7pg143f7/ for the fixed case.\n */\n\n\nvar NEWLINE_A = function NEWLINE_A(ref) {\n  return useNewlineChar ? /*#__PURE__*/React.createElement(\"span\", {\n    key: \"A\",\n    \"data-text\": \"true\",\n    ref: ref\n  }, '\\n') : /*#__PURE__*/React.createElement(\"br\", {\n    key: \"A\",\n    \"data-text\": \"true\",\n    ref: ref\n  });\n};\n\nvar NEWLINE_B = function NEWLINE_B(ref) {\n  return useNewlineChar ? /*#__PURE__*/React.createElement(\"span\", {\n    key: \"B\",\n    \"data-text\": \"true\",\n    ref: ref\n  }, '\\n') : /*#__PURE__*/React.createElement(\"br\", {\n    key: \"B\",\n    \"data-text\": \"true\",\n    ref: ref\n  });\n};\n/**\n * The lowest-level component in a `DraftEditor`, the text node component\n * replaces the default React text node implementation. This allows us to\n * perform custom handling of newline behavior and avoid re-rendering text\n * nodes with DOM state that already matches the expectations of our immutable\n * editor state.\n */\n\n\nvar DraftEditorTextNode = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DraftEditorTextNode, _React$Component);\n\n  function DraftEditorTextNode(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // By flipping this flag, we also keep flipping keys which forces\n    // React to remount this node every time it rerenders.\n\n    _defineProperty(_assertThisInitialized(_this), \"_forceFlag\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_node\", void 0);\n\n    _this._forceFlag = false;\n    return _this;\n  }\n\n  var _proto = DraftEditorTextNode.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var node = this._node;\n    var shouldBeNewline = nextProps.children === '';\n    !isElement(node) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'node is not an Element') : invariant(false) : void 0;\n    var elementNode = node;\n\n    if (shouldBeNewline) {\n      return !isNewline(elementNode);\n    }\n\n    return elementNode.textContent !== nextProps.children;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._forceFlag = !this._forceFlag;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this._forceFlag = !this._forceFlag;\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    if (this.props.children === '') {\n      return this._forceFlag ? NEWLINE_A(function (ref) {\n        return _this2._node = ref;\n      }) : NEWLINE_B(function (ref) {\n        return _this2._node = ref;\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: this._forceFlag ? 'A' : 'B',\n      \"data-text\": \"true\",\n      ref: function ref(_ref) {\n        return _this2._node = _ref;\n      }\n    }, this.props.children);\n  };\n\n  return DraftEditorTextNode;\n}(React.Component);\n\nmodule.exports = DraftEditorTextNode;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/node_modules/draft-js/lib/DraftEditorTextNode.react.js"],"names":["_assertThisInitialized","self","ReferenceError","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","UserAgent","require","invariant","isElement","React","useNewlineChar","isBrowser","isNewline","node","textContent","tagName","NEWLINE_A","ref","createElement","NEWLINE_B","DraftEditorTextNode","_React$Component","props","_this","call","_forceFlag","_proto","shouldComponentUpdate","nextProps","_node","shouldBeNewline","children","process","env","NODE_ENV","elementNode","componentDidMount","componentDidUpdate","render","_this2","_ref","Component","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall draft_js\n */\n'use strict';\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar isElement = require(\"./isElement\");\n\nvar React = require(\"react\"); // In IE, spans with <br> tags render as two newlines. By rendering a span\n// with only a newline character, we can be sure to render a single line.\n\n\nvar useNewlineChar = UserAgent.isBrowser('IE <= 11');\n/**\n * Check whether the node should be considered a newline.\n */\n\nfunction isNewline(node) {\n  return useNewlineChar ? node.textContent === '\\n' : node.tagName === 'BR';\n}\n/**\n * Placeholder elements for empty text content.\n *\n * What is this `data-text` attribute, anyway? It turns out that we need to\n * put an attribute on the lowest-level text node in order to preserve correct\n * spellcheck handling. If the <span> is naked, Chrome and Safari may do\n * bizarre things to do the DOM -- split text nodes, create extra spans, etc.\n * If the <span> has an attribute, this appears not to happen.\n * See http://jsfiddle.net/9khdavod/ for the failure case, and\n * http://jsfiddle.net/7pg143f7/ for the fixed case.\n */\n\n\nvar NEWLINE_A = function NEWLINE_A(ref) {\n  return useNewlineChar ? /*#__PURE__*/React.createElement(\"span\", {\n    key: \"A\",\n    \"data-text\": \"true\",\n    ref: ref\n  }, '\\n') : /*#__PURE__*/React.createElement(\"br\", {\n    key: \"A\",\n    \"data-text\": \"true\",\n    ref: ref\n  });\n};\n\nvar NEWLINE_B = function NEWLINE_B(ref) {\n  return useNewlineChar ? /*#__PURE__*/React.createElement(\"span\", {\n    key: \"B\",\n    \"data-text\": \"true\",\n    ref: ref\n  }, '\\n') : /*#__PURE__*/React.createElement(\"br\", {\n    key: \"B\",\n    \"data-text\": \"true\",\n    ref: ref\n  });\n};\n\n/**\n * The lowest-level component in a `DraftEditor`, the text node component\n * replaces the default React text node implementation. This allows us to\n * perform custom handling of newline behavior and avoid re-rendering text\n * nodes with DOM state that already matches the expectations of our immutable\n * editor state.\n */\nvar DraftEditorTextNode = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DraftEditorTextNode, _React$Component);\n\n  function DraftEditorTextNode(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // By flipping this flag, we also keep flipping keys which forces\n    // React to remount this node every time it rerenders.\n\n    _defineProperty(_assertThisInitialized(_this), \"_forceFlag\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_node\", void 0);\n\n    _this._forceFlag = false;\n    return _this;\n  }\n\n  var _proto = DraftEditorTextNode.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var node = this._node;\n    var shouldBeNewline = nextProps.children === '';\n    !isElement(node) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'node is not an Element') : invariant(false) : void 0;\n    var elementNode = node;\n\n    if (shouldBeNewline) {\n      return !isNewline(elementNode);\n    }\n\n    return elementNode.textContent !== nextProps.children;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._forceFlag = !this._forceFlag;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this._forceFlag = !this._forceFlag;\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    if (this.props.children === '') {\n      return this._forceFlag ? NEWLINE_A(function (ref) {\n        return _this2._node = ref;\n      }) : NEWLINE_B(function (ref) {\n        return _this2._node = ref;\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: this._forceFlag ? 'A' : 'B',\n      \"data-text\": \"true\",\n      ref: function ref(_ref) {\n        return _this2._node = _ref;\n      }\n    }, this.props.children);\n  };\n\n  return DraftEditorTextNode;\n}(React.Component);\n\nmodule.exports = DraftEditorTextNode;"]},"metadata":{},"sourceType":"script"}