{"ast":null,"code":"import * as actions from \"../types\";\nexport const initState = {\n  items: []\n};\nexport default function dialogsReducer(state = initState, action) {\n  if (action.type === actions.OPEN_DIALOG || action.type === actions.OPEN_CONFIRM_DIALOG) {\n    const dialog = { ...action.payload.dialog\n    };\n    return { ...state,\n      items: [...state.items, dialog]\n    };\n  } else if (action.type === actions.CLOSE_DIALOG) {\n    return { ...state,\n      items: state.items.filter(dialog => dialog.id !== action.payload.id)\n    };\n  } else {\n    return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/redux/editor/dialog/reducers/index.ts"],"names":["actions","initState","items","dialogsReducer","state","action","type","OPEN_DIALOG","OPEN_CONFIRM_DIALOG","dialog","payload","CLOSE_DIALOG","filter","id"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,UAAzB;AAEA,OAAO,MAAMC,SAA+B,GAAG;AAC7CC,EAAAA,KAAK,EAAE;AADsC,CAAxC;AAIP,eAAe,SAASC,cAAT,CACbC,KAAK,GAAGH,SADK,EAEbI,MAFa,EAGS;AACtB,MAAIA,MAAM,CAACC,IAAP,KAAgBN,OAAO,CAACO,WAAxB,IAAuCF,MAAM,CAACC,IAAP,KAAgBN,OAAO,CAACQ,mBAAnE,EAAwF;AACtF,UAAMC,MAAM,GAAG,EAAE,GAAGJ,MAAM,CAACK,OAAP,CAAeD;AAApB,KAAf;AACA,WAAO,EAAE,GAAGL,KAAL;AAAYF,MAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBO,MAAjB;AAAnB,KAAP;AACD,GAHD,MAGO,IAAIJ,MAAM,CAACC,IAAP,KAAgBN,OAAO,CAACW,YAA5B,EAA0C;AAC/C,WAAO,EACL,GAAGP,KADE;AAELF,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYU,MAAZ,CAAoBH,MAAD,IAAYA,MAAM,CAACI,EAAP,KAAcR,MAAM,CAACK,OAAP,CAAeG,EAA5D;AAFF,KAAP;AAID,GALM,MAKA;AACL,WAAOT,KAAP;AACD;AACF","sourcesContent":["import * as actions from \"../types\";\r\n\r\nexport const initState: actions.DialogsState = {\r\n  items: [],\r\n};\r\n\r\nexport default function dialogsReducer(\r\n  state = initState,\r\n  action: actions.DialogActions\r\n): actions.DialogsState {\r\n  if (action.type === actions.OPEN_DIALOG || action.type === actions.OPEN_CONFIRM_DIALOG) {\r\n    const dialog = { ...action.payload.dialog };\r\n    return { ...state, items: [...state.items, dialog] };\r\n  } else if (action.type === actions.CLOSE_DIALOG) {\r\n    return {\r\n      ...state,\r\n      items: state.items.filter((dialog) => dialog.id !== action.payload.id),\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}