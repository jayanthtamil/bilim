{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\component-editor\\\\text-toolbox\\\\BlmTextToolbox.tsx\";\nimport React, { useMemo } from \"react\";\nimport clsx from \"clsx\";\nimport { ListItemIcon, MenuItem, Popper, Select } from \"@material-ui/core\";\nimport { INLINE_STYLE_SIZE_PREFIX, INLINE_STYLE_COLOR_PREFIX, INLINE_STYLE_BG_COLOR_PREFIX, BLOCK_STYLE_UNORDERED_LIST, BLOCK_STYLE_ORDERED_LIST, INLINE_STYLE_BOLD, INLINE_STYLE_ITALIC, INLINE_STYLE_UNDERLINE, INLINE_STYLE_FONT_PREFIX, BLOCK_STYLE_LEFT_ALIGN, BLOCK_STYLE_CENTER_ALIGN, BLOCK_STYLE_RIGHT_ALIGN, BLOCK_STYLE_JUSTIFY_ALIGN } from \"editor-constants\";\nimport { findIndex, getIFrameClientRect } from \"utils\";\nimport { BulletListIcon, CenterAlignIcon, DropdownImg2, JustifyAlignIcon, LeftAlignIcon, NumListIcon, RightAlignIcon } from \"assets/icons\";\nimport { BlmColorPicker, BlmNumericSelect } from \"shared\";\nimport { getCurrentStyle } from \"./utils\";\nimport \"./styles.scss\";\nconst sizes = [{\n  label: \"12 px\",\n  value: 12\n}, {\n  label: \"14 px\",\n  value: 14\n}, {\n  label: \"16 px\",\n  value: 16\n}, {\n  label: \"18 px\",\n  value: 18\n}, {\n  label: \"24 px\",\n  value: 24\n}, {\n  label: \"30 px\",\n  value: 30\n}, {\n  label: \"36 px\",\n  value: 36\n}, {\n  label: \"48 px\",\n  value: 48\n}, {\n  label: \"60 px\",\n  value: 60\n}, {\n  label: \"72 px\",\n  value: 72\n}, {\n  label: \"100 px\",\n  value: 100\n}];\n\nfunction BlmTextToolbox(props) {\n  const {\n    show,\n    anchorEle,\n    offset,\n    textEditorRef,\n    editorState,\n    defaultStyles,\n    size,\n    fonts,\n    colors,\n    bgColors\n  } = props;\n  const defaultFont = defaultStyles === null || defaultStyles === void 0 ? void 0 : defaultStyles.fontFamily;\n  const currentStyle = getCurrentStyle(editorState, defaultStyles);\n  const {\n    x: offsetX = 0,\n    y: offsetY = 0\n  } = offset || {};\n  const hasDefaultFont = useMemo(() => {\n    return fonts ? findIndex(fonts, defaultFont, \"fontFamily\") !== -1 : false;\n  }, [fonts, defaultFont]);\n  const hasFont = useMemo(() => {\n    return fonts ? findIndex(fonts, currentStyle.fontFamily, \"fontFamily\") !== -1 : false;\n  }, [fonts, currentStyle.fontFamily]);\n  const modifiers = useMemo(() => {\n    const pos = anchorEle ? getIFrameClientRect(anchorEle) : {\n      x: 0,\n      y: 0\n    };\n    return {\n      offset: {\n        offset: `${pos.x + offsetX},${-(pos.y + offsetY)}`,\n        enabled: true\n      },\n      flip: {\n        enabled: false\n      },\n      preventOverflow: {\n        enabled: true\n      },\n      hide: {\n        enabled: true\n      },\n      computeStyle: {\n        gpuAcceleration: false\n      }\n    };\n  }, [anchorEle, offsetX, offsetY]);\n\n  const toggleInlineStyle = inlineStyle => {\n    var _textEditorRef$curren;\n\n    textEditorRef === null || textEditorRef === void 0 ? void 0 : (_textEditorRef$curren = textEditorRef.current) === null || _textEditorRef$curren === void 0 ? void 0 : _textEditorRef$curren.toggleInlineStyle(inlineStyle);\n  };\n\n  const applyInlineStyle = (inlineStyle, value) => {\n    var _textEditorRef$curren2;\n\n    textEditorRef === null || textEditorRef === void 0 ? void 0 : (_textEditorRef$curren2 = textEditorRef.current) === null || _textEditorRef$curren2 === void 0 ? void 0 : _textEditorRef$curren2.applyInlineStyle(inlineStyle, value);\n  };\n\n  const removeInlineStyle = inlineStyle => {\n    var _textEditorRef$curren3;\n\n    textEditorRef === null || textEditorRef === void 0 ? void 0 : (_textEditorRef$curren3 = textEditorRef.current) === null || _textEditorRef$curren3 === void 0 ? void 0 : _textEditorRef$curren3.removeInlineStyle(inlineStyle);\n  };\n\n  const toggleAlignment = textAlign => {\n    var _textEditorRef$curren4;\n\n    textEditorRef === null || textEditorRef === void 0 ? void 0 : (_textEditorRef$curren4 = textEditorRef.current) === null || _textEditorRef$curren4 === void 0 ? void 0 : _textEditorRef$curren4.toggleAlignment(textAlign);\n  };\n\n  const toggleBlockType = blockType => {\n    var _textEditorRef$curren5;\n\n    textEditorRef === null || textEditorRef === void 0 ? void 0 : (_textEditorRef$curren5 = textEditorRef.current) === null || _textEditorRef$curren5 === void 0 ? void 0 : _textEditorRef$curren5.toggleBlockType(blockType);\n  };\n\n  const cleareStyles = () => {\n    var _textEditorRef$curren6;\n\n    textEditorRef === null || textEditorRef === void 0 ? void 0 : (_textEditorRef$curren6 = textEditorRef.current) === null || _textEditorRef$curren6 === void 0 ? void 0 : _textEditorRef$curren6.clearStyles();\n  };\n\n  const focusTextEditor = () => {\n    // Hacky: Wait to focus the editor so we don't lose selection.\n    setTimeout(() => {\n      var _textEditorRef$curren7;\n\n      textEditorRef === null || textEditorRef === void 0 ? void 0 : (_textEditorRef$curren7 = textEditorRef.current) === null || _textEditorRef$curren7 === void 0 ? void 0 : _textEditorRef$curren7.setFocus();\n    }, 50);\n  };\n\n  const handleMouseDown = event => {\n    event.preventDefault();\n  };\n\n  const handleSelectMouseDown = event => {\n    event.stopPropagation();\n  };\n\n  const handleSelectClose = event => {\n    const {\n      currentTarget\n    } = event;\n    const {\n      dataset: {\n        value\n      }\n    } = currentTarget;\n\n    if (value === \"left\" || value === \"center\" || value === \"right\" || value === \"justify\") {\n      toggleAlignment(value);\n    } else if (value === BLOCK_STYLE_ORDERED_LIST || value === BLOCK_STYLE_UNORDERED_LIST) {\n      toggleBlockType(value);\n    } else {\n      if (value) {\n        applyInlineStyle(INLINE_STYLE_FONT_PREFIX, value);\n      } else if (value === \"\") {\n        removeInlineStyle(INLINE_STYLE_FONT_PREFIX);\n      }\n    }\n\n    focusTextEditor();\n  };\n\n  const handleFontSize = event => {\n    const {\n      value\n    } = event.target;\n\n    if (value) {\n      applyInlineStyle(INLINE_STYLE_SIZE_PREFIX, value + \"px\");\n    } else {\n      removeInlineStyle(INLINE_STYLE_SIZE_PREFIX);\n    }\n\n    focusTextEditor();\n  };\n\n  const handleColorMouseDown = event => {\n    if (event.target instanceof HTMLInputElement) {\n      event.stopPropagation();\n      event.target.focus(); // Hacky: Wait to trigger the text editor blur event first\n    }\n  };\n\n  const handleColorChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const {\n      color\n    } = value;\n    const prefix = name === \"color\" ? INLINE_STYLE_COLOR_PREFIX : INLINE_STYLE_BG_COLOR_PREFIX;\n\n    if (color) {\n      applyInlineStyle(prefix, color);\n    } else {\n      removeInlineStyle(prefix);\n    }\n\n    focusTextEditor();\n  };\n\n  const handleInlineMouseDown = event => {\n    const {\n      style\n    } = event.currentTarget.dataset;\n\n    if (style) {\n      toggleInlineStyle(style);\n    }\n  };\n\n  const handleClearBtn = () => {\n    cleareStyles();\n  };\n\n  return /*#__PURE__*/React.createElement(Popper, {\n    open: show,\n    anchorEl: anchorEle,\n    disablePortal: false,\n    placement: \"top-start\",\n    modifiers: modifiers,\n    className: \"text-toolbox-popper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"text-toolbox-wrapper\", size),\n    onMouseDown: handleMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    displayEmpty: !hasDefaultFont,\n    value: hasFont ? currentStyle.fontFamily : \"\",\n    MenuProps: {\n      disableRestoreFocus: true,\n      autoFocus: false,\n      className: \"text-font-dropdown-menu\"\n    },\n    className: \"text-font-dropdown\",\n    onMouseDown: handleSelectMouseDown,\n    onClose: handleSelectClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, !hasDefaultFont && /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 31\n    }\n  }, \"Select\"), fonts === null || fonts === void 0 ? void 0 : fonts.map(font => /*#__PURE__*/React.createElement(MenuItem, {\n    key: font.fontFamily,\n    value: font.fontFamily,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, font.name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: handleSelectMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BlmNumericSelect, {\n    name: \"size\",\n    value: currentStyle.fontSize,\n    label: \"px\",\n    min: 8,\n    max: 500,\n    options: sizes,\n    popupIcon: /*#__PURE__*/React.createElement(DropdownImg2, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 24\n      }\n    }),\n    className: \"text-size-dropdown\",\n    popupClassName: \"text-size-dropdown-menu\",\n    onChange: handleFontSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-color-wrapper\",\n    onMouseDown: handleColorMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BlmColorPicker, {\n    name: \"color\",\n    color: currentStyle.color,\n    colors: colors,\n    className: \"text-color-picker\",\n    onChange: handleColorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BlmColorPicker, {\n    name: \"bgColor\",\n    color: currentStyle.bgColor,\n    colors: bgColors,\n    className: \"text-bg-color-picker\",\n    onChange: handleColorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-style\": INLINE_STYLE_BOLD,\n    className: clsx(\"text-bold-btn\", {\n      selected: currentStyle.bold\n    }),\n    onMouseDown: handleInlineMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-style\": INLINE_STYLE_ITALIC,\n    className: clsx(\"text-italic-btn\", {\n      selected: currentStyle.italic\n    }),\n    onMouseDown: handleInlineMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-style\": INLINE_STYLE_UNDERLINE,\n    className: clsx(\"text-underline-btn\", {\n      selected: currentStyle.underline\n    }),\n    onMouseDown: handleInlineMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    value: currentStyle.align,\n    MenuProps: {\n      disableRestoreFocus: true,\n      autoFocus: false,\n      className: \"text-align-dropdown-menu\"\n    },\n    className: \"text-align-dropdown\",\n    onMouseDown: handleSelectMouseDown,\n    onClose: handleSelectClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: BLOCK_STYLE_LEFT_ALIGN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LeftAlignIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: BLOCK_STYLE_CENTER_ALIGN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CenterAlignIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: BLOCK_STYLE_RIGHT_ALIGN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RightAlignIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: BLOCK_STYLE_JUSTIFY_ALIGN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(JustifyAlignIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Select, {\n    value: currentStyle.list,\n    MenuProps: {\n      disableRestoreFocus: true,\n      autoFocus: false,\n      className: \"text-list-dropdown-menu\"\n    },\n    className: \"text-list-dropdown\",\n    onMouseDown: handleSelectMouseDown,\n    onClose: handleSelectClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: BLOCK_STYLE_ORDERED_LIST,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NumListIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: BLOCK_STYLE_UNORDERED_LIST,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BulletListIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-link-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-erase-btn\",\n    onClick: handleClearBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default BlmTextToolbox;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/component-editor/text-toolbox/BlmTextToolbox.tsx"],"names":["React","useMemo","clsx","ListItemIcon","MenuItem","Popper","Select","INLINE_STYLE_SIZE_PREFIX","INLINE_STYLE_COLOR_PREFIX","INLINE_STYLE_BG_COLOR_PREFIX","BLOCK_STYLE_UNORDERED_LIST","BLOCK_STYLE_ORDERED_LIST","INLINE_STYLE_BOLD","INLINE_STYLE_ITALIC","INLINE_STYLE_UNDERLINE","INLINE_STYLE_FONT_PREFIX","BLOCK_STYLE_LEFT_ALIGN","BLOCK_STYLE_CENTER_ALIGN","BLOCK_STYLE_RIGHT_ALIGN","BLOCK_STYLE_JUSTIFY_ALIGN","findIndex","getIFrameClientRect","BulletListIcon","CenterAlignIcon","DropdownImg2","JustifyAlignIcon","LeftAlignIcon","NumListIcon","RightAlignIcon","BlmColorPicker","BlmNumericSelect","getCurrentStyle","sizes","label","value","BlmTextToolbox","props","show","anchorEle","offset","textEditorRef","editorState","defaultStyles","size","fonts","colors","bgColors","defaultFont","fontFamily","currentStyle","x","offsetX","y","offsetY","hasDefaultFont","hasFont","modifiers","pos","enabled","flip","preventOverflow","hide","computeStyle","gpuAcceleration","toggleInlineStyle","inlineStyle","current","applyInlineStyle","removeInlineStyle","toggleAlignment","textAlign","toggleBlockType","blockType","cleareStyles","clearStyles","focusTextEditor","setTimeout","setFocus","handleMouseDown","event","preventDefault","handleSelectMouseDown","stopPropagation","handleSelectClose","currentTarget","dataset","handleFontSize","target","handleColorMouseDown","HTMLInputElement","focus","handleColorChange","name","color","prefix","handleInlineMouseDown","style","handleClearBtn","disableRestoreFocus","autoFocus","className","map","font","fontSize","bgColor","selected","bold","italic","underline","align","list"],"mappings":"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","sourcesContent":["import React, { useMemo, MouseEvent, ChangeEvent } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { EditorState } from \"draft-js\";\r\nimport { ListItemIcon, MenuItem, Popper, Select } from \"@material-ui/core\";\r\n\r\nimport { SimpleObject, TextEditorRef } from \"types\";\r\nimport {\r\n  INLINE_STYLE_SIZE_PREFIX,\r\n  INLINE_STYLE_COLOR_PREFIX,\r\n  INLINE_STYLE_BG_COLOR_PREFIX,\r\n  BLOCK_STYLE_UNORDERED_LIST,\r\n  BLOCK_STYLE_ORDERED_LIST,\r\n  INLINE_STYLE_BOLD,\r\n  INLINE_STYLE_ITALIC,\r\n  INLINE_STYLE_UNDERLINE,\r\n  INLINE_STYLE_FONT_PREFIX,\r\n  BLOCK_STYLE_LEFT_ALIGN,\r\n  BLOCK_STYLE_CENTER_ALIGN,\r\n  BLOCK_STYLE_RIGHT_ALIGN,\r\n  BLOCK_STYLE_JUSTIFY_ALIGN,\r\n} from \"editor-constants\";\r\nimport { findIndex, getIFrameClientRect } from \"utils\";\r\nimport {\r\n  BulletListIcon,\r\n  CenterAlignIcon,\r\n  DropdownImg2,\r\n  JustifyAlignIcon,\r\n  LeftAlignIcon,\r\n  NumListIcon,\r\n  RightAlignIcon,\r\n} from \"assets/icons\";\r\nimport {\r\n  BlmColorPicker,\r\n  ColorPickerChangeEvent,\r\n  BlmNumericSelect,\r\n  NumericSelectChangeEvent,\r\n} from \"shared\";\r\nimport { getCurrentStyle } from \"./utils\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  show: boolean;\r\n  anchorEle?: HTMLElement;\r\n  offset?: { x?: number; y?: number };\r\n  textEditorRef?: TextEditorRef;\r\n  editorState?: EditorState;\r\n  defaultStyles?: SimpleObject;\r\n  size?: \"normal\" | \"small\";\r\n}\r\n\r\nconst sizes = [\r\n  { label: \"12 px\", value: 12 },\r\n  { label: \"14 px\", value: 14 },\r\n  { label: \"16 px\", value: 16 },\r\n  { label: \"18 px\", value: 18 },\r\n  { label: \"24 px\", value: 24 },\r\n  { label: \"30 px\", value: 30 },\r\n  { label: \"36 px\", value: 36 },\r\n  { label: \"48 px\", value: 48 },\r\n  { label: \"60 px\", value: 60 },\r\n  { label: \"72 px\", value: 72 },\r\n  { label: \"100 px\", value: 100 },\r\n];\r\n\r\nfunction BlmTextToolbox(props: CompProps) {\r\n  const {\r\n    show,\r\n    anchorEle,\r\n    offset,\r\n    textEditorRef,\r\n    editorState,\r\n    defaultStyles,\r\n    size,\r\n    fonts,\r\n    colors,\r\n    bgColors,\r\n  } = props;\r\n  const defaultFont = defaultStyles?.fontFamily;\r\n  const currentStyle = getCurrentStyle(editorState, defaultStyles);\r\n  const { x: offsetX = 0, y: offsetY = 0 } = offset || {};\r\n\r\n  const hasDefaultFont = useMemo(() => {\r\n    return fonts ? findIndex(fonts, defaultFont, \"fontFamily\") !== -1 : false;\r\n  }, [fonts, defaultFont]);\r\n\r\n  const hasFont = useMemo(() => {\r\n    return fonts ? findIndex(fonts, currentStyle.fontFamily, \"fontFamily\") !== -1 : false;\r\n  }, [fonts, currentStyle.fontFamily]);\r\n\r\n  const modifiers = useMemo(() => {\r\n    const pos = anchorEle ? getIFrameClientRect(anchorEle) : { x: 0, y: 0 };\r\n\r\n    return {\r\n      offset: {\r\n        offset: `${pos.x + offsetX},${-(pos.y + offsetY)}`,\r\n        enabled: true,\r\n      },\r\n      flip: {\r\n        enabled: false,\r\n      },\r\n      preventOverflow: {\r\n        enabled: true,\r\n      },\r\n      hide: {\r\n        enabled: true,\r\n      },\r\n      computeStyle: {\r\n        gpuAcceleration: false,\r\n      },\r\n    };\r\n  }, [anchorEle, offsetX, offsetY]);\r\n\r\n  const toggleInlineStyle = (inlineStyle: string) => {\r\n    textEditorRef?.current?.toggleInlineStyle(inlineStyle);\r\n  };\r\n\r\n  const applyInlineStyle = (inlineStyle: string, value: string) => {\r\n    textEditorRef?.current?.applyInlineStyle(inlineStyle, value);\r\n  };\r\n\r\n  const removeInlineStyle = (inlineStyle: string) => {\r\n    textEditorRef?.current?.removeInlineStyle(inlineStyle);\r\n  };\r\n\r\n  const toggleAlignment = (textAlign: string) => {\r\n    textEditorRef?.current?.toggleAlignment(textAlign);\r\n  };\r\n\r\n  const toggleBlockType = (blockType: string) => {\r\n    textEditorRef?.current?.toggleBlockType(blockType);\r\n  };\r\n\r\n  const cleareStyles = () => {\r\n    textEditorRef?.current?.clearStyles();\r\n  };\r\n\r\n  const focusTextEditor = () => {\r\n    // Hacky: Wait to focus the editor so we don't lose selection.\r\n    setTimeout(() => {\r\n      textEditorRef?.current?.setFocus();\r\n    }, 50);\r\n  };\r\n\r\n  const handleMouseDown = (event: MouseEvent) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleSelectMouseDown = (event: MouseEvent) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const handleSelectClose = (event: ChangeEvent<{}>) => {\r\n    const { currentTarget } = event;\r\n    const {\r\n      dataset: { value },\r\n    } = currentTarget as HTMLElement;\r\n\r\n    if (value === \"left\" || value === \"center\" || value === \"right\" || value === \"justify\") {\r\n      toggleAlignment(value);\r\n    } else if (value === BLOCK_STYLE_ORDERED_LIST || value === BLOCK_STYLE_UNORDERED_LIST) {\r\n      toggleBlockType(value as string);\r\n    } else {\r\n      if (value) {\r\n        applyInlineStyle(INLINE_STYLE_FONT_PREFIX, value);\r\n      } else if (value === \"\") {\r\n        removeInlineStyle(INLINE_STYLE_FONT_PREFIX);\r\n      }\r\n    }\r\n\r\n    focusTextEditor();\r\n  };\r\n\r\n  const handleFontSize = (event: NumericSelectChangeEvent) => {\r\n    const { value } = event.target;\r\n\r\n    if (value) {\r\n      applyInlineStyle(INLINE_STYLE_SIZE_PREFIX, value + \"px\");\r\n    } else {\r\n      removeInlineStyle(INLINE_STYLE_SIZE_PREFIX);\r\n    }\r\n\r\n    focusTextEditor();\r\n  };\r\n\r\n  const handleColorMouseDown = (event: MouseEvent) => {\r\n    if (event.target instanceof HTMLInputElement) {\r\n      event.stopPropagation();\r\n      event.target.focus(); // Hacky: Wait to trigger the text editor blur event first\r\n    }\r\n  };\r\n\r\n  const handleColorChange = (event: ColorPickerChangeEvent) => {\r\n    const { name, value } = event.target;\r\n    const { color } = value;\r\n    const prefix = name === \"color\" ? INLINE_STYLE_COLOR_PREFIX : INLINE_STYLE_BG_COLOR_PREFIX;\r\n\r\n    if (color) {\r\n      applyInlineStyle(prefix, color);\r\n    } else {\r\n      removeInlineStyle(prefix);\r\n    }\r\n\r\n    focusTextEditor();\r\n  };\r\n\r\n  const handleInlineMouseDown = (event: MouseEvent) => {\r\n    const { style } = (event.currentTarget as HTMLElement).dataset;\r\n\r\n    if (style) {\r\n      toggleInlineStyle(style);\r\n    }\r\n  };\r\n\r\n  const handleClearBtn = () => {\r\n    cleareStyles();\r\n  };\r\n\r\n  return (\r\n    <Popper\r\n      open={show}\r\n      anchorEl={anchorEle}\r\n      disablePortal={false}\r\n      placement={\"top-start\"}\r\n      modifiers={modifiers}\r\n      className=\"text-toolbox-popper\"\r\n    >\r\n      <div className={clsx(\"text-toolbox-wrapper\", size)} onMouseDown={handleMouseDown}>\r\n        <Select\r\n          displayEmpty={!hasDefaultFont}\r\n          value={hasFont ? currentStyle.fontFamily : \"\"}\r\n          MenuProps={{\r\n            disableRestoreFocus: true,\r\n            autoFocus: false,\r\n            className: \"text-font-dropdown-menu\",\r\n          }}\r\n          className=\"text-font-dropdown\"\r\n          onMouseDown={handleSelectMouseDown}\r\n          onClose={handleSelectClose}\r\n        >\r\n          {!hasDefaultFont && <MenuItem value=\"\">Select</MenuItem>}\r\n          {fonts?.map((font) => (\r\n            <MenuItem key={font.fontFamily} value={font.fontFamily}>\r\n              {font.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        <div className=\"text-hr\" />\r\n        <div onMouseDown={handleSelectMouseDown}>\r\n          <BlmNumericSelect\r\n            name=\"size\"\r\n            value={currentStyle.fontSize}\r\n            label=\"px\"\r\n            min={8}\r\n            max={500}\r\n            options={sizes}\r\n            popupIcon={<DropdownImg2 />}\r\n            className=\"text-size-dropdown\"\r\n            popupClassName=\"text-size-dropdown-menu\"\r\n            onChange={handleFontSize}\r\n          />\r\n        </div>\r\n        <div className=\"text-hr\" />\r\n        <div className=\"text-color-wrapper\" onMouseDown={handleColorMouseDown}>\r\n          <BlmColorPicker\r\n            name=\"color\"\r\n            color={currentStyle.color}\r\n            colors={colors}\r\n            className=\"text-color-picker\"\r\n            onChange={handleColorChange}\r\n          />\r\n          <BlmColorPicker\r\n            name=\"bgColor\"\r\n            color={currentStyle.bgColor}\r\n            colors={bgColors}\r\n            className=\"text-bg-color-picker\"\r\n            onChange={handleColorChange}\r\n          />\r\n        </div>\r\n        <div className=\"text-hr\" />\r\n        <div\r\n          data-style={INLINE_STYLE_BOLD}\r\n          className={clsx(\"text-bold-btn\", {\r\n            selected: currentStyle.bold,\r\n          })}\r\n          onMouseDown={handleInlineMouseDown}\r\n        />\r\n        <div\r\n          data-style={INLINE_STYLE_ITALIC}\r\n          className={clsx(\"text-italic-btn\", {\r\n            selected: currentStyle.italic,\r\n          })}\r\n          onMouseDown={handleInlineMouseDown}\r\n        />\r\n        <div\r\n          data-style={INLINE_STYLE_UNDERLINE}\r\n          className={clsx(\"text-underline-btn\", {\r\n            selected: currentStyle.underline,\r\n          })}\r\n          onMouseDown={handleInlineMouseDown}\r\n        />\r\n        <div className=\"text-hr\" />\r\n        <Select\r\n          value={currentStyle.align}\r\n          MenuProps={{\r\n            disableRestoreFocus: true,\r\n            autoFocus: false,\r\n            className: \"text-align-dropdown-menu\",\r\n          }}\r\n          className=\"text-align-dropdown\"\r\n          onMouseDown={handleSelectMouseDown}\r\n          onClose={handleSelectClose}\r\n        >\r\n          <MenuItem value={BLOCK_STYLE_LEFT_ALIGN}>\r\n            <ListItemIcon>\r\n              <LeftAlignIcon />\r\n            </ListItemIcon>\r\n          </MenuItem>\r\n          <MenuItem value={BLOCK_STYLE_CENTER_ALIGN}>\r\n            <ListItemIcon>\r\n              <CenterAlignIcon />\r\n            </ListItemIcon>\r\n          </MenuItem>\r\n          <MenuItem value={BLOCK_STYLE_RIGHT_ALIGN}>\r\n            <ListItemIcon>\r\n              <RightAlignIcon />\r\n            </ListItemIcon>\r\n          </MenuItem>\r\n          <MenuItem value={BLOCK_STYLE_JUSTIFY_ALIGN}>\r\n            <ListItemIcon>\r\n              <JustifyAlignIcon />\r\n            </ListItemIcon>\r\n          </MenuItem>\r\n        </Select>\r\n        <Select\r\n          value={currentStyle.list}\r\n          MenuProps={{\r\n            disableRestoreFocus: true,\r\n            autoFocus: false,\r\n            className: \"text-list-dropdown-menu\",\r\n          }}\r\n          className=\"text-list-dropdown\"\r\n          onMouseDown={handleSelectMouseDown}\r\n          onClose={handleSelectClose}\r\n        >\r\n          <MenuItem value={BLOCK_STYLE_ORDERED_LIST}>\r\n            <ListItemIcon>\r\n              <NumListIcon />\r\n            </ListItemIcon>\r\n          </MenuItem>\r\n          <MenuItem value={BLOCK_STYLE_UNORDERED_LIST}>\r\n            <ListItemIcon>\r\n              <BulletListIcon />\r\n            </ListItemIcon>\r\n          </MenuItem>\r\n        </Select>\r\n        <div className=\"text-hr\" />\r\n        <div className=\"text-link-btn\" />\r\n        <div className=\"text-erase-btn\" onClick={handleClearBtn} />\r\n      </div>\r\n    </Popper>\r\n  );\r\n}\r\n\r\nexport default BlmTextToolbox;\r\n"]},"metadata":{},"sourceType":"module"}