{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\actions\\\\main\\\\BlmActions.tsx\";\nimport React, { useMemo } from \"react\";\nimport { Select, MenuItem, Divider } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { ComponentActionTypes, ElementType, StyleListTypes } from \"editor-constants\";\nimport { isDocumentAction, isLinkAction, isSimpleContentAction, isReplaceBackgroundAction, isReplaceTargetAction, isNavigationAction, isPopoverAction, isTooltipAction, isMediaLayerAction, isMailAction, isGoto360Action, isGotoAction, isCloseOrExit, isVideoMarker, isAudioMaker } from \"utils\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { getDefaultComponentStyle } from \"components/content-editor/reducers\";\nimport BlmSimpleContentAction from \"../simple-content\";\nimport BlmLinkAction from \"../link\";\nimport BlmMailAction from \"../mail\";\nimport BlmDocumentAction from \"../document\";\nimport BlmReplaceBackgroundAction from \"../replace-background\";\nimport BlmReplaceTargetAction from \"../replace-target\"; // import BlmGotoAction from \"../goto\";\n\nimport BlmTooltipAction from \"../tooltip\";\nimport BlmPopoverAction from \"../popover\";\nimport BlmMediaLayerAction from \"../media-layer\";\nimport BlmGoto360Action from \"../goto-360\";\nimport { getActionItems } from \"../utils\";\nimport \"./styles.scss\";\nimport BlmNavigationAction from \"../navigation/BlmNavigationAction\";\nimport BlmButtonActionGoto from \"../newgoto\";\nimport BlmCloseOrExit from \"../closeandexit/BlmCloseOrExit\";\nimport BlmVideoMarkerAction from \"./videomarker\";\nimport BlmAudioMarkerAction from \"./audiomarker\";\n\nfunction BlmActions(props) {\n  const {\n    name,\n    data,\n    type,\n    temp,\n    onChange,\n    onApplyStyle\n  } = props;\n  const {\n    action = ComponentActionTypes.None\n  } = data || {};\n  const {\n    element\n  } = useContentEditorCtx();\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n  const items = useMemo(() => {\n    const arr = getActionItems(type, true);\n    return arr.map((item, ind) => {\n      if (typeof item !== \"string\") {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: ind,\n          value: item.type,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }\n        }, t(item.key));\n      } else if (item === \"divider\") {\n        return /*#__PURE__*/React.createElement(Divider, {\n          key: ind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: ind,\n          className: \"actions-dropdown-divider-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }\n        }, item);\n      }\n    });\n  }, [type, t]);\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange({\n        target: {\n          name,\n          value: newData\n        }\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newData = {\n      action,\n      ...data\n    };\n\n    if (name === \"action\") {\n      newData.action = value;\n\n      if (newData.action === ComponentActionTypes.Tooltip) {\n        newData.value = {\n          style: getDefaultComponentStyle(StyleListTypes.MediaHotspotTooltip)\n        };\n      }\n    } else if (name === \"simpleContent\" || name === \"document\" || name === \"link\" || name === \"mail\" || name === \"replaceBackground\" || name === \"target\" || name === \"goto\" || name === \"tooltip\" || name === \"popover\" || name === \"mediaLayer\" || name === \"goto360\" || name === \"closeexit\" || name === \"videomarker\" || name === \"audiomarker\") {\n      newData.value = value;\n    }\n\n    if (newData.action === \"target\" && newData.value === undefined) {\n      newData.value = {\n        restore: true\n      };\n    } else if (newData.action === \"replacebackground\" && newData.value === undefined) {\n      newData.value = {\n        restore: true\n      };\n    }\n\n    updateChange(newData);\n  };\n\n  const handleApplyStyle = event => {\n    const target = event.target;\n\n    if (onApplyStyle) {\n      onApplyStyle({\n        target: {\n          name,\n          value: {\n            name: target.name,\n            style: target.value\n          }\n        }\n      });\n    }\n  };\n\n  const renderChildern = () => {\n    if (!data) {\n      return undefined;\n    } else if (isSimpleContentAction(data)) {\n      return /*#__PURE__*/React.createElement(BlmSimpleContentAction, {\n        data: data.value,\n        type: type === \"hotspot\" || type === \"hotspot-popover\" ? \"limited\" : \"standard\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      });\n    } else if (isDocumentAction(data)) {\n      return /*#__PURE__*/React.createElement(BlmDocumentAction, {\n        data: data.value,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 14\n        }\n      });\n    } else if (isLinkAction(data)) {\n      return /*#__PURE__*/React.createElement(BlmLinkAction, {\n        data: data.value,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 14\n        }\n      });\n    } else if (isMailAction(data)) {\n      return /*#__PURE__*/React.createElement(BlmMailAction, {\n        data: data.value,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 14\n        }\n      });\n    } else if (isReplaceBackgroundAction(data)) {\n      return /*#__PURE__*/React.createElement(BlmReplaceBackgroundAction, {\n        data: data.value,\n        name: name,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 14\n        }\n      });\n    } else if (isReplaceTargetAction(data)) {\n      return /*#__PURE__*/React.createElement(BlmReplaceTargetAction, {\n        data: data.value,\n        name: name,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 14\n        }\n      });\n    } else if (isGotoAction(data)) {\n      return /*#__PURE__*/React.createElement(BlmButtonActionGoto, {\n        data: data.value,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 14\n        }\n      });\n    } else if (isTooltipAction(data)) {\n      return /*#__PURE__*/React.createElement(BlmTooltipAction, {\n        data: data.value,\n        onChange: handleChange,\n        onApplyStyle: handleApplyStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      });\n    } else if (isPopoverAction(data)) {\n      return /*#__PURE__*/React.createElement(BlmPopoverAction, {\n        data: data.value,\n        onChange: handleChange,\n        onApplyStyle: handleApplyStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }\n      });\n    } else if (isMediaLayerAction(data)) {\n      return /*#__PURE__*/React.createElement(BlmMediaLayerAction, {\n        data: data.value,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 14\n        }\n      });\n    } else if (isGoto360Action(data)) {\n      return /*#__PURE__*/React.createElement(BlmGoto360Action, {\n        data: data.value,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 14\n        }\n      });\n    } else if (isNavigationAction(data)) {\n      var _element$parent;\n\n      return /*#__PURE__*/React.createElement(BlmNavigationAction, {\n        data: data.value,\n        showNavigation: type !== \"hotspot\" && type !== \"hotspot-popover\",\n        showPage: (element === null || element === void 0 ? void 0 : element.type) === ElementType.PartPage || (element === null || element === void 0 ? void 0 : element.type) === ElementType.SimplePartPage,\n        showRedoEval: (element === null || element === void 0 ? void 0 : (_element$parent = element.parent) === null || _element$parent === void 0 ? void 0 : _element$parent.type) === ElementType.Feedback && (element === null || element === void 0 ? void 0 : element.type) === ElementType.SimpleContent,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      });\n    } else if (isCloseOrExit(data)) {\n      return /*#__PURE__*/React.createElement(BlmCloseOrExit, {\n        data: data.value,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 14\n        }\n      });\n    } else if (isVideoMarker(data)) {\n      return /*#__PURE__*/React.createElement(BlmVideoMarkerAction, {\n        data: data.value,\n        onChange: handleChange,\n        name: \"video\",\n        action: \"videomarker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }\n      });\n    } else if (isAudioMaker(data)) {\n      return /*#__PURE__*/React.createElement(BlmAudioMarkerAction, {\n        data: data.value,\n        onChange: handleChange,\n        name: \"audio\",\n        action: \"audiomarker\",\n        temp: temp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"component-actions-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"action\",\n    value: action,\n    MenuProps: {\n      className: \"actions-dropdown-menu\"\n    },\n    className: \"actions-dropdown\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, items), renderChildern());\n}\n\nexport default BlmActions;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/actions/main/BlmActions.tsx"],"names":["React","useMemo","Select","MenuItem","Divider","useTranslation","ComponentActionTypes","ElementType","StyleListTypes","isDocumentAction","isLinkAction","isSimpleContentAction","isReplaceBackgroundAction","isReplaceTargetAction","isNavigationAction","isPopoverAction","isTooltipAction","isMediaLayerAction","isMailAction","isGoto360Action","isGotoAction","isCloseOrExit","isVideoMarker","isAudioMaker","useContentEditorCtx","getDefaultComponentStyle","BlmSimpleContentAction","BlmLinkAction","BlmMailAction","BlmDocumentAction","BlmReplaceBackgroundAction","BlmReplaceTargetAction","BlmTooltipAction","BlmPopoverAction","BlmMediaLayerAction","BlmGoto360Action","getActionItems","BlmNavigationAction","BlmButtonActionGoto","BlmCloseOrExit","BlmVideoMarkerAction","BlmAudioMarkerAction","BlmActions","props","name","data","type","temp","onChange","onApplyStyle","action","None","element","t","items","arr","map","item","ind","key","updateChange","newData","target","value","handleChange","event","Tooltip","style","MediaHotspotTooltip","undefined","restore","handleApplyStyle","renderChildern","PartPage","SimplePartPage","parent","Feedback","SimpleContent","className"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useMemo } from \"react\";\r\nimport { Select, MenuItem, Divider } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  ActionStyle,\r\n  ComponentAction,\r\n  ComponentActionValues,\r\n  ContentTemplateAction,\r\n  CustomChangeEvent,\r\n  GotoAction,\r\n} from \"types\";\r\nimport { ComponentActionTypes, ElementType, StyleListTypes } from \"editor-constants\";\r\nimport {\r\n  isDocumentAction,\r\n  isLinkAction,\r\n  isSimpleContentAction,\r\n  isReplaceBackgroundAction,\r\n  isReplaceTargetAction,\r\n  isNavigationAction,\r\n  isPopoverAction,\r\n  isTooltipAction,\r\n  isMediaLayerAction,\r\n  isMailAction,\r\n  isGoto360Action,\r\n  isGotoAction,\r\n  isCloseOrExit,\r\n  isVideoMarker,\r\n  isAudioMaker,\r\n} from \"utils\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { getDefaultComponentStyle } from \"components/content-editor/reducers\";\r\nimport BlmSimpleContentAction from \"../simple-content\";\r\nimport BlmLinkAction from \"../link\";\r\nimport BlmMailAction from \"../mail\";\r\nimport BlmDocumentAction from \"../document\";\r\nimport BlmReplaceBackgroundAction from \"../replace-background\";\r\nimport BlmReplaceTargetAction from \"../replace-target\";\r\n// import BlmGotoAction from \"../goto\";\r\nimport BlmTooltipAction from \"../tooltip\";\r\nimport BlmPopoverAction from \"../popover\";\r\nimport BlmMediaLayerAction from \"../media-layer\";\r\nimport BlmGoto360Action from \"../goto-360\";\r\nimport { getActionItems } from \"../utils\";\r\nimport \"./styles.scss\";\r\nimport BlmNavigationAction from \"../navigation/BlmNavigationAction\";\r\nimport BlmButtonActionGoto from \"../newgoto\";\r\nimport BlmCloseOrExit from \"../closeandexit/BlmCloseOrExit\";\r\nimport BlmVideoMarkerAction from \"./videomarker\";\r\nimport BlmAudioMarkerAction from \"./audiomarker\";\r\n\r\nexport interface CompProps {\r\n  name: string;\r\n  data?: ComponentAction;\r\n  type?:\r\n    | \"over\"\r\n    | \"slideshow\"\r\n    | \"hotspot\"\r\n    | \"hotspot-over\"\r\n    | \"hotspot-360\"\r\n    | \"hotspot-360-over\"\r\n    | \"hotspot-popover\";\r\n  onChange?: (event: CustomChangeEvent<ComponentAction>) => void;\r\n  onApplyStyle?: (event: CustomChangeEvent<ActionStyle>) => void;\r\n  temp?: ContentTemplateAction | undefined;\r\n}\r\n\r\nfunction BlmActions(props: CompProps) {\r\n  const { name, data, type, temp, onChange, onApplyStyle } = props;\r\n  const { action = ComponentActionTypes.None } = data || {};\r\n  const { element } = useContentEditorCtx();\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const items = useMemo(() => {\r\n    const arr = getActionItems(type, true);\r\n\r\n    return arr.map((item, ind) => {\r\n      if (typeof item !== \"string\") {\r\n        return (\r\n          <MenuItem key={ind} value={item.type}>\r\n            {t(item.key)}\r\n          </MenuItem>\r\n        );\r\n      } else if (item === \"divider\") {\r\n        return <Divider key={ind} />;\r\n      } else {\r\n        return (\r\n          <div key={ind} className=\"actions-dropdown-divider-title\">\r\n            {item}\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  }, [type, t]);\r\n\r\n  const updateChange = (newData: ComponentAction) => {\r\n    if (onChange) {\r\n      onChange({ target: { name, value: newData } });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<any> | CustomChangeEvent<ComponentActionValues>) => {\r\n    const { name, value } = event.target;\r\n    const newData: ComponentAction = { action, ...data };\r\n\r\n    if (name === \"action\") {\r\n      newData.action = value;\r\n\r\n      if (newData.action === ComponentActionTypes.Tooltip) {\r\n        newData.value = { style: getDefaultComponentStyle(StyleListTypes.MediaHotspotTooltip) };\r\n      }\r\n    } else if (\r\n      name === \"simpleContent\" ||\r\n      name === \"document\" ||\r\n      name === \"link\" ||\r\n      name === \"mail\" ||\r\n      name === \"replaceBackground\" ||\r\n      name === \"target\" ||\r\n      name === \"goto\" ||\r\n      name === \"tooltip\" ||\r\n      name === \"popover\" ||\r\n      name === \"mediaLayer\" ||\r\n      name === \"goto360\" ||\r\n      name === \"closeexit\" ||\r\n      name === \"videomarker\" ||\r\n      name === \"audiomarker\"\r\n    ) {\r\n      newData.value = value;\r\n    }\r\n    if (newData.action === \"target\" && newData.value === undefined) {\r\n      newData.value = {\r\n        restore: true,\r\n      };\r\n    } else if (newData.action === \"replacebackground\" && newData.value === undefined) {\r\n      newData.value = {\r\n        restore: true,\r\n      };\r\n    }\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleApplyStyle = (event: CustomChangeEvent<string>) => {\r\n    const target = event.target;\r\n\r\n    if (onApplyStyle) {\r\n      onApplyStyle({ target: { name, value: { name: target.name, style: target.value } } });\r\n    }\r\n  };\r\n\r\n  const renderChildern = () => {\r\n    if (!data) {\r\n      return undefined;\r\n    } else if (isSimpleContentAction(data)) {\r\n      return (\r\n        <BlmSimpleContentAction\r\n          data={data.value}\r\n          type={type === \"hotspot\" || type === \"hotspot-popover\" ? \"limited\" : \"standard\"}\r\n          onChange={handleChange}\r\n        />\r\n      );\r\n    } else if (isDocumentAction(data)) {\r\n      return <BlmDocumentAction data={data.value} onChange={handleChange} />;\r\n    } else if (isLinkAction(data)) {\r\n      return <BlmLinkAction data={data.value} onChange={handleChange} />;\r\n    } else if (isMailAction(data)) {\r\n      return <BlmMailAction data={data.value} onChange={handleChange} />;\r\n    } else if (isReplaceBackgroundAction(data)) {\r\n      return <BlmReplaceBackgroundAction data={data.value} name={name} onChange={handleChange} />;\r\n    } else if (isReplaceTargetAction(data)) {\r\n      return <BlmReplaceTargetAction data={data.value} name={name} onChange={handleChange} />;\r\n    } else if (isGotoAction(data)) {\r\n      return <BlmButtonActionGoto data={data.value} onChange={handleChange} />;\r\n    } else if (isTooltipAction(data)) {\r\n      return (\r\n        <BlmTooltipAction\r\n          data={data.value}\r\n          onChange={handleChange}\r\n          onApplyStyle={handleApplyStyle}\r\n        />\r\n      );\r\n    } else if (isPopoverAction(data)) {\r\n      return (\r\n        <BlmPopoverAction\r\n          data={data.value}\r\n          onChange={handleChange}\r\n          onApplyStyle={handleApplyStyle}\r\n        />\r\n      );\r\n    } else if (isMediaLayerAction(data)) {\r\n      return <BlmMediaLayerAction data={data.value} onChange={handleChange} />;\r\n    } else if (isGoto360Action(data)) {\r\n      return <BlmGoto360Action data={data.value} onChange={handleChange} />;\r\n    } else if (isNavigationAction(data)) {\r\n      return (\r\n        <BlmNavigationAction\r\n          data={data.value as GotoAction}\r\n          showNavigation={type !== \"hotspot\" && type !== \"hotspot-popover\"}\r\n          showPage={\r\n            element?.type === ElementType.PartPage || element?.type === ElementType.SimplePartPage\r\n          }\r\n          showRedoEval={\r\n            element?.parent?.type === ElementType.Feedback &&\r\n            element?.type === ElementType.SimpleContent\r\n          }\r\n          onChange={handleChange}\r\n        />\r\n      );\r\n    } else if (isCloseOrExit(data)) {\r\n      return <BlmCloseOrExit data={data.value} onChange={handleChange} />;\r\n    } else if (isVideoMarker(data)) {\r\n      return (\r\n        <BlmVideoMarkerAction\r\n          data={data.value}\r\n          onChange={handleChange}\r\n          name=\"video\"\r\n          action=\"videomarker\"\r\n        />\r\n      );\r\n    } else if (isAudioMaker(data)) {\r\n      return (\r\n        <BlmAudioMarkerAction\r\n          data={data.value}\r\n          onChange={handleChange}\r\n          name=\"audio\"\r\n          action=\"audiomarker\"\r\n          temp={temp}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"component-actions-wrapper\">\r\n      <Select\r\n        name=\"action\"\r\n        value={action}\r\n        MenuProps={{\r\n          className: \"actions-dropdown-menu\",\r\n        }}\r\n        className=\"actions-dropdown\"\r\n        onChange={handleChange}\r\n      >\r\n        {items}\r\n      </Select>\r\n      {renderChildern()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmActions;\r\n"]},"metadata":{},"sourceType":"module"}