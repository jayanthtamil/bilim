{"ast":null,"code":"import { ElementType } from \"editor-constants\";\nimport { copyAttributesInString, differenceOfObjects } from \"utils\";\nimport { createElementTemplateHTML, getContentMedias, getQuestionMedias } from \"../core\";\nimport { getContentTemplateModel, getQuestionTemplateModel } from \"../model\";\nimport { copyMarginReplaceTemplate, copyPartPageBackground, copyScreenBackground } from \"./background\";\nimport { copyContentTemplate } from \"./content\";\nimport { copyQuestionTemplate } from \"./question\";\nexport function changeTemplateVariant(template, variant, isDark, isRelative = true) {\n  const newTempalte = { ...template\n  };\n  const {\n    type,\n    templateType\n  } = template;\n  newTempalte.html = createElementTemplateHTML(variant.html, isDark, type);\n  newTempalte.html = copyAttributesInString(template.html, newTempalte.html, [\"blm-options\", \"blm-editor-options\", \"blm-scroll-transition\", \"anchor\"], \".outercontainer\");\n  newTempalte.isDarkTemplate = isDark;\n  newTempalte.template = { ...variant\n  };\n\n  if (templateType === ElementType.PartPage || templateType === ElementType.SimplePartPage) {\n    newTempalte.html = copyPartPageBackground(template, newTempalte);\n  } else {\n    newTempalte.html = copyScreenBackground(template, newTempalte);\n  }\n\n  if (templateType === ElementType.Question) {\n    newTempalte.html = copyQuestionTemplate(template, newTempalte);\n  } else {\n    newTempalte.html = copyContentTemplate(template, newTempalte, isRelative);\n  }\n\n  newTempalte.html = copyMarginReplaceTemplate(template, newTempalte);\n  return newTempalte;\n}\nexport function getUnusedMedias(oldTemplate, newTemplate) {\n  if (oldTemplate.type === ElementType.Question) {\n    const oldQuestion = getQuestionTemplateModel(oldTemplate);\n    const newQuestion = getQuestionTemplateModel(newTemplate);\n    const oldMedias = getQuestionMedias(oldQuestion);\n    const newMedias = getQuestionMedias(newQuestion);\n    return differenceOfObjects(oldMedias, newMedias, \"id\");\n  } else {\n    const oldContent = getContentTemplateModel(oldTemplate);\n    const newContent = getContentTemplateModel(newTemplate);\n    const oldMedias = getContentMedias(oldContent);\n    const newMedias = getContentMedias(newContent);\n    return differenceOfObjects(oldMedias, newMedias, \"id\");\n  }\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/swap/template.ts"],"names":["ElementType","copyAttributesInString","differenceOfObjects","createElementTemplateHTML","getContentMedias","getQuestionMedias","getContentTemplateModel","getQuestionTemplateModel","copyMarginReplaceTemplate","copyPartPageBackground","copyScreenBackground","copyContentTemplate","copyQuestionTemplate","changeTemplateVariant","template","variant","isDark","isRelative","newTempalte","type","templateType","html","isDarkTemplate","PartPage","SimplePartPage","Question","getUnusedMedias","oldTemplate","newTemplate","oldQuestion","newQuestion","oldMedias","newMedias","oldContent","newContent"],"mappings":"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","sourcesContent":["import { CourseElementTemplate, TemplateBase } from \"types\";\r\nimport { ElementType, TemplateTypes } from \"editor-constants\";\r\nimport { copyAttributesInString, differenceOfObjects } from \"utils\";\r\nimport { createElementTemplateHTML, getContentMedias, getQuestionMedias } from \"../core\";\r\nimport { getContentTemplateModel, getQuestionTemplateModel } from \"../model\";\r\nimport {\r\n  copyMarginReplaceTemplate,\r\n  copyPartPageBackground,\r\n  copyScreenBackground,\r\n} from \"./background\";\r\nimport { copyContentTemplate } from \"./content\";\r\nimport { copyQuestionTemplate } from \"./question\";\r\n\r\nexport function changeTemplateVariant(\r\n  template: CourseElementTemplate,\r\n  variant: TemplateBase,\r\n  isDark: boolean,\r\n  isRelative = true\r\n) {\r\n  const newTempalte = { ...template };\r\n  const { type, templateType } = template;\r\n\r\n  newTempalte.html = createElementTemplateHTML(variant.html, isDark, type as TemplateTypes);\r\n  newTempalte.html = copyAttributesInString(\r\n    template.html,\r\n    newTempalte.html,\r\n    [\"blm-options\", \"blm-editor-options\", \"blm-scroll-transition\", \"anchor\"],\r\n    \".outercontainer\"\r\n  );\r\n\r\n  newTempalte.isDarkTemplate = isDark;\r\n  newTempalte.template = { ...variant };\r\n\r\n  if (templateType === ElementType.PartPage || templateType === ElementType.SimplePartPage) {\r\n    newTempalte.html = copyPartPageBackground(template, newTempalte);\r\n  } else {\r\n    newTempalte.html = copyScreenBackground(template, newTempalte);\r\n  }\r\n\r\n  if (templateType === ElementType.Question) {\r\n    newTempalte.html = copyQuestionTemplate(template, newTempalte);\r\n  } else {\r\n    newTempalte.html = copyContentTemplate(template, newTempalte, isRelative);\r\n  }\r\n\r\n  newTempalte.html = copyMarginReplaceTemplate(template, newTempalte);\r\n\r\n  return newTempalte;\r\n}\r\n\r\nexport function getUnusedMedias(\r\n  oldTemplate: CourseElementTemplate,\r\n  newTemplate: CourseElementTemplate\r\n) {\r\n  if (oldTemplate.type === ElementType.Question) {\r\n    const oldQuestion = getQuestionTemplateModel(oldTemplate);\r\n    const newQuestion = getQuestionTemplateModel(newTemplate);\r\n    const oldMedias = getQuestionMedias(oldQuestion);\r\n    const newMedias = getQuestionMedias(newQuestion);\r\n\r\n    return differenceOfObjects(oldMedias, newMedias, \"id\");\r\n  } else {\r\n    const oldContent = getContentTemplateModel(oldTemplate);\r\n    const newContent = getContentTemplateModel(newTemplate);\r\n    const oldMedias = getContentMedias(oldContent);\r\n    const newMedias = getContentMedias(newContent);\r\n\r\n    return differenceOfObjects(oldMedias, newMedias, \"id\");\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}