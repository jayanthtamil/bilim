{"ast":null,"code":"import { CMSFolder, CourseCompletionProps, CourseEvaluationProps, CourseProps } from \"types\";\nimport { CourseExportTypes } from \"editor-constants\";\nimport { getEvaluationPropsJSON, toBoolean, toBRs, toJSONObject, toJSONString, toNewLines } from \"utils\";\nexport const createPropertiesModel = response => {\n  var _response$desc, _response$short_desc, _response$keywords, _response$objectives, _response$duration, _response$language, _response$crs_version;\n\n  const result = new CourseProps(response.nid, response.title, response.dispaly);\n  result.parent = createContentFolderModel(response.parent);\n  result.type = response.type;\n  result.description = (_response$desc = response.desc) !== null && _response$desc !== void 0 ? _response$desc : \"\";\n  result.shortDescription = (_response$short_desc = response.short_desc) !== null && _response$short_desc !== void 0 ? _response$short_desc : \"\";\n  result.keywords = (_response$keywords = response.keywords) !== null && _response$keywords !== void 0 ? _response$keywords : \"\";\n  result.objectives = (_response$objectives = response.objectives) !== null && _response$objectives !== void 0 ? _response$objectives : \"\";\n  result.duration = (_response$duration = response.duration) !== null && _response$duration !== void 0 ? _response$duration : \"\";\n  result.language = (_response$language = response.language) !== null && _response$language !== void 0 ? _response$language : \"\";\n  result.version = (_response$crs_version = response.crs_version) !== null && _response$crs_version !== void 0 ? _response$crs_version : \"\";\n  result.navigation = toJSONObject(response.nav_param) || undefined;\n  result.completion = toJSONObject(response.comp_param) || new CourseCompletionProps();\n  result.evaluation = toJSONObject(response.eval_param) || new CourseEvaluationProps();\n  result.texts = toJSONObject(response.external_texts) || [];\n  result.files = response.external_files || [];\n  result.isEvaluation = toBoolean(response.isevaluation);\n  result.hasFeedback = toBoolean(response.hasfeedback);\n  result.metadatas = response.metadatas;\n  result.noOfWords = response.no_of_words;\n  result.taxonomy = response.taxonomy;\n  result.thumbnail = response.thumbnail;\n  result.urlEdit = response.url_edit;\n  result.created = {\n    user: response.created_by,\n    date: response.created\n  };\n  result.modified = {\n    user: response.modified_by,\n    date: response.changed\n  }; //Initialize\n\n  result.texts = result.texts.map(item => ({ ...item,\n    value: toBRs(item.value)\n  }));\n  result.propsJSON = getEvaluationPropsJSON(result.evaluation, result.propsJSON);\n  result.displayCourseName = response.original_course_name;\n  return result;\n};\nexport const createPropertiesAPI = model => {\n  const result = {};\n  result.title = model.title;\n  result.desc = model.description;\n  result.short_desc = model.shortDescription;\n  result.keywords = model.keywords;\n  result.objectives = model.objectives;\n  result.language = model.language;\n  result.duration = model.duration;\n  result.crs_version = model.version;\n  result.nav_param = toJSONString(model.navigation);\n  result.comp_param = toJSONString(model.completion);\n  result.eval_param = toJSONString(model.evaluation);\n  result.isevaluation = model.isEvaluation.toString();\n  result.hasfeedback = model.hasFeedback.toString();\n  result.external_texts = toJSONString(model.texts.map(item => ({ ...item,\n    value: toNewLines(item.value)\n  })));\n  result.original_course_name = model.displayCourseName;\n  return result;\n};\n\nconst createContentFolderModel = response => {\n  if (response) {\n    const folder = new CMSFolder(response.id, response.title);\n    folder.type = response.type;\n    folder.link = response.link;\n    if (response.children && response.children.length > 0) folder.child = createContentFolderModel(response.children[0]);\n    return folder;\n  }\n\n  return null;\n};\n\nexport const createExportAPI = (id, model) => {\n  const result = {\n    crs_id: id\n  };\n  const {\n    type,\n    options\n  } = model;\n\n  if (type === CourseExportTypes.LMS) {\n    const {\n      version,\n      pkg,\n      exit,\n      prerequisite,\n      orientation\n    } = options;\n    result.ex_options = \"EXPORT LMS\";\n    result.version_select = version;\n    result.package_select = pkg;\n    result.prereq = prerequisite;\n    result.orientation = orientation;\n    result.exit = exit;\n  } else {\n    const {\n      prerequisite,\n      orientation\n    } = options;\n    result.ex_options = \"EXPORT WEB\";\n    result.prereq = prerequisite;\n    result.orientation = orientation;\n  }\n\n  return result;\n};","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/redux/course/properties/utils/index.ts"],"names":["CMSFolder","CourseCompletionProps","CourseEvaluationProps","CourseProps","CourseExportTypes","getEvaluationPropsJSON","toBoolean","toBRs","toJSONObject","toJSONString","toNewLines","createPropertiesModel","response","result","nid","title","dispaly","parent","createContentFolderModel","type","description","desc","shortDescription","short_desc","keywords","objectives","duration","language","version","crs_version","navigation","nav_param","undefined","completion","comp_param","evaluation","eval_param","texts","external_texts","files","external_files","isEvaluation","isevaluation","hasFeedback","hasfeedback","metadatas","noOfWords","no_of_words","taxonomy","thumbnail","urlEdit","url_edit","created","user","created_by","date","modified","modified_by","changed","map","item","value","propsJSON","displayCourseName","original_course_name","createPropertiesAPI","model","toString","folder","id","link","children","length","child","createExportAPI","crs_id","options","LMS","pkg","exit","prerequisite","orientation","ex_options","version_select","package_select","prereq"],"mappings":"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","sourcesContent":["import {\r\n  CMSFolder,\r\n  CourseCompletionProps,\r\n  CourseEvaluationProps,\r\n  CourseExport,\r\n  CourseLMSExport,\r\n  CourseProps,\r\n  CourseWebExport,\r\n} from \"types\";\r\nimport { CourseDisplay, CourseExportTypes } from \"editor-constants\";\r\nimport {\r\n  getEvaluationPropsJSON,\r\n  toBoolean,\r\n  toBRs,\r\n  toJSONObject,\r\n  toJSONString,\r\n  toNewLines,\r\n} from \"utils\";\r\nimport { ContentFolderResponse, CoursePropsResponse } from \"../types\";\r\n\r\nexport const createPropertiesModel = (response: CoursePropsResponse) => {\r\n  const result = new CourseProps(response.nid, response.title, response.dispaly as CourseDisplay);\r\n  \r\n  result.parent = createContentFolderModel(response.parent);\r\n  result.type = response.type;\r\n  result.description = response.desc ?? \"\";\r\n  result.shortDescription = response.short_desc ?? \"\";\r\n  result.keywords = response.keywords ?? \"\";\r\n  result.objectives = response.objectives ?? \"\";\r\n  result.duration = response.duration ?? \"\";\r\n  result.language = response.language ?? \"\";\r\n  result.version = response.crs_version ?? \"\";\r\n  result.navigation = toJSONObject(response.nav_param) || undefined;\r\n  result.completion = toJSONObject(response.comp_param) || new CourseCompletionProps();\r\n  result.evaluation = toJSONObject(response.eval_param) || new CourseEvaluationProps();\r\n  result.texts = toJSONObject(response.external_texts) || [];\r\n  result.files = response.external_files || [];\r\n  result.isEvaluation = toBoolean(response.isevaluation);\r\n  result.hasFeedback = toBoolean(response.hasfeedback);\r\n  result.metadatas = response.metadatas;\r\n  result.noOfWords = response.no_of_words;\r\n  result.taxonomy = response.taxonomy;\r\n  result.thumbnail = response.thumbnail;\r\n  result.urlEdit = response.url_edit;\r\n  result.created = { user: response.created_by, date: response.created };\r\n  result.modified = { user: response.modified_by, date: response.changed };\r\n\r\n  //Initialize\r\n  result.texts = result.texts.map((item) => ({ ...item, value: toBRs(item.value) }));\r\n  result.propsJSON = getEvaluationPropsJSON(result.evaluation, result.propsJSON);\r\n  result.displayCourseName = response.original_course_name;\r\n\r\n  return result;\r\n};\r\n\r\nexport const createPropertiesAPI = (model: CourseProps) => {\r\n  const result = {} as CoursePropsResponse;\r\n\r\n  result.title = model.title;\r\n  result.desc = model.description;\r\n  result.short_desc = model.shortDescription;\r\n  result.keywords = model.keywords;\r\n  result.objectives = model.objectives;\r\n  result.language = model.language;\r\n  result.duration = model.duration;\r\n  result.crs_version = model.version;\r\n  result.nav_param = toJSONString(model.navigation);\r\n  result.comp_param = toJSONString(model.completion);\r\n  result.eval_param = toJSONString(model.evaluation);\r\n  result.isevaluation = model.isEvaluation.toString();\r\n  result.hasfeedback = model.hasFeedback.toString();\r\n  result.external_texts = toJSONString(\r\n    model.texts.map((item) => ({ ...item, value: toNewLines(item.value) }))\r\n  );\r\n  result.original_course_name = model.displayCourseName;\r\n\r\n  return result;\r\n};\r\n\r\nconst createContentFolderModel = (response: ContentFolderResponse) => {\r\n  if (response) {\r\n    const folder = new CMSFolder(response.id, response.title);\r\n    folder.type = response.type;\r\n    folder.link = response.link;\r\n\r\n    if (response.children && response.children.length > 0)\r\n      folder.child = createContentFolderModel(response.children[0]);\r\n\r\n    return folder;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const createExportAPI = (id: string, model: CourseExport) => {\r\n  const result: any = { crs_id: id };\r\n  const { type, options } = model;\r\n\r\n  if (type === CourseExportTypes.LMS) {\r\n    const { version, pkg, exit, prerequisite, orientation } = options as CourseLMSExport;\r\n\r\n    result.ex_options = \"EXPORT LMS\";\r\n    result.version_select = version;\r\n    result.package_select = pkg;\r\n    result.prereq = prerequisite;\r\n    result.orientation = orientation;\r\n    result.exit = exit;\r\n  } else {\r\n    const { prerequisite, orientation } = options as CourseWebExport;\r\n\r\n    result.ex_options = \"EXPORT WEB\";\r\n    result.prereq = prerequisite;\r\n    result.orientation = orientation;\r\n  }\r\n\r\n  return result;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}