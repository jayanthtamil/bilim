{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\styles\\\\list\\\\BlmStyleList.tsx\";\nimport React from \"react\";\nimport { isStyleCategories } from \"utils\";\nimport BlmStyleListItem from \"./item\";\nimport \"./styles.scss\";\n\nfunction BlmStyleList(props) {\n  const {\n    name,\n    data,\n    styleConfig,\n    onChange\n  } = props;\n  const {\n    items,\n    classNames\n  } = styleConfig || {};\n  const currentStyle = classNames && (data && classNames.includes(data) ? data : classNames[0]);\n\n  const updateChange = value => {\n    if (onChange) {\n      onChange({\n        target: {\n          name,\n          value\n        }\n      });\n    }\n  };\n\n  const handleItemClick = item => {\n    updateChange(item.className);\n  };\n\n  const renderItems = items => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"style-list-items-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, items.map((item, ind) => /*#__PURE__*/React.createElement(BlmStyleListItem, {\n      key: ind,\n      data: item,\n      selected: item.className === currentStyle,\n      onClick: handleItemClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  const renderCategories = categories => {\n    return categories.map((category, ind) => {\n      const {\n        name,\n        items\n      } = category;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: ind,\n        className: \"style-list-categories-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"style-list-category-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, name), renderItems(items));\n    });\n  };\n\n  if (items) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"style-list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"styles-list-scroller custom-scrollbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, isStyleCategories(items) ? renderCategories(items) : renderItems(items)));\n  } else {\n    return null;\n  }\n}\n\nexport default BlmStyleList;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/styles/list/BlmStyleList.tsx"],"names":["React","isStyleCategories","BlmStyleListItem","BlmStyleList","props","name","data","styleConfig","onChange","items","classNames","currentStyle","includes","updateChange","value","target","handleItemClick","item","className","renderItems","map","ind","renderCategories","categories","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SAASC,iBAAT,QAAkC,OAAlC;AACA,OAAOC,gBAAP,MAA6B,QAA7B;AAEA,OAAO,eAAP;;AAWA,SAASC,YAAT,CAAsBC,KAAtB,EAAwC;AACtC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,WAAd;AAA2BC,IAAAA;AAA3B,MAAwCJ,KAA9C;AACA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBH,WAAW,IAAI,EAA7C;AACA,QAAMI,YAAY,GAAGD,UAAU,KAAKJ,IAAI,IAAII,UAAU,CAACE,QAAX,CAAoBN,IAApB,CAAR,GAAoCA,IAApC,GAA2CI,UAAU,CAAC,CAAD,CAA1D,CAA/B;;AAEA,QAAMG,YAAY,GAAIC,KAAD,IAAmB;AACtC,QAAIN,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,MAAM,EAAE;AAAEV,UAAAA,IAAF;AAAQS,UAAAA;AAAR;AAAV,OAAD,CAAR;AACD;AACF,GAJD;;AAMA,QAAME,eAAe,GAAIC,IAAD,IAAyB;AAC/CJ,IAAAA,YAAY,CAACI,IAAI,CAACC,SAAN,CAAZ;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAIV,KAAD,IAA4B;AAC9C,wBACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KAAK,CAACW,GAAN,CAAU,CAACH,IAAD,EAAOI,GAAP,kBACT,oBAAC,gBAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,IAAI,EAAEJ,IAFR;AAGE,MAAA,QAAQ,EAAEA,IAAI,CAACC,SAAL,KAAmBP,YAH/B;AAIE,MAAA,OAAO,EAAEK,eAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAYD,GAbD;;AAeA,QAAMM,gBAAgB,GAAIC,UAAD,IAAqC;AAC5D,WAAOA,UAAU,CAACH,GAAX,CAAe,CAACI,QAAD,EAAWH,GAAX,KAAmB;AACvC,YAAM;AAAEhB,QAAAA,IAAF;AAAQI,QAAAA;AAAR,UAAkBe,QAAxB;AAEA,0BACE;AAAK,QAAA,GAAG,EAAEH,GAAV;AAAe,QAAA,SAAS,EAAC,+BAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4ChB,IAA5C,CADF,EAEGc,WAAW,CAACV,KAAD,CAFd,CADF;AAMD,KATM,CAAP;AAUD,GAXD;;AAaA,MAAIA,KAAJ,EAAW;AACT,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,iBAAiB,CAACQ,KAAD,CAAjB,GAA2Ba,gBAAgB,CAACb,KAAD,CAA3C,GAAqDU,WAAW,CAACV,KAAD,CADnE,CADF,CADF;AAOD,GARD,MAQO;AACL,WAAO,IAAP;AACD;AACF;;AAED,eAAeN,YAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { StyleListCategory, StyleListItem, CustomChangeEvent } from \"types\";\r\nimport { StyleListTypes } from \"editor-constants\";\r\nimport { isStyleCategories } from \"utils\";\r\nimport BlmStyleListItem from \"./item\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport type StyleListChangeEvent = CustomChangeEvent<string>;\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  type: StyleListTypes;\r\n  name: string;\r\n  data?: string;\r\n  onChange?: (event: StyleListChangeEvent) => void;\r\n}\r\n\r\nfunction BlmStyleList(props: CompProps) {\r\n  const { name, data, styleConfig, onChange } = props;\r\n  const { items, classNames } = styleConfig || {};\r\n  const currentStyle = classNames && (data && classNames.includes(data) ? data : classNames[0]);\r\n\r\n  const updateChange = (value: string) => {\r\n    if (onChange) {\r\n      onChange({ target: { name, value } });\r\n    }\r\n  };\r\n\r\n  const handleItemClick = (item: StyleListItem) => {\r\n    updateChange(item.className);\r\n  };\r\n\r\n  const renderItems = (items: StyleListItem[]) => {\r\n    return (\r\n      <div className=\"style-list-items-wrapper\">\r\n        {items.map((item, ind) => (\r\n          <BlmStyleListItem\r\n            key={ind}\r\n            data={item}\r\n            selected={item.className === currentStyle}\r\n            onClick={handleItemClick}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderCategories = (categories: StyleListCategory[]) => {\r\n    return categories.map((category, ind) => {\r\n      const { name, items } = category;\r\n\r\n      return (\r\n        <div key={ind} className=\"style-list-categories-wrapper\">\r\n          <div className=\"style-list-category-title\">{name}</div>\r\n          {renderItems(items)}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (items) {\r\n    return (\r\n      <div className=\"style-list-wrapper\">\r\n        <div className=\"styles-list-scroller custom-scrollbar\">\r\n          {isStyleCategories(items) ? renderCategories(items) : renderItems(items)}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default BlmStyleList;\r\n"]},"metadata":{},"sourceType":"module"}