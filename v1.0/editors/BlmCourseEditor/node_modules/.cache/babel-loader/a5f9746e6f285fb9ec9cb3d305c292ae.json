{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\actions\\\\popover\\\\editor\\\\BlmPopoverActionEditor.tsx\";\nimport React, { Fragment, useEffect, useMemo, useState } from \"react\";\nimport { Checkbox, Drawer, FormControlLabel } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { AcceptedFileTypes, ComponentActionTypes, Positions, StyleListTypes } from \"editor-constants\";\nimport { getHotspotActions, hasSameActionStyles, isMediaComponent, isMediaHotspot, isMediaHotspot360, validatePopoverAction } from \"utils\";\nimport { BlmPosition } from \"shared\";\nimport { BlmMediaPicker } from \"components/shared\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { useHotspot360Context } from \"../../../media/hotspot/360\";\nimport { BlmStylePicker } from \"../../../styles\";\nimport BlmActions from \"../../main\";\nimport \"./styles.scss\";\n\nfunction BlmPopoverActionEditor(props) {\n  const {\n    data,\n    stylePopoverConfig,\n    onSave,\n    onApplyStyle,\n    onClose,\n    openConfirmDialog,\n    openDialog\n  } = props;\n  const [state, setState] = useState({\n    popover: data,\n    isEdited: false\n  });\n  const {\n    element,\n    component,\n    template\n  } = useContentEditorCtx();\n  const {\n    selectedId\n  } = useHotspot360Context();\n  const {\n    popover,\n    appliedStyle,\n    isEdited\n  } = state;\n  const {\n    classNames\n  } = stylePopoverConfig || {};\n  const {\n    media,\n    title,\n    description,\n    style,\n    position = Positions.Top,\n    button\n  } = popover || {};\n  const {\n    checked = false,\n    label,\n    action\n  } = button || {};\n  const currentStyle = classNames && (style && classNames.includes(style) ? style : classNames[0]);\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n  const hotspot = useMemo(() => {\n    if (component && isMediaComponent(component)) {\n      if (isMediaHotspot(component)) {\n        return component.value;\n      } else if (selectedId && isMediaHotspot360(component)) {\n        return component.value.items.find(item => item.id === selectedId);\n      }\n    }\n  }, [component, selectedId]);\n  const actions = useMemo(() => {\n    if (hotspot) {\n      const arr = getHotspotActions(hotspot, ComponentActionTypes.Popover);\n      return arr.filter(item => item.value !== data);\n    }\n\n    return [];\n  }, [hotspot, data]);\n  const isLinked = useMemo(() => {\n    if (component && data && isMediaComponent(component) && isMediaHotspot360(component)) {\n      return component.value.items.findIndex(item => {\n        const actions = getHotspotActions(item, ComponentActionTypes.Popover);\n        return actions.findIndex(action => {\n          var _action$value$media, _data$media;\n\n          return action.value !== data && ((_action$value$media = action.value.media) === null || _action$value$media === void 0 ? void 0 : _action$value$media.id) === ((_data$media = data.media) === null || _data$media === void 0 ? void 0 : _data$media.id);\n        }) !== -1;\n      }) !== -1;\n    }\n\n    return false;\n  }, [component, data]);\n  const showApplyIcon = useMemo(() => {\n    return appliedStyle ? appliedStyle === currentStyle : Boolean(currentStyle && hasSameActionStyles(actions, currentStyle));\n  }, [actions, currentStyle, appliedStyle]);\n  useEffect(() => {\n    setState({\n      popover: data,\n      isEdited: false\n    });\n  }, [data]);\n\n  const saveChanges = () => {\n    if (onSave && popover) {\n      onSave(popover);\n    }\n\n    if (onApplyStyle && appliedStyle) {\n      onApplyStyle(appliedStyle);\n    }\n\n    setState({\n      popover,\n      isEdited: false\n    });\n  };\n\n  const updateChange = newPopover => {\n    setState({\n      popover: newPopover,\n      appliedStyle,\n      isEdited: true\n    });\n  };\n\n  const validateData = callback => {\n    if (template && (!popover || isEdited)) {\n      try {\n        validatePopoverAction(popover, template);\n      } catch (error) {\n        openDialog(`${t(\"alert.warning\")}`, error.message);\n        return;\n      }\n    }\n\n    callback();\n  };\n\n  const handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const newPopover = {\n      media,\n      title,\n      description,\n      style: currentStyle,\n      position,\n      button: {\n        checked,\n        label,\n        action\n      }\n    };\n\n    if (name === \"media\" || name === \"title\" || name === \"description\" || name === \"style\" || name === \"position\") {\n      newPopover[name] = value;\n    } else if (name === \"checked\" || name === \"label\" || name === \"action\") {\n      newPopover.button[name] = value;\n    }\n\n    updateChange(newPopover);\n  };\n\n  const handleApplyClick = style => {\n    if (!showApplyIcon && actions.length > 0) {\n      setState({\n        popover: { ...popover,\n          style\n        },\n        appliedStyle: style,\n        isEdited: true\n      });\n    }\n  };\n\n  const openSaveConfirmDialog = () => {\n    const options = {\n      className: \"template-editor-warning-dialog\",\n      okLabel: `${t(\"button.save\")}`,\n      cancelLabel: `${t(\"button.cancel\")}`\n    };\n    openConfirmDialog(`${t(\"alert.cancel_confirm\")}`, `${t(\"alert.save_all_changes\")}`, handleSave, handleClose, options);\n  };\n\n  const handleDrawerClose = event => {\n    if (isEdited) {\n      openSaveConfirmDialog();\n    } else {\n      handleClose();\n    }\n  };\n\n  const handleSave = () => {\n    validateData(() => {\n      if (isEdited) {\n        saveChanges();\n      }\n\n      handleClose();\n    });\n  };\n\n  const handleClose = () => {\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    open: true,\n    className: \"popover-action-editor-drawer\",\n    onClose: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popover-action-editor-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popover-header-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popover-title-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, t(\"popup_option.popover_options\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popover-close-btn\",\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popover-content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"media\",\n    elementId: element.id,\n    data: media,\n    isLinked: isLinked,\n    acceptedFiles: [AcceptedFileTypes.Image],\n    placeholder: \"Select media\",\n    className: \"media-picker-3\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: title || \"\",\n    placeholder: t(\"label.title\"),\n    className: \"popover-title-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    value: description || \"\",\n    placeholder: t(\"label.description\"),\n    className: \"popover-description-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BlmStylePicker, {\n    type: StyleListTypes.MediaHotspotPopover,\n    name: \"style\",\n    value: currentStyle,\n    label: t(\"popup_option.apply_popover\"),\n    showApplyIcon: showApplyIcon,\n    onChange: handleChange,\n    onApplyClick: handleApplyClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BlmPosition, {\n    type: \"limited\",\n    name: \"position\",\n    value: position,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popover-action-position-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, t(\"label.position\")), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"checked\",\n    label: t(\"label.action\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"checkbox-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 22\n      }\n    }),\n    checked: checked,\n    className: \"popover-action-frm-lbl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }), checked && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"label\",\n    value: label || \"\",\n    placeholder: t(\"popup_option.button_label\"),\n    className: \"popover-action-lbl-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BlmActions, {\n    type: \"hotspot-popover\",\n    name: \"action\",\n    data: action,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default BlmPopoverActionEditor;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/actions/popover/editor/BlmPopoverActionEditor.tsx"],"names":["React","Fragment","useEffect","useMemo","useState","Checkbox","Drawer","FormControlLabel","useTranslation","AcceptedFileTypes","ComponentActionTypes","Positions","StyleListTypes","getHotspotActions","hasSameActionStyles","isMediaComponent","isMediaHotspot","isMediaHotspot360","validatePopoverAction","BlmPosition","BlmMediaPicker","useContentEditorCtx","useHotspot360Context","BlmStylePicker","BlmActions","BlmPopoverActionEditor","props","data","stylePopoverConfig","onSave","onApplyStyle","onClose","openConfirmDialog","openDialog","state","setState","popover","isEdited","element","component","template","selectedId","appliedStyle","classNames","media","title","description","style","position","Top","button","checked","label","action","currentStyle","includes","t","hotspot","value","items","find","item","id","actions","arr","Popover","filter","isLinked","findIndex","showApplyIcon","Boolean","saveChanges","updateChange","newPopover","validateData","callback","error","message","handleChange","event","target","name","type","handleApplyClick","length","openSaveConfirmDialog","options","className","okLabel","cancelLabel","handleSave","handleClose","handleDrawerClose","Image","MediaHotspotPopover"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Fragment, useEffect, useMemo, useState } from \"react\";\r\nimport { Checkbox, Drawer, FormControlLabel } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { ComponentAction, CustomChangeEvent, MediaFile, PopoverAction } from \"types\";\r\nimport {\r\n  AcceptedFileTypes,\r\n  ComponentActionTypes,\r\n  Positions,\r\n  StyleListTypes,\r\n} from \"editor-constants\";\r\nimport {\r\n  getHotspotActions,\r\n  hasSameActionStyles,\r\n  isMediaComponent,\r\n  isMediaHotspot,\r\n  isMediaHotspot360,\r\n  validatePopoverAction,\r\n} from \"utils\";\r\nimport { BlmPosition } from \"shared\";\r\nimport { BlmMediaPicker } from \"components/shared\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { useHotspot360Context } from \"../../../media/hotspot/360\";\r\nimport { BlmStylePicker } from \"../../../styles\";\r\nimport BlmActions from \"../../main\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  data?: PopoverAction;\r\n  onSave?: (data: PopoverAction) => void;\r\n  onApplyStyle?: (style: string) => void;\r\n  onClose?: () => void;\r\n}\r\n\r\ninterface EditorState {\r\n  popover?: PopoverAction;\r\n  appliedStyle?: string;\r\n  isEdited: boolean;\r\n}\r\n\r\nfunction BlmPopoverActionEditor(props: CompProps) {\r\n  const { data, stylePopoverConfig, onSave, onApplyStyle, onClose, openConfirmDialog, openDialog } =\r\n    props;\r\n  const [state, setState] = useState<EditorState>({ popover: data, isEdited: false });\r\n  const { element, component, template } = useContentEditorCtx();\r\n  const { selectedId } = useHotspot360Context();\r\n  const { popover, appliedStyle, isEdited } = state;\r\n  const { classNames } = stylePopoverConfig || {};\r\n  const { media, title, description, style, position = Positions.Top, button } = popover || {};\r\n  const { checked = false, label, action } = button || {};\r\n  const currentStyle = classNames && (style && classNames.includes(style) ? style : classNames[0]);\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const hotspot = useMemo(() => {\r\n    if (component && isMediaComponent(component)) {\r\n      if (isMediaHotspot(component)) {\r\n        return component.value;\r\n      } else if (selectedId && isMediaHotspot360(component)) {\r\n        return component.value.items.find((item) => item.id === selectedId);\r\n      }\r\n    }\r\n  }, [component, selectedId]);\r\n\r\n  const actions = useMemo(() => {\r\n    if (hotspot) {\r\n      const arr = getHotspotActions<PopoverAction>(hotspot, ComponentActionTypes.Popover);\r\n\r\n      return arr.filter((item) => item.value !== data);\r\n    }\r\n\r\n    return [];\r\n  }, [hotspot, data]);\r\n\r\n  const isLinked = useMemo(() => {\r\n    if (component && data && isMediaComponent(component) && isMediaHotspot360(component)) {\r\n      return (\r\n        component.value.items.findIndex((item) => {\r\n          const actions = getHotspotActions<PopoverAction>(item, ComponentActionTypes.Popover);\r\n\r\n          return (\r\n            actions.findIndex((action) => {\r\n              return action.value !== data && action.value.media?.id === data.media?.id;\r\n            }) !== -1\r\n          );\r\n        }) !== -1\r\n      );\r\n    }\r\n\r\n    return false;\r\n  }, [component, data]);\r\n\r\n  const showApplyIcon = useMemo(() => {\r\n    return appliedStyle\r\n      ? appliedStyle === currentStyle\r\n      : Boolean(currentStyle && hasSameActionStyles(actions, currentStyle));\r\n  }, [actions, currentStyle, appliedStyle]);\r\n\r\n  useEffect(() => {\r\n    setState({ popover: data, isEdited: false });\r\n  }, [data]);\r\n\r\n  const saveChanges = () => {\r\n    if (onSave && popover) {\r\n      onSave(popover);\r\n    }\r\n\r\n    if (onApplyStyle && appliedStyle) {\r\n      onApplyStyle(appliedStyle);\r\n    }\r\n\r\n    setState({ popover, isEdited: false });\r\n  };\r\n\r\n  const updateChange = (newPopover: PopoverAction) => {\r\n    setState({ popover: newPopover, appliedStyle, isEdited: true });\r\n  };\r\n\r\n  const validateData = (callback: Function) => {\r\n    if (template && (!popover || isEdited)) {\r\n      try {\r\n        validatePopoverAction(popover, template);\r\n      } catch (error) {\r\n        openDialog(`${t(\"alert.warning\")}`, (error as Error).message);\r\n        return;\r\n      }\r\n    }\r\n\r\n    callback();\r\n  };\r\n\r\n  const handleChange = (\r\n    event:\r\n      | ChangeEvent<any>\r\n      | CustomChangeEvent<MediaFile | Positions | ComponentAction | string | undefined>\r\n  ) => {\r\n    const target = event.target;\r\n    const name = target.name as string;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const newPopover = {\r\n      media,\r\n      title,\r\n      description,\r\n      style: currentStyle,\r\n      position,\r\n      button: { checked, label, action },\r\n    };\r\n\r\n    if (\r\n      name === \"media\" ||\r\n      name === \"title\" ||\r\n      name === \"description\" ||\r\n      name === \"style\" ||\r\n      name === \"position\"\r\n    ) {\r\n      newPopover[name] = value;\r\n    } else if (name === \"checked\" || name === \"label\" || name === \"action\") {\r\n      (newPopover.button[name] as any) = value;\r\n    }\r\n\r\n    updateChange(newPopover);\r\n  };\r\n\r\n  const handleApplyClick = (style: string) => {\r\n    if (!showApplyIcon && actions.length > 0) {\r\n      setState({\r\n        popover: { ...popover, style },\r\n        appliedStyle: style,\r\n        isEdited: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const openSaveConfirmDialog = () => {\r\n    const options = {\r\n      className: \"template-editor-warning-dialog\",\r\n      okLabel: `${t(\"button.save\")}`,\r\n      cancelLabel: `${t(\"button.cancel\")}`,\r\n    };\r\n\r\n    openConfirmDialog(\r\n      `${t(\"alert.cancel_confirm\")}`,\r\n      `${t(\"alert.save_all_changes\")}`,\r\n      handleSave,\r\n      handleClose,\r\n      options\r\n    );\r\n  };\r\n\r\n  const handleDrawerClose = (event: any) => {\r\n    if (isEdited) {\r\n      openSaveConfirmDialog();\r\n    } else {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    validateData(() => {\r\n      if (isEdited) {\r\n        saveChanges();\r\n      }\r\n      handleClose();\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer open={true} className=\"popover-action-editor-drawer\" onClose={handleDrawerClose}>\r\n      <div className=\"popover-action-editor-wrapper\">\r\n        <div className=\"popover-header-wrapper\">\r\n          <div className=\"popover-title-lbl\">{t(\"popup_option.popover_options\")}</div>\r\n          <div className=\"popover-close-btn\" onClick={handleSave} />\r\n        </div>\r\n        <div className=\"popover-content-wrapper\">\r\n          <BlmMediaPicker\r\n            name=\"media\"\r\n            elementId={element!.id}\r\n            data={media}\r\n            isLinked={isLinked}\r\n            acceptedFiles={[AcceptedFileTypes.Image]}\r\n            placeholder=\"Select media\"\r\n            className=\"media-picker-3\"\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={title || \"\"}\r\n            placeholder={t(\"label.title\")}\r\n            className=\"popover-title-txt\"\r\n            onChange={handleChange}\r\n          />\r\n          <textarea\r\n            name=\"description\"\r\n            value={description || \"\"}\r\n            placeholder={t(\"label.description\")}\r\n            className=\"popover-description-txt\"\r\n            onChange={handleChange}\r\n          />\r\n          <BlmStylePicker\r\n            type={StyleListTypes.MediaHotspotPopover}\r\n            name=\"style\"\r\n            value={currentStyle}\r\n            label={t(\"popup_option.apply_popover\")}\r\n            showApplyIcon={showApplyIcon}\r\n            onChange={handleChange}\r\n            onApplyClick={handleApplyClick}\r\n          />\r\n          <BlmPosition type=\"limited\" name=\"position\" value={position} onChange={handleChange} />\r\n          <span className=\"popover-action-position-lbl\">{t(\"label.position\")}</span>\r\n          <FormControlLabel\r\n            name=\"checked\"\r\n            label={t(\"label.action\")}\r\n            control={<Checkbox className=\"checkbox-2\" />}\r\n            checked={checked}\r\n            className=\"popover-action-frm-lbl\"\r\n            onChange={handleChange}\r\n          />\r\n          {checked && (\r\n            <Fragment>\r\n              <input\r\n                type=\"text\"\r\n                name=\"label\"\r\n                value={label || \"\"}\r\n                placeholder={t(\"popup_option.button_label\")}\r\n                className=\"popover-action-lbl-txt\"\r\n                onChange={handleChange}\r\n              />\r\n              <BlmActions\r\n                type=\"hotspot-popover\"\r\n                name=\"action\"\r\n                data={action}\r\n                onChange={handleChange}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default BlmPopoverActionEditor;\r\n"]},"metadata":{},"sourceType":"module"}