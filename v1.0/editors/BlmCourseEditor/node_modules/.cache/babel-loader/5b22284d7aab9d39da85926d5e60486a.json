{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\hotspot\\\\header\\\\BlmHotspotHeader.tsx\";\nimport React, { Fragment, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { Checkbox, MenuItem, Select } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { HotspotDisplayTypes } from \"editor-constants\";\nimport BlmHotspotGroupsEditor from \"../group\";\nimport BlmHotspotsEditor from \"../list\";\nimport BlmHotspotDisplayEditor from \"../display\";\nimport { changeKeyMap } from \"./utils\";\nimport \"./styles.scss\";\nconst initEditorPanel = {\n  open: false,\n  type: \"none\"\n};\n\nfunction BlmHotspotHeader(props) {\n  const {\n    type = \"standard\",\n    data,\n    onChange\n  } = props;\n  const {\n    groups,\n    display,\n    items\n  } = data;\n  const [editorPanel, setEditorPanel] = useState(initEditorPanel);\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange(newData);\n    }\n  };\n\n  const toggleEditorPanel = (open, type = \"none\") => {\n    setEditorPanel({\n      open,\n      type\n    });\n  };\n\n  const handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    let newHotspot;\n\n    if (changeKeyMap.hasOwnProperty(name)) {\n      const map = changeKeyMap[name];\n      const {\n        obj,\n        key\n      } = map;\n      newHotspot = { ...data,\n        [obj]: { ...data[obj],\n          [key]: value\n        }\n      };\n    }\n\n    if (newHotspot) {\n      updateChange(newHotspot);\n    }\n  };\n\n  const handleGroupClick = () => {\n    toggleEditorPanel(true, \"group\");\n  };\n\n  const handleOrderClick = () => {\n    toggleEditorPanel(true, \"order\");\n  };\n\n  const handleDisplayClick = () => {\n    toggleEditorPanel(true, \"display\");\n  };\n\n  const handleEditorSave = newHotspot => {\n    updateChange(newHotspot);\n  };\n\n  const handleEditorClose = () => {\n    toggleEditorPanel(false);\n  };\n\n  const renderEditorPanel = () => {\n    const {\n      open,\n      type\n    } = editorPanel;\n\n    if (!open) {\n      return undefined;\n    } else if (type === \"group\") {\n      return /*#__PURE__*/React.createElement(BlmHotspotGroupsEditor, {\n        data: data,\n        onSave: handleEditorSave,\n        onClose: handleEditorClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"order\") {\n      return /*#__PURE__*/React.createElement(BlmHotspotsEditor, {\n        data: data,\n        onSave: handleEditorSave,\n        onClose: handleEditorClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"display\") {\n      return /*#__PURE__*/React.createElement(BlmHotspotDisplayEditor, {\n        data: data,\n        onSave: handleEditorSave,\n        onClose: handleEditorClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"hotspot-header-wrapper\", type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"groups_chk\",\n    checked: groups.enabled,\n    className: \"checkbox-2 hotspot-header-group-chk\",\n    onClick: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"hotspot-header-group-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, t(\"hotspot.enable_group\")), groups.enabled && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspot-header-group-edit-btn\",\n    onClick: handleGroupClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, t(\"button.edit\")), type === \"standard\" && /*#__PURE__*/React.createElement(Select, {\n    name: \"display_type\",\n    value: display.type,\n    className: \"hotspot-header-display-dropdown\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: HotspotDisplayTypes.Contain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, t(\"list.contain\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: HotspotDisplayTypes.PanAndZoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, t(\"hotspot.pan_zoom\"))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"hotspot-header-order-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, t(\"hotspot.hotspot_order\")), items.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspot-header-group-order-btn\",\n    onClick: handleOrderClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, t(\"button.edit\")), display.type === HotspotDisplayTypes.PanAndZoom && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspot-header-display-edit-btn\",\n    onClick: handleDisplayClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, t(\"button.edit\"))), renderEditorPanel());\n}\n\nexport default BlmHotspotHeader;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/hotspot/header/BlmHotspotHeader.tsx"],"names":["React","Fragment","useState","clsx","Checkbox","MenuItem","Select","useTranslation","HotspotDisplayTypes","BlmHotspotGroupsEditor","BlmHotspotsEditor","BlmHotspotDisplayEditor","changeKeyMap","initEditorPanel","open","type","BlmHotspotHeader","props","data","onChange","groups","display","items","editorPanel","setEditorPanel","t","updateChange","newData","toggleEditorPanel","handleChange","event","target","name","value","checked","newHotspot","hasOwnProperty","map","obj","key","handleGroupClick","handleOrderClick","handleDisplayClick","handleEditorSave","handleEditorClose","renderEditorPanel","undefined","enabled","Contain","PanAndZoom","length"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Fragment, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Checkbox, MenuItem, Select } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { MediaHotspot } from \"types\";\r\nimport { HotspotDisplayTypes } from \"editor-constants\";\r\nimport BlmHotspotGroupsEditor from \"../group\";\r\nimport BlmHotspotsEditor from \"../list\";\r\nimport BlmHotspotDisplayEditor from \"../display\";\r\nimport { changeKeyMap } from \"./utils\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface HotspotHeaderProps {\r\n  type?: \"standard\" | \"panorama\";\r\n  data: MediaHotspot;\r\n  onChange?: (data: MediaHotspot) => void;\r\n}\r\n\r\ninterface EditorPanelState {\r\n  open: boolean;\r\n  type: \"none\" | \"group\" | \"order\" | \"display\";\r\n}\r\n\r\nconst initEditorPanel: EditorPanelState = {\r\n  open: false,\r\n  type: \"none\",\r\n};\r\n\r\nfunction BlmHotspotHeader(props: HotspotHeaderProps) {\r\n  const { type = \"standard\", data, onChange } = props;\r\n  const { groups, display, items } = data;\r\n  const [editorPanel, setEditorPanel] = useState(initEditorPanel);\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const updateChange = (newData: MediaHotspot) => {\r\n    if (onChange) {\r\n      onChange(newData);\r\n    }\r\n  };\r\n\r\n  const toggleEditorPanel = (open: boolean, type: EditorPanelState[\"type\"] = \"none\") => {\r\n    setEditorPanel({ open, type });\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<any>) => {\r\n    const target = event.target;\r\n    const name = target.name as string;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    let newHotspot: MediaHotspot | undefined;\r\n\r\n    if (changeKeyMap.hasOwnProperty(name)) {\r\n      const map = changeKeyMap[name];\r\n      const { obj, key } = map;\r\n\r\n      newHotspot = { ...data, [obj]: { ...data[obj], [key]: value } };\r\n    }\r\n\r\n    if (newHotspot) {\r\n      updateChange(newHotspot);\r\n    }\r\n  };\r\n\r\n  const handleGroupClick = () => {\r\n    toggleEditorPanel(true, \"group\");\r\n  };\r\n\r\n  const handleOrderClick = () => {\r\n    toggleEditorPanel(true, \"order\");\r\n  };\r\n\r\n  const handleDisplayClick = () => {\r\n    toggleEditorPanel(true, \"display\");\r\n  };\r\n\r\n  const handleEditorSave = (newHotspot: MediaHotspot) => {\r\n    updateChange(newHotspot);\r\n  };\r\n\r\n  const handleEditorClose = () => {\r\n    toggleEditorPanel(false);\r\n  };\r\n\r\n  const renderEditorPanel = () => {\r\n    const { open, type } = editorPanel;\r\n\r\n    if (!open) {\r\n      return undefined;\r\n    } else if (type === \"group\") {\r\n      return (\r\n        <BlmHotspotGroupsEditor data={data} onSave={handleEditorSave} onClose={handleEditorClose} />\r\n      );\r\n    } else if (type === \"order\") {\r\n      return (\r\n        <BlmHotspotsEditor data={data} onSave={handleEditorSave} onClose={handleEditorClose} />\r\n      );\r\n    } else if (type === \"display\") {\r\n      return (\r\n        <BlmHotspotDisplayEditor\r\n          data={data}\r\n          onSave={handleEditorSave}\r\n          onClose={handleEditorClose}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={clsx(\"hotspot-header-wrapper\", type)}>\r\n        <Checkbox\r\n          name=\"groups_chk\"\r\n          checked={groups.enabled}\r\n          className=\"checkbox-2 hotspot-header-group-chk\"\r\n          onClick={handleChange}\r\n        />\r\n        <span className=\"hotspot-header-group-lbl\">{t(\"hotspot.enable_group\")}</span>\r\n        {groups.enabled && (\r\n          <div className=\"hotspot-header-group-edit-btn\" onClick={handleGroupClick}>\r\n            {t(\"button.edit\")}\r\n          </div>\r\n        )}\r\n        {type === \"standard\" && (\r\n          <Select\r\n            name=\"display_type\"\r\n            value={display.type}\r\n            className=\"hotspot-header-display-dropdown\"\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value={HotspotDisplayTypes.Contain}>{t(\"list.contain\")}</MenuItem>\r\n            <MenuItem value={HotspotDisplayTypes.PanAndZoom}>{t(\"hotspot.pan_zoom\")}</MenuItem>\r\n          </Select>\r\n        )}\r\n        <span className=\"hotspot-header-order-lbl\">{t(\"hotspot.hotspot_order\")}</span>\r\n        {items.length > 0 && (\r\n          <div className=\"hotspot-header-group-order-btn\" onClick={handleOrderClick}>\r\n            {t(\"button.edit\")}\r\n          </div>\r\n        )}\r\n        {display.type === HotspotDisplayTypes.PanAndZoom && (\r\n          <div className=\"hotspot-header-display-edit-btn\" onClick={handleDisplayClick}>\r\n            {t(\"button.edit\")}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {renderEditorPanel()}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default BlmHotspotHeader;\r\n"]},"metadata":{},"sourceType":"module"}