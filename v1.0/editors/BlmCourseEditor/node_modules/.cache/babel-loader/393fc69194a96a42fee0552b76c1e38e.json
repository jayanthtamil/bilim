{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\panels\\\\text\\\\BlmContentText.tsx\";\nimport React from \"react\";\nimport { BlmTextComponentEditor } from \"components/content-editor/components\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { updateTextComponent } from \"components/content-editor/reducers\";\nimport \"./styles.scss\";\n\nfunction BlmContentText(props) {\n  const {\n    texts,\n    isDark\n  } = props;\n  const {\n    dispatch\n  } = useContentEditorCtx();\n\n  const updateChange = newData => {\n    if (dispatch) {\n      dispatch(updateTextComponent(newData));\n    }\n  };\n\n  const handleTextChange = newData => {\n    updateChange(newData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-text-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-text-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Texts\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-text-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, texts.map(text => /*#__PURE__*/React.createElement(BlmTextComponentEditor, {\n    key: text.id,\n    data: text,\n    isDark: isDark,\n    onChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default BlmContentText;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/panels/text/BlmContentText.tsx"],"names":["React","BlmTextComponentEditor","useContentEditorCtx","updateTextComponent","BlmContentText","props","texts","isDark","dispatch","updateChange","newData","handleTextChange","map","text","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,sBAAT,QAAuC,sCAAvC;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,SAASC,mBAAT,QAAoC,oCAApC;AACA,OAAO,eAAP;;AAOA,SAASC,cAAT,CAAwBC,KAAxB,EAA0C;AACxC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,KAA1B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeN,mBAAmB,EAAxC;;AAEA,QAAMO,YAAY,GAAIC,OAAD,IAA4B;AAC/C,QAAIF,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACL,mBAAmB,CAACO,OAAD,CAApB,CAAR;AACD;AACF,GAJD;;AAMA,QAAMC,gBAAgB,GAAID,OAAD,IAA4B;AACnDD,IAAAA,YAAY,CAACC,OAAD,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACT,oBAAC,sBAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,MAAM,EAAEN,MAHV;AAIE,IAAA,QAAQ,EAAEI,gBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAeD;;AAED,eAAeP,cAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { TextComponent } from \"types\";\r\nimport { BlmTextComponentEditor } from \"components/content-editor/components\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { updateTextComponent } from \"components/content-editor/reducers\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  texts: TextComponent[];\r\n  isDark: boolean;\r\n}\r\n\r\nfunction BlmContentText(props: CompProps) {\r\n  const { texts, isDark } = props;\r\n  const { dispatch } = useContentEditorCtx();\r\n\r\n  const updateChange = (newData: TextComponent) => {\r\n    if (dispatch) {\r\n      dispatch(updateTextComponent(newData));\r\n    }\r\n  };\r\n\r\n  const handleTextChange = (newData: TextComponent) => {\r\n    updateChange(newData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-text-wrapper\">\r\n      <div className=\"content-text-title\">Texts</div>\r\n      <div className=\"content-text-list\">\r\n        {texts.map((text) => (\r\n          <BlmTextComponentEditor\r\n            key={text.id}\r\n            data={text}\r\n            isDark={isDark}\r\n            onChange={handleTextChange}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmContentText;\r\n"]},"metadata":{},"sourceType":"module"}