{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\custom\\\\BlmMediaCustom.tsx\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { getMediaCustom } from \"utils\";\nimport { BlmAnimation } from \"components/shared\";\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport BlmMediaDashboard from \"../dashboard\";\nimport \"./styles.scss\";\n\nfunction BlmMediaCustom(props) {\n  const {\n    data\n  } = props;\n  const state = getMediaCustom(data);\n  const custom = state.value;\n  const {\n    element,\n    dispatch\n  } = useContentEditorCtx();\n  const {\n    media\n  } = custom;\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  const updateChange = newCustom => {\n    const newData = { ...state,\n      value: newCustom\n    };\n\n    if (dispatch) {\n      dispatch(updateMediaComponent(newData));\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newCustom = { ...custom\n    };\n\n    if (name === \"media\") {\n      newCustom.media = value;\n    }\n\n    updateChange(newCustom);\n  };\n\n  return /*#__PURE__*/React.createElement(BlmMediaDashboard, {\n    data: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-media-custom-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-params-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, t(\"title.parameters\")), /*#__PURE__*/React.createElement(BlmAnimation, {\n    elementId: element.id,\n    data: media,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default BlmMediaCustom;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/custom/BlmMediaCustom.tsx"],"names":["React","useTranslation","getMediaCustom","BlmAnimation","updateMediaComponent","useContentEditorCtx","BlmMediaDashboard","BlmMediaCustom","props","data","state","custom","value","element","dispatch","media","t","updateChange","newCustom","newData","handleChange","event","name","target","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,YAAT,QAAqD,mBAArD;AACA,SAASC,oBAAT,QAAqC,oCAArC;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,OAAOC,iBAAP,MAA8B,cAA9B;AACA,OAAO,eAAP;;AAOA,SAASC,cAAT,CAAwBC,KAAxB,EAA0C;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAME,KAAK,GAAGR,cAAc,CAACO,IAAD,CAA5B;AACA,QAAME,MAAM,GAAGD,KAAK,CAACE,KAArB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBT,mBAAmB,EAAjD;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAYJ,MAAlB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAQf,cAAc,CAAC,gBAAD,CAA5B;;AAEA,QAAMgB,YAAY,GAAIC,SAAD,IAA4B;AAC/C,UAAMC,OAAO,GAAG,EACd,GAAGT,KADW;AAEdE,MAAAA,KAAK,EAAEM;AAFO,KAAhB;;AAKA,QAAIJ,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACV,oBAAoB,CAACe,OAAD,CAArB,CAAR;AACD;AACF,GATD;;AAWA,QAAMC,YAAY,GAAIC,KAAD,IAAmC;AACtD,UAAM;AAAEC,MAAAA,IAAF;AAAQV,MAAAA;AAAR,QAAkBS,KAAK,CAACE,MAA9B;AACA,UAAML,SAAS,GAAG,EAAE,GAAGP;AAAL,KAAlB;;AAEA,QAAIW,IAAI,KAAK,OAAb,EAAsB;AACpBJ,MAAAA,SAAS,CAACH,KAAV,GAAkBH,KAAlB;AACD;;AAEDK,IAAAA,YAAY,CAACC,SAAD,CAAZ;AACD,GATD;;AAWA,sBACE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAER,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCM,CAAC,CAAC,kBAAD,CAAvC,CADF,eAEE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEH,OAAO,CAAEW,EAAlC;AAAsC,IAAA,IAAI,EAAET,KAA5C;AAAmD,IAAA,QAAQ,EAAEK,YAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD;;AAED,eAAeb,cAAf","sourcesContent":["import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { MediaComponent, MediaCustom } from \"types\";\r\nimport { getMediaCustom } from \"utils\";\r\nimport { BlmAnimation, MediaPickerChangeEvent } from \"components/shared\";\r\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport BlmMediaDashboard from \"../dashboard\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  label: string;\r\n  data: MediaComponent;\r\n}\r\n\r\nfunction BlmMediaCustom(props: CompProps) {\r\n  const { data } = props;\r\n  const state = getMediaCustom(data);\r\n  const custom = state.value;\r\n  const { element, dispatch } = useContentEditorCtx();\r\n  const { media } = custom;\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const updateChange = (newCustom: MediaCustom) => {\r\n    const newData = {\r\n      ...state,\r\n      value: newCustom,\r\n    };\r\n\r\n    if (dispatch) {\r\n      dispatch(updateMediaComponent(newData));\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: MediaPickerChangeEvent) => {\r\n    const { name, value } = event.target;\r\n    const newCustom = { ...custom };\r\n\r\n    if (name === \"media\") {\r\n      newCustom.media = value;\r\n    }\r\n\r\n    updateChange(newCustom);\r\n  };\r\n\r\n  return (\r\n    <BlmMediaDashboard data={state}>\r\n      <div className=\"content-media-custom-wrapper\">\r\n        <div className=\"custom-params-title\">{t(\"title.parameters\")}</div>\r\n        <BlmAnimation elementId={element!.id} data={media} onChange={handleChange} />\r\n      </div>\r\n    </BlmMediaDashboard>\r\n  );\r\n}\r\n\r\nexport default BlmMediaCustom;\r\n"]},"metadata":{},"sourceType":"module"}