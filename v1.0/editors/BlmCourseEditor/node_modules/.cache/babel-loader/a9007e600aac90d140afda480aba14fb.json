{"ast":null,"code":"import { ElementType } from \"editor-constants\";\nimport { findIndex, flatObject } from \"../core\";\nexport function traverseStructure(structure, id, callback) {\n  const arr = [structure.starting, structure.structure, structure.annexes];\n  return arr.find(element => {\n    if (!element) {\n      return false;\n    } else {\n      return traverseElement(element, id, callback);\n    }\n  });\n}\nexport function traverseElement(element, id, callback) {\n  if (element.id === id) {\n    callback(element, -1);\n    return true;\n  } else {\n    for (let i = 0; i < element.children.length; i++) {\n      const item = element.children[i];\n\n      if (item.id === id) {\n        callback(item, i, element);\n        return true;\n      } else if (traverseElement(item, id, callback)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\nexport function cloneStructure(root, callback) {\n  const {\n    starting,\n    structure,\n    annexes\n  } = root;\n  return { ...root,\n    starting: starting && cloneCourseElement(starting, undefined, undefined, callback),\n    structure: structure && cloneCourseElement(structure, undefined, undefined, callback),\n    annexes: annexes && cloneCourseElement(annexes, undefined, undefined, callback)\n  };\n}\nexport function cloneCourseElement(element, parent, root = parent, callback) {\n  const {\n    children\n  } = element;\n  const result = { ...element,\n    parent,\n    root\n  };\n  result.children = children.map(child => cloneCourseElement(child, result, root, callback));\n\n  if (callback) {\n    callback(result);\n  }\n\n  return result;\n}\nexport function forEachStructure(structure, callbackfn) {\n  const arr = [structure.starting, structure.structure, structure.annexes];\n  arr.forEach(item => item && forEachElement(item, callbackfn));\n}\nexport function forEachElement(element, callbackfn) {\n  element.children.forEach(item => {\n    callbackfn(item);\n    forEachElement(item, callbackfn);\n  });\n}\nexport function getElement(structure, id) {\n  let result;\n  traverseStructure(structure, id, item => {\n    result = item;\n  });\n  return result;\n}\nexport function getChildElement(element, id) {\n  let result;\n  traverseElement(element, id, item => {\n    result = item;\n  });\n  return result;\n}\nexport function getSiblingElements(element) {\n  var _element$parent$child, _element$parent;\n\n  return (_element$parent$child = (_element$parent = element.parent) === null || _element$parent === void 0 ? void 0 : _element$parent.children.filter(item => item !== element)) !== null && _element$parent$child !== void 0 ? _element$parent$child : [];\n}\nexport function filterElements(elements, includes) {\n  var _elements$filter;\n\n  return (_elements$filter = elements === null || elements === void 0 ? void 0 : elements.filter(element => includes.includes(element.type))) !== null && _elements$filter !== void 0 ? _elements$filter : [];\n}\nexport function getElementGrandChildren(element, includes) {\n  return filterElements(flatObject(element, \"children\"), includes);\n}\nexport function hasConnection(connections, connection) {\n  return findIndex(connections, connection, \"value\") !== -1;\n}\nexport function getChildrenConnection(element, excludes) {\n  const arr = [];\n\n  for (let child of element.children) {\n    if (child.connections) {\n      for (let connection of child.connections) {\n        if (!hasConnection(arr, connection.value) && (!excludes || excludes.indexOf(connection.value) === -1)) {\n          arr.push(connection);\n        }\n      }\n    }\n  }\n\n  return arr;\n}\nconst EVALUATION_CHILDREN = [ElementType.Page, ElementType.Screen, ElementType.Chapter, ElementType.Custom];\nexport function getEvaluationChildren(element) {\n  return filterElements(element.children, EVALUATION_CHILDREN);\n}\nexport function hasProperties(element) {\n  const {\n    type\n  } = element;\n  return type === ElementType.Chapter || type === ElementType.Custom || type === ElementType.Summary;\n}\nexport function hasTemplates(element) {\n  const {\n    type\n  } = element;\n  return type === ElementType.Page || type === ElementType.Screen || type === ElementType.Question || type === ElementType.SimplePage || type === ElementType.SimpleContent;\n}\nexport const isTemplateElement = element => {\n  const {\n    type\n  } = element;\n  return type === ElementType.Screen || type === ElementType.Question || type === ElementType.PartPage || type === ElementType.SimpleContent || type === ElementType.SimplePartPage;\n};\nexport function hasChapterEvaluation(element) {\n  if (element && element.type === ElementType.Chapter) {\n    return true;\n  }\n\n  return false;\n}\nexport function hasPageEvaluation(element) {\n  if (element && (element.type === ElementType.Page || element.type === ElementType.SimplePage)) {\n    return true;\n  }\n\n  return false;\n}\nexport function hasCustomEvaluation(element) {\n  if (element && element.type === ElementType.Custom) {\n    return true;\n  }\n\n  return false;\n}\nexport function hasElement(elements, type) {\n  return elements.some(element => element.type === type);\n}\nexport function hasSummary(element) {\n  const {\n    children\n  } = element;\n  return children.some(child => child.isSummary);\n}\nexport function hasTemplate(element, type) {\n  const {\n    templateType\n  } = element;\n  return templateType && templateType === type;\n}\nexport function hasChildTemplate(element, type) {\n  const {\n    children\n  } = element;\n  return children.some(child => hasTemplate(child, type));\n}\nexport function hasSomeTemplate(element) {\n  const {\n    type,\n    templateType,\n    children\n  } = element;\n  return type === ElementType.Page || type === ElementType.SimplePage ? children.some(child => hasSomeTemplate(child)) : Boolean(templateType);\n}\nconst LINKED_TYPES = [ElementType.SimpleContent, ElementType.SimplePage];\nconst ANNEXES_LINKED_TYPES = [ElementType.Screen, ElementType.Page, ElementType.SimpleContent, ElementType.SimplePage];\nexport function isValidLinkedElement(element) {\n  var _element$root;\n\n  return (((_element$root = element.root) === null || _element$root === void 0 ? void 0 : _element$root.type) === ElementType.Annexes ? ANNEXES_LINKED_TYPES : LINKED_TYPES).includes(element.type);\n}\nexport function getPreviousElements(element) {\n  var _element$parent2;\n\n  const elements = (_element$parent2 = element.parent) === null || _element$parent2 === void 0 ? void 0 : _element$parent2.children;\n\n  if (elements) {\n    const ind = findIndex(elements, element.id, \"id\");\n\n    if (ind !== -1) {\n      return elements.slice(0, ind);\n    }\n  }\n\n  return [];\n}\nconst AUTO_SUMMARY_TYPES = [ElementType.Structure, ElementType.Chapter];\nexport function hasAutoSummaryAllowed(element, navigationLevel = 0) {\n  const {\n    type,\n    isEvaluation,\n    theme,\n    level\n  } = element;\n  return AUTO_SUMMARY_TYPES.includes(type) && (!isEvaluation || theme === null || theme === \"None\") && level < navigationLevel;\n}\nexport function hasAutoSummary(element, navigationLevel = 0) {\n  const {\n    styleSummary\n  } = element;\n  return hasAutoSummaryAllowed(element, navigationLevel) && styleSummary;\n}\nexport function getElementType(type) {\n  switch (type) {\n    case ElementType.Page:\n      return \"element_type.page\";\n\n    case ElementType.Screen:\n      return \"element_type.screen\";\n\n    case ElementType.SimpleContent:\n      return \"element_type.simple_content\";\n\n    case ElementType.SimplePage:\n      return \"element_type.simple_page\";\n\n    case ElementType.Chapter:\n      return \"element_type.chapter\";\n\n    case ElementType.Evaluation:\n      return \"element_type.evaluation\";\n\n    case ElementType.Custom:\n      return \"element_type.custom\";\n\n    case ElementType.Question:\n      return \"element_type.question\";\n\n    case ElementType.AnnexesFolder:\n      return \"element_type.annexes_folder\";\n  }\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/utils/editor/element.ts"],"names":["ElementType","findIndex","flatObject","traverseStructure","structure","id","callback","arr","starting","annexes","find","element","traverseElement","i","children","length","item","cloneStructure","root","cloneCourseElement","undefined","parent","result","map","child","forEachStructure","callbackfn","forEach","forEachElement","getElement","getChildElement","getSiblingElements","filter","filterElements","elements","includes","type","getElementGrandChildren","hasConnection","connections","connection","getChildrenConnection","excludes","value","indexOf","push","EVALUATION_CHILDREN","Page","Screen","Chapter","Custom","getEvaluationChildren","hasProperties","Summary","hasTemplates","Question","SimplePage","SimpleContent","isTemplateElement","PartPage","SimplePartPage","hasChapterEvaluation","hasPageEvaluation","hasCustomEvaluation","hasElement","some","hasSummary","isSummary","hasTemplate","templateType","hasChildTemplate","hasSomeTemplate","Boolean","LINKED_TYPES","ANNEXES_LINKED_TYPES","isValidLinkedElement","Annexes","getPreviousElements","ind","slice","AUTO_SUMMARY_TYPES","Structure","hasAutoSummaryAllowed","navigationLevel","isEvaluation","theme","level","hasAutoSummary","styleSummary","getElementType","Evaluation","AnnexesFolder"],"mappings":"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","sourcesContent":["import {\r\n  CourseElement,\r\n  ElementConnection,\r\n  CourseStructure,\r\n  ChapterEvaluationProps,\r\n  PageEvaluationProps,\r\n  CustomEvaluationProps,\r\n  ElementTraverseCallback,\r\n  ElementCallback,\r\n  CourseElementProps,\r\n} from \"types\";\r\nimport { ConnectionType, ElementType } from \"editor-constants\";\r\nimport { findIndex, flatObject } from \"../core\";\r\n\r\nexport function traverseStructure(\r\n  structure: CourseStructure,\r\n  id: string,\r\n  callback: ElementTraverseCallback\r\n) {\r\n  const arr = [structure.starting, structure.structure, structure.annexes];\r\n\r\n  return arr.find((element) => {\r\n    if (!element) {\r\n      return false;\r\n    } else {\r\n      return traverseElement(element, id, callback);\r\n    }\r\n  });\r\n}\r\n\r\nexport function traverseElement(\r\n  element: CourseElement,\r\n  id: string,\r\n  callback: ElementTraverseCallback\r\n) {\r\n  if (element.id === id) {\r\n    callback(element, -1);\r\n    return true;\r\n  } else {\r\n    for (let i = 0; i < element.children.length; i++) {\r\n      const item = element.children[i];\r\n\r\n      if (item.id === id) {\r\n        callback(item, i, element);\r\n        return true;\r\n      } else if (traverseElement(item, id, callback)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function cloneStructure(root: CourseStructure, callback?: ElementCallback) {\r\n  const { starting, structure, annexes } = root;\r\n\r\n  return {\r\n    ...root,\r\n    starting: starting && cloneCourseElement(starting, undefined, undefined, callback),\r\n    structure: structure && cloneCourseElement(structure, undefined, undefined, callback),\r\n    annexes: annexes && cloneCourseElement(annexes, undefined, undefined, callback),\r\n  };\r\n}\r\n\r\nexport function cloneCourseElement(\r\n  element: CourseElement,\r\n  parent?: CourseElement,\r\n  root = parent,\r\n  callback?: ElementCallback\r\n): CourseElement {\r\n  const { children } = element;\r\n  const result = {\r\n    ...element,\r\n    parent,\r\n    root,\r\n  };\r\n\r\n  result.children = children.map((child) => cloneCourseElement(child, result, root, callback));\r\n\r\n  if (callback) {\r\n    callback(result);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function forEachStructure(structure: CourseStructure, callbackfn: ElementCallback) {\r\n  const arr = [structure.starting, structure.structure, structure.annexes];\r\n\r\n  arr.forEach((item) => item && forEachElement(item, callbackfn));\r\n}\r\n\r\nexport function forEachElement(element: CourseElement, callbackfn: ElementCallback) {\r\n  element.children.forEach((item) => {\r\n    callbackfn(item);\r\n    forEachElement(item, callbackfn);\r\n  });\r\n}\r\n\r\nexport function getElement(structure: CourseStructure, id: string) {\r\n  let result: CourseElement | undefined;\r\n\r\n  traverseStructure(structure, id, (item) => {\r\n    result = item;\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nexport function getChildElement(element: CourseElement, id: string) {\r\n  let result: CourseElement | undefined;\r\n\r\n  traverseElement(element, id, (item) => {\r\n    result = item;\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nexport function getSiblingElements(element: CourseElement) {\r\n  return element.parent?.children.filter((item) => item !== element) ?? [];\r\n}\r\n\r\nexport function filterElements(elements: CourseElement[], includes: ElementType[]) {\r\n  return elements?.filter((element) => includes.includes(element.type)) ?? [];\r\n}\r\n\r\nexport function getElementGrandChildren(element: CourseElement, includes: ElementType[]) {\r\n  return filterElements(flatObject(element, \"children\"), includes);\r\n}\r\n\r\nexport function hasConnection(connections: ElementConnection[], connection: ConnectionType) {\r\n  return findIndex(connections, connection, \"value\") !== -1;\r\n}\r\n\r\nexport function getChildrenConnection(element: CourseElement, excludes?: ConnectionType[]) {\r\n  const arr: ElementConnection[] = [];\r\n\r\n  for (let child of element.children) {\r\n    if (child.connections) {\r\n      for (let connection of child.connections) {\r\n        if (\r\n          !hasConnection(arr, connection.value) &&\r\n          (!excludes || excludes.indexOf(connection.value) === -1)\r\n        ) {\r\n          arr.push(connection);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nconst EVALUATION_CHILDREN = [\r\n  ElementType.Page,\r\n  ElementType.Screen,\r\n  ElementType.Chapter,\r\n  ElementType.Custom,\r\n];\r\n\r\nexport function getEvaluationChildren(element: CourseElement) {\r\n  return filterElements(element.children, EVALUATION_CHILDREN);\r\n}\r\n\r\nexport function hasProperties(element: CourseElement) {\r\n  const { type } = element;\r\n\r\n  return (\r\n    type === ElementType.Chapter || type === ElementType.Custom || type === ElementType.Summary\r\n  );\r\n}\r\n\r\nexport function hasTemplates(element: CourseElement) {\r\n  const { type } = element;\r\n\r\n  return (\r\n    type === ElementType.Page ||\r\n    type === ElementType.Screen ||\r\n    type === ElementType.Question ||\r\n    type === ElementType.SimplePage ||\r\n    type === ElementType.SimpleContent\r\n  );\r\n}\r\n\r\nexport const isTemplateElement = (element: CourseElement) => {\r\n  const { type } = element;\r\n\r\n  return (\r\n    type === ElementType.Screen ||\r\n    type === ElementType.Question ||\r\n    type === ElementType.PartPage ||\r\n    type === ElementType.SimpleContent ||\r\n    type === ElementType.SimplePartPage\r\n  );\r\n};\r\n\r\nexport function hasChapterEvaluation(\r\n  element: CourseElementProps\r\n): element is CourseElementProps & { evalutionJSON: ChapterEvaluationProps } {\r\n  if (element && element.type === ElementType.Chapter) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function hasPageEvaluation(\r\n  element: CourseElementProps\r\n): element is CourseElementProps & { evalutionJSON: PageEvaluationProps } {\r\n  if (element && (element.type === ElementType.Page || element.type === ElementType.SimplePage)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function hasCustomEvaluation(\r\n  element: CourseElementProps\r\n): element is CourseElementProps & { evalutionJSON: CustomEvaluationProps } {\r\n  if (element && element.type === ElementType.Custom) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function hasElement(elements: CourseElement[], type: ElementType) {\r\n  return elements.some((element) => element.type === type);\r\n}\r\n\r\nexport function hasSummary(element: CourseElement) {\r\n  const { children } = element;\r\n\r\n  return children.some((child) => child.isSummary);\r\n}\r\n\r\nexport function hasTemplate(element: CourseElement, type: ElementType) {\r\n  const { templateType } = element;\r\n\r\n  return templateType && templateType === type;\r\n}\r\n\r\nexport function hasChildTemplate(element: CourseElement, type: ElementType) {\r\n  const { children } = element;\r\n\r\n  return children.some((child) => hasTemplate(child, type));\r\n}\r\n\r\nexport function hasSomeTemplate(element: CourseElement): Boolean {\r\n  const { type, templateType, children } = element;\r\n\r\n  return type === ElementType.Page || type === ElementType.SimplePage\r\n    ? children.some((child) => hasSomeTemplate(child))\r\n    : Boolean(templateType);\r\n}\r\n\r\nconst LINKED_TYPES: ElementType[] = [ElementType.SimpleContent, ElementType.SimplePage];\r\nconst ANNEXES_LINKED_TYPES: ElementType[] = [\r\n  ElementType.Screen,\r\n  ElementType.Page,\r\n  ElementType.SimpleContent,\r\n  ElementType.SimplePage,\r\n];\r\n\r\nexport function isValidLinkedElement(element: CourseElement) {\r\n  return (\r\n    element.root?.type === ElementType.Annexes ? ANNEXES_LINKED_TYPES : LINKED_TYPES\r\n  ).includes(element.type);\r\n}\r\n\r\nexport function getPreviousElements(element: CourseElement) {\r\n  const elements = element.parent?.children;\r\n\r\n  if (elements) {\r\n    const ind = findIndex(elements, element.id, \"id\");\r\n\r\n    if (ind !== -1) {\r\n      return elements.slice(0, ind);\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nconst AUTO_SUMMARY_TYPES = [ElementType.Structure, ElementType.Chapter];\r\n\r\nexport function hasAutoSummaryAllowed(element: CourseElement, navigationLevel = 0) {\r\n  const { type, isEvaluation, theme, level } = element;\r\n\r\n  return (\r\n    AUTO_SUMMARY_TYPES.includes(type) &&\r\n    (!isEvaluation || theme === null || theme === \"None\") &&\r\n    level < navigationLevel\r\n  );\r\n}\r\n\r\nexport function hasAutoSummary(element: CourseElement, navigationLevel = 0) {\r\n  const { styleSummary } = element;\r\n\r\n  return hasAutoSummaryAllowed(element, navigationLevel) && styleSummary;\r\n}\r\n\r\nexport function getElementType(type: ElementType | undefined) {\r\n  switch (type) {\r\n    case ElementType.Page:\r\n      return \"element_type.page\";\r\n    case ElementType.Screen:\r\n      return \"element_type.screen\";\r\n    case ElementType.SimpleContent:\r\n      return \"element_type.simple_content\";\r\n    case ElementType.SimplePage:\r\n      return \"element_type.simple_page\";\r\n    case ElementType.Chapter:\r\n      return \"element_type.chapter\";\r\n    case ElementType.Evaluation:\r\n      return \"element_type.evaluation\";\r\n    case ElementType.Custom:\r\n      return \"element_type.custom\";\r\n    case ElementType.Question:\r\n      return \"element_type.question\";\r\n    case ElementType.AnnexesFolder:\r\n      return \"element_type.annexes_folder\";\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}