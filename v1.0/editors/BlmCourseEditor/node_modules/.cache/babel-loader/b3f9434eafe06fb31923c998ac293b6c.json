{"ast":null,"code":"import { getIFrameClientRect } from \"utils\";\nexport function createModifiersForIFrame(xOff, yOff) {\n  return {\n    offset: {\n      enabled: true,\n      fn: data => {\n        //BILIM-276: [react] option popup move when scroll and edit\n        const {\n          placement,\n          instance: {\n            reference\n          },\n          offsets: {\n            popper\n          }\n        } = data;\n        const basePlacement = placement.split(\"-\")[0];\n        const {\n          x,\n          y\n        } = getIFrameClientRect(reference);\n        const offsets = [x + xOff, y + yOff];\n\n        if (basePlacement === \"left\") {\n          popper.top += offsets[0];\n          popper.left -= offsets[1];\n        } else if (basePlacement === \"right\") {\n          popper.top += offsets[0];\n          popper.left += offsets[1];\n        } else if (basePlacement === \"top\") {\n          popper.left += offsets[0];\n          popper.top -= offsets[1];\n        } else if (basePlacement === \"bottom\") {\n          popper.left += offsets[0];\n          popper.top += offsets[1];\n        }\n\n        data.popper = popper;\n        return data;\n      }\n    },\n    flip: {\n      enabled: false\n    },\n    keepTogether: {\n      enabled: false\n    },\n    arrow: {\n      enabled: false\n    },\n    preventOverflow: {\n      enabled: false\n    },\n    hide: {\n      enabled: false\n    },\n    computeStyle: {\n      gpuAcceleration: false\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/template-editors/utils/index.ts"],"names":["getIFrameClientRect","createModifiersForIFrame","xOff","yOff","offset","enabled","fn","data","placement","instance","reference","offsets","popper","basePlacement","split","x","y","top","left","flip","keepTogether","arrow","preventOverflow","hide","computeStyle","gpuAcceleration"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,OAApC;AAEA,OAAO,SAASC,wBAAT,CAAkCC,IAAlC,EAAgDC,IAAhD,EAA8D;AACnE,SAAO;AACLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,EAAE,EAAGC,IAAD,IAAe;AACjB;AACA,cAAM;AACJC,UAAAA,SADI;AAEJC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA;AAAF,WAFN;AAGJC,UAAAA,OAAO,EAAE;AAAEC,YAAAA;AAAF;AAHL,YAIFL,IAJJ;AAKA,cAAMM,aAAa,GAAGL,SAAS,CAACM,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAtB;AACA,cAAM;AAAEC,UAAAA,CAAF;AAAKC,UAAAA;AAAL,YAAWhB,mBAAmB,CAACU,SAAD,CAApC;AACA,cAAMC,OAAO,GAAG,CAACI,CAAC,GAAGb,IAAL,EAAWc,CAAC,GAAGb,IAAf,CAAhB;;AAEA,YAAIU,aAAa,KAAK,MAAtB,EAA8B;AAC5BD,UAAAA,MAAM,CAACK,GAAP,IAAcN,OAAO,CAAC,CAAD,CAArB;AACAC,UAAAA,MAAM,CAACM,IAAP,IAAeP,OAAO,CAAC,CAAD,CAAtB;AACD,SAHD,MAGO,IAAIE,aAAa,KAAK,OAAtB,EAA+B;AACpCD,UAAAA,MAAM,CAACK,GAAP,IAAcN,OAAO,CAAC,CAAD,CAArB;AACAC,UAAAA,MAAM,CAACM,IAAP,IAAeP,OAAO,CAAC,CAAD,CAAtB;AACD,SAHM,MAGA,IAAIE,aAAa,KAAK,KAAtB,EAA6B;AAClCD,UAAAA,MAAM,CAACM,IAAP,IAAeP,OAAO,CAAC,CAAD,CAAtB;AACAC,UAAAA,MAAM,CAACK,GAAP,IAAcN,OAAO,CAAC,CAAD,CAArB;AACD,SAHM,MAGA,IAAIE,aAAa,KAAK,QAAtB,EAAgC;AACrCD,UAAAA,MAAM,CAACM,IAAP,IAAeP,OAAO,CAAC,CAAD,CAAtB;AACAC,UAAAA,MAAM,CAACK,GAAP,IAAcN,OAAO,CAAC,CAAD,CAArB;AACD;;AAEDJ,QAAAA,IAAI,CAACK,MAAL,GAAcA,MAAd;AACA,eAAOL,IAAP;AACD;AA7BK,KADH;AAgCLY,IAAAA,IAAI,EAAE;AACJd,MAAAA,OAAO,EAAE;AADL,KAhCD;AAmCLe,IAAAA,YAAY,EAAE;AACZf,MAAAA,OAAO,EAAE;AADG,KAnCT;AAsCLgB,IAAAA,KAAK,EAAE;AACLhB,MAAAA,OAAO,EAAE;AADJ,KAtCF;AAyCLiB,IAAAA,eAAe,EAAE;AACfjB,MAAAA,OAAO,EAAE;AADM,KAzCZ;AA4CLkB,IAAAA,IAAI,EAAE;AACJlB,MAAAA,OAAO,EAAE;AADL,KA5CD;AA+CLmB,IAAAA,YAAY,EAAE;AACZC,MAAAA,eAAe,EAAE;AADL;AA/CT,GAAP;AAmDD","sourcesContent":["import { getIFrameClientRect } from \"utils\";\r\n\r\nexport function createModifiersForIFrame(xOff: number, yOff: number) {\r\n  return {\r\n    offset: {\r\n      enabled: true,\r\n      fn: (data: any) => {\r\n        //BILIM-276: [react] option popup move when scroll and edit\r\n        const {\r\n          placement,\r\n          instance: { reference },\r\n          offsets: { popper },\r\n        } = data;\r\n        const basePlacement = placement.split(\"-\")[0];\r\n        const { x, y } = getIFrameClientRect(reference);\r\n        const offsets = [x + xOff, y + yOff];\r\n\r\n        if (basePlacement === \"left\") {\r\n          popper.top += offsets[0];\r\n          popper.left -= offsets[1];\r\n        } else if (basePlacement === \"right\") {\r\n          popper.top += offsets[0];\r\n          popper.left += offsets[1];\r\n        } else if (basePlacement === \"top\") {\r\n          popper.left += offsets[0];\r\n          popper.top -= offsets[1];\r\n        } else if (basePlacement === \"bottom\") {\r\n          popper.left += offsets[0];\r\n          popper.top += offsets[1];\r\n        }\r\n\r\n        data.popper = popper;\r\n        return data;\r\n      },\r\n    },\r\n    flip: {\r\n      enabled: false,\r\n    },\r\n    keepTogether: {\r\n      enabled: false,\r\n    },\r\n    arrow: {\r\n      enabled: false,\r\n    },\r\n    preventOverflow: {\r\n      enabled: false,\r\n    },\r\n    hide: {\r\n      enabled: false,\r\n    },\r\n    computeStyle: {\r\n      gpuAcceleration: false,\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}