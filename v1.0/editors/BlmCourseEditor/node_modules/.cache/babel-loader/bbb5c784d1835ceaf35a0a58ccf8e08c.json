{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\core\\\\BlmContentEditor.tsx\";\nimport React, { forwardRef, useMemo, useEffect, useImperativeHandle, useReducer, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\nimport { compareComponent, differenceOfObjects, isButtonComponent, isMediaComponent, validateContent, isSoundComponent } from \"utils\";\nimport { setComputedStyles, setContentTemplateHTML, getContentTemplateModel, getContentMedias, getContentHTMLJSON, GlTemplateBuilderStore, getTemplateActionModel } from \"template-builders\";\nimport { BlmComponentRepository, BlmContentText, BlmContentMedia, BlmContentButton, BlmContentSound } from \"components/content-editor/panels\";\nimport { contentReducer, initContentEditor, setComponent } from \"components/content-editor/reducers\";\nimport ContentEditorContext from \"./ContentEditorContext\";\nimport \"./content-editor.scss\";\nimport { createTemplateView } from \"components/template-editors/containers/template-action/utils\";\nconst initState = {\n  template: null,\n  data: null,\n  oldMedias: [],\n  isEdited: false\n};\n\nconst createTemplate = (template, content) => {\n  const newTemplate = { ...template\n  };\n  newTemplate.html = setContentTemplateHTML(newTemplate, content);\n  newTemplate.htmlJSON = getContentHTMLJSON(newTemplate, content);\n  return newTemplate;\n};\n\nconst BlmContentEditor = forwardRef((props, ref) => {\n  const {\n    frameEle,\n    element,\n    template,\n    isFileUploading,\n    onSave,\n    onClose,\n    openDialog,\n    removeFiles,\n    clearFiles,\n    clearAnimations,\n    clearMediaProperties,\n    openConfirmDialog\n  } = props;\n  const [state, dispatch] = useReducer(contentReducer, initState);\n  const {\n    data,\n    oldMedias,\n    component,\n    isEdited\n  } = state;\n  const [tempVal, setTempVal] = useState(undefined);\n  const {\n    isDarkTemplate\n  } = template;\n  const {\n    t\n  } = useTranslation();\n  useImperativeHandle(ref, () => ({\n    isEdited,\n    saveOnClose: handleSaveOnClose,\n    revert: revertChanges\n  }));\n  const view = useMemo(() => createTemplateView(element), [element]);\n  useEffect(() => {\n    if (template) {\n      const data = getTemplateActionModel(template, view);\n      setTempVal(data);\n      const editor = getContentTemplateModel(template);\n      editor.texts.sort(compareComponent);\n      editor.medias.sort(compareComponent);\n      editor.buttons.sort(compareComponent);\n      setComputedStyles(frameEle, editor.texts);\n      GlTemplateBuilderStore.updateStyles(frameEle, \"templates.css\");\n      dispatch(initContentEditor(template, editor));\n    }\n  }, [template, frameEle, view, dispatch]);\n\n  const validateData = callback => {\n    if (data && isEdited) {\n      try {\n        validateContent(data);\n      } catch (error) {\n        openDialog(`${t(\"alert.warning\")}`, error.message);\n        return;\n      }\n    }\n\n    callback();\n  };\n\n  const saveChanges = () => {\n    if (data && isEdited) {\n      const newTemplate = createTemplate(template, data);\n      const newMedias = getContentMedias(data);\n      const deletedMedias = differenceOfObjects(oldMedias, newMedias, \"id\");\n\n      if (onSave && newTemplate) {\n        onSave(newTemplate);\n      }\n\n      removeFiles(deletedMedias);\n    }\n  };\n\n  const revertChanges = () => {\n    clearFiles(element.id, false);\n  };\n\n  const selectComponent = newComponent => {\n    if (!isFileUploading && dispatch) {\n      validateData(() => {\n        dispatch(setComponent(newComponent));\n      });\n    }\n  };\n\n  const handleSaveOnClose = event => {\n    var _state$data, _medias, _medias$value, _medias$value2;\n\n    let medias = null;\n    (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.medias.map((x, i) => {\n      var _x$config;\n\n      if ((_x$config = x.config) === null || _x$config === void 0 ? void 0 : _x$config.variant) {\n        var _x$config2;\n\n        (_x$config2 = x.config) === null || _x$config2 === void 0 ? void 0 : _x$config2.variant.map((y, idx) => {\n          if (y === \"target\") {\n            medias = x;\n          }\n        });\n      }\n    });\n    const options = {\n      okLabel: `${t(\"button.save\")}`,\n      cancelLabel: `${t(\"button.cancel\")}`\n    };\n\n    if (medias && (((_medias = medias) === null || _medias === void 0 ? void 0 : (_medias$value = _medias.value) === null || _medias$value === void 0 ? void 0 : _medias$value.template) === undefined || \"\") && ((_medias$value2 = medias.value) === null || _medias$value2 === void 0 ? void 0 : _medias$value2.name) !== undefined && medias.variant !== \"hotspot\" && isEdited) {\n      openConfirmDialog(\"Warning\", `${t(\"alert.template_not_selected_target\")}`, handleSave, handleCancel, options);\n    } else {\n      validateData(() => {\n        saveChanges();\n        clearFiles(element.id, true);\n        clearAnimations();\n        clearMediaProperties();\n\n        if (onClose) {\n          onClose(event);\n        }\n      });\n    }\n  };\n\n  function handleSave(event) {\n    validateData(() => {\n      saveChanges();\n      clearFiles(element.id, true);\n      clearAnimations();\n      clearMediaProperties();\n\n      if (onClose) {\n        onClose(event);\n      }\n    });\n  }\n\n  function handleCancel() {}\n\n  const renderComponentEditor = () => {\n    if (!component && data.texts.length > 0) {\n      return /*#__PURE__*/React.createElement(BlmContentText, {\n        texts: data.texts,\n        isDark: isDarkTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 14\n        }\n      });\n    } else if (component && isMediaComponent(component)) {\n      return component && /*#__PURE__*/React.createElement(BlmContentMedia, {\n        key: component.id,\n        data: component,\n        temp: tempVal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 27\n        }\n      });\n    } else if (component && isButtonComponent(component)) {\n      return component && /*#__PURE__*/React.createElement(BlmContentButton, {\n        key: component.id,\n        data: component,\n        temp: tempVal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 27\n        }\n      });\n    } else if (component && isSoundComponent(component)) {\n      return component && /*#__PURE__*/React.createElement(BlmContentSound, {\n        key: component.id,\n        data: component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 27\n        }\n      });\n    } else {\n      return null;\n    }\n  };\n\n  if (data) {\n    return /*#__PURE__*/React.createElement(ContentEditorContext.Provider, {\n      value: {\n        element,\n        template: data,\n        component,\n        selectComponent,\n        openDialog,\n        dispatch\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-editor-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-thumbnail-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }, template.thumbnail && /*#__PURE__*/React.createElement(\"img\", {\n      src: template.thumbnail,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 36\n      }\n    })), /*#__PURE__*/React.createElement(BlmComponentRepository, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"component-editor-wrapper custom-scrollbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }\n    }, renderComponentEditor()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-editor-close-btn\",\n      onClick: handleSaveOnClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: clsx(\"content-editor-overlay\", {\n        show: isFileUploading\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return null;\n  }\n});\nexport default BlmContentEditor;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/core/BlmContentEditor.tsx"],"names":["React","forwardRef","useMemo","useEffect","useImperativeHandle","useReducer","useState","clsx","useTranslation","compareComponent","differenceOfObjects","isButtonComponent","isMediaComponent","validateContent","isSoundComponent","setComputedStyles","setContentTemplateHTML","getContentTemplateModel","getContentMedias","getContentHTMLJSON","GlTemplateBuilderStore","getTemplateActionModel","BlmComponentRepository","BlmContentText","BlmContentMedia","BlmContentButton","BlmContentSound","contentReducer","initContentEditor","setComponent","ContentEditorContext","createTemplateView","initState","template","data","oldMedias","isEdited","createTemplate","content","newTemplate","html","htmlJSON","BlmContentEditor","props","ref","frameEle","element","isFileUploading","onSave","onClose","openDialog","removeFiles","clearFiles","clearAnimations","clearMediaProperties","openConfirmDialog","state","dispatch","component","tempVal","setTempVal","undefined","isDarkTemplate","t","saveOnClose","handleSaveOnClose","revert","revertChanges","view","editor","texts","sort","medias","buttons","updateStyles","validateData","callback","error","message","saveChanges","newMedias","deletedMedias","id","selectComponent","newComponent","event","map","x","i","config","variant","y","idx","options","okLabel","cancelLabel","value","name","handleSave","handleCancel","renderComponentEditor","length","thumbnail","show"],"mappings":";AAAA,OAAOA,KAAP,IACEC,UADF,EAEEC,OAFF,EAIEC,SAJF,EAKEC,mBALF,EAMEC,UANF,EAOEC,QAPF,QAQO,OARP;AASA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAYA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,iBAHF,EAIEC,gBAJF,EAKEC,eALF,EAMEC,gBANF,QAOO,OAPP;AAQA,SACEC,iBADF,EAEEC,sBAFF,EAGEC,uBAHF,EAIEC,gBAJF,EAKEC,kBALF,EAMEC,sBANF,EAOEC,sBAPF,QAQO,mBARP;AASA,SACEC,sBADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,gBAJF,EAKEC,eALF,QAMO,kCANP;AAOA,SAEEC,cAFF,EAGEC,iBAHF,EAIEC,YAJF,QAKO,oCALP;AAMA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA,OAAO,uBAAP;AACA,SAASC,kBAAT,QAAmC,8DAAnC;AAUA,MAAMC,SAA6B,GAAG;AACpCC,EAAAA,QAAQ,EAAE,IAD0B;AAEpCC,EAAAA,IAAI,EAAE,IAF8B;AAGpCC,EAAAA,SAAS,EAAE,EAHyB;AAIpCC,EAAAA,QAAQ,EAAE;AAJ0B,CAAtC;;AAOA,MAAMC,cAAc,GAAG,CAACJ,QAAD,EAAkCK,OAAlC,KAA+D;AACpF,QAAMC,WAAkC,GAAG,EACzC,GAAGN;AADsC,GAA3C;AAIAM,EAAAA,WAAW,CAACC,IAAZ,GAAmBxB,sBAAsB,CAACuB,WAAD,EAAcD,OAAd,CAAzC;AACAC,EAAAA,WAAW,CAACE,QAAZ,GAAuBtB,kBAAkB,CAACoB,WAAD,EAAcD,OAAd,CAAzC;AAEA,SAAOC,WAAP;AACD,CATD;;AAWA,MAAMG,gBAAgB,GAAGzC,UAAU,CAAqC,CAAC0C,KAAD,EAAQC,GAAR,KAAgB;AACtF,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,OAFI;AAGJb,IAAAA,QAHI;AAIJc,IAAAA,eAJI;AAKJC,IAAAA,MALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,UAPI;AAQJC,IAAAA,WARI;AASJC,IAAAA,UATI;AAUJC,IAAAA,eAVI;AAWJC,IAAAA,oBAXI;AAYJC,IAAAA;AAZI,MAaFZ,KAbJ;AAcA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBpD,UAAU,CAACsB,cAAD,EAAiBK,SAAjB,CAApC;AACA,QAAM;AAAEE,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBuB,IAAAA,SAAnB;AAA8BtB,IAAAA;AAA9B,MAA2CoB,KAAjD;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBtD,QAAQ,CAAoCuD,SAApC,CAAtC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAqB7B,QAA3B;AACA,QAAM;AAAE8B,IAAAA;AAAF,MAAQvD,cAAc,EAA5B;AAEAJ,EAAAA,mBAAmB,CAACwC,GAAD,EAAM,OAAO;AAC9BR,IAAAA,QAD8B;AAE9B4B,IAAAA,WAAW,EAAEC,iBAFiB;AAG9BC,IAAAA,MAAM,EAAEC;AAHsB,GAAP,CAAN,CAAnB;AAMA,QAAMC,IAAI,GAAGlE,OAAO,CAAC,MAAM6B,kBAAkB,CAACe,OAAD,CAAzB,EAAoC,CAACA,OAAD,CAApC,CAApB;AAEA3C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI8B,QAAJ,EAAc;AACZ,YAAMC,IAAI,GAAGb,sBAAsB,CAACY,QAAD,EAAWmC,IAAX,CAAnC;AAEAR,MAAAA,UAAU,CAAC1B,IAAD,CAAV;AACA,YAAMmC,MAAM,GAAGpD,uBAAuB,CAACgB,QAAD,CAAtC;AACAoC,MAAAA,MAAM,CAACC,KAAP,CAAaC,IAAb,CAAkB9D,gBAAlB;AACA4D,MAAAA,MAAM,CAACG,MAAP,CAAcD,IAAd,CAAmB9D,gBAAnB;AACA4D,MAAAA,MAAM,CAACI,OAAP,CAAeF,IAAf,CAAoB9D,gBAApB;AAEAM,MAAAA,iBAAiB,CAAC8B,QAAD,EAAWwB,MAAM,CAACC,KAAlB,CAAjB;AACAlD,MAAAA,sBAAsB,CAACsD,YAAvB,CAAoC7B,QAApC,EAA8C,eAA9C;AAEAY,MAAAA,QAAQ,CAAC7B,iBAAiB,CAACK,QAAD,EAAWoC,MAAX,CAAlB,CAAR;AACD;AACF,GAfQ,EAeN,CAACpC,QAAD,EAAWY,QAAX,EAAqBuB,IAArB,EAA2BX,QAA3B,CAfM,CAAT;;AAiBA,QAAMkB,YAAY,GAAIC,QAAD,IAAwB;AAC3C,QAAI1C,IAAI,IAAIE,QAAZ,EAAsB;AACpB,UAAI;AACFvB,QAAAA,eAAe,CAACqB,IAAD,CAAf;AACD,OAFD,CAEE,OAAO2C,KAAP,EAAc;AACd3B,QAAAA,UAAU,CAAE,GAAEa,CAAC,CAAC,eAAD,CAAkB,EAAvB,EAA2Bc,KAAD,CAAiBC,OAA3C,CAAV;AACA;AACD;AACF;;AAEDF,IAAAA,QAAQ;AACT,GAXD;;AAaA,QAAMG,WAAW,GAAG,MAAM;AACxB,QAAI7C,IAAI,IAAIE,QAAZ,EAAsB;AACpB,YAAMG,WAAW,GAAGF,cAAc,CAACJ,QAAD,EAAWC,IAAX,CAAlC;AACA,YAAM8C,SAAS,GAAG9D,gBAAgB,CAACgB,IAAD,CAAlC;AACA,YAAM+C,aAAa,GAAGvE,mBAAmB,CAACyB,SAAD,EAAY6C,SAAZ,EAAuB,IAAvB,CAAzC;;AAEA,UAAIhC,MAAM,IAAIT,WAAd,EAA2B;AACzBS,QAAAA,MAAM,CAACT,WAAD,CAAN;AACD;;AAEDY,MAAAA,WAAW,CAAC8B,aAAD,CAAX;AACD;AACF,GAZD;;AAcA,QAAMd,aAAa,GAAG,MAAM;AAC1Bf,IAAAA,UAAU,CAACN,OAAO,CAACoC,EAAT,EAAa,KAAb,CAAV;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAIC,YAAD,IAAsE;AAC5F,QAAI,CAACrC,eAAD,IAAoBU,QAAxB,EAAkC;AAChCkB,MAAAA,YAAY,CAAC,MAAM;AACjBlB,QAAAA,QAAQ,CAAC5B,YAAY,CAACuD,YAAD,CAAb,CAAR;AACD,OAFW,CAAZ;AAGD;AACF,GAND;;AAQA,QAAMnB,iBAAiB,GAAIoB,KAAD,IAAuB;AAAA;;AAC/C,QAAIb,MAAwC,GAAG,IAA/C;AACA,mBAAAhB,KAAK,CAACtB,IAAN,4DAAYsC,MAAZ,CAAmBc,GAAnB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAkB;AAAA;;AACvC,uBAAID,CAAC,CAACE,MAAN,8CAAI,UAAUC,OAAd,EAAuB;AAAA;;AACrB,sBAAAH,CAAC,CAACE,MAAF,0DAAUC,OAAV,CAAkBJ,GAAlB,CAAsB,CAACK,CAAD,EAAIC,GAAJ,KAAY;AAChC,cAAID,CAAC,KAAK,QAAV,EAAoB;AAClBnB,YAAAA,MAAM,GAAGe,CAAT;AACD;AACF,SAJD;AAKD;AACF,KARD;AASA,UAAMM,OAAO,GAAG;AACdC,MAAAA,OAAO,EAAG,GAAE/B,CAAC,CAAC,aAAD,CAAgB,EADf;AAEdgC,MAAAA,WAAW,EAAG,GAAEhC,CAAC,CAAC,eAAD,CAAkB;AAFrB,KAAhB;;AAKA,QACES,MAAM,KACL,YAAAA,MAAM,UAAN,2DAAQwB,KAAR,gEAAe/D,QAAf,MAA4B4B,SAA5B,IAAyC,EADpC,CAAN,IAEA,mBAAAW,MAAM,CAACwB,KAAP,kEAAcC,IAAd,MAAuBpC,SAFvB,IAGAW,MAAM,CAACkB,OAAP,KAAmB,SAHnB,IAIAtD,QALF,EAME;AACAmB,MAAAA,iBAAiB,CACf,SADe,EAEd,GAAEQ,CAAC,CAAC,oCAAD,CAAuC,EAF5B,EAGfmC,UAHe,EAIfC,YAJe,EAKfN,OALe,CAAjB;AAOD,KAdD,MAcO;AACLlB,MAAAA,YAAY,CAAC,MAAM;AACjBI,QAAAA,WAAW;AACX3B,QAAAA,UAAU,CAACN,OAAO,CAACoC,EAAT,EAAa,IAAb,CAAV;AACA7B,QAAAA,eAAe;AACfC,QAAAA,oBAAoB;;AAEpB,YAAIL,OAAJ,EAAa;AACXA,UAAAA,OAAO,CAACoC,KAAD,CAAP;AACD;AACF,OATW,CAAZ;AAUD;AACF,GA1CD;;AA4CA,WAASa,UAAT,CAAoBb,KAApB,EAAuC;AACrCV,IAAAA,YAAY,CAAC,MAAM;AACjBI,MAAAA,WAAW;AACX3B,MAAAA,UAAU,CAACN,OAAO,CAACoC,EAAT,EAAa,IAAb,CAAV;AACA7B,MAAAA,eAAe;AACfC,MAAAA,oBAAoB;;AAEpB,UAAIL,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACoC,KAAD,CAAP;AACD;AACF,KATW,CAAZ;AAUD;;AAED,WAASc,YAAT,GAAwB,CAAE;;AAE1B,QAAMC,qBAAqB,GAAG,MAAM;AAClC,QAAI,CAAC1C,SAAD,IAAcxB,IAAI,CAAEoC,KAAN,CAAY+B,MAAZ,GAAqB,CAAvC,EAA0C;AACxC,0BAAO,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAEnE,IAAI,CAAEoC,KAA7B;AAAoC,QAAA,MAAM,EAAER,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO,IAAIJ,SAAS,IAAI9C,gBAAgB,CAAC8C,SAAD,CAAjC,EAA8C;AACnD,aAAOA,SAAS,iBAAI,oBAAC,eAAD;AAAiB,QAAA,GAAG,EAAEA,SAAS,CAACwB,EAAhC;AAAoC,QAAA,IAAI,EAAExB,SAA1C;AAAqD,QAAA,IAAI,EAAEC,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApB;AACD,KAFM,MAEA,IAAID,SAAS,IAAI/C,iBAAiB,CAAC+C,SAAD,CAAlC,EAA+C;AACpD,aAAOA,SAAS,iBAAI,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEA,SAAS,CAACwB,EAAjC;AAAqC,QAAA,IAAI,EAAExB,SAA3C;AAAsD,QAAA,IAAI,EAAEC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApB;AACD,KAFM,MAEA,IAAID,SAAS,IAAI5C,gBAAgB,CAAC4C,SAAD,CAAjC,EAA8C;AACnD,aAAOA,SAAS,iBAAI,oBAAC,eAAD;AAAiB,QAAA,GAAG,EAAEA,SAAS,CAACwB,EAAhC;AAAoC,QAAA,IAAI,EAAExB,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApB;AACD,KAFM,MAEA;AACL,aAAO,IAAP;AACD;AACF,GAZD;;AAcA,MAAIxB,IAAJ,EAAU;AACR,wBACE,oBAAC,oBAAD,CAAsB,QAAtB;AACE,MAAA,KAAK,EAAE;AACLY,QAAAA,OADK;AAELb,QAAAA,QAAQ,EAAEC,IAFL;AAGLwB,QAAAA,SAHK;AAILyB,QAAAA,eAJK;AAKLjC,QAAAA,UALK;AAMLO,QAAAA;AANK,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGxB,QAAQ,CAACqE,SAAT,iBAAsB;AAAK,MAAA,GAAG,EAAErE,QAAQ,CAACqE,SAAnB;AAA8B,MAAA,GAAG,EAAC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzB,CADF,eAIE,oBAAC,sBAAD;AAAwB,MAAA,IAAI,EAAEpE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4DkE,qBAAqB,EAAjF,CALF,eAME;AAAK,MAAA,SAAS,EAAC,0BAAf;AAA0C,MAAA,OAAO,EAAEnC,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE;AACE,MAAA,SAAS,EAAE1D,IAAI,CAAC,wBAAD,EAA2B;AACxCgG,QAAAA,IAAI,EAAExD;AADkC,OAA3B,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAVF,CADF;AA0BD,GA3BD,MA2BO;AACL,WAAO,IAAP;AACD;AACF,CA5LkC,CAAnC;AA8LA,eAAeL,gBAAf","sourcesContent":["import React, {\r\n  forwardRef,\r\n  useMemo,\r\n  MouseEvent,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  ContentTemplate,\r\n  CourseElementTemplate,\r\n  TemplateEditorComponent,\r\n  CourseElement,\r\n  MediaComponent,\r\n  ButtonComponent,\r\n  SoundComponent,\r\n  ContentTemplateAction,\r\n} from \"types\";\r\nimport {\r\n  compareComponent,\r\n  differenceOfObjects,\r\n  isButtonComponent,\r\n  isMediaComponent,\r\n  validateContent,\r\n  isSoundComponent,\r\n} from \"utils\";\r\nimport {\r\n  setComputedStyles,\r\n  setContentTemplateHTML,\r\n  getContentTemplateModel,\r\n  getContentMedias,\r\n  getContentHTMLJSON,\r\n  GlTemplateBuilderStore,\r\n  getTemplateActionModel,\r\n} from \"template-builders\";\r\nimport {\r\n  BlmComponentRepository,\r\n  BlmContentText,\r\n  BlmContentMedia,\r\n  BlmContentButton,\r\n  BlmContentSound,\r\n} from \"components/content-editor/panels\";\r\nimport {\r\n  ContentEditorState,\r\n  contentReducer,\r\n  initContentEditor,\r\n  setComponent,\r\n} from \"components/content-editor/reducers\";\r\nimport ContentEditorContext from \"./ContentEditorContext\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./content-editor.scss\";\r\nimport { createTemplateView } from \"components/template-editors/containers/template-action/utils\";\r\n\r\ninterface CompProps extends ContainerProps {\r\n  frameEle: HTMLElement;\r\n  element: CourseElement;\r\n  template: CourseElementTemplate;\r\n  onSave: (template: CourseElementTemplate) => void;\r\n  onClose: (event: MouseEvent) => void;\r\n}\r\n\r\nconst initState: ContentEditorState = {\r\n  template: null,\r\n  data: null,\r\n  oldMedias: [],\r\n  isEdited: false,\r\n};\r\n\r\nconst createTemplate = (template: CourseElementTemplate, content: ContentTemplate) => {\r\n  const newTemplate: CourseElementTemplate = {\r\n    ...template,\r\n  };\r\n\r\n  newTemplate.html = setContentTemplateHTML(newTemplate, content);\r\n  newTemplate.htmlJSON = getContentHTMLJSON(newTemplate, content);\r\n\r\n  return newTemplate;\r\n};\r\n\r\nconst BlmContentEditor = forwardRef<TemplateEditorComponent, CompProps>((props, ref) => {\r\n  const {\r\n    frameEle,\r\n    element,\r\n    template,\r\n    isFileUploading,\r\n    onSave,\r\n    onClose,\r\n    openDialog,\r\n    removeFiles,\r\n    clearFiles,\r\n    clearAnimations,\r\n    clearMediaProperties,\r\n    openConfirmDialog,\r\n  } = props;\r\n  const [state, dispatch] = useReducer(contentReducer, initState);\r\n  const { data, oldMedias, component, isEdited } = state;\r\n  const [tempVal, setTempVal] = useState<ContentTemplateAction | undefined>(undefined);\r\n  const { isDarkTemplate } = template;\r\n  const { t } = useTranslation();\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    isEdited,\r\n    saveOnClose: handleSaveOnClose,\r\n    revert: revertChanges,\r\n  }));\r\n\r\n  const view = useMemo(() => createTemplateView(element), [element]);\r\n\r\n  useEffect(() => {\r\n    if (template) {\r\n      const data = getTemplateActionModel(template, view);\r\n\r\n      setTempVal(data);\r\n      const editor = getContentTemplateModel(template);\r\n      editor.texts.sort(compareComponent);\r\n      editor.medias.sort(compareComponent);\r\n      editor.buttons.sort(compareComponent);\r\n\r\n      setComputedStyles(frameEle, editor.texts);\r\n      GlTemplateBuilderStore.updateStyles(frameEle, \"templates.css\");\r\n\r\n      dispatch(initContentEditor(template, editor));\r\n    }\r\n  }, [template, frameEle, view, dispatch]);\r\n\r\n  const validateData = (callback: Function) => {\r\n    if (data && isEdited) {\r\n      try {\r\n        validateContent(data);\r\n      } catch (error) {\r\n        openDialog(`${t(\"alert.warning\")}`, (error as Error).message);\r\n        return;\r\n      }\r\n    }\r\n\r\n    callback();\r\n  };\r\n\r\n  const saveChanges = () => {\r\n    if (data && isEdited) {\r\n      const newTemplate = createTemplate(template, data);\r\n      const newMedias = getContentMedias(data);\r\n      const deletedMedias = differenceOfObjects(oldMedias, newMedias, \"id\");\r\n\r\n      if (onSave && newTemplate) {\r\n        onSave(newTemplate);\r\n      }\r\n\r\n      removeFiles(deletedMedias);\r\n    }\r\n  };\r\n\r\n  const revertChanges = () => {\r\n    clearFiles(element.id, false);\r\n  };\r\n\r\n  const selectComponent = (newComponent?: MediaComponent | ButtonComponent | SoundComponent) => {\r\n    if (!isFileUploading && dispatch) {\r\n      validateData(() => {\r\n        dispatch(setComponent(newComponent));\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSaveOnClose = (event: MouseEvent) => {\r\n    let medias: MediaComponent | undefined | any = null;\r\n    state.data?.medias.map((x, i: Number) => {\r\n      if (x.config?.variant) {\r\n        x.config?.variant.map((y, idx) => {\r\n          if (y === \"target\") {\r\n            medias = x;\r\n          }\r\n        });\r\n      }\r\n    });\r\n    const options = {\r\n      okLabel: `${t(\"button.save\")}`,\r\n      cancelLabel: `${t(\"button.cancel\")}`,\r\n    };\r\n\r\n    if (\r\n      medias &&\r\n      (medias?.value?.template === undefined || \"\") &&\r\n      medias.value?.name !== undefined &&\r\n      medias.variant !== \"hotspot\" &&\r\n      isEdited\r\n    ) {\r\n      openConfirmDialog(\r\n        \"Warning\",\r\n        `${t(\"alert.template_not_selected_target\")}`,\r\n        handleSave,\r\n        handleCancel,\r\n        options\r\n      );\r\n    } else {\r\n      validateData(() => {\r\n        saveChanges();\r\n        clearFiles(element.id, true);\r\n        clearAnimations();\r\n        clearMediaProperties();\r\n\r\n        if (onClose) {\r\n          onClose(event);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  function handleSave(event: MouseEvent) {\r\n    validateData(() => {\r\n      saveChanges();\r\n      clearFiles(element.id, true);\r\n      clearAnimations();\r\n      clearMediaProperties();\r\n\r\n      if (onClose) {\r\n        onClose(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleCancel() {}\r\n\r\n  const renderComponentEditor = () => {\r\n    if (!component && data!.texts.length > 0) {\r\n      return <BlmContentText texts={data!.texts} isDark={isDarkTemplate} />;\r\n    } else if (component && isMediaComponent(component)) {\r\n      return component && <BlmContentMedia key={component.id} data={component} temp={tempVal} />;\r\n    } else if (component && isButtonComponent(component)) {\r\n      return component && <BlmContentButton key={component.id} data={component} temp={tempVal} />;\r\n    } else if (component && isSoundComponent(component)) {\r\n      return component && <BlmContentSound key={component.id} data={component} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  if (data) {\r\n    return (\r\n      <ContentEditorContext.Provider\r\n        value={{\r\n          element,\r\n          template: data,\r\n          component,\r\n          selectComponent,\r\n          openDialog,\r\n          dispatch,\r\n        }}\r\n      >\r\n        <div className=\"content-editor-wrapper\">\r\n          <div className=\"template-thumbnail-box\">\r\n            {template.thumbnail && <img src={template.thumbnail} alt=\"\" />}\r\n          </div>\r\n          <BlmComponentRepository data={data} />\r\n          <div className=\"component-editor-wrapper custom-scrollbar\">{renderComponentEditor()}</div>\r\n          <div className=\"content-editor-close-btn\" onClick={handleSaveOnClose} />\r\n          <div\r\n            className={clsx(\"content-editor-overlay\", {\r\n              show: isFileUploading,\r\n            })}\r\n          />\r\n        </div>\r\n      </ContentEditorContext.Provider>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n});\r\n\r\nexport default BlmContentEditor;\r\n"]},"metadata":{},"sourceType":"module"}