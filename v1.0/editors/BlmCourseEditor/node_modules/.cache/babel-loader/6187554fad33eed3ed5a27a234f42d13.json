{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { openStructurePanel, closeStructurePanel, getCourseStructure, getElementTemplates, saveTemplates, duplicateElementTemplate, deleteElementTemplate, positionElementTemplate, renameElement, openConfirmDialog, getCurrnetElement, previewTemplates, getCurrentTemplates, removeFiles, clearFiles, toggleInteraction, updateElementTemplates } from \"redux/actions\";\n\nconst mapStateToProps = (state, props) => {\n  const {\n    editor: {\n      core: {\n        templatesPanel: {\n          templates: displayTemplates\n        },\n        structurePanel\n      }\n    }\n  } = state;\n  const {\n    element\n  } = props;\n  return {\n    curElement: getCurrnetElement(state, element),\n    templates: getCurrentTemplates(state, element),\n    displayTemplates,\n    structurePanel\n  };\n};\n\nconst mapDispatchToProps = {\n  getCourseStructure,\n  openStructurePanel,\n  closeStructurePanel,\n  getElementTemplates,\n  saveTemplates,\n  previewTemplates,\n  duplicateElementTemplate,\n  deleteElementTemplate,\n  positionElementTemplate,\n  renameElement,\n  removeFiles,\n  clearFiles,\n  openConfirmDialog,\n  toggleInteraction,\n  updateElementTemplates\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default connector;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/templates/hoc/template-board/template-board-container.tsx"],"names":["connect","openStructurePanel","closeStructurePanel","getCourseStructure","getElementTemplates","saveTemplates","duplicateElementTemplate","deleteElementTemplate","positionElementTemplate","renameElement","openConfirmDialog","getCurrnetElement","previewTemplates","getCurrentTemplates","removeFiles","clearFiles","toggleInteraction","updateElementTemplates","mapStateToProps","state","props","editor","core","templatesPanel","templates","displayTemplates","structurePanel","element","curElement","mapDispatchToProps","connector"],"mappings":"AAAA,SAASA,OAAT,QAAwC,aAAxC;AAIA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,mBAJF,EAKEC,aALF,EAMEC,wBANF,EAOEC,qBAPF,EAQEC,uBARF,EASEC,aATF,EAUEC,iBAVF,EAWEC,iBAXF,EAYEC,gBAZF,EAaEC,mBAbF,EAcEC,WAdF,EAeEC,UAfF,EAgBEC,iBAhBF,EAiBEC,sBAjBF,QAkBO,eAlBP;;AAoBA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAmBC,KAAnB,KAAyD;AAC/E,QAAM;AACJC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,cAAc,EAAE;AAAEC,UAAAA,SAAS,EAAEC;AAAb,SADZ;AAEJC,QAAAA;AAFI;AADA;AADJ,MAOFP,KAPJ;AAQA,QAAM;AAAEQ,IAAAA;AAAF,MAAcP,KAApB;AAEA,SAAO;AACLQ,IAAAA,UAAU,EAAEjB,iBAAiB,CAACQ,KAAD,EAAQQ,OAAR,CADxB;AAELH,IAAAA,SAAS,EAAEX,mBAAmB,CAACM,KAAD,EAAQQ,OAAR,CAFzB;AAGLF,IAAAA,gBAHK;AAILC,IAAAA;AAJK,GAAP;AAMD,CAjBD;;AAmBA,MAAMG,kBAAkB,GAAG;AACzB1B,EAAAA,kBADyB;AAEzBF,EAAAA,kBAFyB;AAGzBC,EAAAA,mBAHyB;AAIzBE,EAAAA,mBAJyB;AAKzBC,EAAAA,aALyB;AAMzBO,EAAAA,gBANyB;AAOzBN,EAAAA,wBAPyB;AAQzBC,EAAAA,qBARyB;AASzBC,EAAAA,uBATyB;AAUzBC,EAAAA,aAVyB;AAWzBK,EAAAA,WAXyB;AAYzBC,EAAAA,UAZyB;AAazBL,EAAAA,iBAbyB;AAczBM,EAAAA,iBAdyB;AAezBC,EAAAA;AAfyB,CAA3B;AAkBA,MAAMa,SAAS,GAAG9B,OAAO,CAACkB,eAAD,EAAkBW,kBAAlB,CAAzB;AAGA,eAAeC,SAAf","sourcesContent":["import { connect, ConnectedProps } from \"react-redux\";\r\n\r\nimport { CourseElement } from \"types\";\r\nimport { RootState } from \"redux/types\";\r\nimport {\r\n  openStructurePanel,\r\n  closeStructurePanel,\r\n  getCourseStructure,\r\n  getElementTemplates,\r\n  saveTemplates,\r\n  duplicateElementTemplate,\r\n  deleteElementTemplate,\r\n  positionElementTemplate,\r\n  renameElement,\r\n  openConfirmDialog,\r\n  getCurrnetElement,\r\n  previewTemplates,\r\n  getCurrentTemplates,\r\n  removeFiles,\r\n  clearFiles,\r\n  toggleInteraction,\r\n  updateElementTemplates,\r\n} from \"redux/actions\";\r\n\r\nconst mapStateToProps = (state: RootState, props: { element: CourseElement }) => {\r\n  const {\r\n    editor: {\r\n      core: {\r\n        templatesPanel: { templates: displayTemplates },\r\n        structurePanel,\r\n      },\r\n    },\r\n  } = state;\r\n  const { element } = props;\r\n\r\n  return {\r\n    curElement: getCurrnetElement(state, element)!,\r\n    templates: getCurrentTemplates(state, element),\r\n    displayTemplates,\r\n    structurePanel,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getCourseStructure,\r\n  openStructurePanel,\r\n  closeStructurePanel,\r\n  getElementTemplates,\r\n  saveTemplates,\r\n  previewTemplates,\r\n  duplicateElementTemplate,\r\n  deleteElementTemplate,\r\n  positionElementTemplate,\r\n  renameElement,\r\n  removeFiles,\r\n  clearFiles,\r\n  openConfirmDialog,\r\n  toggleInteraction,\r\n  updateElementTemplates,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport type ContainerProps = ConnectedProps<typeof connector>;\r\nexport default connector;\r\n"]},"metadata":{},"sourceType":"module"}