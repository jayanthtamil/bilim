{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\video\\\\external\\\\BlmExternalVideo.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { isVimeo, isYoutube } from \"utils\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\nimport \"./styles.scss\";\n\nfunction BlmExternalVideo(props) {\n  const {\n    data,\n    videos,\n    getVimeoVideo\n  } = props;\n  const {\n    value: external\n  } = data;\n  const {\n    dispatch\n  } = useContentEditorCtx();\n  const {\n    id,\n    url,\n    server,\n    thumbnail\n  } = external;\n  const [validate, setValidate] = useState(false);\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n  useEffect(() => {\n    if (validate) {\n      const timerId = setTimeout(validateURL, 2000);\n      return () => {\n        clearTimeout(timerId);\n      };\n    }\n  });\n  useEffect(() => {\n    var _videos$id;\n\n    if (id && server === \"vimeo\" && !thumbnail && ((_videos$id = videos[id]) === null || _videos$id === void 0 ? void 0 : _videos$id.thumbnail_medium)) {\n      var _videos$id2;\n\n      updateChange({ ...external,\n        thumbnail: (_videos$id2 = videos[id]) === null || _videos$id2 === void 0 ? void 0 : _videos$id2.thumbnail_medium\n      });\n    }\n  });\n\n  const updateChange = newExternal => {\n    const newData = { ...data,\n      value: newExternal\n    };\n\n    if (dispatch) {\n      dispatch(updateMediaComponent(newData));\n    }\n  };\n\n  const validateURL = () => {\n    if (!validate) {\n      return;\n    }\n\n    let newId;\n\n    if ((newId = isYoutube(url)) && id !== newId) {\n      updateChange({ ...external,\n        id: newId,\n        server: \"youtube\",\n        thumbnail: `https://img.youtube.com/vi/${newId}/mqdefault.jpg`\n      });\n    } else if ((newId = isVimeo(url)) && id !== newId) {\n      var _videos$newId;\n\n      const thumbUrl = (_videos$newId = videos[newId]) === null || _videos$newId === void 0 ? void 0 : _videos$newId.thumbnail_medium;\n\n      if (!thumbUrl) {\n        getVimeoVideo(newId);\n      }\n\n      updateChange({ ...external,\n        id: newId,\n        server: \"vimeo\",\n        thumbnail: thumbUrl\n      });\n    } else {\n      updateChange({ ...external,\n        id: undefined,\n        server: undefined,\n        thumbnail: undefined\n      });\n    }\n\n    setValidate(false);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newExternal = { ...external\n    };\n\n    if (name === \"url\") {\n      newExternal[name] = value;\n    }\n\n    updateChange(newExternal);\n    setValidate(true);\n  };\n\n  const handleKeyDown = event => {\n    if (event.keyCode === 13) {\n      validateURL();\n    }\n  };\n\n  const handleBlur = () => {\n    validateURL();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"external-video-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"external-viedo-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, t(\"external_video.video_address\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"url\",\n    placeholder: \"http://\",\n    value: url,\n    className: \"external-video-url-txt\",\n    onChange: handleChange,\n    onKeyDown: handleKeyDown,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"external-video-img-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, thumbnail && /*#__PURE__*/React.createElement(\"img\", {\n    src: thumbnail,\n    alt: \"video thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }\n  })));\n}\n\nexport default BlmExternalVideo;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/video/external/BlmExternalVideo.tsx"],"names":["React","useEffect","useState","useTranslation","isVimeo","isYoutube","useContentEditorCtx","updateMediaComponent","BlmExternalVideo","props","data","videos","getVimeoVideo","value","external","dispatch","id","url","server","thumbnail","validate","setValidate","t","timerId","setTimeout","validateURL","clearTimeout","thumbnail_medium","updateChange","newExternal","newData","newId","thumbUrl","undefined","handleChange","event","name","target","handleKeyDown","keyCode","handleBlur"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { ComponentStyle, CustomChangeEvent, ExternalVideo, MediaComponent, MediaFile } from \"types\";\r\nimport { isVimeo, isYoutube } from \"utils\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  data: MediaComponent & { value: ExternalVideo };\r\n}\r\n\r\nfunction BlmExternalVideo(props: CompProps) {\r\n  const { data, videos, getVimeoVideo } = props;\r\n  const { value: external } = data;\r\n  const { dispatch } = useContentEditorCtx();\r\n  const { id, url, server, thumbnail } = external;\r\n  const [validate, setValidate] = useState(false);\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  useEffect(() => {\r\n    if (validate) {\r\n      const timerId = setTimeout(validateURL, 2000);\r\n\r\n      return () => {\r\n        clearTimeout(timerId);\r\n      };\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id && server === \"vimeo\" && !thumbnail && videos[id]?.thumbnail_medium) {\r\n      updateChange({\r\n        ...external,\r\n        thumbnail: videos[id]?.thumbnail_medium,\r\n      });\r\n    }\r\n  });\r\n\r\n  const updateChange = (newExternal: ExternalVideo) => {\r\n    const newData = { ...data, value: newExternal };\r\n\r\n    if (dispatch) {\r\n      dispatch(updateMediaComponent(newData));\r\n    }\r\n  };\r\n\r\n  const validateURL = () => {\r\n    if (!validate) {\r\n      return;\r\n    }\r\n\r\n    let newId: string | false;\r\n\r\n    if ((newId = isYoutube(url)) && id !== newId) {\r\n      updateChange({\r\n        ...external,\r\n        id: newId,\r\n        server: \"youtube\",\r\n        thumbnail: `https://img.youtube.com/vi/${newId}/mqdefault.jpg`,\r\n      });\r\n    } else if ((newId = isVimeo(url)) && id !== newId) {\r\n      const thumbUrl = videos[newId]?.thumbnail_medium;\r\n\r\n      if (!thumbUrl) {\r\n        getVimeoVideo(newId);\r\n      }\r\n\r\n      updateChange({\r\n        ...external,\r\n        id: newId,\r\n        server: \"vimeo\",\r\n        thumbnail: thumbUrl,\r\n      });\r\n    } else {\r\n      updateChange({\r\n        ...external,\r\n        id: undefined,\r\n        server: undefined,\r\n        thumbnail: undefined,\r\n      });\r\n    }\r\n\r\n    setValidate(false);\r\n  };\r\n\r\n  const handleChange = (\r\n    event: ChangeEvent<any> | CustomChangeEvent<MediaFile | ComponentStyle | undefined>\r\n  ) => {\r\n    const {\r\n      name,\r\n      value,\r\n    }: {\r\n      name: string;\r\n      value: any;\r\n    } = event.target;\r\n    const newExternal = { ...external };\r\n\r\n    if (name === \"url\") {\r\n      newExternal[name] = value;\r\n    }\r\n\r\n    updateChange(newExternal);\r\n    setValidate(true);\r\n  };\r\n\r\n  const handleKeyDown = (event: KeyboardEvent) => {\r\n    if (event.keyCode === 13) {\r\n      validateURL();\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    validateURL();\r\n  };\r\n\r\n  return (\r\n    <div className=\"external-video-wrapper\">\r\n      <div className=\"external-viedo-lbl\">{t(\"external_video.video_address\")}</div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"url\"\r\n        placeholder=\"http://\"\r\n        value={url}\r\n        className=\"external-video-url-txt\"\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        onBlur={handleBlur}\r\n      />\r\n      <div className=\"external-video-img-wrapper\">\r\n        {thumbnail && <img src={thumbnail} alt=\"video thumbnail\" />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmExternalVideo;\r\n"]},"metadata":{},"sourceType":"module"}