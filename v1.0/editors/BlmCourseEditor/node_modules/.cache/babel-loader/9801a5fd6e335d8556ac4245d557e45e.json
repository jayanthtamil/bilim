{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\structures\\\\select\\\\structure-select\\\\BlmStructureSelect.tsx\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\nimport { ElementType } from \"editor-constants\";\nimport { getElement } from \"utils\";\nimport { BlmCourseTree } from \"components/shared\";\nimport BlmSelect from \"../select\";\nimport BlmAccordion from \"../accordion\";\nimport \"./structure-select.scss\";\nconst DEFAULT_ITEMS = [ElementType.Chapter, ElementType.AnnexesFolder, ElementType.Screen, ElementType.Page, ElementType.Custom];\nconst DEFAULT_TEMPLATE_ITMES = [ElementType.SimplePage, ElementType.SimpleContent];\n\nfunction BlmStructureSelect(props) {\n  const {\n    t\n  } = useTranslation(\"structures\");\n  const {\n    name,\n    value,\n    structure,\n    element,\n    placeholder = t(\"label.select_1\"),\n    structures,\n    annexes,\n    template,\n    selectables,\n    className,\n    onChange,\n    local\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState();\n  const localElement = useMemo(() => {\n    if (typeof element === \"string\") {\n      return structure ? getElement(structure, element) : undefined;\n    }\n\n    return element;\n  }, [element, structure]);\n  useEffect(() => {\n    let item;\n\n    if (value && value !== \"\") {\n      item = structure ? getElement(structure, value) : undefined;\n    }\n\n    setSelectedItem(item);\n  }, [value, structure, setSelectedItem]);\n\n  const updateChange = item => {\n    if (onChange) {\n      onChange({\n        target: {\n          name,\n          value: item.id\n        }\n      });\n    }\n  };\n\n  const handleSelectOpen = event => {\n    setOpen(true);\n  };\n\n  const handleSelectClose = event => {\n    setOpen(false);\n  };\n\n  const handleTreeItemClick = item => {\n    if (!selectables || selectables.includes(item.type)) {\n      setSelectedItem(item);\n      setOpen(false);\n      updateChange(item);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(BlmSelect, {\n    name: name,\n    open: open,\n    value: selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.name,\n    placeholder: placeholder,\n    onOpen: handleSelectOpen,\n    onClose: handleSelectClose,\n    className: clsx(\"structure-select\", selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.type, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, (!structures || structures.show) && /*#__PURE__*/React.createElement(BlmAccordion, {\n    title: t(\"accordion.structure\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, (structure === null || structure === void 0 ? void 0 : structure.structure) && /*#__PURE__*/React.createElement(BlmCourseTree, {\n    data: structure.structure,\n    treeType: ElementType.Structure,\n    allowedItems: (structures === null || structures === void 0 ? void 0 : structures.allowedItems) || DEFAULT_ITEMS,\n    selectedItem: selectedItem,\n    onItemClick: handleTreeItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  })), localElement && (local === undefined || local.show === true) && /*#__PURE__*/React.createElement(BlmAccordion, {\n    title: t(\"accordion.local\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BlmCourseTree, {\n    data: localElement,\n    treeType: \"template\",\n    selectedItem: selectedItem,\n    allowedItems: (template === null || template === void 0 ? void 0 : template.allowedItems) || DEFAULT_TEMPLATE_ITMES,\n    onItemClick: handleTreeItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  })), (annexes === null || annexes === void 0 ? void 0 : annexes.show) && /*#__PURE__*/React.createElement(BlmAccordion, {\n    title: t(\"accordion.annexes\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, (structure === null || structure === void 0 ? void 0 : structure.annexes) && /*#__PURE__*/React.createElement(BlmCourseTree, {\n    data: structure.annexes,\n    treeType: ElementType.Annexes,\n    allowedItems: (annexes === null || annexes === void 0 ? void 0 : annexes.allowedItems) || DEFAULT_ITEMS,\n    selectedItem: selectedItem,\n    onItemClick: handleTreeItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default BlmStructureSelect;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/structures/select/structure-select/BlmStructureSelect.tsx"],"names":["React","useState","useEffect","useMemo","clsx","useTranslation","ElementType","getElement","BlmCourseTree","BlmSelect","BlmAccordion","DEFAULT_ITEMS","Chapter","AnnexesFolder","Screen","Page","Custom","DEFAULT_TEMPLATE_ITMES","SimplePage","SimpleContent","BlmStructureSelect","props","t","name","value","structure","element","placeholder","structures","annexes","template","selectables","className","onChange","local","open","setOpen","selectedItem","setSelectedItem","localElement","undefined","item","updateChange","target","id","handleSelectOpen","event","handleSelectClose","handleTreeItemClick","includes","type","show","Structure","allowedItems","Annexes"],"mappings":"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","sourcesContent":["import React, { useState, MouseEvent, useEffect, useMemo } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CourseElement, CustomChangeEvent } from \"types\";\r\nimport { ElementType } from \"editor-constants\";\r\nimport { getElement } from \"utils\";\r\nimport { BlmCourseTree, CourseTreeProps } from \"components/shared\";\r\nimport BlmSelect from \"../select\";\r\nimport BlmAccordion from \"../accordion\";\r\nimport { ContainerProps } from \"./structure-select-container\";\r\nimport \"./structure-select.scss\";\r\n\r\nexport type StructureSelectChangeEvent = CustomChangeEvent<string>;\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  name: string;\r\n  value?: string;\r\n  placeholder?: string;\r\n  element?: CourseElement | string;\r\n  structures?: {\r\n    show?: boolean;\r\n    allowedItems?: CourseTreeProps[\"allowedItems\"];\r\n  };\r\n  local?: {\r\n    show?: boolean;\r\n    allowedItems?: CourseTreeProps[\"allowedItems\"];\r\n  };\r\n  annexes?: {\r\n    show?: boolean;\r\n    allowedItems?: CourseTreeProps[\"allowedItems\"];\r\n  };\r\n  template?: {\r\n    allowedItems?: CourseTreeProps[\"allowedItems\"];\r\n  };\r\n  selectables?: ElementType[];\r\n  className?: string;\r\n  onChange?: (event: StructureSelectChangeEvent) => void;\r\n}\r\n\r\nconst DEFAULT_ITEMS = [\r\n  ElementType.Chapter,\r\n  ElementType.AnnexesFolder,\r\n  ElementType.Screen,\r\n  ElementType.Page,\r\n  ElementType.Custom,\r\n];\r\nconst DEFAULT_TEMPLATE_ITMES = [ElementType.SimplePage, ElementType.SimpleContent];\r\n\r\nfunction BlmStructureSelect(props: CompProps) {\r\n  const { t } = useTranslation(\"structures\");\r\n  const {\r\n    name,\r\n    value,\r\n    structure,\r\n    element,\r\n    placeholder = t(\"label.select_1\"),\r\n    structures,\r\n    annexes,\r\n    template,\r\n    selectables,\r\n    className,\r\n    onChange,\r\n    local,\r\n  } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState<CourseElement>();\r\n\r\n  const localElement = useMemo(() => {\r\n    if (typeof element === \"string\") {\r\n      return structure ? getElement(structure, element) : undefined;\r\n    }\r\n\r\n    return element;\r\n  }, [element, structure]);\r\n\r\n  useEffect(() => {\r\n    let item;\r\n\r\n    if (value && value !== \"\") {\r\n      item = structure ? getElement(structure, value) : undefined;\r\n    }\r\n\r\n    setSelectedItem(item);\r\n  }, [value, structure, setSelectedItem]);\r\n\r\n  const updateChange = (item: CourseElement) => {\r\n    if (onChange) {\r\n      onChange({ target: { name, value: item.id } });\r\n    }\r\n  };\r\n\r\n  const handleSelectOpen = (event: MouseEvent) => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleSelectClose = (event: MouseEvent) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleTreeItemClick = (item: CourseElement) => {\r\n    if (!selectables || selectables.includes(item.type)) {\r\n      setSelectedItem(item);\r\n      setOpen(false);\r\n\r\n      updateChange(item);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BlmSelect\r\n      name={name}\r\n      open={open}\r\n      value={selectedItem?.name}\r\n      placeholder={placeholder}\r\n      onOpen={handleSelectOpen}\r\n      onClose={handleSelectClose}\r\n      className={clsx(\"structure-select\", selectedItem?.type, className)}\r\n    >\r\n      {(!structures || structures.show) && (\r\n        <BlmAccordion title={t(\"accordion.structure\")}>\r\n          {structure?.structure && (\r\n            <BlmCourseTree\r\n              data={structure.structure}\r\n              treeType={ElementType.Structure}\r\n              allowedItems={structures?.allowedItems || DEFAULT_ITEMS}\r\n              selectedItem={selectedItem}\r\n              onItemClick={handleTreeItemClick}\r\n            />\r\n          )}\r\n        </BlmAccordion>\r\n      )}\r\n      {localElement && (local === undefined || local.show === true) && (\r\n        <BlmAccordion title={t(\"accordion.local\")}>\r\n          <BlmCourseTree\r\n            data={localElement}\r\n            treeType=\"template\"\r\n            selectedItem={selectedItem}\r\n            allowedItems={template?.allowedItems || DEFAULT_TEMPLATE_ITMES}\r\n            onItemClick={handleTreeItemClick}\r\n          />\r\n        </BlmAccordion>\r\n      )}\r\n      {annexes?.show && (\r\n        <BlmAccordion title={t(\"accordion.annexes\")}>\r\n          {structure?.annexes && (\r\n            <BlmCourseTree\r\n              data={structure.annexes}\r\n              treeType={ElementType.Annexes}\r\n              allowedItems={annexes?.allowedItems || DEFAULT_ITEMS}\r\n              selectedItem={selectedItem}\r\n              onItemClick={handleTreeItemClick}\r\n            />\r\n          )}\r\n        </BlmAccordion>\r\n      )}\r\n    </BlmSelect>\r\n  );\r\n}\r\n\r\nexport default BlmStructureSelect;\r\n"]},"metadata":{},"sourceType":"module"}