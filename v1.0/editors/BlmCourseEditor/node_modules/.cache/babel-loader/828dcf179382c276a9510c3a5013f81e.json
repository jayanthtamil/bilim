{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\template-editors\\\\core\\\\template-editor\\\\BlmTemplateEditor.tsx\";\nimport React, { useRef } from \"react\";\nimport { Drawer } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { ElementType } from \"editor-constants\";\nimport { BlmFontStyles } from \"components/frames\";\nimport { BlmContentEditor } from \"components/content-editor\";\nimport { BlmQuestionEditor } from \"components/question-editor\";\nimport \"./template-editor.scss\";\n\nfunction BlmTemplateEditor(props) {\n  const {\n    open,\n    frameEle,\n    element,\n    template,\n    onSave,\n    onClose,\n    openConfirmDialog\n  } = props;\n  const editorRef = useRef(null);\n  const {\n    t\n  } = useTranslation();\n\n  const openSaveConfirmDialog = () => {\n    const options = {\n      className: \"template-editor-warning-dialog\",\n      okLabel: `${t(\"button.save\")}`,\n      cancelLabel: `${t(\"button.cancel\")}`\n    };\n    openConfirmDialog(\"\", `${t(\"alert.save_changes\")}`, handleSave, handleCancel, options);\n  };\n\n  const handleSave = event => {\n    const editor = editorRef.current;\n\n    if (editor) {\n      editor.saveOnClose(event);\n    }\n  };\n\n  const handleCancel = event => {\n    const editor = editorRef.current;\n\n    if (editor) {\n      editor.revert();\n    }\n\n    handleClose(event);\n  };\n\n  const handleDrawerClose = event => {\n    const editor = editorRef.current;\n\n    if (editor && editor.isEdited) {\n      openSaveConfirmDialog();\n    } else {\n      handleClose(event);\n    }\n  };\n\n  const handleClose = event => {\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    className: \"template-editor-drawer\",\n    open: open,\n    disableEnforceFocus: true,\n    onClose: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BlmFontStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), template.templateType === ElementType.Question ? /*#__PURE__*/React.createElement(BlmQuestionEditor, {\n    ref: editorRef,\n    element: element,\n    template: template,\n    onSave: onSave,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(BlmContentEditor, {\n    ref: editorRef,\n    element: element,\n    frameEle: frameEle,\n    template: template,\n    onSave: onSave,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default BlmTemplateEditor;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/template-editors/core/template-editor/BlmTemplateEditor.tsx"],"names":["React","useRef","Drawer","useTranslation","ElementType","BlmFontStyles","BlmContentEditor","BlmQuestionEditor","BlmTemplateEditor","props","open","frameEle","element","template","onSave","onClose","openConfirmDialog","editorRef","t","openSaveConfirmDialog","options","className","okLabel","cancelLabel","handleSave","handleCancel","event","editor","current","saveOnClose","revert","handleClose","handleDrawerClose","isEdited","templateType","Question"],"mappings":"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","sourcesContent":["import React, { MouseEvent, useRef } from \"react\";\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CourseElementTemplate, CourseElement, TemplateEditorComponent } from \"types\";\r\nimport { ElementType } from \"editor-constants\";\r\nimport { BlmFontStyles } from \"components/frames\";\r\nimport { BlmContentEditor } from \"components/content-editor\";\r\nimport { BlmQuestionEditor } from \"components/question-editor\";\r\nimport { ContainerProps } from \"./template-editor-container\";\r\nimport \"./template-editor.scss\";\r\n\r\ninterface CompProps extends ContainerProps {\r\n  open: boolean;\r\n  frameEle: HTMLElement;\r\n  element: CourseElement;\r\n  template: CourseElementTemplate;\r\n  onSave: (template: CourseElementTemplate) => void;\r\n  onClose: (event: MouseEvent) => void;\r\n}\r\n\r\nfunction BlmTemplateEditor(props: CompProps) {\r\n  const { open, frameEle, element, template, onSave, onClose, openConfirmDialog } = props;\r\n  const editorRef = useRef<TemplateEditorComponent | null>(null);\r\n  const { t } = useTranslation();\r\n\r\n  const openSaveConfirmDialog = () => {\r\n    const options = {\r\n      className: \"template-editor-warning-dialog\",\r\n      okLabel: `${t(\"button.save\")}`,\r\n      cancelLabel: `${t(\"button.cancel\")}`,\r\n    };\r\n\r\n    openConfirmDialog(\"\", `${t(\"alert.save_changes\")}`, handleSave, handleCancel, options);\r\n  };\r\n\r\n  const handleSave = (event: MouseEvent) => {\r\n    const editor = editorRef.current;\r\n\r\n    if (editor) {\r\n      editor.saveOnClose(event);\r\n    }\r\n  };\r\n\r\n  const handleCancel = (event: MouseEvent) => {\r\n    const editor = editorRef.current;\r\n\r\n    if (editor) {\r\n      editor.revert();\r\n    }\r\n\r\n    handleClose(event);\r\n  };\r\n\r\n  const handleDrawerClose = (event: any) => {\r\n    const editor = editorRef.current;\r\n\r\n    if (editor && editor.isEdited) {\r\n      openSaveConfirmDialog();\r\n    } else {\r\n      handleClose(event);\r\n    }\r\n  };\r\n\r\n  const handleClose = (event: MouseEvent) => {\r\n    if (onClose) {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      className=\"template-editor-drawer\"\r\n      open={open}\r\n      disableEnforceFocus\r\n      onClose={handleDrawerClose}\r\n    >\r\n      <BlmFontStyles />\r\n      {template.templateType === ElementType.Question ? (\r\n        <BlmQuestionEditor\r\n          ref={editorRef}\r\n          element={element}\r\n          template={template}\r\n          onSave={onSave}\r\n          onClose={handleClose}\r\n        />\r\n      ) : (\r\n        <BlmContentEditor\r\n          ref={editorRef}\r\n          element={element}\r\n          frameEle={frameEle}\r\n          template={template}\r\n          onSave={onSave}\r\n          onClose={handleClose}\r\n        />\r\n      )}\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default BlmTemplateEditor;\r\n"]},"metadata":{},"sourceType":"module"}