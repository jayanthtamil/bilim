{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\actions\\\\popover\\\\BlmPopoverAction.tsx\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport BlmPopoverActionEditor from \"./editor\";\nimport \"./styles.scss\";\n\nfunction BlmPopoverAction(props) {\n  const {\n    data,\n    onChange,\n    onApplyStyle\n  } = props;\n  const [open, setOpen] = useState(false);\n  const {\n    t\n  } = useTranslation();\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange({\n        target: {\n          name: \"popover\",\n          value: newData\n        }\n      });\n    }\n  };\n\n  const handleEditClick = () => {\n    setOpen(true);\n  };\n\n  const handleSave = newData => {\n    updateChange(newData);\n  };\n\n  const handleApplyStyle = style => {\n    if (onApplyStyle) {\n      onApplyStyle({\n        target: {\n          name: \"popover\",\n          value: style\n        }\n      });\n    }\n  };\n\n  const hanldeClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popover-action-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popover-action-edit-btn\",\n    onClick: handleEditClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, t(\"button.edit\")), open && /*#__PURE__*/React.createElement(BlmPopoverActionEditor, {\n    data: data,\n    onSave: handleSave,\n    onApplyStyle: handleApplyStyle,\n    onClose: hanldeClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default BlmPopoverAction;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/actions/popover/BlmPopoverAction.tsx"],"names":["React","useState","useTranslation","BlmPopoverActionEditor","BlmPopoverAction","props","data","onChange","onApplyStyle","open","setOpen","t","updateChange","newData","target","name","value","handleEditClick","handleSave","handleApplyStyle","style","hanldeClose"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,OAAOC,sBAAP,MAAmC,UAAnC;AACA,OAAO,eAAP;;AAQA,SAASC,gBAAT,CAA0BC,KAA1B,EAA4C;AAC1C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAAmCH,KAAzC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAQT,cAAc,EAA5B;;AAEA,QAAMU,YAAY,GAAIC,OAAD,IAA4B;AAC/C,QAAIN,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAE,SAAR;AAAmBC,UAAAA,KAAK,EAAEH;AAA1B;AAAV,OAAD,CAAR;AACD;AACF,GAJD;;AAMA,QAAMI,eAAe,GAAG,MAAM;AAC5BP,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMQ,UAAU,GAAIL,OAAD,IAA4B;AAC7CD,IAAAA,YAAY,CAACC,OAAD,CAAZ;AACD,GAFD;;AAIA,QAAMM,gBAAgB,GAAIC,KAAD,IAAmB;AAC1C,QAAIZ,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAAC;AAAEM,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAE,SAAR;AAAmBC,UAAAA,KAAK,EAAEI;AAA1B;AAAV,OAAD,CAAZ;AACD;AACF,GAJD;;AAMA,QAAMC,WAAW,GAAG,MAAM;AACxBX,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAyC,IAAA,OAAO,EAAEO,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,CAAC,CAAC,aAAD,CADJ,CADF,EAIGF,IAAI,iBACH,oBAAC,sBAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,MAAM,EAAEY,UAFV;AAGE,IAAA,YAAY,EAAEC,gBAHhB;AAIE,IAAA,OAAO,EAAEE,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF;AAeD;;AAED,eAAejB,gBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomChangeEvent, PopoverAction } from \"types\";\r\nimport BlmPopoverActionEditor from \"./editor\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  data?: PopoverAction;\r\n  onChange?: (event: CustomChangeEvent<PopoverAction>) => void;\r\n  onApplyStyle?: (event: CustomChangeEvent<string>) => void;\r\n}\r\n\r\nfunction BlmPopoverAction(props: CompProps) {\r\n  const { data, onChange, onApplyStyle } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const updateChange = (newData: PopoverAction) => {\r\n    if (onChange) {\r\n      onChange({ target: { name: \"popover\", value: newData } });\r\n    }\r\n  };\r\n\r\n  const handleEditClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleSave = (newData: PopoverAction) => {\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleApplyStyle = (style: string) => {\r\n    if (onApplyStyle) {\r\n      onApplyStyle({ target: { name: \"popover\", value: style } });\r\n    }\r\n  };\r\n\r\n  const hanldeClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"popover-action-wrapper\">\r\n      <div className=\"popover-action-edit-btn\" onClick={handleEditClick}>\r\n        {t(\"button.edit\")}\r\n      </div>\r\n      {open && (\r\n        <BlmPopoverActionEditor\r\n          data={data}\r\n          onSave={handleSave}\r\n          onApplyStyle={handleApplyStyle}\r\n          onClose={hanldeClose}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmPopoverAction;\r\n"]},"metadata":{},"sourceType":"module"}