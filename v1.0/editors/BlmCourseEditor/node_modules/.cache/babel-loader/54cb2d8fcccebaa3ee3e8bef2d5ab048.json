{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\hotspot\\\\picker\\\\BlmHotspotPicker.tsx\";\nimport React, { useState } from \"react\";\nimport { Drawer } from \"@material-ui/core\";\nimport { AcceptedFileTypes } from \"editor-constants\";\nimport { BlmMediaPicker } from \"components/shared\";\nimport BlmClassicPreview from \"./classic\";\nimport Blm360Preview from \"./360\";\nimport \"./styles.scss\";\nconst deleteAlert = {\n  title: \"Warning\",\n  message: `Do you want to delete the main media?\n    All hotspots will be deleted.\n    This operation cannot be reverted.`,\n  options: {\n    className: \"hotspot-delete-warning\"\n  }\n};\n\nfunction BlmHotspotPicker(props) {\n  const {\n    type,\n    elementId,\n    data,\n    isLinked,\n    selectedItem,\n    onChange,\n    onItemChange,\n    options2\n  } = props;\n  const {\n    media,\n    items\n  } = data;\n  const [fullScreen, setFullScreen] = useState(false);\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange(newData);\n    }\n  };\n\n  const handleChange = event => {\n    const target = event.target;\n    const {\n      name,\n      value\n    } = target;\n    let newHotspot;\n\n    if (name === \"media\") {\n      newHotspot = { ...data,\n        media: value,\n        items: value ? items : []\n      };\n    }\n\n    if (newHotspot) {\n      updateChange(newHotspot);\n    }\n  };\n\n  const handleFullscreen = () => {\n    setFullScreen(!fullScreen);\n  };\n\n  const renderChildren = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hotspot-picker-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BlmMediaPicker, {\n      name: \"media\",\n      elementId: elementId,\n      data: media,\n      isLinked: isLinked,\n      acceptedFiles: [AcceptedFileTypes.Image360MainMedia],\n      previewZone: \"none\",\n      placeholder: \"Select media\",\n      deleteAlert: deleteAlert,\n      className: \"media-picker-3\",\n      onChange: handleChange,\n      hotspot: 'hotspot',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, type === \"panorama\" ? /*#__PURE__*/React.createElement(Blm360Preview, {\n      data: data,\n      selectedItem: selectedItem,\n      onChange: onItemChange,\n      options2: options2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(BlmClassicPreview, {\n      data: data,\n      selectedItem: selectedItem,\n      onChange: onItemChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hotspots-fullscreen-btn\",\n      onClick: handleFullscreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  if (fullScreen) {\n    return /*#__PURE__*/React.createElement(Drawer, {\n      className: \"hotspot-picker-drawer\",\n      open: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, renderChildren());\n  } else {\n    return renderChildren();\n  }\n}\n\nexport default BlmHotspotPicker;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/hotspot/picker/BlmHotspotPicker.tsx"],"names":["React","useState","Drawer","AcceptedFileTypes","BlmMediaPicker","BlmClassicPreview","Blm360Preview","deleteAlert","title","message","options","className","BlmHotspotPicker","props","type","elementId","data","isLinked","selectedItem","onChange","onItemChange","options2","media","items","fullScreen","setFullScreen","updateChange","newData","handleChange","event","target","name","value","newHotspot","handleFullscreen","renderChildren","Image360MainMedia"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Drawer } from \"@material-ui/core\";\r\n\r\nimport {\r\n  MediaHotspotItem,\r\n  MediaHotspot,\r\n  CustomChangeEvent,\r\n  MediaFile,\r\n  MediaConfigOptions,\r\n} from \"types\";\r\nimport { AcceptedFileTypes } from \"editor-constants\";\r\nimport { BlmMediaPicker } from \"components/shared\";\r\nimport BlmClassicPreview, { HotspotChangeEvent } from \"./classic\";\r\nimport Blm360Preview from \"./360\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  type?: \"standard\" | \"panorama\";\r\n  elementId: string;\r\n  data: MediaHotspot;\r\n  isLinked?: boolean;\r\n  selectedItem?: MediaHotspotItem;\r\n  onChange?: (data: MediaHotspot) => void;\r\n  onItemChange?: (event: HotspotChangeEvent) => void;\r\n  options2?: MediaConfigOptions;\r\n}\r\n\r\nconst deleteAlert = {\r\n  title: \"Warning\",\r\n  message: `Do you want to delete the main media?\r\n    All hotspots will be deleted.\r\n    This operation cannot be reverted.`,\r\n  options: { className: \"hotspot-delete-warning\" },\r\n};\r\n\r\nfunction BlmHotspotPicker(props: CompProps) {\r\n  const { type, elementId, data, isLinked, selectedItem, onChange, onItemChange, options2 } = props;\r\n  const { media, items } = data;\r\n  const [fullScreen, setFullScreen] = useState(false);\r\n\r\n  const updateChange = (newData: MediaHotspot) => {\r\n    if (onChange) {\r\n      onChange(newData);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: CustomChangeEvent<MediaFile | undefined>) => {\r\n    const target = event.target;\r\n    const { name, value } = target;\r\n    let newHotspot: MediaHotspot | undefined;\r\n\r\n    if (name === \"media\") {\r\n      newHotspot = { ...data, media: value, items: value ? items : [] };\r\n    }\r\n\r\n    if (newHotspot) {\r\n      updateChange(newHotspot);\r\n    }\r\n  };\r\n\r\n  const handleFullscreen = () => {\r\n    setFullScreen(!fullScreen);\r\n  };\r\n\r\n  const renderChildren = () => {\r\n    return (\r\n      <div className=\"hotspot-picker-wrapper\">\r\n        <BlmMediaPicker\r\n          name=\"media\"\r\n          elementId={elementId}\r\n          data={media}\r\n          isLinked={isLinked}\r\n          acceptedFiles={[AcceptedFileTypes.Image360MainMedia]}\r\n          previewZone=\"none\"\r\n          placeholder=\"Select media\"\r\n          deleteAlert={deleteAlert}\r\n          className=\"media-picker-3\"\r\n          onChange={handleChange}\r\n          hotspot={'hotspot'}\r\n        >\r\n          {type === \"panorama\" ? (\r\n            <Blm360Preview\r\n              data={data}\r\n              selectedItem={selectedItem}\r\n              onChange={onItemChange}\r\n              options2={options2}\r\n            />\r\n          ) : (\r\n            <BlmClassicPreview data={data} selectedItem={selectedItem} onChange={onItemChange} />\r\n          )}\r\n          <div className=\"hotspots-fullscreen-btn\" onClick={handleFullscreen} />\r\n        </BlmMediaPicker>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (fullScreen) {\r\n    return (\r\n      <Drawer className=\"hotspot-picker-drawer\" open={true}>\r\n        {renderChildren()}\r\n      </Drawer>\r\n    );\r\n  } else {\r\n    return renderChildren();\r\n  }\r\n}\r\n\r\nexport default BlmHotspotPicker;\r\n"]},"metadata":{},"sourceType":"module"}