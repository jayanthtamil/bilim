{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["//https:stackoverflow.com/questions/49752151/typescript-keyof-returning-specific-type\r\n\r\nexport type KeysOfType<T, TProp> = Exclude<\r\n  {\r\n    [P in keyof T]: T[P] extends TProp | undefined | null ? P : never;\r\n  }[keyof T],\r\n  undefined\r\n>;\r\n\r\nexport type MapType<T, M, N> = {\r\n  [P in keyof T]: T[P] extends M | undefined | null ? N : T[P];\r\n};\r\n\r\nexport type SimpleObject = { [key: string]: any };\r\n"]},"metadata":{},"sourceType":"module"}