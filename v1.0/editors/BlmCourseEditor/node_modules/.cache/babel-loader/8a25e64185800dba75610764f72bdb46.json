{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\question-editor\\\\core\\\\BlmQuestionEditor.tsx\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useReducer } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { differenceOfObjects } from \"utils\";\nimport { VerticalTabs } from \"shared/material-ui\";\nimport { getQuestionHTMLJSON, getQuestionMedias, getQuestionTemplateModel, setQuestionTemplateHTML } from \"template-builders\";\nimport { BlmQuestionDashboard, BlmQuestionIntroduction, BlmQuestionMain, BlmQuestionFeedback, BlmQuestionParameters } from \"../panels\";\nimport { initQuestionEditor, questionReducer } from \"../reducers\";\nimport QuestionEditorContext from \"./QuestionEditorContext\";\nimport \"./question-editor.scss\";\nconst initState = {\n  data: null,\n  oldMedias: [],\n  isEdited: false\n};\n\nconst createTemplate = (template, question) => {\n  const newTemplate = { ...template\n  };\n  newTemplate.html = setQuestionTemplateHTML(newTemplate, question);\n  newTemplate.htmlJSON = getQuestionHTMLJSON(newTemplate, question);\n  return newTemplate;\n};\n\nconst BlmQuestionTemplate = forwardRef((props, ref) => {\n  const {\n    element,\n    template,\n    onSave,\n    onClose,\n    removeFiles,\n    clearFiles\n  } = props;\n  const [state, dispatch] = useReducer(questionReducer, initState);\n  const {\n    data,\n    oldMedias,\n    isEdited\n  } = state;\n  const {\n    t\n  } = useTranslation(\"question-editor\");\n  useImperativeHandle(ref, () => ({\n    isEdited,\n    saveOnClose: handleSaveOnClose,\n    revert: revertChanges\n  }));\n  useEffect(() => {\n    if (template) {\n      const editor = getQuestionTemplateModel(template);\n      dispatch(initQuestionEditor(editor));\n    }\n  }, [template, dispatch]);\n\n  const saveChanges = () => {\n    if (data && isEdited) {\n      const newTemplate = createTemplate(template, data);\n      const newMedias = getQuestionMedias(data);\n      const deleteMedias = differenceOfObjects(oldMedias, newMedias, \"id\");\n\n      if (onSave) {\n        onSave(newTemplate);\n      }\n\n      removeFiles(deleteMedias);\n    }\n  };\n\n  const revertChanges = () => {\n    clearFiles(element.id, false);\n  };\n\n  const handleSaveOnClose = event => {\n    saveChanges();\n    clearFiles(element.id, true);\n\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  const renderThumbnail = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-thumbnail-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, template.thumbnail && /*#__PURE__*/React.createElement(\"img\", {\n      src: template.thumbnail,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 32\n      }\n    }));\n  };\n\n  if (!data) {\n    return null;\n  } else {\n    const {\n      type,\n      introduction,\n      main,\n      feedback,\n      parameters\n    } = data;\n    return /*#__PURE__*/React.createElement(QuestionEditorContext.Provider, {\n      value: {\n        element\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-editor-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(VerticalTabs, {\n      selectedIndex: 1,\n      otherChildren: renderThumbnail(),\n      className: \"question-editor-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BlmQuestionDashboard, {\n      label: t(\"tabs.introduction\"),\n      template: template,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BlmQuestionIntroduction, {\n      data: introduction,\n      dispatch: dispatch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(BlmQuestionDashboard, {\n      label: t(\"tabs.main\"),\n      template: template,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BlmQuestionMain, {\n      type: type,\n      introduction: introduction,\n      data: main,\n      feedback: feedback,\n      dispatch: dispatch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(BlmQuestionDashboard, {\n      label: t(\"tabs.feedback\"),\n      template: template,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BlmQuestionFeedback, {\n      main: main,\n      data: feedback,\n      dispatch: dispatch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(BlmQuestionDashboard, {\n      label: t(\"tabs.parameters\"),\n      template: template,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BlmQuestionParameters, {\n      data: parameters,\n      dispatch: dispatch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-editor-close-btn\",\n      onClick: handleSaveOnClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    })));\n  }\n});\nexport default BlmQuestionTemplate;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/question-editor/core/BlmQuestionEditor.tsx"],"names":["React","forwardRef","useEffect","useImperativeHandle","useReducer","useTranslation","differenceOfObjects","VerticalTabs","getQuestionHTMLJSON","getQuestionMedias","getQuestionTemplateModel","setQuestionTemplateHTML","BlmQuestionDashboard","BlmQuestionIntroduction","BlmQuestionMain","BlmQuestionFeedback","BlmQuestionParameters","initQuestionEditor","questionReducer","QuestionEditorContext","initState","data","oldMedias","isEdited","createTemplate","template","question","newTemplate","html","htmlJSON","BlmQuestionTemplate","props","ref","element","onSave","onClose","removeFiles","clearFiles","state","dispatch","t","saveOnClose","handleSaveOnClose","revert","revertChanges","editor","saveChanges","newMedias","deleteMedias","id","event","renderThumbnail","thumbnail","type","introduction","main","feedback","parameters"],"mappings":"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","sourcesContent":["import React, { forwardRef, MouseEvent, useEffect, useImperativeHandle, useReducer } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  CourseElement,\r\n  CourseElementTemplate,\r\n  QuestionTemplate,\r\n  TemplateEditorComponent,\r\n} from \"types\";\r\nimport { differenceOfObjects } from \"utils\";\r\nimport { VerticalTabs } from \"shared/material-ui\";\r\nimport {\r\n  getQuestionHTMLJSON,\r\n  getQuestionMedias,\r\n  getQuestionTemplateModel,\r\n  setQuestionTemplateHTML,\r\n} from \"template-builders\";\r\nimport {\r\n  BlmQuestionDashboard,\r\n  BlmQuestionIntroduction,\r\n  BlmQuestionMain,\r\n  BlmQuestionFeedback,\r\n  BlmQuestionParameters,\r\n} from \"../panels\";\r\nimport { initQuestionEditor, QuestionEditorState, questionReducer } from \"../reducers\";\r\nimport QuestionEditorContext from \"./QuestionEditorContext\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./question-editor.scss\";\r\n\r\ninterface CompProps extends ContainerProps {\r\n  element: CourseElement;\r\n  template: CourseElementTemplate;\r\n  onSave: (template: CourseElementTemplate) => void;\r\n  onClose: (event: MouseEvent) => void;\r\n}\r\n\r\nconst initState: QuestionEditorState = {\r\n  data: null,\r\n  oldMedias: [],\r\n  isEdited: false,\r\n};\r\n\r\nconst createTemplate = (template: CourseElementTemplate, question: QuestionTemplate) => {\r\n  const newTemplate: CourseElementTemplate = {\r\n    ...template,\r\n  };\r\n\r\n  newTemplate.html = setQuestionTemplateHTML(newTemplate, question);\r\n  newTemplate.htmlJSON = getQuestionHTMLJSON(newTemplate, question);\r\n\r\n  return newTemplate;\r\n};\r\n\r\nconst BlmQuestionTemplate = forwardRef<TemplateEditorComponent, CompProps>((props, ref) => {\r\n  const { element, template, onSave, onClose, removeFiles, clearFiles } = props;\r\n  const [state, dispatch] = useReducer(questionReducer, initState);\r\n  const { data, oldMedias, isEdited } = state;\r\n  const { t } = useTranslation(\"question-editor\");\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    isEdited,\r\n    saveOnClose: handleSaveOnClose,\r\n    revert: revertChanges,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (template) {\r\n      const editor = getQuestionTemplateModel(template);\r\n\r\n      dispatch(initQuestionEditor(editor));\r\n    }\r\n  }, [template, dispatch]);\r\n\r\n  const saveChanges = () => {\r\n    if (data && isEdited) {\r\n      const newTemplate = createTemplate(template, data);\r\n      const newMedias = getQuestionMedias(data);\r\n      const deleteMedias = differenceOfObjects(oldMedias, newMedias, \"id\");\r\n\r\n      if (onSave) {\r\n        onSave(newTemplate);\r\n      }\r\n\r\n      removeFiles(deleteMedias);\r\n    }\r\n  };\r\n\r\n  const revertChanges = () => {\r\n    clearFiles(element.id, false);\r\n  };\r\n\r\n  const handleSaveOnClose = (event: MouseEvent) => {\r\n    saveChanges();\r\n    clearFiles(element.id, true);\r\n\r\n    if (onClose) {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n  const renderThumbnail = () => {\r\n    return (\r\n      <div className=\"template-thumbnail-box\">\r\n        {template.thumbnail && <img src={template.thumbnail} alt=\"\" />}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (!data) {\r\n    return null;\r\n  } else {\r\n    const { type, introduction, main, feedback, parameters } = data;\r\n\r\n    return (\r\n      <QuestionEditorContext.Provider value={{ element }}>\r\n        <div className=\"question-editor-wrapper\">\r\n          <VerticalTabs\r\n            selectedIndex={1}\r\n            otherChildren={renderThumbnail()}\r\n            className=\"question-editor-tabs\"\r\n          >\r\n            <BlmQuestionDashboard label={t(\"tabs.introduction\")} template={template}>\r\n              <BlmQuestionIntroduction data={introduction} dispatch={dispatch} />\r\n            </BlmQuestionDashboard>\r\n            <BlmQuestionDashboard label={t(\"tabs.main\")} template={template}>\r\n              <BlmQuestionMain\r\n                type={type}\r\n                introduction={introduction}\r\n                data={main}\r\n                feedback={feedback}\r\n                dispatch={dispatch}\r\n              />\r\n            </BlmQuestionDashboard>\r\n            <BlmQuestionDashboard label={t(\"tabs.feedback\")} template={template}>\r\n              <BlmQuestionFeedback main={main} data={feedback} dispatch={dispatch} />\r\n            </BlmQuestionDashboard>\r\n            <BlmQuestionDashboard label={t(\"tabs.parameters\")} template={template}>\r\n              <BlmQuestionParameters data={parameters} dispatch={dispatch} />\r\n            </BlmQuestionDashboard>\r\n          </VerticalTabs>\r\n          <div className=\"question-editor-close-btn\" onClick={handleSaveOnClose} />\r\n        </div>\r\n      </QuestionEditorContext.Provider>\r\n    );\r\n  }\r\n});\r\n\r\nexport default BlmQuestionTemplate;\r\n"]},"metadata":{},"sourceType":"module"}