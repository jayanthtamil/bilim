{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\structures\\\\panel\\\\copy-from\\\\BlmCopyFrom.tsx\";\nimport React from \"react\";\nimport { Popover, Select, MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport BlmCopyFromStructure from \"../copy-from-structure\";\nimport { ExpandOpen, ExpandClose } from \"assets/icons\";\nimport \"./copy-from-styles.scss\";\n\nfunction BlmCopyFrom(props) {\n  const {\n    open,\n    anchor,\n    element,\n    onClose,\n    getCopyFromDomainList,\n    getCopyFromDomainCategory,\n    getCopyFromSubFolderList,\n    selectTreeItem\n  } = props;\n  const [value, setValue] = React.useState(undefined);\n  const [domainList, setdomainList] = React.useState();\n  const [displayCategor, setDisplayCategory] = React.useState(false);\n  const [Category, setCategory] = React.useState(undefined);\n  const [courseId, setcourseId] = React.useState(undefined);\n  const [expanded, setexpanded] = React.useState([]);\n  const {\n    t\n  } = useTranslation(\"structures\");\n  React.useEffect(() => {\n    if (!domainList) {\n      getCopyFromDomainList().then(res => {\n        setdomainList(res.payload.domain);\n      });\n    }\n  }, [domainList, getCopyFromDomainList]);\n\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n    setValue(value);\n    setDisplayCategory(true);\n    getCopyFromDomainCategory(value).then(res => {\n      setDisplayCategory(true);\n      setCategory(res.payload.domain);\n      setexpanded([]);\n    });\n  };\n\n  const renderItems = () => {\n    if (domainList) {\n      return domainList === null || domainList === void 0 ? void 0 : domainList.map(item => {\n        if (typeof item === \"object\") {\n          const {\n            id,\n            name\n          } = item;\n          return /*#__PURE__*/React.createElement(MenuItem, {\n            key: id,\n            value: id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(ListItemIcon, {\n            className: name,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(ListItemText, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }\n          }, name));\n        }\n      });\n    }\n  };\n\n  const handleClose = () => {\n    if (onClose) {\n      onClose();\n      selectTreeItem();\n    }\n  };\n\n  const setExpandVal = node => {\n    setexpanded(prevExpandedState => {\n      var arr = [...prevExpandedState];\n\n      if (!arr.includes(node)) {\n        arr.push(node);\n      } else {\n        arr.splice(arr.indexOf(node), 1);\n      }\n\n      return arr;\n    });\n  };\n\n  const handleSubChildren = (course_id, res, node) => {\n    var newCategory = Category;\n\n    var renderTreeChildren = Category => {\n      Category.map(treeItemData => {\n        if (treeItemData.children && treeItemData.children.length > 0) {\n          renderTreeChildren(treeItemData.children);\n        }\n\n        if (treeItemData.id === course_id) {\n          treeItemData.children = res;\n          setExpandVal(node);\n        }\n\n        return Category;\n      });\n    };\n\n    renderTreeChildren(newCategory);\n    renderTree(newCategory);\n  };\n\n  const handleNodeSelect = (event, node) => {\n    var course_id = node.split(\"-\")[0];\n    var CategoryType = node.split(\"-\")[1];\n\n    if (CategoryType === \"course\") {\n      setcourseId(course_id);\n    }\n  };\n\n  const handleTreeItemClick = (child, node) => {\n    var course_id = node.split(\"-\")[0];\n    var type = node.split(\"-\")[1];\n    var link = node.split(\"-\")[2];\n    var params = link.split(\"/domainview/\");\n\n    if (child === undefined) {\n      if (type === \"content_folder\") {\n        getCopyFromSubFolderList(params[1].split(\"/\")[0], params[1].split(\"/\")[1], params[1].split(\"/\")[2]).then(res => {\n          handleSubChildren(course_id, res.payload.categories, node);\n        });\n      }\n    } else {\n      setExpandVal(node);\n    }\n  };\n\n  const renderTree = treeItems => {\n    return treeItems.map(treeItemData => {\n      let children = undefined;\n\n      if (treeItemData.children && treeItemData.children.length > 0) {\n        children = renderTree(treeItemData.children);\n      }\n\n      return /*#__PURE__*/React.createElement(TreeItem, {\n        key: treeItemData.id,\n        onIconClick: () => handleTreeItemClick(treeItemData.children, treeItemData.id + \"-\" + treeItemData.type + \"-\" + treeItemData.link),\n        onLabelClick: () => handleTreeItemClick(treeItemData.children, treeItemData.id + \"-\" + treeItemData.type + \"-\" + treeItemData.link),\n        nodeId: treeItemData.id + \"-\" + treeItemData.type + \"-\" + treeItemData.link,\n        label: /*#__PURE__*/React.createElement(React.Fragment, null, treeItemData.type === \"course\" && /*#__PURE__*/React.createElement(\"img\", {\n          className: treeItemData.flag_url.substring(treeItemData.flag_url.lastIndexOf(\"/\") + 1) === \"global.png\" ? \"globe-flag-icon\" : \"\",\n          src: treeItemData.flag_url,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }\n        }), treeItemData.type === \"content_folder\" && treeItemData.children === undefined ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"no-children\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }\n        }) : treeItemData.type === \"content_folder\" && treeItemData.children && treeItemData.children.length === 0 ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"empty-children\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }\n        }) : \"\", /*#__PURE__*/React.createElement(ListItemText, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }\n        }, treeItemData.title)),\n        children: children,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      });\n    });\n  };\n\n  const renderCategoryList = () => {\n    if (displayCategor && Category !== undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"catory-list-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TreeView, {\n        \"aria-label\": \"file system navigator\",\n        defaultCollapseIcon: /*#__PURE__*/React.createElement(ExpandOpen, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 34\n          }\n        }),\n        defaultExpandIcon: /*#__PURE__*/React.createElement(ExpandClose, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 32\n          }\n        }),\n        onNodeSelect: handleNodeSelect,\n        expanded: expanded,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }, renderTree(Category)));\n    }\n  };\n\n  const renderPlaceholder = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 12\n      }\n    }, \"-- Select a domain --\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"copy-from\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popover, {\n    id: \"structure-ctx\",\n    open: open,\n    anchorEl: anchor,\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: 3,\n      horizontal: -7\n    },\n    disableBackdropClick: true,\n    PaperProps: {\n      square: true\n    },\n    transitionDuration: 0,\n    className: \"copy-from-panel\",\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"copy-from-props-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"copy-from-left-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"copy-from-panel-close-btn\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"domain-lists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-bg-props-bg-media-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, t(\"copy_from.title\")), /*#__PURE__*/React.createElement(Select, {\n    name: \"action\",\n    value: value || \"\",\n    displayEmpty: true,\n    renderValue: value ? undefined : renderPlaceholder,\n    MenuProps: {\n      className: \"copt-from-domain-popover\"\n    },\n    className: \"copt-from-domain-dropdown\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, renderItems()), renderCategoryList())), courseId && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"copy-from-struture-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"copy-from-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, t(\"copy_from.structure_header\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"copy-from-struture-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }, t(\"accordion.structure\")), /*#__PURE__*/React.createElement(BlmCopyFromStructure, {\n    courseId: courseId,\n    element: element,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default BlmCopyFrom;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/structures/panel/copy-from/BlmCopyFrom.tsx"],"names":["React","Popover","Select","MenuItem","ListItemIcon","ListItemText","useTranslation","TreeView","TreeItem","BlmCopyFromStructure","ExpandOpen","ExpandClose","BlmCopyFrom","props","open","anchor","element","onClose","getCopyFromDomainList","getCopyFromDomainCategory","getCopyFromSubFolderList","selectTreeItem","value","setValue","useState","undefined","domainList","setdomainList","displayCategor","setDisplayCategory","Category","setCategory","courseId","setcourseId","expanded","setexpanded","t","useEffect","then","res","payload","domain","handleChange","event","target","renderItems","map","item","id","name","handleClose","setExpandVal","node","prevExpandedState","arr","includes","push","splice","indexOf","handleSubChildren","course_id","newCategory","renderTreeChildren","treeItemData","children","length","renderTree","handleNodeSelect","split","CategoryType","handleTreeItemClick","child","type","link","params","categories","treeItems","flag_url","substring","lastIndexOf","title","renderCategoryList","renderPlaceholder","vertical","horizontal","square","className"],"mappings":"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","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport { Popover, Select, MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ContainerProps } from \"./copy-from-container\";\r\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\r\nimport BlmCopyFromStructure from \"../copy-from-structure\";\r\nimport { ExpandOpen, ExpandClose } from \"assets/icons\";\r\nimport { CourseElement } from \"types\";\r\nimport \"./copy-from-styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  element?: CourseElement;\r\n  anchor?: HTMLElement | null;\r\n  open: boolean;\r\n  onClose?: () => void;\r\n}\r\n\r\nfunction BlmCopyFrom(props: CompProps) {\r\n  const {\r\n    open,\r\n    anchor,\r\n    element,\r\n    onClose,\r\n    getCopyFromDomainList,\r\n    getCopyFromDomainCategory,\r\n    getCopyFromSubFolderList,\r\n    selectTreeItem,\r\n  } = props;\r\n  const [value, setValue] = React.useState(undefined);\r\n  const [domainList, setdomainList] = React.useState<any>();\r\n  const [displayCategor, setDisplayCategory] = React.useState(false);\r\n  const [Category, setCategory] = React.useState<any | undefined>(undefined);\r\n  const [courseId, setcourseId] = React.useState<any | undefined>(undefined);\r\n  const [expanded, setexpanded] = React.useState<any>([]);\r\n  const { t } = useTranslation(\"structures\");\r\n\r\n  React.useEffect(() => {\r\n    if (!domainList) {\r\n      getCopyFromDomainList().then((res) => {\r\n        setdomainList(res.payload.domain);\r\n      });\r\n    }\r\n  }, [domainList, getCopyFromDomainList]);\r\n\r\n  const handleChange = (event: ChangeEvent<any>) => {\r\n    const { value } = event.target;\r\n    setValue(value);\r\n    setDisplayCategory(true);\r\n\r\n    getCopyFromDomainCategory(value).then((res) => {\r\n      setDisplayCategory(true);\r\n      setCategory(res.payload.domain);\r\n      setexpanded([]);\r\n    });\r\n  };\r\n\r\n  const renderItems = () => {\r\n    if (domainList) {\r\n      return domainList?.map((item: any) => {\r\n        if (typeof item === \"object\") {\r\n          const { id, name } = item;\r\n          return (\r\n            <MenuItem key={id} value={id}>\r\n              <ListItemIcon className={name} />\r\n              <ListItemText>{name}</ListItemText>\r\n            </MenuItem>\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (onClose) {\r\n      onClose();\r\n      selectTreeItem();\r\n    }\r\n  };\r\n\r\n  const setExpandVal = (node: string) => {\r\n    setexpanded((prevExpandedState: string[]) => {\r\n      var arr = [...prevExpandedState];\r\n      if (!arr.includes(node)) {\r\n        arr.push(node);\r\n      } else {\r\n        arr.splice(arr.indexOf(node), 1);\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const handleSubChildren = (course_id: string, res: object, node: string) => {\r\n    var newCategory = Category;\r\n    var renderTreeChildren = (Category: any) => {\r\n      Category.map((treeItemData: any) => {\r\n        if (treeItemData.children && treeItemData.children.length > 0) {\r\n          renderTreeChildren(treeItemData.children);\r\n        }\r\n\r\n        if (treeItemData.id === course_id) {\r\n          treeItemData.children = res;\r\n          setExpandVal(node);\r\n        }\r\n        return Category;\r\n      });\r\n    };\r\n    renderTreeChildren(newCategory);\r\n    renderTree(newCategory);\r\n  };\r\n\r\n  const handleNodeSelect = (event: ChangeEvent<{}>, node: string) => {\r\n    var course_id = node.split(\"-\")[0];\r\n    var CategoryType = node.split(\"-\")[1];\r\n    if (CategoryType === \"course\") {\r\n      setcourseId(course_id);\r\n    }\r\n  };\r\n\r\n  const handleTreeItemClick = (child: object, node: string) => {\r\n    var course_id = node.split(\"-\")[0];\r\n    var type = node.split(\"-\")[1];\r\n    var link = node.split(\"-\")[2];\r\n    var params = link.split(\"/domainview/\");\r\n\r\n    if (child === undefined) {\r\n      if (type === \"content_folder\") {\r\n        getCopyFromSubFolderList(\r\n          params[1].split(\"/\")[0],\r\n          params[1].split(\"/\")[1],\r\n          params[1].split(\"/\")[2]\r\n        ).then((res) => {\r\n          handleSubChildren(course_id, res.payload.categories, node);\r\n        });\r\n      }\r\n    } else {\r\n      setExpandVal(node);\r\n    }\r\n  };\r\n\r\n  const renderTree = (treeItems: any) => {\r\n    return treeItems.map((treeItemData: any) => {\r\n      let children = undefined;\r\n      if (treeItemData.children && treeItemData.children.length > 0) {\r\n        children = renderTree(treeItemData.children);\r\n      }\r\n      return (\r\n        <TreeItem\r\n          key={treeItemData.id}\r\n          onIconClick={() =>\r\n            handleTreeItemClick(\r\n              treeItemData.children,\r\n              treeItemData.id + \"-\" + treeItemData.type + \"-\" + treeItemData.link\r\n            )\r\n          }\r\n          onLabelClick={() =>\r\n            handleTreeItemClick(\r\n              treeItemData.children,\r\n              treeItemData.id + \"-\" + treeItemData.type + \"-\" + treeItemData.link\r\n            )\r\n          }\r\n          nodeId={treeItemData.id + \"-\" + treeItemData.type + \"-\" + treeItemData.link}\r\n          label={\r\n            <>\r\n              {treeItemData.type === \"course\" && (\r\n                <img\r\n                  className={\r\n                    treeItemData.flag_url.substring(treeItemData.flag_url.lastIndexOf(\"/\") + 1) ===\r\n                    \"global.png\"\r\n                      ? \"globe-flag-icon\"\r\n                      : \"\"\r\n                  }\r\n                  src={treeItemData.flag_url}\r\n                  alt=\"\"\r\n                />\r\n              )}\r\n              {treeItemData.type === \"content_folder\" && treeItemData.children === undefined ? (\r\n                <span className=\"no-children\" />\r\n              ) : treeItemData.type === \"content_folder\" &&\r\n                treeItemData.children &&\r\n                treeItemData.children.length === 0 ? (\r\n                <span className=\"empty-children\" />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <ListItemText>{treeItemData.title}</ListItemText>\r\n            </>\r\n          }\r\n          children={children}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderCategoryList = () => {\r\n    if (displayCategor && Category !== undefined) {\r\n      return (\r\n        <div className=\"catory-list-container\">\r\n          <TreeView\r\n            aria-label=\"file system navigator\"\r\n            defaultCollapseIcon={<ExpandOpen />}\r\n            defaultExpandIcon={<ExpandClose />}\r\n            onNodeSelect={handleNodeSelect}\r\n            expanded={expanded}\r\n          >\r\n            {renderTree(Category)}\r\n          </TreeView>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderPlaceholder = () => {\r\n    return <div>-- Select a domain --</div>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"copy-from\">\r\n      <Popover\r\n        id=\"structure-ctx\"\r\n        open={open}\r\n        anchorEl={anchor}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 3,\r\n          horizontal: -7,\r\n        }}\r\n        disableBackdropClick={true}\r\n        PaperProps={{ square: true }}\r\n        transitionDuration={0}\r\n        className=\"copy-from-panel\"\r\n        onClose={handleClose}\r\n      >\r\n        <div className=\"copy-from-props-container\">\r\n          <div className=\"copy-from-left-container\">\r\n            <div className=\"copy-from-panel-close-btn\" onClick={handleClose} />\r\n            <div className=\"domain-lists\">\r\n              <div className=\"page-bg-props-bg-media-title\">{t(\"copy_from.title\")}</div>\r\n              <Select\r\n                name=\"action\"\r\n                value={value || \"\"}\r\n                displayEmpty={true}\r\n                renderValue={value ? undefined : renderPlaceholder}\r\n                MenuProps={{\r\n                  className: \"copt-from-domain-popover\",\r\n                }}\r\n                className=\"copt-from-domain-dropdown\"\r\n                onChange={handleChange}\r\n              >\r\n                {renderItems()}\r\n              </Select>\r\n              {renderCategoryList()}\r\n            </div>\r\n          </div>\r\n          {courseId && (\r\n            <div className=\"copy-from-struture-container\">\r\n              <div className=\"copy-from-header\">{t(\"copy_from.structure_header\")}</div>\r\n              <div className=\"copy-from-struture-title\">{t(\"accordion.structure\")}</div>\r\n              <BlmCopyFromStructure courseId={courseId} element={element} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\nexport default BlmCopyFrom;\r\n"]},"metadata":{},"sourceType":"module"}