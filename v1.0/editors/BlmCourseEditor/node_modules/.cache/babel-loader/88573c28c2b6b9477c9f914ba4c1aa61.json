{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\actions\\\\media-layer\\\\BlmMediaLayerAction.tsx\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AcceptedFileTypes } from \"editor-constants\";\nimport { BlmMediaPicker } from \"components/shared\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport \"./styles.scss\";\n\nfunction BlmMediaLayerAction(props) {\n  const {\n    data,\n    onChange\n  } = props;\n  const {\n    element\n  } = useContentEditorCtx();\n  const {\n    layer\n  } = data || {};\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange({\n        target: {\n          name: \"mediaLayer\",\n          value: newData\n        }\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n    const newData = {\n      layer: value\n    };\n    updateChange(newData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-layer-action-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"media\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Image, AcceptedFileTypes.Video],\n    data: layer,\n    placeholder: \"Select media\",\n    className: \"media-layer-picker\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-layer-info-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, t(\"media_layer.layer_info\")));\n}\n\nexport default BlmMediaLayerAction;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/actions/media-layer/BlmMediaLayerAction.tsx"],"names":["React","useTranslation","AcceptedFileTypes","BlmMediaPicker","useContentEditorCtx","BlmMediaLayerAction","props","data","onChange","element","layer","t","updateChange","newData","target","name","value","handleChange","event","id","Image","Video"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,cAAT,QAAuD,mBAAvD;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,OAAO,eAAP;;AAOA,SAASC,mBAAT,CAA6BC,KAA7B,EAA+C;AAC7C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBF,KAA3B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAcL,mBAAmB,EAAvC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAYH,IAAI,IAAI,EAA1B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAQV,cAAc,CAAC,gBAAD,CAA5B;;AAEA,QAAMW,YAAY,GAAIC,OAAD,IAA+B;AAClD,QAAIL,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAE,YAAR;AAAsBC,UAAAA,KAAK,EAAEH;AAA7B;AAAV,OAAD,CAAR;AACD;AACF,GAJD;;AAMA,QAAMI,YAAY,GAAIC,KAAD,IAAmC;AACtD,UAAM;AAAEF,MAAAA;AAAF,QAAYE,KAAK,CAACJ,MAAxB;AACA,UAAMD,OAAO,GAAG;AAAEH,MAAAA,KAAK,EAAEM;AAAT,KAAhB;AAEAJ,IAAAA,YAAY,CAACC,OAAD,CAAZ;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAEJ,OAAO,CAAEU,EAFtB;AAGE,IAAA,aAAa,EAAE,CAACjB,iBAAiB,CAACkB,KAAnB,EAA0BlB,iBAAiB,CAACmB,KAA5C,CAHjB;AAIE,IAAA,IAAI,EAAEX,KAJR;AAKE,IAAA,WAAW,EAAC,cALd;AAME,IAAA,SAAS,EAAC,oBANZ;AAOE,IAAA,QAAQ,EAAEO,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCN,CAAC,CAAC,wBAAD,CAAxC,CAVF,CADF;AAcD;;AACD,eAAeN,mBAAf","sourcesContent":["import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomChangeEvent, MediaLayerAction } from \"types\";\r\nimport { AcceptedFileTypes } from \"editor-constants\";\r\nimport { BlmMediaPicker, MediaPickerChangeEvent } from \"components/shared\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  data?: MediaLayerAction;\r\n  onChange?: (event: CustomChangeEvent<MediaLayerAction>) => void;\r\n}\r\n\r\nfunction BlmMediaLayerAction(props: CompProps) {\r\n  const { data, onChange } = props;\r\n  const { element } = useContentEditorCtx();\r\n  const { layer } = data || {};\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const updateChange = (newData: MediaLayerAction) => {\r\n    if (onChange) {\r\n      onChange({ target: { name: \"mediaLayer\", value: newData } });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: MediaPickerChangeEvent) => {\r\n    const { value } = event.target;\r\n    const newData = { layer: value };\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"media-layer-action-wrapper\">\r\n      <BlmMediaPicker\r\n        name=\"media\"\r\n        elementId={element!.id}\r\n        acceptedFiles={[AcceptedFileTypes.Image, AcceptedFileTypes.Video]}\r\n        data={layer}\r\n        placeholder=\"Select media\"\r\n        className=\"media-layer-picker\"\r\n        onChange={handleChange}\r\n      />\r\n      <div className=\"media-layer-info-lbl\">{t(\"media_layer.layer_info\")}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default BlmMediaLayerAction;\r\n"]},"metadata":{},"sourceType":"module"}