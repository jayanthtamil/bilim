{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\button\\\\BlmButton.tsx\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { StyleListTypes, AcceptedFileTypes } from \"editor-constants\";\nimport { BlmMediaFormat, BlmMediaPicker } from \"components/shared\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { updateButtonComponent } from \"components/content-editor/reducers\";\nimport BlmActions, { BlmSwitchActions } from \"../actions\";\nimport { BlmStyleTintPicker } from \"../styles\";\nimport \"./styles.scss\";\nconst NUMBER_REG = /^$|^[\\d\\b]+$/;\n\nfunction BlmButton(props) {\n  const {\n    data,\n    temp\n  } = props;\n  const {\n    element,\n    dispatch\n  } = useContentEditorCtx();\n  const {\n    value: button,\n    hasApplyStyle,\n    buttonOptions\n  } = data;\n  const {\n    format,\n    config\n  } = buttonOptions;\n  const {\n    // background,\n    inline,\n    // label,\n    // number,\n    title,\n    description,\n    caption,\n    clickAction,\n    overAction,\n    style\n  } = button;\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  const updateChange = newButton => {\n    const newData = { ...data,\n      value: newButton\n    };\n\n    if (dispatch) {\n      dispatch(updateButtonComponent(newData));\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newButton = { ...button\n    };\n\n    if (name === \"background\" || name === \"inline\" || name === \"title\" || name === \"description\" || name === \"caption\" || name === \"label\" || name === \"number\" && NUMBER_REG.test(value) || name === \"clickAction\" || name === \"overAction\" || name === \"style\") {\n      newButton[name] = value;\n    }\n\n    updateChange(newButton);\n  };\n\n  const handleMediaFormatChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newData = { ...data\n    };\n\n    if (name === \"format\") {\n      if (value.value === \"auto\") {\n        value.width = 0;\n      } else {\n        if (value.width === 0) {\n          value.width = value.defaultWidth;\n        }\n      }\n\n      newData.buttonOptions.format = value;\n    }\n\n    if (dispatch) {\n      dispatch(updateButtonComponent(newData));\n    }\n  };\n\n  const handleSwitchClick = () => {\n    const newButton = { ...button\n    };\n    newButton.clickAction = button.overAction;\n    newButton.overAction = button.clickAction;\n    updateChange(newButton);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, t(\"title.parameters\")), /*#__PURE__*/React.createElement(BlmMediaFormat, {\n    data: format,\n    formats: config === null || config === void 0 ? void 0 : config.format,\n    onChange: handleMediaFormatChange,\n    isButtonFormater: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new_button-params-list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-txt-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: t(\"label.title\"),\n    value: title,\n    className: \"button-params-title-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    placeholder: t(\"label.description\"),\n    value: description,\n    className: \"button-params-desc-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"caption\",\n    placeholder: t(\"label.caption\"),\n    value: caption,\n    className: \"button-params-caption-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-item-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-item-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Icon\"), /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"inline\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Image],\n    data: inline,\n    placeholder: \"Select media\",\n    className: \"media-picker-3\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-actions-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-actions-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, t(\"label.action\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-actions-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, t(\"label.on\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"button-actions-bold-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 27\n    }\n  }, t(\"label.click\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-actions-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"On \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"button-actions-bold-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 14\n    }\n  }, t(\"label.roll_over\"))), /*#__PURE__*/React.createElement(BlmActions, {\n    name: \"clickAction\",\n    data: clickAction,\n    temp: temp,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BlmSwitchActions, {\n    left: clickAction,\n    right: overAction,\n    rightType: \"over\",\n    onClick: handleSwitchClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BlmActions, {\n    name: \"overAction\",\n    data: overAction,\n    type: \"over\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-styles-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-styles-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, t(\"title.style\")), /*#__PURE__*/React.createElement(BlmStyleTintPicker, {\n    type: StyleListTypes.Button,\n    name: \"style\",\n    data: style,\n    label: t(\"button.apply_button\"),\n    showApplyStyle: hasApplyStyle,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default BlmButton;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/button/BlmButton.tsx"],"names":["React","useTranslation","StyleListTypes","AcceptedFileTypes","BlmMediaFormat","BlmMediaPicker","useContentEditorCtx","updateButtonComponent","BlmActions","BlmSwitchActions","BlmStyleTintPicker","NUMBER_REG","BlmButton","props","data","temp","element","dispatch","value","button","hasApplyStyle","buttonOptions","format","config","inline","title","description","caption","clickAction","overAction","style","t","updateChange","newButton","newData","handleChange","event","name","target","test","handleMediaFormatChange","width","defaultWidth","handleSwitchClick","id","Image","Button"],"mappings":"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","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  ComponentStyle,\r\n  CustomChangeEvent,\r\n  MediaFile,\r\n  ComponentAction,\r\n  ButtonComponent,\r\n  ButtonValue,\r\n  ContentTemplateAction,\r\n} from \"types\";\r\nimport { StyleListTypes, AcceptedFileTypes } from \"editor-constants\";\r\nimport { BlmMediaFormat, BlmMediaPicker, MediaFormatChangeEvent } from \"components/shared\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { updateButtonComponent } from \"components/content-editor/reducers\";\r\nimport BlmActions, { BlmSwitchActions } from \"../actions\";\r\nimport { BlmStyleTintPicker } from \"../styles\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  data: ButtonComponent;\r\n  temp: ContentTemplateAction | undefined;\r\n}\r\n\r\nconst NUMBER_REG = /^$|^[\\d\\b]+$/;\r\n\r\nfunction BlmButton(props: CompProps) {\r\n  const { data, temp } = props;\r\n  const { element, dispatch } = useContentEditorCtx();\r\n  const { value: button, hasApplyStyle, buttonOptions } = data;\r\n  const { format, config } = buttonOptions;\r\n  const {\r\n    // background,\r\n    inline,\r\n    // label,\r\n    // number,\r\n    title,\r\n    description,\r\n    caption,\r\n    clickAction,\r\n    overAction,\r\n    style,\r\n  } = button;\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const updateChange = (newButton: ButtonValue) => {\r\n    const newData = { ...data, value: newButton };\r\n\r\n    if (dispatch) {\r\n      dispatch(updateButtonComponent(newData));\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event:\r\n      | ChangeEvent<{ name: string; value: any }>\r\n      | CustomChangeEvent<MediaFile | ComponentAction | ComponentStyle | undefined>\r\n  ) => {\r\n    const { name, value } = event.target;\r\n    const newButton = { ...button };\r\n\r\n    if (\r\n      name === \"background\" ||\r\n      name === \"inline\" ||\r\n      name === \"title\" ||\r\n      name === \"description\" ||\r\n      name === \"caption\" ||\r\n      name === \"label\" ||\r\n      (name === \"number\" && NUMBER_REG.test(value)) ||\r\n      name === \"clickAction\" ||\r\n      name === \"overAction\" ||\r\n      name === \"style\"\r\n    ) {\r\n      newButton[name] = value;\r\n    }\r\n\r\n    updateChange(newButton);\r\n  };\r\n\r\n  const handleMediaFormatChange = (event: MediaFormatChangeEvent) => {\r\n    const { name, value } = event.target;\r\n    const newData = { ...data };\r\n\r\n    if (name === \"format\") {\r\n      if (value.value === \"auto\") {\r\n        value.width = 0;\r\n      } else {\r\n        if (value.width === 0) {\r\n          value.width = value.defaultWidth;\r\n        }\r\n      }\r\n      newData.buttonOptions.format = value;\r\n    }\r\n\r\n    if (dispatch) {\r\n      dispatch(updateButtonComponent(newData));\r\n    }\r\n  };\r\n\r\n  const handleSwitchClick = () => {\r\n    const newButton = { ...button };\r\n\r\n    newButton.clickAction = button.overAction;\r\n    newButton.overAction = button.clickAction;\r\n\r\n    updateChange(newButton);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-button-wrapper\">\r\n      <div className=\"button-params-wrapper\">\r\n        <div className=\"button-params-title\">{t(\"title.parameters\")}</div>\r\n        <BlmMediaFormat\r\n          data={format}\r\n          formats={config?.format}\r\n          onChange={handleMediaFormatChange}\r\n          isButtonFormater={true}\r\n        />\r\n        <div className=\"new_button-params-list-wrapper\">\r\n          <div className=\"button-params-txt-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder={t(\"label.title\")}\r\n              value={title}\r\n              className=\"button-params-title-txt\"\r\n              onChange={handleChange}\r\n            />\r\n            <textarea\r\n              name=\"description\"\r\n              placeholder={t(\"label.description\")}\r\n              value={description}\r\n              className=\"button-params-desc-txt\"\r\n              onChange={handleChange}\r\n            />\r\n            <textarea\r\n              name=\"caption\"\r\n              placeholder={t(\"label.caption\")}\r\n              value={caption}\r\n              className=\"button-params-caption-txt\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"button-params-item-wrapper\">\r\n            <div className=\"button-params-item-title\">Icon</div>\r\n            <BlmMediaPicker\r\n              name=\"inline\"\r\n              elementId={element!.id}\r\n              acceptedFiles={[AcceptedFileTypes.Image]}\r\n              data={inline}\r\n              placeholder=\"Select media\"\r\n              className=\"media-picker-3\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"button-actions-wrapper\">\r\n        <div className=\"button-actions-title\">{t(\"label.action\")}</div>\r\n        <div className=\"button-actions-lbl\">\r\n          {t(\"label.on\")} <span className=\"button-actions-bold-lbl\">{t(\"label.click\")}</span>\r\n        </div>\r\n        <div className=\"button-actions-lbl\">\r\n          On <span className=\"button-actions-bold-lbl\">{t(\"label.roll_over\")}</span>\r\n        </div>\r\n        <BlmActions name=\"clickAction\" data={clickAction} temp={temp} onChange={handleChange} />\r\n        <BlmSwitchActions\r\n          left={clickAction}\r\n          right={overAction}\r\n          rightType=\"over\"\r\n          onClick={handleSwitchClick}\r\n        />\r\n        <BlmActions name=\"overAction\" data={overAction} type=\"over\" onChange={handleChange} />\r\n      </div>\r\n      <div className=\"button-styles-wrapper\">\r\n        <div className=\"button-styles-title\">{t(\"title.style\")}</div>\r\n        <BlmStyleTintPicker\r\n          type={StyleListTypes.Button}\r\n          name=\"style\"\r\n          data={style}\r\n          label={t(\"button.apply_button\")}\r\n          showApplyStyle={hasApplyStyle}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmButton;\r\n"]},"metadata":{},"sourceType":"module"}