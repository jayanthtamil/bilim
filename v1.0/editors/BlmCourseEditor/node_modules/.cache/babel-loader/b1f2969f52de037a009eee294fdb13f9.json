{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\shared\\\\animation\\\\replace\\\\BlmReplaceAttachment.tsx\";\nimport React, { useRef } from \"react\";\nimport clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\nimport { getFileExtension, validateFile } from \"utils\";\nimport \"./styles.scss\";\n\nfunction BlmReplaceAttachment(props) {\n  const {\n    id,\n    data,\n    className,\n    replaceAnimationAttachment,\n    openDialog\n  } = props;\n  const fileRef = useRef(null);\n  const {\n    name\n  } = data;\n  const ext = getFileExtension(name);\n  const accepted = `.${ext}`;\n  const {\n    t\n  } = useTranslation(\"shared\");\n\n  const handleFileClick = event => {\n    if (fileRef.current) {\n      let file = fileRef.current;\n      file.click();\n      file.value = \"\";\n    }\n  };\n\n  const handleFileChange = event => {\n    const files = event.target.files;\n\n    if (files && files.length !== 0) {\n      const file = files[0];\n\n      try {\n        validateFile(file, ext);\n        startUpload(file);\n      } catch (error) {\n        openDialog(`${t(\"alert.warning\")}!`, error.message);\n      }\n    }\n  };\n\n  const startUpload = file => {\n    replaceAnimationAttachment(id, data, file);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"replace-attachment-wrapper\", className),\n    onClick: handleFileClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: fileRef,\n    type: \"file\",\n    accept: accepted,\n    className: \"input-file\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), t(\"title.replace\"));\n}\n\nexport default BlmReplaceAttachment;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/animation/replace/BlmReplaceAttachment.tsx"],"names":["React","useRef","clsx","useTranslation","getFileExtension","validateFile","BlmReplaceAttachment","props","id","data","className","replaceAnimationAttachment","openDialog","fileRef","name","ext","accepted","t","handleFileClick","event","current","file","click","value","handleFileChange","files","target","length","startUpload","error","message"],"mappings":";AAAA,OAAOA,KAAP,IAAyCC,MAAzC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,OAA/C;AAEA,OAAO,eAAP;;AAQA,SAASC,oBAAT,CAA8BC,KAA9B,EAAgD;AAC9C,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,0BAAvB;AAAmDC,IAAAA;AAAnD,MAAkEL,KAAxE;AACA,QAAMM,OAAO,GAAGZ,MAAM,CAAmB,IAAnB,CAAtB;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAWL,IAAjB;AACA,QAAMM,GAAG,GAAGX,gBAAgB,CAACU,IAAD,CAA5B;AACA,QAAME,QAAQ,GAAI,IAAGD,GAAI,EAAzB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAQd,cAAc,CAAC,QAAD,CAA5B;;AAEA,QAAMe,eAAe,GAAIC,KAAD,IAAuB;AAC7C,QAAIN,OAAO,CAACO,OAAZ,EAAqB;AACnB,UAAIC,IAAI,GAAGR,OAAO,CAACO,OAAnB;AACAC,MAAAA,IAAI,CAACC,KAAL;AACAD,MAAAA,IAAI,CAACE,KAAL,GAAa,EAAb;AACD;AACF,GAND;;AAQA,QAAMC,gBAAgB,GAAIL,KAAD,IAA0C;AACjE,UAAMM,KAAK,GAAGN,KAAK,CAACO,MAAN,CAAaD,KAA3B;;AAEA,QAAIA,KAAK,IAAIA,KAAK,CAACE,MAAN,KAAiB,CAA9B,EAAiC;AAC/B,YAAMN,IAAI,GAAGI,KAAK,CAAC,CAAD,CAAlB;;AAEA,UAAI;AACFpB,QAAAA,YAAY,CAACgB,IAAD,EAAON,GAAP,CAAZ;AACAa,QAAAA,WAAW,CAACP,IAAD,CAAX;AACD,OAHD,CAGE,OAAOQ,KAAP,EAAc;AACdjB,QAAAA,UAAU,CAAE,GAAEK,CAAC,CAAC,eAAD,CAAkB,GAAvB,EAA4BY,KAAD,CAAiBC,OAA5C,CAAV;AACD;AACF;AACF,GAbD;;AAeA,QAAMF,WAAW,GAAIP,IAAD,IAAgB;AAClCV,IAAAA,0BAA0B,CAACH,EAAD,EAAKC,IAAL,EAAWY,IAAX,CAA1B;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEnB,IAAI,CAAC,4BAAD,EAA+BQ,SAA/B,CAApB;AAA+D,IAAA,OAAO,EAAEQ,eAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEL,OADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,MAAM,EAAEG,QAHV;AAIE,IAAA,SAAS,EAAC,YAJZ;AAKE,IAAA,QAAQ,EAAEQ,gBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQGP,CAAC,CAAC,eAAD,CARJ,CADF;AAYD;;AAED,eAAeX,oBAAf","sourcesContent":["import React, { ChangeEvent, MouseEvent, useRef } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { AnimationAttachment } from \"types\";\r\nimport { getFileExtension, validateFile } from \"utils\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  id: string;\r\n  data: AnimationAttachment;\r\n  className: string;\r\n}\r\n\r\nfunction BlmReplaceAttachment(props: CompProps) {\r\n  const { id, data, className, replaceAnimationAttachment, openDialog } = props;\r\n  const fileRef = useRef<HTMLInputElement>(null);\r\n  const { name } = data;\r\n  const ext = getFileExtension(name);\r\n  const accepted = `.${ext}`;\r\n  const { t } = useTranslation(\"shared\");\r\n\r\n  const handleFileClick = (event: MouseEvent) => {\r\n    if (fileRef.current) {\r\n      let file = fileRef.current;\r\n      file.click();\r\n      file.value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const files = event.target.files;\r\n\r\n    if (files && files.length !== 0) {\r\n      const file = files[0];\r\n\r\n      try {\r\n        validateFile(file, ext);\r\n        startUpload(file);\r\n      } catch (error) {\r\n        openDialog(`${t(\"alert.warning\")}!`, (error as Error).message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const startUpload = (file: File) => {\r\n    replaceAnimationAttachment(id, data, file);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(\"replace-attachment-wrapper\", className)} onClick={handleFileClick}>\r\n      <input\r\n        ref={fileRef}\r\n        type=\"file\"\r\n        accept={accepted}\r\n        className=\"input-file\"\r\n        onChange={handleFileChange}\r\n      />\r\n      {t(\"title.replace\")}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmReplaceAttachment;\r\n"]},"metadata":{},"sourceType":"module"}