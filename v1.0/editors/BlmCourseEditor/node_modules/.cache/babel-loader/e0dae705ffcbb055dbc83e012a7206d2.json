{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\slideshow\\\\BlmMediaSlideshow.tsx\";\nimport React, { useMemo, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { useTranslation } from \"react-i18next\";\nimport { MediaSlideshowItem } from \"types\";\nimport { StyleListTypes } from \"editor-constants\";\nimport { addObject, createUUID, findObject, getMediaSlideshow, removeObject, updateObject, validateAction, reorderArray } from \"utils\";\nimport { BlmHorizontalList } from \"shared\";\nimport { BlmRichTextEditor } from \"components/component-editor\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\nimport BlmActions from \"../../actions\";\nimport { BlmStyleList, BlmStyleTintPicker } from \"../../styles\";\nimport BlmMediaDashboard from \"../dashboard\";\nimport BlmSlideShowItem from \"./item\";\nimport \"./styles.scss\";\nconst DEFAULT_ITEM = new MediaSlideshowItem();\nconst DEFAULT_ITEMS = [DEFAULT_ITEM];\nDEFAULT_ITEM.id = createUUID();\n\nfunction createMediaMap(items) {\n  return items.reduce((map, item) => {\n    const {\n      media\n    } = item;\n\n    if (media) {\n      const {\n        id\n      } = media;\n      map[media.id] = (map[id] || 0) + 1;\n    }\n\n    return map;\n  }, {});\n}\n\nfunction BlmMediaSlideshow(props) {\n  const {\n    data\n  } = props;\n  const state = useMemo(() => getMediaSlideshow(data), [data]);\n  const {\n    template,\n    openDialog,\n    dispatch\n  } = useContentEditorCtx();\n  const {\n    value: slideshow,\n    hasApplyStyle\n  } = state;\n  const {\n    items: slides,\n    style,\n    slideStyle\n  } = slideshow;\n  const items = slides && slides.length ? slides : DEFAULT_ITEMS;\n  const [selectedId, setSelectedId] = useState(items[0].id);\n  const selectedItem = useMemo(() => selectedId && findObject(items, selectedId, \"id\") || items[0], [items, selectedId]);\n  const {\n    title,\n    description,\n    caption,\n    clickAction\n  } = selectedItem;\n  const mediaMap = useMemo(() => createMediaMap(items), [items]);\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  if (slides && slideshow) {\n    let item;\n    slideshow.items.map((x, i) => {\n      if (x.media !== undefined) {\n        item = x.media;\n      }\n\n      return true;\n    });\n\n    if (item === undefined) {\n      slideshow.slideStyle.bgTint = undefined;\n      slideshow.slideStyle.tint = undefined;\n    }\n  }\n\n  const updateChange = newSlideshow => {\n    const newData = { ...state,\n      value: newSlideshow\n    };\n\n    if (dispatch) {\n      dispatch(updateMediaComponent(newData));\n    }\n  };\n\n  const updateItems = newItems => {\n    const newSlideshow = { ...slideshow,\n      items: newItems\n    };\n    updateChange(newSlideshow);\n  };\n\n  const validateItem = (item, callback) => {\n    try {\n      validateAction(item.clickAction, template);\n    } catch (error) {\n      if (openDialog) {\n        openDialog(`${t(\"alert.warning\")}`, error.message);\n      }\n\n      return;\n    }\n\n    callback();\n  };\n\n  const updateSelectedId = index => {\n    const item = items[index];\n\n    if (item === null || item === void 0 ? void 0 : item.id) {\n      setSelectedId(item.id);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    let newItems;\n    let newSlideshow;\n\n    if (name === \"media\" || name === \"title\" || name === \"description\" || name === \"caption\" || name === \"clickAction\" || name === \"option\") {\n      newItems = updateObject(items, \"id\", selectedItem.id, {\n        [name]: value\n      });\n    } else if (name === \"style\" || name === \"slideStyle\") {\n      newSlideshow = { ...slideshow,\n        [name]: value\n      };\n    } else if (name === \"position\") {\n      newItems = updateObject(items, \"id\", selectedItem.id, {\n        [name]: value\n      });\n    }\n\n    if (newItems) {\n      updateItems(newItems);\n    } else if (newSlideshow) {\n      updateChange(newSlideshow);\n    }\n  };\n\n  const handleDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    const newData = { ...slideshow,\n      items: reorderArray(items, result.source.index, result.destination.index)\n    };\n    updateChange(newData);\n  };\n\n  const handleItemAdd = index => {\n    validateItem(selectedItem, () => {\n      const newItem = new MediaSlideshowItem();\n      const newItems = addObject(items, newItem, index);\n      newItem.id = createUUID();\n      setSelectedId(newItem.id);\n      updateItems(newItems);\n    });\n  };\n\n  const handleItemDuplicate = index => {\n    const item = items[index];\n    validateItem(item, () => {\n      const newItem = { ...item,\n        id: createUUID()\n      };\n      const newItems = addObject(items, newItem, index + 1);\n      updateItems(newItems);\n    });\n  };\n\n  const handleItemDelete = index => {\n    const item = items[index];\n    const newItems = removeObject(items, item);\n    const newLen = newItems.length;\n\n    if (item.id === selectedId) {\n      updateSelectedId(index < newLen ? index : newLen - 1);\n    }\n\n    updateItems(newItems);\n  };\n\n  const handleItemClick = index => {\n    validateItem(selectedItem, () => {\n      updateSelectedId(index);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(BlmMediaDashboard, {\n    data: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-media-slideshow-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-params-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-params-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, t(\"title.parameters\")), /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"droppable2\",\n    direction: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, provided => /*#__PURE__*/React.createElement(BlmHorizontalList, Object.assign({\n    ref: provided.innerRef,\n    className: \"slidshow-horizontal-list\"\n  }, provided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }), items.map((item, ind) => {\n    const {\n      id,\n      media,\n      option,\n      position\n    } = item;\n    const count = media ? mediaMap[media.id] : 0;\n    const isLinked = count > 1;\n    return /*#__PURE__*/React.createElement(Draggable, {\n      key: id,\n      draggableId: id,\n      index: ind,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 23\n      }\n    }, (providedItem, snapshot) => /*#__PURE__*/React.createElement(BlmSlideShowItem, Object.assign({\n      ref: providedItem.innerRef,\n      key: id,\n      index: ind,\n      data: media,\n      option: option,\n      position: position,\n      isLinked: isLinked,\n      selected: item === selectedItem,\n      drag: providedItem.dragHandleProps,\n      className: clsx({\n        dragging: snapshot.isDragging\n      }),\n      onChange: handleChange,\n      onAdd: handleItemAdd,\n      onDuplicate: handleItemDuplicate,\n      onDelete: handleItemDelete,\n      onClick: handleItemClick\n    }, providedItem.draggableProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 27\n      }\n    })));\n  }), provided.placeholder))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-params-txt-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: t(\"label.title\"),\n    value: title,\n    className: \"slideshow-params-title-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BlmRichTextEditor, {\n    key: selectedId,\n    name: \"description\",\n    placeholder: t(\"label.description\"),\n    value: description,\n    className: \"slideshow-params-desc-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"caption\",\n    placeholder: t(\"label.caption\"),\n    value: caption,\n    className: \"slideshow-params-caption-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-actions-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-actions-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, t(\"label.action\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-actions-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, t(\"label.on\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slideshow-actions-bold-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 29\n    }\n  }, t(\"label.click\"))), /*#__PURE__*/React.createElement(BlmActions, {\n    name: \"clickAction\",\n    type: \"slideshow\",\n    data: clickAction,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-styles-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-styles-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, t(\"title.style\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-styles-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }, t(\"slideshow.slideshow_style\")), /*#__PURE__*/React.createElement(BlmStyleList, {\n    type: StyleListTypes.MediaSlideshow,\n    name: \"style\",\n    data: style,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-styles-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }, t(\"slideshow.slide_style\")), /*#__PURE__*/React.createElement(BlmStyleTintPicker, {\n    type: StyleListTypes.MediaSlideshowItem,\n    name: \"slideStyle\",\n    data: slideStyle,\n    showBgTint: true,\n    label: t(\"slideshow.apply_all_slideshow\"),\n    showApplyStyle: hasApplyStyle,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default BlmMediaSlideshow;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/slideshow/BlmMediaSlideshow.tsx"],"names":["React","useMemo","useState","clsx","DragDropContext","Droppable","Draggable","useTranslation","MediaSlideshowItem","StyleListTypes","addObject","createUUID","findObject","getMediaSlideshow","removeObject","updateObject","validateAction","reorderArray","BlmHorizontalList","BlmRichTextEditor","useContentEditorCtx","updateMediaComponent","BlmActions","BlmStyleList","BlmStyleTintPicker","BlmMediaDashboard","BlmSlideShowItem","DEFAULT_ITEM","DEFAULT_ITEMS","id","createMediaMap","items","reduce","map","item","media","BlmMediaSlideshow","props","data","state","template","openDialog","dispatch","value","slideshow","hasApplyStyle","slides","style","slideStyle","length","selectedId","setSelectedId","selectedItem","title","description","caption","clickAction","mediaMap","t","x","i","undefined","bgTint","tint","updateChange","newSlideshow","newData","updateItems","newItems","validateItem","callback","error","message","updateSelectedId","index","handleChange","event","name","target","handleDragEnd","result","destination","source","handleItemAdd","newItem","handleItemDuplicate","handleItemDelete","newLen","handleItemClick","provided","innerRef","droppableProps","ind","option","position","count","isLinked","providedItem","snapshot","dragHandleProps","dragging","isDragging","draggableProps","placeholder","MediaSlideshow"],"mappings":";AAAA,OAAOA,KAAP,IAA6BC,OAA7B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAkE,qBAAlE;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,SAOEC,kBAPF,QAQO,OARP;AASA,SAASC,cAAT,QAAyD,kBAAzD;AACA,SACEC,SADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,iBAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,cAPF,EAQEC,YARF,QASO,OATP;AAUA,SAASC,iBAAT,QAAkC,QAAlC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,SAASC,oBAAT,QAAqC,oCAArC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,cAAjD;AACA,OAAOC,iBAAP,MAA8B,cAA9B;AACA,OAAOC,gBAAP,MAA6B,QAA7B;AACA,OAAO,eAAP;AAMA,MAAMC,YAAY,GAAG,IAAInB,kBAAJ,EAArB;AACA,MAAMoB,aAAa,GAAG,CAACD,YAAD,CAAtB;AAEAA,YAAY,CAACE,EAAb,GAAkBlB,UAAU,EAA5B;;AAEA,SAASmB,cAAT,CAAwBC,KAAxB,EAAqD;AACnD,SAAOA,KAAK,CAACC,MAAN,CAAa,CAACC,GAAD,EAAiCC,IAAjC,KAA0C;AAC5D,UAAM;AAAEC,MAAAA;AAAF,QAAYD,IAAlB;;AAEA,QAAIC,KAAJ,EAAW;AACT,YAAM;AAAEN,QAAAA;AAAF,UAASM,KAAf;AAEAF,MAAAA,GAAG,CAACE,KAAK,CAACN,EAAP,CAAH,GAAgB,CAACI,GAAG,CAACJ,EAAD,CAAH,IAAW,CAAZ,IAAiB,CAAjC;AACD;;AAED,WAAOI,GAAP;AACD,GAVM,EAUJ,EAVI,CAAP;AAWD;;AAED,SAASG,iBAAT,CAA2BC,KAA3B,EAA6C;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAME,KAAK,GAAGtC,OAAO,CAAC,MAAMY,iBAAiB,CAACyB,IAAD,CAAxB,EAAgC,CAACA,IAAD,CAAhC,CAArB;AACA,QAAM;AAAEE,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA;AAAxB,MAAqCtB,mBAAmB,EAA9D;AACA,QAAM;AAAEuB,IAAAA,KAAK,EAAEC,SAAT;AAAoBC,IAAAA;AAApB,MAAsCN,KAA5C;AACA,QAAM;AAAER,IAAAA,KAAK,EAAEe,MAAT;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,MAAuCJ,SAA7C;AACA,QAAMb,KAAK,GAAGe,MAAM,IAAIA,MAAM,CAACG,MAAjB,GAA0BH,MAA1B,GAAmClB,aAAjD;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BjD,QAAQ,CAAC6B,KAAK,CAAC,CAAD,CAAL,CAASF,EAAV,CAA5C;AACA,QAAMuB,YAAY,GAAGnD,OAAO,CAC1B,MAAOiD,UAAU,IAAItC,UAAU,CAACmB,KAAD,EAAQmB,UAAR,EAAoB,IAApB,CAAzB,IAAuDnB,KAAK,CAAC,CAAD,CADxC,EAE1B,CAACA,KAAD,EAAQmB,UAAR,CAF0B,CAA5B;AAIA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA;AAA/B,MAA+CJ,YAArD;AACA,QAAMK,QAAQ,GAAGxD,OAAO,CAAC,MAAM6B,cAAc,CAACC,KAAD,CAArB,EAA8B,CAACA,KAAD,CAA9B,CAAxB;AACA,QAAM;AAAE2B,IAAAA;AAAF,MAAQnD,cAAc,CAAC,gBAAD,CAA5B;;AAEA,MAAIuC,MAAM,IAAIF,SAAd,EAAyB;AACvB,QAAIV,IAAJ;AACAU,IAAAA,SAAS,CAACb,KAAV,CAAgBE,GAAhB,CAAoB,CAAC0B,CAAD,EAAIC,CAAJ,KAAU;AAC9B,UAAID,CAAC,CAACxB,KAAF,KAAY0B,SAAhB,EAA2B;AAC3B3B,QAAAA,IAAI,GAAGyB,CAAC,CAACxB,KAAT;AACC;;AACD,aAAO,IAAP;AACC,KALD;;AAMA,QAAID,IAAI,KAAK2B,SAAb,EAAwB;AACxBjB,MAAAA,SAAS,CAACI,UAAV,CAAqBc,MAArB,GAA8BD,SAA9B;AACAjB,MAAAA,SAAS,CAACI,UAAV,CAAqBe,IAArB,GAA4BF,SAA5B;AACC;AAEA;;AAEH,QAAMG,YAAY,GAAIC,YAAD,IAAkC;AACrD,UAAMC,OAAO,GAAG,EAAE,GAAG3B,KAAL;AAAYI,MAAAA,KAAK,EAAEsB;AAAnB,KAAhB;;AAEA,QAAIvB,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACrB,oBAAoB,CAAC6C,OAAD,CAArB,CAAR;AACD;AACF,GAND;;AAQA,QAAMC,WAAW,GAAIC,QAAD,IAAoC;AACtD,UAAMH,YAAY,GAAG,EAAE,GAAGrB,SAAL;AAAgBb,MAAAA,KAAK,EAAEqC;AAAvB,KAArB;AAEAJ,IAAAA,YAAY,CAACC,YAAD,CAAZ;AACD,GAJD;;AAMA,QAAMI,YAAY,GAAG,CAACnC,IAAD,EAA2BoC,QAA3B,KAAkD;AACrE,QAAI;AACFtD,MAAAA,cAAc,CAACkB,IAAI,CAACsB,WAAN,EAAmBhB,QAAnB,CAAd;AACD,KAFD,CAEE,OAAO+B,KAAP,EAAc;AACd,UAAI9B,UAAJ,EAAgB;AACdA,QAAAA,UAAU,CAAE,GAAEiB,CAAC,CAAC,eAAD,CAAkB,EAAvB,EAA2Ba,KAAD,CAAiBC,OAA3C,CAAV;AACD;;AACD;AACD;;AAEDF,IAAAA,QAAQ;AACT,GAXD;;AAaA,QAAMG,gBAAgB,GAAIC,KAAD,IAAmB;AAC1C,UAAMxC,IAAI,GAAGH,KAAK,CAAC2C,KAAD,CAAlB;;AAEA,QAAIxC,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEL,EAAV,EAAc;AACZsB,MAAAA,aAAa,CAACjB,IAAI,CAACL,EAAN,CAAb;AACD;AACF,GAND;;AAQA,QAAM8C,YAAY,GAChBC,KADmB,IAYhB;AACH,UAAM;AACJC,MAAAA,IADI;AAEJlC,MAAAA;AAFI,QAMFiC,KAAK,CAACE,MANV;AAOA,QAAIV,QAAJ;AACA,QAAIH,YAAJ;;AAEA,QACEY,IAAI,KAAK,OAAT,IACAA,IAAI,KAAK,OADT,IAEAA,IAAI,KAAK,aAFT,IAGAA,IAAI,KAAK,SAHT,IAIAA,IAAI,KAAK,aAJT,IAKAA,IAAI,KAAK,QANX,EAOE;AACAT,MAAAA,QAAQ,GAAGrD,YAAY,CAACgB,KAAD,EAAQ,IAAR,EAAcqB,YAAY,CAACvB,EAA3B,EAA+B;AAAE,SAACgD,IAAD,GAAQlC;AAAV,OAA/B,CAAvB;AACD,KATD,MASO,IAAIkC,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,YAAjC,EAA+C;AACpDZ,MAAAA,YAAY,GAAG,EAAE,GAAGrB,SAAL;AAAgB,SAACiC,IAAD,GAAQlC;AAAxB,OAAf;AACD,KAFM,MAEA,IAAIkC,IAAI,KAAK,UAAb,EAAyB;AAC9BT,MAAAA,QAAQ,GAAGrD,YAAY,CAACgB,KAAD,EAAQ,IAAR,EAAcqB,YAAY,CAACvB,EAA3B,EAA+B;AAAE,SAACgD,IAAD,GAAQlC;AAAV,OAA/B,CAAvB;AACD;;AAED,QAAIyB,QAAJ,EAAc;AACZD,MAAAA,WAAW,CAACC,QAAD,CAAX;AACD,KAFD,MAEO,IAAIH,YAAJ,EAAkB;AACvBD,MAAAA,YAAY,CAACC,YAAD,CAAZ;AACD;AACF,GA3CD;;AA6CA,QAAMc,aAAa,GAAIC,MAAD,IAAwB;AAC5C,QAAI,CAACA,MAAM,CAACC,WAAZ,EAAyB;AACvB;AACD;;AACD,UAAMf,OAAO,GAAG,EACd,GAAGtB,SADW;AAEdb,MAAAA,KAAK,EAAEd,YAAY,CAACc,KAAD,EAAQiD,MAAM,CAACE,MAAP,CAAcR,KAAtB,EAA6BM,MAAM,CAACC,WAAP,CAAmBP,KAAhD;AAFL,KAAhB;AAKAV,IAAAA,YAAY,CAACE,OAAD,CAAZ;AACD,GAVD;;AAYA,QAAMiB,aAAa,GAAIT,KAAD,IAAmB;AACvCL,IAAAA,YAAY,CAACjB,YAAD,EAAe,MAAM;AAC/B,YAAMgC,OAAO,GAAG,IAAI5E,kBAAJ,EAAhB;AACA,YAAM4D,QAAQ,GAAG1D,SAAS,CAACqB,KAAD,EAAQqD,OAAR,EAAiBV,KAAjB,CAA1B;AAEAU,MAAAA,OAAO,CAACvD,EAAR,GAAalB,UAAU,EAAvB;AAEAwC,MAAAA,aAAa,CAACiC,OAAO,CAACvD,EAAT,CAAb;AACAsC,MAAAA,WAAW,CAACC,QAAD,CAAX;AACD,KARW,CAAZ;AASD,GAVD;;AAYA,QAAMiB,mBAAmB,GAAIX,KAAD,IAAmB;AAC7C,UAAMxC,IAAI,GAAGH,KAAK,CAAC2C,KAAD,CAAlB;AAEAL,IAAAA,YAAY,CAACnC,IAAD,EAAO,MAAM;AACvB,YAAMkD,OAAO,GAAG,EAAE,GAAGlD,IAAL;AAAWL,QAAAA,EAAE,EAAElB,UAAU;AAAzB,OAAhB;AACA,YAAMyD,QAAQ,GAAG1D,SAAS,CAACqB,KAAD,EAAQqD,OAAR,EAAiBV,KAAK,GAAG,CAAzB,CAA1B;AAEAP,MAAAA,WAAW,CAACC,QAAD,CAAX;AACD,KALW,CAAZ;AAMD,GATD;;AAWA,QAAMkB,gBAAgB,GAAIZ,KAAD,IAAmB;AAC1C,UAAMxC,IAAI,GAAGH,KAAK,CAAC2C,KAAD,CAAlB;AACA,UAAMN,QAAQ,GAAGtD,YAAY,CAACiB,KAAD,EAAQG,IAAR,CAA7B;AACA,UAAMqD,MAAM,GAAGnB,QAAQ,CAACnB,MAAxB;;AAEA,QAAIf,IAAI,CAACL,EAAL,KAAYqB,UAAhB,EAA4B;AAC1BuB,MAAAA,gBAAgB,CAACC,KAAK,GAAGa,MAAR,GAAiBb,KAAjB,GAAyBa,MAAM,GAAG,CAAnC,CAAhB;AACD;;AAEDpB,IAAAA,WAAW,CAACC,QAAD,CAAX;AACD,GAVD;;AAYA,QAAMoB,eAAe,GAAId,KAAD,IAAmB;AACzCL,IAAAA,YAAY,CAACjB,YAAD,EAAe,MAAM;AAC/BqB,MAAAA,gBAAgB,CAACC,KAAD,CAAhB;AACD,KAFW,CAAZ;AAGD,GAJD;;AAMA,sBACE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEnC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCmB,CAAC,CAAC,kBAAD,CAA1C,CADF,eAEE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAEqB,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,YAAvB;AAAoC,IAAA,SAAS,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIU,QAAD,iBACC,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAEA,QAAQ,CAACC,QADhB;AAEE,IAAA,SAAS,EAAC;AAFZ,KAGMD,QAAQ,CAACE,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKG5D,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAO0D,GAAP,KAAe;AACxB,UAAM;AAAE/D,MAAAA,EAAF;AAAMM,MAAAA,KAAN;AAAa0D,MAAAA,MAAb;AAAqBC,MAAAA;AAArB,QAAkC5D,IAAxC;AACA,UAAM6D,KAAK,GAAG5D,KAAK,GAAGsB,QAAQ,CAACtB,KAAK,CAACN,EAAP,CAAX,GAAwB,CAA3C;AACA,UAAMmE,QAAQ,GAAGD,KAAK,GAAG,CAAzB;AAEA,wBACE,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAElE,EAAhB;AAAoB,MAAA,WAAW,EAAEA,EAAjC;AAAqC,MAAA,KAAK,EAAE+D,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACK,YAAD,EAAeC,QAAf,kBACC,oBAAC,gBAAD;AACE,MAAA,GAAG,EAAED,YAAY,CAACP,QADpB;AAEE,MAAA,GAAG,EAAE7D,EAFP;AAGE,MAAA,KAAK,EAAE+D,GAHT;AAIE,MAAA,IAAI,EAAEzD,KAJR;AAKE,MAAA,MAAM,EAAE0D,MALV;AAME,MAAA,QAAQ,EAAEC,QANZ;AAOE,MAAA,QAAQ,EAAEE,QAPZ;AAQE,MAAA,QAAQ,EAAE9D,IAAI,KAAKkB,YARrB;AASE,MAAA,IAAI,EAAE6C,YAAY,CAACE,eATrB;AAUE,MAAA,SAAS,EAAEhG,IAAI,CAAC;AACdiG,QAAAA,QAAQ,EAAEF,QAAQ,CAACG;AADL,OAAD,CAVjB;AAaE,MAAA,QAAQ,EAAE1B,YAbZ;AAcE,MAAA,KAAK,EAAEQ,aAdT;AAeE,MAAA,WAAW,EAAEE,mBAff;AAgBE,MAAA,QAAQ,EAAEC,gBAhBZ;AAiBE,MAAA,OAAO,EAAEE;AAjBX,OAkBMS,YAAY,CAACK,cAlBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,CADF;AA0BD,GA/BA,CALH,EAqCGb,QAAQ,CAACc,WArCZ,CAFJ,CADF,CAFF,eA+CE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAE7C,CAAC,CAAC,aAAD,CAHhB;AAIE,IAAA,KAAK,EAAEL,KAJT;AAKE,IAAA,SAAS,EAAC,4BALZ;AAME,IAAA,QAAQ,EAAEsB,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAEzB,UADP;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,WAAW,EAAEQ,CAAC,CAAC,mBAAD,CAHhB;AAIE,IAAA,KAAK,EAAEJ,WAJT;AAKE,IAAA,SAAS,EAAC,2BALZ;AAME,IAAA,QAAQ,EAAEqB,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAiBE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,WAAW,EAAEjB,CAAC,CAAC,eAAD,CAFhB;AAGE,IAAA,KAAK,EAAEH,OAHT;AAIE,IAAA,SAAS,EAAC,8BAJZ;AAKE,IAAA,QAAQ,EAAEoB,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CA/CF,CADF,eA0EE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CjB,CAAC,CAAC,cAAD,CAA3C,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,CAAC,CAAC,UAAD,CADJ,oBACkB;AAAM,IAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CA,CAAC,CAAC,aAAD,CAA/C,CADlB,CAFF,eAKE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,IAAI,EAAEF,WAHR;AAIE,IAAA,QAAQ,EAAEmB,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CA1EF,eAsFE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCjB,CAAC,CAAC,aAAD,CAA1C,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CA,CAAC,CAAC,2BAAD,CAA9C,CAFF,eAGE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEjD,cAAc,CAAC+F,cADvB;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAEzD,KAHR;AAIE,IAAA,QAAQ,EAAE4B,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eASE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CjB,CAAC,CAAC,uBAAD,CAA9C,CATF,eAUE,oBAAC,kBAAD;AACE,IAAA,IAAI,EAAEjD,cAAc,CAACD,kBADvB;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,IAAI,EAAEwC,UAHR;AAIE,IAAA,UAAU,EAAE,IAJd;AAKE,IAAA,KAAK,EAAEU,CAAC,CAAC,+BAAD,CALV;AAME,IAAA,cAAc,EAAEb,aANlB;AAOE,IAAA,QAAQ,EAAE8B,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAtFF,CADF,CADF;AA+GD;;AAED,eAAevC,iBAAf","sourcesContent":["import React, { ChangeEvent, useMemo, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { DragDropContext, Droppable, Draggable, DropResult } from \"react-beautiful-dnd\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  ComponentAction,\r\n  ComponentStyle,\r\n  CustomChangeEvent,\r\n  MediaComponent,\r\n  MediaFile,\r\n  MediaSlideshow,\r\n  MediaSlideshowItem,\r\n} from \"types\";\r\nimport { StyleListTypes, Positions, MediaPosition } from \"editor-constants\";\r\nimport {\r\n  addObject,\r\n  createUUID,\r\n  findObject,\r\n  getMediaSlideshow,\r\n  removeObject,\r\n  updateObject,\r\n  validateAction,\r\n  reorderArray,\r\n} from \"utils\";\r\nimport { BlmHorizontalList } from \"shared\";\r\nimport { BlmRichTextEditor } from \"components/component-editor\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\r\nimport BlmActions from \"../../actions\";\r\nimport { BlmStyleList, BlmStyleTintPicker } from \"../../styles\";\r\nimport BlmMediaDashboard from \"../dashboard\";\r\nimport BlmSlideShowItem from \"./item\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  label: string;\r\n  data: MediaComponent;\r\n}\r\nconst DEFAULT_ITEM = new MediaSlideshowItem();\r\nconst DEFAULT_ITEMS = [DEFAULT_ITEM];\r\n\r\nDEFAULT_ITEM.id = createUUID();\r\n\r\nfunction createMediaMap(items: MediaSlideshowItem[]) {\r\n  return items.reduce((map: { [key: string]: number }, item) => {\r\n    const { media } = item;\r\n\r\n    if (media) {\r\n      const { id } = media;\r\n\r\n      map[media.id] = (map[id] || 0) + 1;\r\n    }\r\n\r\n    return map;\r\n  }, {});\r\n}\r\n\r\nfunction BlmMediaSlideshow(props: CompProps) {\r\n  const { data } = props;\r\n  const state = useMemo(() => getMediaSlideshow(data), [data]);\r\n  const { template, openDialog, dispatch } = useContentEditorCtx();\r\n  const { value: slideshow, hasApplyStyle } = state;\r\n  const { items: slides, style, slideStyle } = slideshow;\r\n  const items = slides && slides.length ? slides : DEFAULT_ITEMS;\r\n  const [selectedId, setSelectedId] = useState(items[0].id);\r\n  const selectedItem = useMemo(\r\n    () => (selectedId && findObject(items, selectedId, \"id\")) || items[0],\r\n    [items, selectedId]\r\n  );\r\n  const { title, description, caption, clickAction } = selectedItem;\r\n  const mediaMap = useMemo(() => createMediaMap(items), [items]);\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  if (slides && slideshow) {\r\n    let item;\r\n    slideshow.items.map((x, i) => {\r\n    if (x.media !== undefined) {\r\n    item = x.media;\r\n    }\r\n    return true;\r\n    });\r\n    if (item === undefined) {\r\n    slideshow.slideStyle.bgTint = undefined;\r\n    slideshow.slideStyle.tint = undefined;\r\n    }\r\n    \r\n    }\r\n\r\n  const updateChange = (newSlideshow: MediaSlideshow) => {\r\n    const newData = { ...state, value: newSlideshow };\r\n\r\n    if (dispatch) {\r\n      dispatch(updateMediaComponent(newData));\r\n    }\r\n  };\r\n\r\n  const updateItems = (newItems: MediaSlideshowItem[]) => {\r\n    const newSlideshow = { ...slideshow, items: newItems };\r\n\r\n    updateChange(newSlideshow);\r\n  };\r\n\r\n  const validateItem = (item: MediaSlideshowItem, callback: Function) => {\r\n    try {\r\n      validateAction(item.clickAction, template!);\r\n    } catch (error) {\r\n      if (openDialog) {\r\n        openDialog(`${t(\"alert.warning\")}`, (error as Error).message);\r\n      }\r\n      return;\r\n    }\r\n\r\n    callback();\r\n  };\r\n\r\n  const updateSelectedId = (index: number) => {\r\n    const item = items[index];\r\n\r\n    if (item?.id) {\r\n      setSelectedId(item.id);\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event:\r\n      | ChangeEvent<any>\r\n      | CustomChangeEvent<\r\n          | MediaFile\r\n          | ComponentAction\r\n          | MediaPosition\r\n          | Positions\r\n          | ComponentStyle\r\n          | string\r\n          | undefined\r\n        >\r\n  ) => {\r\n    const {\r\n      name,\r\n      value,\r\n    }: {\r\n      name: string;\r\n      value: any;\r\n    } = event.target;\r\n    let newItems: MediaSlideshowItem[] | undefined;\r\n    let newSlideshow: MediaSlideshow | undefined;\r\n\r\n    if (\r\n      name === \"media\" ||\r\n      name === \"title\" ||\r\n      name === \"description\" ||\r\n      name === \"caption\" ||\r\n      name === \"clickAction\" ||\r\n      name === \"option\"\r\n    ) {\r\n      newItems = updateObject(items, \"id\", selectedItem.id, { [name]: value });\r\n    } else if (name === \"style\" || name === \"slideStyle\") {\r\n      newSlideshow = { ...slideshow, [name]: value };\r\n    } else if (name === \"position\") {\r\n      newItems = updateObject(items, \"id\", selectedItem.id, { [name]: value });\r\n    }\r\n\r\n    if (newItems) {\r\n      updateItems(newItems);\r\n    } else if (newSlideshow) {\r\n      updateChange(newSlideshow);\r\n    }\r\n  };\r\n\r\n  const handleDragEnd = (result: DropResult) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const newData = {\r\n      ...slideshow,\r\n      items: reorderArray(items, result.source.index, result.destination.index),\r\n    };\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleItemAdd = (index: number) => {\r\n    validateItem(selectedItem, () => {\r\n      const newItem = new MediaSlideshowItem();\r\n      const newItems = addObject(items, newItem, index);\r\n\r\n      newItem.id = createUUID();\r\n\r\n      setSelectedId(newItem.id);\r\n      updateItems(newItems);\r\n    });\r\n  };\r\n\r\n  const handleItemDuplicate = (index: number) => {\r\n    const item = items[index];\r\n\r\n    validateItem(item, () => {\r\n      const newItem = { ...item, id: createUUID() };\r\n      const newItems = addObject(items, newItem, index + 1);\r\n\r\n      updateItems(newItems);\r\n    });\r\n  };\r\n\r\n  const handleItemDelete = (index: number) => {\r\n    const item = items[index];\r\n    const newItems = removeObject(items, item);\r\n    const newLen = newItems.length;\r\n\r\n    if (item.id === selectedId) {\r\n      updateSelectedId(index < newLen ? index : newLen - 1);\r\n    }\r\n\r\n    updateItems(newItems);\r\n  };\r\n\r\n  const handleItemClick = (index: number) => {\r\n    validateItem(selectedItem, () => {\r\n      updateSelectedId(index);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <BlmMediaDashboard data={state}>\r\n      <div className=\"content-media-slideshow-wrapper\">\r\n        <div className=\"slideshow-params-wrapper\">\r\n          <div className=\"slideshow-params-title\">{t(\"title.parameters\")}</div>\r\n          <DragDropContext onDragEnd={handleDragEnd}>\r\n            <Droppable droppableId=\"droppable2\" direction=\"horizontal\">\r\n              {(provided) => (\r\n                <BlmHorizontalList\r\n                  ref={provided.innerRef}\r\n                  className=\"slidshow-horizontal-list\"\r\n                  {...provided.droppableProps}\r\n                >\r\n                  {items.map((item, ind) => {\r\n                    const { id, media, option, position } = item;\r\n                    const count = media ? mediaMap[media.id] : 0;\r\n                    const isLinked = count > 1;\r\n\r\n                    return (\r\n                      <Draggable key={id} draggableId={id} index={ind}>\r\n                        {(providedItem, snapshot) => (\r\n                          <BlmSlideShowItem\r\n                            ref={providedItem.innerRef}\r\n                            key={id}\r\n                            index={ind}\r\n                            data={media}\r\n                            option={option}\r\n                            position={position}\r\n                            isLinked={isLinked}\r\n                            selected={item === selectedItem}\r\n                            drag={providedItem.dragHandleProps}\r\n                            className={clsx({\r\n                              dragging: snapshot.isDragging,\r\n                            })}\r\n                            onChange={handleChange}\r\n                            onAdd={handleItemAdd}\r\n                            onDuplicate={handleItemDuplicate}\r\n                            onDelete={handleItemDelete}\r\n                            onClick={handleItemClick}\r\n                            {...providedItem.draggableProps}\r\n                          />\r\n                        )}\r\n                      </Draggable>\r\n                    );\r\n                  })}\r\n                  {provided.placeholder}\r\n                </BlmHorizontalList>\r\n              )}\r\n            </Droppable>\r\n          </DragDropContext>\r\n          <div className=\"slideshow-params-txt-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder={t(\"label.title\")}\r\n              value={title}\r\n              className=\"slideshow-params-title-txt\"\r\n              onChange={handleChange}\r\n            />\r\n            <BlmRichTextEditor\r\n              key={selectedId}\r\n              name=\"description\"\r\n              placeholder={t(\"label.description\")}\r\n              value={description}\r\n              className=\"slideshow-params-desc-txt\"\r\n              onChange={handleChange}\r\n            />\r\n            <textarea\r\n              name=\"caption\"\r\n              placeholder={t(\"label.caption\")}\r\n              value={caption}\r\n              className=\"slideshow-params-caption-txt\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"slideshow-actions-wrapper\">\r\n          <div className=\"slideshow-actions-title\">{t(\"label.action\")}</div>\r\n          <div className=\"slideshow-actions-lbl\">\r\n            {t(\"label.on\")} <span className=\"slideshow-actions-bold-lbl\">{t(\"label.click\")}</span>\r\n          </div>\r\n          <BlmActions\r\n            name=\"clickAction\"\r\n            type=\"slideshow\"\r\n            data={clickAction}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"slideshow-styles-wrapper\">\r\n          <div className=\"slideshow-styles-title\">{t(\"title.style\")}</div>\r\n          <div className=\"slideshow-styles-sub-title\">{t(\"slideshow.slideshow_style\")}</div>\r\n          <BlmStyleList\r\n            type={StyleListTypes.MediaSlideshow}\r\n            name=\"style\"\r\n            data={style}\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"slideshow-styles-sub-title\">{t(\"slideshow.slide_style\")}</div>\r\n          <BlmStyleTintPicker\r\n            type={StyleListTypes.MediaSlideshowItem}\r\n            name=\"slideStyle\"\r\n            data={slideStyle}\r\n            showBgTint={true}\r\n            label={t(\"slideshow.apply_all_slideshow\")}\r\n            showApplyStyle={hasApplyStyle}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </BlmMediaDashboard>\r\n  );\r\n}\r\n\r\nexport default BlmMediaSlideshow;\r\n"]},"metadata":{},"sourceType":"module"}