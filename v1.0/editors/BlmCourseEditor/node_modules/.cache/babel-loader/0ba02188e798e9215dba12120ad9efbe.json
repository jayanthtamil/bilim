{"ast":null,"code":"export let QuestionTemplateTypes;\n\n(function (QuestionTemplateTypes) {\n  QuestionTemplateTypes[\"Standard\"] = \"standard\";\n  QuestionTemplateTypes[\"Custom\"] = \"custom\";\n  QuestionTemplateTypes[\"NoHeader\"] = \"no-header\";\n})(QuestionTemplateTypes || (QuestionTemplateTypes = {}));\n\nexport let QuestionIntroductionTypes;\n\n(function (QuestionIntroductionTypes) {\n  QuestionIntroductionTypes[\"None\"] = \"none\";\n  QuestionIntroductionTypes[\"Media\"] = \"media\";\n  QuestionIntroductionTypes[\"SimpleContent\"] = \"simplecontent\";\n})(QuestionIntroductionTypes || (QuestionIntroductionTypes = {}));\n\nexport let QuestionPropositionTypes;\n\n(function (QuestionPropositionTypes) {\n  QuestionPropositionTypes[\"Single\"] = \"single\";\n  QuestionPropositionTypes[\"Multiple\"] = \"multiple\";\n})(QuestionPropositionTypes || (QuestionPropositionTypes = {}));\n\nexport let QuestionPropositionInfoTypes;\n\n(function (QuestionPropositionInfoTypes) {\n  QuestionPropositionInfoTypes[\"None\"] = \"none\";\n  QuestionPropositionInfoTypes[\"Simple\"] = \"tip\";\n  QuestionPropositionInfoTypes[\"Detailed\"] = \"simplecontent\";\n})(QuestionPropositionInfoTypes || (QuestionPropositionInfoTypes = {}));\n\nexport let QuestionPropositionValidTypes;\n\n(function (QuestionPropositionValidTypes) {\n  QuestionPropositionValidTypes[\"Right\"] = \"right\";\n  QuestionPropositionValidTypes[\"Wrong\"] = \"wrong\";\n})(QuestionPropositionValidTypes || (QuestionPropositionValidTypes = {}));\n\nexport let QuestionFeedbackTypes;\n\n(function (QuestionFeedbackTypes) {\n  QuestionFeedbackTypes[\"None\"] = \"none\";\n  QuestionFeedbackTypes[\"Propositions\"] = \"perpropositions\";\n  QuestionFeedbackTypes[\"Global\"] = \"global\";\n  QuestionFeedbackTypes[\"Basic\"] = \"basic\";\n  QuestionFeedbackTypes[\"Embedded\"] = \"embedded\";\n  QuestionFeedbackTypes[\"Flap\"] = \"flap\";\n  QuestionFeedbackTypes[\"Detailed\"] = \"simplecontent\";\n})(QuestionFeedbackTypes || (QuestionFeedbackTypes = {}));\n\nexport let DetailedFeedbackDisplayTypes;\n\n(function (DetailedFeedbackDisplayTypes) {\n  DetailedFeedbackDisplayTypes[\"Popup\"] = \"popup\";\n  DetailedFeedbackDisplayTypes[\"Below\"] = \"below\";\n})(DetailedFeedbackDisplayTypes || (DetailedFeedbackDisplayTypes = {}));","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/editor-constants/template-editor/question-editor.ts"],"names":["QuestionTemplateTypes","QuestionIntroductionTypes","QuestionPropositionTypes","QuestionPropositionInfoTypes","QuestionPropositionValidTypes","QuestionFeedbackTypes","DetailedFeedbackDisplayTypes"],"mappings":"AAAA,WAAYA,qBAAZ;;WAAYA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;GAAAA,qB,KAAAA,qB;;AAMZ,WAAYC,yBAAZ;;WAAYA,yB;AAAAA,EAAAA,yB;AAAAA,EAAAA,yB;AAAAA,EAAAA,yB;GAAAA,yB,KAAAA,yB;;AAMZ,WAAYC,wBAAZ;;WAAYA,wB;AAAAA,EAAAA,wB;AAAAA,EAAAA,wB;GAAAA,wB,KAAAA,wB;;AAKZ,WAAYC,4BAAZ;;WAAYA,4B;AAAAA,EAAAA,4B;AAAAA,EAAAA,4B;AAAAA,EAAAA,4B;GAAAA,4B,KAAAA,4B;;AAMZ,WAAYC,6BAAZ;;WAAYA,6B;AAAAA,EAAAA,6B;AAAAA,EAAAA,6B;GAAAA,6B,KAAAA,6B;;AAKZ,WAAYC,qBAAZ;;WAAYA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;GAAAA,qB,KAAAA,qB;;AAUZ,WAAYC,4BAAZ;;WAAYA,4B;AAAAA,EAAAA,4B;AAAAA,EAAAA,4B;GAAAA,4B,KAAAA,4B","sourcesContent":["export enum QuestionTemplateTypes {\r\n  Standard = \"standard\",\r\n  Custom = \"custom\",\r\n  NoHeader = \"no-header\",\r\n}\r\n\r\nexport enum QuestionIntroductionTypes {\r\n  None = \"none\",\r\n  Media = \"media\",\r\n  SimpleContent = \"simplecontent\",\r\n}\r\n\r\nexport enum QuestionPropositionTypes {\r\n  Single = \"single\",\r\n  Multiple = \"multiple\",\r\n}\r\n\r\nexport enum QuestionPropositionInfoTypes {\r\n  None = \"none\",\r\n  Simple = \"tip\",\r\n  Detailed = \"simplecontent\",\r\n}\r\n\r\nexport enum QuestionPropositionValidTypes {\r\n  Right = \"right\",\r\n  Wrong = \"wrong\",\r\n}\r\n\r\nexport enum QuestionFeedbackTypes {\r\n  None = \"none\",\r\n  Propositions = \"perpropositions\",\r\n  Global = \"global\",\r\n  Basic = \"basic\",\r\n  Embedded = \"embedded\",\r\n  Flap = \"flap\",\r\n  Detailed = \"simplecontent\",\r\n}\r\n\r\nexport enum DetailedFeedbackDisplayTypes {\r\n  Popup = \"popup\",\r\n  Below = \"below\",\r\n}\r\n"]},"metadata":{},"sourceType":"module"}