{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\shared\\\\media-editor\\\\components\\\\context\\\\index.tsx\";\nimport React, { createContext, useContext, useMemo } from \"react\";\nimport { MediaPlayerTypes } from \"editor-constants\";\nconst initValue = {\n  playerType: MediaPlayerTypes.Video,\n  topOffset: 0.1,\n  topMinWidth: 0.1,\n  mainOffset: 0.01,\n  mainMinWidth: 0.2\n};\nconst lottieValue = {\n  playerType: MediaPlayerTypes.Lottie,\n  topOffset: 0.5,\n  topMinWidth: 0.5,\n  mainOffset: 0.05,\n  mainMinWidth: 1\n};\nconst BlmMediaEditorContext = createContext(initValue);\nexport function BlmMediaEditorProvider(props) {\n  const {\n    playerType,\n    children\n  } = props;\n  const value = useMemo(() => {\n    if (playerType === MediaPlayerTypes.Lottie) {\n      return lottieValue;\n    } else {\n      return { ...initValue,\n        playerType\n      };\n    }\n  }, [playerType]);\n  return /*#__PURE__*/React.createElement(BlmMediaEditorContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, children);\n}\nexport function useMediaEditorContext() {\n  return useContext(BlmMediaEditorContext);\n}\nexport default BlmMediaEditorContext;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/media-editor/components/context/index.tsx"],"names":["React","createContext","useContext","useMemo","MediaPlayerTypes","initValue","playerType","Video","topOffset","topMinWidth","mainOffset","mainMinWidth","lottieValue","Lottie","BlmMediaEditorContext","BlmMediaEditorProvider","props","children","value","useMediaEditorContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAAkDC,UAAlD,EAA8DC,OAA9D,QAA6E,OAA7E;AAEA,SAASC,gBAAT,QAAiC,kBAAjC;AAMA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAEF,gBAAgB,CAACG,KADb;AAEhBC,EAAAA,SAAS,EAAE,GAFK;AAGhBC,EAAAA,WAAW,EAAE,GAHG;AAIhBC,EAAAA,UAAU,EAAE,IAJI;AAKhBC,EAAAA,YAAY,EAAE;AALE,CAAlB;AAQA,MAAMC,WAAW,GAAG;AAClBN,EAAAA,UAAU,EAAEF,gBAAgB,CAACS,MADX;AAElBL,EAAAA,SAAS,EAAE,GAFO;AAGlBC,EAAAA,WAAW,EAAE,GAHK;AAIlBC,EAAAA,UAAU,EAAE,IAJM;AAKlBC,EAAAA,YAAY,EAAE;AALI,CAApB;AAQA,MAAMG,qBAAqB,GAAGb,aAAa,CAACI,SAAD,CAA3C;AAEA,OAAO,SAASU,sBAAT,CAAgCC,KAAhC,EAAoF;AACzF,QAAM;AAAEV,IAAAA,UAAF;AAAcW,IAAAA;AAAd,MAA2BD,KAAjC;AAEA,QAAME,KAAK,GAAGf,OAAO,CAAC,MAAM;AAC1B,QAAIG,UAAU,KAAKF,gBAAgB,CAACS,MAApC,EAA4C;AAC1C,aAAOD,WAAP;AACD,KAFD,MAEO;AACL,aAAO,EAAE,GAAGP,SAAL;AAAgBC,QAAAA;AAAhB,OAAP;AACD;AACF,GANoB,EAMlB,CAACA,UAAD,CANkB,CAArB;AAQA,sBAAO,oBAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAEY,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CD,QAA/C,CAAP;AACD;AAED,OAAO,SAASE,qBAAT,GAAiC;AACtC,SAAOjB,UAAU,CAACY,qBAAD,CAAjB;AACD;AAED,eAAeA,qBAAf","sourcesContent":["import React, { createContext, PropsWithChildren, useContext, useMemo } from \"react\";\r\n\r\nimport { MediaPlayerTypes } from \"editor-constants\";\r\n\r\nexport interface MediaEditorProviderProps {\r\n  playerType: MediaPlayerTypes;\r\n}\r\n\r\nconst initValue = {\r\n  playerType: MediaPlayerTypes.Video,\r\n  topOffset: 0.1,\r\n  topMinWidth: 0.1,\r\n  mainOffset: 0.01,\r\n  mainMinWidth: 0.2,\r\n};\r\n\r\nconst lottieValue = {\r\n  playerType: MediaPlayerTypes.Lottie,\r\n  topOffset: 0.5,\r\n  topMinWidth: 0.5,\r\n  mainOffset: 0.05,\r\n  mainMinWidth: 1,\r\n};\r\n\r\nconst BlmMediaEditorContext = createContext(initValue);\r\n\r\nexport function BlmMediaEditorProvider(props: PropsWithChildren<MediaEditorProviderProps>) {\r\n  const { playerType, children } = props;\r\n\r\n  const value = useMemo(() => {\r\n    if (playerType === MediaPlayerTypes.Lottie) {\r\n      return lottieValue;\r\n    } else {\r\n      return { ...initValue, playerType };\r\n    }\r\n  }, [playerType]);\r\n\r\n  return <BlmMediaEditorContext.Provider value={value}>{children}</BlmMediaEditorContext.Provider>;\r\n}\r\n\r\nexport function useMediaEditorContext() {\r\n  return useContext(BlmMediaEditorContext);\r\n}\r\n\r\nexport default BlmMediaEditorContext;\r\n"]},"metadata":{},"sourceType":"module"}