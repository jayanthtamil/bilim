{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\shared\\\\background-media\\\\utils.tsx\";\nimport React from \"react\";\nimport { ListItemText, ListItemIcon, MenuItem } from \"@material-ui/core\";\nimport { BackgroundOptionTypes, BackgroundOption2Types } from \"editor-constants\";\nimport { MaskOptionIcon, ParallaxOptionIcon, StandardOptionIcon } from \"assets/icons\";\nconst IMAGE_OPTIONS = [BackgroundOptionTypes.Standard, BackgroundOptionTypes.Parallax, BackgroundOptionTypes.Mask];\nconst PAGE_IMAGE_OPTIONS = [BackgroundOptionTypes.Scroll, BackgroundOptionTypes.Parallax, BackgroundOptionTypes.Fixed];\nconst VIDEO_OPTIONS = [BackgroundOptionTypes.Autoplay, BackgroundOptionTypes.Scroll];\nconst IMAGE_OPTIONS2 = [BackgroundOption2Types.FullWidth, BackgroundOption2Types.NoResize, BackgroundOption2Types.Repeat];\nconst IMAGE_OPTIONS3 = [BackgroundOption2Types.Cover, BackgroundOption2Types.NoResize, BackgroundOption2Types.Repeat];\nexport const getOptions = (type, hasVideo) => {\n  if (hasVideo) {\n    return VIDEO_OPTIONS;\n  } else if (type === \"page\" || type === \"page-action\") {\n    return PAGE_IMAGE_OPTIONS;\n  } else {\n    return IMAGE_OPTIONS;\n  }\n};\nexport const getOptions2 = option => {\n  return option === BackgroundOptionTypes.Fixed ? IMAGE_OPTIONS3 : IMAGE_OPTIONS2;\n};\nexport const getDefaultOption = (arr, value) => {\n  return arr.includes(value) ? value : arr[0];\n};\n\nconst getItem = option => {\n  switch (option) {\n    case BackgroundOptionTypes.Standard:\n      return {\n        label: \"Standard\",\n        icon: /*#__PURE__*/React.createElement(StandardOptionIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 41\n          }\n        })\n      };\n\n    case BackgroundOptionTypes.Parallax:\n      return {\n        label: \"Parallax\",\n        icon: /*#__PURE__*/React.createElement(ParallaxOptionIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 41\n          }\n        })\n      };\n\n    case BackgroundOptionTypes.Mask:\n      return {\n        label: \"Mask\",\n        icon: /*#__PURE__*/React.createElement(MaskOptionIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 37\n          }\n        })\n      };\n\n    case BackgroundOptionTypes.Scroll:\n      return {\n        label: \"Scroll\",\n        icon: /*#__PURE__*/React.createElement(StandardOptionIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 39\n          }\n        })\n      };\n\n    case BackgroundOptionTypes.Fixed:\n      return {\n        label: \"Fixed\",\n        icon: /*#__PURE__*/React.createElement(MaskOptionIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 38\n          }\n        })\n      };\n\n    case BackgroundOptionTypes.Autoplay:\n      return {\n        label: \"Autoplay\",\n        icon: null\n      };\n\n    case BackgroundOption2Types.FullWidth:\n      return {\n        label: \"100% Width\",\n        icon: null\n      };\n\n    case BackgroundOption2Types.Cover:\n      return {\n        label: \"Cover\",\n        icon: null\n      };\n\n    case BackgroundOption2Types.NoResize:\n      return {\n        label: \"No Resize\",\n        icon: null\n      };\n\n    case BackgroundOption2Types.Repeat:\n      return {\n        label: \"Repeat\",\n        icon: null\n      };\n\n    default:\n      return {\n        label: \"None\",\n        icon: null\n      };\n  }\n};\n\nexport const createItems = (options, hasIcon) => {\n  const items = [];\n\n  for (const option of options) {\n    const {\n      label,\n      icon\n    } = getItem(option);\n    items.push( /*#__PURE__*/React.createElement(MenuItem, {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, hasIcon && icon && /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, icon), /*#__PURE__*/React.createElement(ListItemText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, label)));\n  }\n\n  return items;\n};","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/background-media/utils.tsx"],"names":["React","ListItemText","ListItemIcon","MenuItem","BackgroundOptionTypes","BackgroundOption2Types","MaskOptionIcon","ParallaxOptionIcon","StandardOptionIcon","IMAGE_OPTIONS","Standard","Parallax","Mask","PAGE_IMAGE_OPTIONS","Scroll","Fixed","VIDEO_OPTIONS","Autoplay","IMAGE_OPTIONS2","FullWidth","NoResize","Repeat","IMAGE_OPTIONS3","Cover","getOptions","type","hasVideo","getOptions2","option","getDefaultOption","arr","value","includes","getItem","label","icon","createItems","options","hasIcon","items","push"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { ListItemText, ListItemIcon, MenuItem } from \"@material-ui/core\";\r\n\r\nimport { BackgroundOptionTypes, BackgroundOption2Types } from \"editor-constants\";\r\nimport { MaskOptionIcon, ParallaxOptionIcon, StandardOptionIcon } from \"assets/icons\";\r\nimport { BGMediaDisplayTypes } from \"./BlmBackgroundMedia\";\r\n\r\nconst IMAGE_OPTIONS = [\r\n  BackgroundOptionTypes.Standard,\r\n  BackgroundOptionTypes.Parallax,\r\n  BackgroundOptionTypes.Mask,\r\n];\r\nconst PAGE_IMAGE_OPTIONS = [\r\n  BackgroundOptionTypes.Scroll,\r\n  BackgroundOptionTypes.Parallax,\r\n  BackgroundOptionTypes.Fixed,\r\n];\r\nconst VIDEO_OPTIONS = [BackgroundOptionTypes.Autoplay, BackgroundOptionTypes.Scroll];\r\nconst IMAGE_OPTIONS2 = [\r\n  BackgroundOption2Types.FullWidth,\r\n  BackgroundOption2Types.NoResize,\r\n  BackgroundOption2Types.Repeat,\r\n];\r\nconst IMAGE_OPTIONS3 = [\r\n  BackgroundOption2Types.Cover,\r\n  BackgroundOption2Types.NoResize,\r\n  BackgroundOption2Types.Repeat,\r\n];\r\n\r\nexport const getOptions = (type: BGMediaDisplayTypes, hasVideo: boolean) => {\r\n  if (hasVideo) {\r\n    return VIDEO_OPTIONS;\r\n  } else if (type === \"page\" || type === \"page-action\") {\r\n    return PAGE_IMAGE_OPTIONS;\r\n  } else {\r\n    return IMAGE_OPTIONS;\r\n  }\r\n};\r\n\r\nexport const getOptions2 = (option: BackgroundOptionTypes) => {\r\n  return option === BackgroundOptionTypes.Fixed ? IMAGE_OPTIONS3 : IMAGE_OPTIONS2;\r\n};\r\n\r\nexport const getDefaultOption = <T,>(arr: T[], value: T) => {\r\n  return arr.includes(value) ? value : arr[0];\r\n};\r\n\r\nconst getItem = (option: BackgroundOptionTypes | BackgroundOption2Types) => {\r\n  switch (option) {\r\n    case BackgroundOptionTypes.Standard:\r\n      return { label: \"Standard\", icon: <StandardOptionIcon /> };\r\n    case BackgroundOptionTypes.Parallax:\r\n      return { label: \"Parallax\", icon: <ParallaxOptionIcon /> };\r\n    case BackgroundOptionTypes.Mask:\r\n      return { label: \"Mask\", icon: <MaskOptionIcon /> };\r\n    case BackgroundOptionTypes.Scroll:\r\n      return { label: \"Scroll\", icon: <StandardOptionIcon /> };\r\n    case BackgroundOptionTypes.Fixed:\r\n      return { label: \"Fixed\", icon: <MaskOptionIcon /> };\r\n    case BackgroundOptionTypes.Autoplay:\r\n      return { label: \"Autoplay\", icon: null };\r\n    case BackgroundOption2Types.FullWidth:\r\n      return { label: \"100% Width\", icon: null };\r\n    case BackgroundOption2Types.Cover:\r\n      return { label: \"Cover\", icon: null };\r\n    case BackgroundOption2Types.NoResize:\r\n      return { label: \"No Resize\", icon: null };\r\n    case BackgroundOption2Types.Repeat:\r\n      return { label: \"Repeat\", icon: null };\r\n    default:\r\n      return { label: \"None\", icon: null };\r\n  }\r\n};\r\n\r\nexport const createItems = (\r\n  options: BackgroundOptionTypes[] | BackgroundOption2Types[],\r\n  hasIcon: boolean\r\n) => {\r\n  const items = [];\r\n\r\n  for (const option of options) {\r\n    const { label, icon } = getItem(option);\r\n\r\n    items.push(\r\n      <MenuItem key={option} value={option}>\r\n        {hasIcon && icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n        <ListItemText>{label}</ListItemText>\r\n      </MenuItem>\r\n    );\r\n  }\r\n\r\n  return items;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}