{"ast":null,"code":"import { Attributes, ClassAttribute, BLMElement, StyleAttribute } from \"types\";\nimport { MediaFormats, StyleListTypes } from \"editor-constants\";\nimport { createRGBA } from \"utils\";\nimport { setBLMElement } from \"../../core\";\nimport { createAction, getComponentClassNames, getStyleClassNames, getTintStyles } from \"./common\";\nexport function setButtonComponent(element, button) {\n  const model = createButton(button);\n  setBLMElement(element, model);\n  setButtonHTML(element, button);\n}\n\nfunction createButton(button) {\n  const {\n    value,\n    isDeactivated,\n    buttonOptions\n  } = button;\n  const {\n    background,\n    inline,\n    clickAction,\n    overAction,\n    style\n  } = value;\n  const {\n    tint\n  } = style;\n  const model = new BLMElement();\n  const attrs = new Attributes();\n  const classAttr = new ClassAttribute();\n  const styleAttr = new StyleAttribute();\n  const clsNames = getComponentClassNames([StyleListTypes.Button]);\n  const onClick = createAction(clickAction, \"click\");\n  const onRollOver = createAction(overAction, \"over\");\n  const tintRgb = createRGBA(tint === null || tint === void 0 ? void 0 : tint.color, tint === null || tint === void 0 ? void 0 : tint.alpha);\n  model.isDeactivated = isDeactivated;\n  model.editorOptions = background || inline || (tint === null || tint === void 0 ? void 0 : tint.color) ? {\n    background,\n    inline,\n    tint: tintRgb ? tint : undefined\n  } : null;\n  attrs.removables = [\"blm-action\"];\n  classAttr.removables = [...clsNames, \"darkout\", \"darkover\", \"shadow\", \"vertical\", \"horizontal\"];\n  styleAttr.removables = [\"backgroundImage\", \"--tintout\", \"--opacityout\", \"--tintover\", \"--opacityover\"];\n\n  if (onClick || onRollOver) {\n    attrs[\"blm-action\"] = JSON.stringify({\n      onClick,\n      onRollOver\n    });\n  }\n\n  if (style) {\n    classAttr.items.push(...getStyleClassNames(style, \"button\"));\n    Object.assign(styleAttr, getTintStyles(style));\n  }\n\n  if (buttonOptions && buttonOptions.format) {\n    if (buttonOptions.format.value === MediaFormats.FixedWidth) {\n      styleAttr[\"--blm_width\"] = buttonOptions.format.width;\n      classAttr.items.push(MediaFormats.FixedWidth);\n    } else {\n      styleAttr[\"--blm_width\"] = 0;\n      classAttr.items.push(MediaFormats.Auto);\n    }\n  }\n\n  model.attributes = attrs;\n  model.classAttr = classAttr;\n  model.styleAttr = styleAttr;\n  return model;\n}\n\nfunction setButtonHTML(element, button) {\n  if (button) {\n    const {\n      value\n    } = button;\n    const {\n      inline,\n      title,\n      description,\n      caption\n    } = value;\n    element.innerHTML = `\n    <div class=\"buttonwrapper\">\n      <div class=\"iconwrapper\">\n        <div class=\"icon\" >\n          <img src=\"${(inline === null || inline === void 0 ? void 0 : inline.url) || \"\"}\"/>\n        </div>\n      </div>\n      <div class=\"txtwrapper\">\n        <div class=\"buttontitle\">${title}</div>\n        <div class=\"buttondescription\">${description}</div>\n        <div class=\"buttoncaption\">${caption}</div>\n      </div>\n      <div class=\"validate\"></div>\n    </div>\n    <div class=\"background\"></div>\n    `;\n  }\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/html/component/button.ts"],"names":["Attributes","ClassAttribute","BLMElement","StyleAttribute","MediaFormats","StyleListTypes","createRGBA","setBLMElement","createAction","getComponentClassNames","getStyleClassNames","getTintStyles","setButtonComponent","element","button","model","createButton","setButtonHTML","value","isDeactivated","buttonOptions","background","inline","clickAction","overAction","style","tint","attrs","classAttr","styleAttr","clsNames","Button","onClick","onRollOver","tintRgb","color","alpha","editorOptions","undefined","removables","JSON","stringify","items","push","Object","assign","format","FixedWidth","width","Auto","attributes","title","description","caption","innerHTML","url"],"mappings":"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","sourcesContent":["import { Attributes, ClassAttribute, BLMElement, StyleAttribute, ButtonComponent } from \"types\";\r\nimport { MediaFormats, StyleListTypes } from \"editor-constants\";\r\nimport { createRGBA } from \"utils\";\r\nimport { setBLMElement } from \"../../core\";\r\nimport { createAction, getComponentClassNames, getStyleClassNames, getTintStyles } from \"./common\";\r\n\r\nexport function setButtonComponent(element: HTMLElement, button: ButtonComponent) {\r\n  const model = createButton(button);\r\n\r\n  setBLMElement(element, model);\r\n  setButtonHTML(element, button);\r\n}\r\n\r\nfunction createButton(button: ButtonComponent) {\r\n  const { value, isDeactivated, buttonOptions } = button;\r\n  const { background, inline, clickAction, overAction, style } = value;\r\n  const { tint } = style;\r\n  const model = new BLMElement();\r\n  const attrs = new Attributes();\r\n  const classAttr = new ClassAttribute();\r\n  const styleAttr = new StyleAttribute();\r\n  const clsNames = getComponentClassNames([StyleListTypes.Button]);\r\n  const onClick = createAction(clickAction, \"click\");\r\n  const onRollOver = createAction(overAction, \"over\");\r\n  const tintRgb = createRGBA(tint?.color, tint?.alpha);\r\n\r\n  model.isDeactivated = isDeactivated;\r\n  model.editorOptions =\r\n    background || inline || tint?.color\r\n      ? { background, inline, tint: tintRgb ? tint : undefined }\r\n      : null;\r\n\r\n  attrs.removables = [\"blm-action\"];\r\n  classAttr.removables = [...clsNames, \"darkout\", \"darkover\", \"shadow\", \"vertical\", \"horizontal\"];\r\n  styleAttr.removables = [\r\n    \"backgroundImage\",\r\n    \"--tintout\",\r\n    \"--opacityout\",\r\n    \"--tintover\",\r\n    \"--opacityover\",\r\n  ];\r\n\r\n  if (onClick || onRollOver) {\r\n    attrs[\"blm-action\"] = JSON.stringify({\r\n      onClick,\r\n      onRollOver,\r\n    });\r\n  }\r\n\r\n  if (style) {\r\n    classAttr.items.push(...getStyleClassNames(style, \"button\"));\r\n    Object.assign(styleAttr, getTintStyles(style));\r\n  }\r\n\r\n  if (buttonOptions && buttonOptions.format) {\r\n    if (buttonOptions.format.value === MediaFormats.FixedWidth) {\r\n      styleAttr[\"--blm_width\"] = buttonOptions.format.width;\r\n      classAttr.items.push(MediaFormats.FixedWidth);\r\n    } else {\r\n      styleAttr[\"--blm_width\"] = 0;\r\n      classAttr.items.push(MediaFormats.Auto);\r\n    }\r\n  }\r\n\r\n  model.attributes = attrs;\r\n  model.classAttr = classAttr;\r\n  model.styleAttr = styleAttr;\r\n\r\n  return model;\r\n}\r\n\r\nfunction setButtonHTML(element: HTMLElement, button: ButtonComponent) {\r\n  if (button) {\r\n    const { value } = button;\r\n    const { inline, title, description, caption } = value;\r\n\r\n    element.innerHTML = `\r\n    <div class=\"buttonwrapper\">\r\n      <div class=\"iconwrapper\">\r\n        <div class=\"icon\" >\r\n          <img src=\"${inline?.url || \"\"}\"/>\r\n        </div>\r\n      </div>\r\n      <div class=\"txtwrapper\">\r\n        <div class=\"buttontitle\">${title}</div>\r\n        <div class=\"buttondescription\">${description}</div>\r\n        <div class=\"buttoncaption\">${caption}</div>\r\n      </div>\r\n      <div class=\"validate\"></div>\r\n    </div>\r\n    <div class=\"background\"></div>\r\n    `;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}