{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport warning from \"warning\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { TreeContext } from \"./contextTypes\";\nimport { convertTreeToEntities, convertDataToTree, getDataAndAria, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode } from \"./util\";\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _super.apply(this, arguments);\n    /** Internal usage for `rc-tree-select`, we don't promise it will not change. */\n\n    _this.domTreeNodes = {};\n    _this.state = {\n      keyEntities: {},\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragNodesKeys: [],\n      dragOverNodeKey: null,\n      dropPosition: null,\n      treeNode: [],\n      prevProps: null\n    };\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          dropPosition = _this$state.dropPosition,\n          expandedKeys = _this$state.expandedKeys;\n      var onDragStart = _this.props.onDragStart;\n      var _node$props = node.props,\n          eventKey = _node$props.eventKey,\n          children = _node$props.children;\n      _this.dragNode = node;\n\n      _this.setState({\n        dragNodesKeys: getDragNodesKeys(children, node),\n        expandedKeys: arrDel(expandedKeys, eventKey)\n      });\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: node,\n          dragNode: _this.dragNode,\n          dropPosition: dropPosition\n        });\n      }\n    };\n    /**\r\n     * [Legacy] Select handler is less small than node,\r\n     * so that this will trigger when drag enter node or select handler.\r\n     * This is a little tricky if customize css without padding.\r\n     * Better for use mouse move event to refresh drag state.\r\n     * But let's just keep it to avoid event trigger logic change.\r\n     */\n\n\n    _this.onNodeDragEnter = function (event, node) {\n      var expandedKeys = _this.state.expandedKeys;\n      var onDragEnter = _this.props.onDragEnter;\n      var _node$props2 = node.props,\n          pos = _node$props2.pos,\n          eventKey = _node$props2.eventKey;\n      if (!_this.dragNode) return;\n      var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n        _this.setState({\n          dragOverNodeKey: \"\",\n          dropPosition: null\n        });\n\n        return;\n      } // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          dragOverNodeKey: eventKey,\n          dropPosition: dropPosition\n        }); // Side effect for delay drag\n\n\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n\n          if (!(\"expandedKeys\" in _this.props)) {\n            _this.setState({\n              expandedKeys: newExpandedKeys\n            });\n          }\n\n          if (onDragEnter) {\n            onDragEnter({\n              event: event,\n              node: node,\n              expandedKeys: newExpandedKeys,\n              dragNode: _this.dragNode,\n              dropPosition: dropPosition\n            });\n          }\n        }, 400);\n      }, 0);\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var onDragOver = _this.props.onDragOver;\n      var eventKey = node.props.eventKey;\n      var dropPosition = _this.state.dropPosition; // Update drag position\n\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n        dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _this.state.dropPosition) return;\n\n        _this.setState({\n          dropPosition: dropPosition\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: node,\n          dragNode: _this.dragNode,\n          dropPosition: dropPosition\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n      var dropPosition = _this.state.dropPosition;\n\n      _this.setState({\n        dragOverNodeKey: \"\"\n      });\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: node,\n          dragNode: _this.dragNode,\n          dropPosition: dropPosition\n        });\n      }\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n      var dropPosition = _this.state.dropPosition;\n\n      _this.setState({\n        dragOverNodeKey: \"\"\n      });\n\n      if (onDragEnd) {\n        onDragEnd({\n          event: event,\n          node: node,\n          dragNode: _this.dragNode,\n          dropPosition: dropPosition\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$state2 = _this.state,\n          _this$state2$dragNode = _this$state2.dragNodesKeys,\n          dragNodesKeys = _this$state2$dragNode === void 0 ? [] : _this$state2$dragNode,\n          dropPosition = _this$state2.dropPosition;\n      var onDrop = _this.props.onDrop;\n      var _node$props3 = node.props,\n          eventKey = _node$props3.eventKey,\n          pos = _node$props3.pos;\n\n      _this.setState({\n        dragOverNodeKey: \"\"\n      });\n\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: node,\n        dragNode: _this.dragNode,\n        dragNodesKeys: dragNodesKeys.slice(),\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n\n      if (dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n\n      if (onDrop) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          multiple = _this$props.multiple;\n      var _treeNode$props = treeNode.props,\n          selected = _treeNode$props.selected,\n          eventKey = _treeNode$props.eventKey;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, eventKey);\n      } else if (!multiple) {\n        selectedKeys = [eventKey];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, eventKey);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (key) {\n        var entity = keyEntities[key];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: \"select\",\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state3 = _this.state,\n          keyEntities = _this$state3.keyEntities,\n          oriCheckedKeys = _this$state3.checkedKeys,\n          oriHalfCheckedKeys = _this$state3.halfCheckedKeys;\n      var _this$props2 = _this.props,\n          checkStrictly = _this$props2.checkStrictly,\n          onCheck = _this$props2.onCheck;\n      var eventKey = treeNode.props.eventKey; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: \"check\",\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\n          return keyEntities[key];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\n          checkedKeys: oriCheckedKeys,\n          halfCheckedKeys: oriHalfCheckedKeys\n        }),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (key) {\n          var entity = keyEntities[key];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys,\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props3 = _this.props,\n              loadData = _this$props3.loadData,\n              onLoad = _this$props3.onLoad;\n          var eventKey = treeNode.props.eventKey;\n\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\n            // react 15 will warn if return null\n            return {};\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state4 = _this.state,\n                currentLoadedKeys = _this$state4.loadedKeys,\n                currentLoadingKeys = _this$state4.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, eventKey);\n            var newLoadingKeys = arrDel(currentLoadingKeys, eventKey); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: \"load\",\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, eventKey)\n          };\n        });\n      });\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var _this$props4 = _this.props,\n          onExpand = _this$props4.onExpand,\n          loadData = _this$props4.loadData;\n      var _treeNode$props2 = treeNode.props,\n          eventKey = _treeNode$props2.eventKey,\n          expanded = _treeNode$props2.expanded,\n          alwaysExpanded = _treeNode$props2.alwaysExpanded;\n\n      if (alwaysExpanded !== \"undefined\" && alwaysExpanded) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(eventKey);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, \"Expand state not sync with index check\");\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, eventKey);\n      } else {\n        expandedKeys = arrDel(expandedKeys, eventKey);\n      }\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys\n      });\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          _this.setUncontrolledState({\n            expandedKeys: expandedKeys\n          });\n        }) : null;\n      }\n\n      return null;\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeOptionsClick = function (event, node) {\n      var onOptionsClick = _this.props.onOptionsClick;\n\n      if (onOptionsClick) {\n        event.preventDefault();\n        onOptionsClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n    /**\r\n     * Only update the value which is not in props\r\n     */\n\n\n    _this.setUncontrolledState = function (state) {\n      var needSync = false;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) return;\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync) {\n        _this.setState(newState);\n      }\n    };\n\n    _this.registerTreeNode = function (key, node) {\n      if (node) {\n        _this.domTreeNodes[key] = node;\n      } else {\n        delete _this.domTreeNodes[key];\n      }\n    };\n\n    _this.isKeyChecked = function (key) {\n      var _this$state$checkedKe = _this.state.checkedKeys,\n          checkedKeys = _this$state$checkedKe === void 0 ? [] : _this$state$checkedKe;\n      return checkedKeys.indexOf(key) !== -1;\n    };\n    /**\r\n     * [Legacy] Original logic use `key` as tracking clue.\r\n     * We have to use `cloneElement` to pass `key`.\r\n     */\n\n\n    _this.renderTreeNode = function (child, index) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _this$state5 = _this.state,\n          keyEntities = _this$state5.keyEntities,\n          _this$state5$expanded = _this$state5.expandedKeys,\n          expandedKeys = _this$state5$expanded === void 0 ? [] : _this$state5$expanded,\n          _this$state5$selected = _this$state5.selectedKeys,\n          selectedKeys = _this$state5$selected === void 0 ? [] : _this$state5$selected,\n          _this$state5$halfChec = _this$state5.halfCheckedKeys,\n          halfCheckedKeys = _this$state5$halfChec === void 0 ? [] : _this$state5$halfChec,\n          _this$state5$loadedKe = _this$state5.loadedKeys,\n          loadedKeys = _this$state5$loadedKe === void 0 ? [] : _this$state5$loadedKe,\n          _this$state5$loadingK = _this$state5.loadingKeys,\n          loadingKeys = _this$state5$loadingK === void 0 ? [] : _this$state5$loadingK,\n          dragOverNodeKey = _this$state5.dragOverNodeKey,\n          dropPosition = _this$state5.dropPosition;\n      var pos = getPosition(level, index);\n      var key = child.key || pos;\n\n      if (!keyEntities[key]) {\n        warnOnlyTreeNode();\n        return null;\n      }\n\n      return React.cloneElement(child, {\n        key: key,\n        eventKey: key,\n        expanded: expandedKeys.indexOf(key) !== -1,\n        selected: selectedKeys.indexOf(key) !== -1,\n        loaded: loadedKeys.indexOf(key) !== -1,\n        loading: loadingKeys.indexOf(key) !== -1,\n        checked: _this.isKeyChecked(key),\n        halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n        pos: pos,\n        // [Legacy] Drag props\n        dragOver: dragOverNodeKey === key && dropPosition === 0,\n        dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n        dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var treeNode = this.state.treeNode;\n      var _this$props5 = this.props,\n          prefixCls = _this$props5.prefixCls,\n          className = _this$props5.className,\n          focusable = _this$props5.focusable,\n          style = _this$props5.style,\n          showLine = _this$props5.showLine,\n          _this$props5$tabIndex = _this$props5.tabIndex,\n          tabIndex = _this$props5$tabIndex === void 0 ? 0 : _this$props5$tabIndex,\n          selectable = _this$props5.selectable,\n          showIcon = _this$props5.showIcon,\n          icon = _this$props5.icon,\n          switcherIcon = _this$props5.switcherIcon,\n          draggable = _this$props5.draggable,\n          checkable = _this$props5.checkable,\n          checkStrictly = _this$props5.checkStrictly,\n          disabled = _this$props5.disabled,\n          motion = _this$props5.motion,\n          loadData = _this$props5.loadData,\n          filterTreeNode = _this$props5.filterTreeNode,\n          showOptionsIcon = _this$props5.showOptionsIcon,\n          expandOnSelectorClick = _this$props5.expandOnSelectorClick,\n          getNodeDropEffect = _this$props5.getNodeDropEffect;\n      var domProps = getDataAndAria(this.props);\n\n      if (focusable) {\n        domProps.tabIndex = tabIndex;\n      }\n\n      return React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          motion: motion,\n          showOptionsIcon: showOptionsIcon,\n          expandOnSelectorClick: expandOnSelectorClick,\n          getNodeDropEffect: getNodeDropEffect,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          renderTreeNode: this.renderTreeNode,\n          isKeyChecked: this.isKeyChecked,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop,\n          onNodeOptionsClick: this.onNodeOptionsClick,\n          registerTreeNode: this.registerTreeNode\n        }\n      }, React.createElement(\"ul\", Object.assign({}, domProps, {\n        className: classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-show-line\"), showLine)),\n        style: style,\n        role: \"tree\",\n        unselectable: \"on\"\n      }), mapChildren(treeNode, function (node, index) {\n        return _this2.renderTreeNode(node, index);\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeNode = null; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync(\"treeData\")) {\n        treeNode = convertDataToTree(props.treeData);\n      } else if (needSync(\"children\")) {\n        treeNode = toArray(props.children);\n      } // Tree support filter function which will break the tree structure in the vdm.\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\n\n\n      if (treeNode) {\n        newState.treeNode = treeNode; // Calculate the entities data for quick match\n\n        var entitiesMap = convertTreeToEntities(treeNode);\n        newState.keyEntities = entitiesMap.keyEntities;\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync(\"expandedKeys\") || prevProps && needSync(\"autoExpandParent\")) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        newState.expandedKeys = Object.keys(keyEntities);\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync(\"selectedKeys\")) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync(\"checkedKeys\")) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeNode) {\n          // If treeNode changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync(\"loadedKeys\")) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.any,\n  treeData: PropTypes.array,\n  showLine: PropTypes.bool,\n  showIcon: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  focusable: PropTypes.bool,\n  selectable: PropTypes.bool,\n  disabled: PropTypes.bool,\n  multiple: PropTypes.bool,\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  checkStrictly: PropTypes.bool,\n  draggable: PropTypes.bool,\n  defaultExpandParent: PropTypes.bool,\n  autoExpandParent: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\n  expandedKeys: PropTypes.arrayOf(PropTypes.string),\n  defaultCheckedKeys: PropTypes.arrayOf(PropTypes.string),\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\n  defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onExpand: PropTypes.func,\n  onCheck: PropTypes.func,\n  onSelect: PropTypes.func,\n  onLoad: PropTypes.func,\n  loadData: PropTypes.func,\n  loadedKeys: PropTypes.arrayOf(PropTypes.string),\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onRightClick: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDrop: PropTypes.func,\n  onOptionsClick: PropTypes.func,\n  filterTreeNode: PropTypes.func,\n  motion: PropTypes.object,\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  showOptionsIcon: PropTypes.bool,\n  expandOnSelectorClick: PropTypes.bool,\n  getNodeDropEffect: PropTypes.func\n};\nTree.defaultProps = {\n  prefixCls: \"rc-tree\",\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  showOptionsIcon: false,\n  expandOnSelectorClick: false\n};\npolyfill(Tree);\nexport default Tree;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/node_modules/rc-tree/es/Tree.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","_createSuper","Derived","Super","_getPrototypeOf","result","_isNativeReflectConstruct","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Date","toString","e","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","React","PropTypes","classNames","warning","toArray","polyfill","TreeContext","convertTreeToEntities","convertDataToTree","getDataAndAria","getPosition","getDragNodesKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","mapChildren","conductCheck","warnOnlyTreeNode","Tree","_React$Component","_super","_this","domTreeNodes","state","keyEntities","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","dragNodesKeys","dragOverNodeKey","dropPosition","treeNode","prevProps","onNodeDragStart","event","node","_this$state","onDragStart","_node$props","eventKey","children","dragNode","setState","onNodeDragEnter","onDragEnter","_node$props2","pos","setTimeout","delayedDragEnterLogic","keys","forEach","clearTimeout","window","newExpandedKeys","onNodeDragOver","onDragOver","onNodeDragLeave","onDragLeave","onNodeDragEnd","onDragEnd","onNodeDrop","_this$state2","_this$state2$dragNode","onDrop","_node$props3","indexOf","posArr","dropResult","slice","Number","dropToGap","onNodeClick","onClick","onNodeDoubleClick","onDoubleClick","onNodeSelect","_this$props","onSelect","multiple","_treeNode$props","selected","targetSelected","selectedNodes","map","entity","filter","setUncontrolledState","nativeEvent","onNodeCheck","checked","_this$state3","oriCheckedKeys","oriHalfCheckedKeys","_this$props2","checkStrictly","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","_conductCheck","_checkedKeys","_halfCheckedKeys","checkedNodesPositions","push","onNodeLoad","Promise","resolve","_ref","_ref$loadedKeys","_ref$loadingKeys","_this$props3","loadData","onLoad","promise","then","_this$state4","currentLoadedKeys","currentLoadingKeys","newLoadedKeys","newLoadingKeys","onNodeExpand","_this$props4","onExpand","_treeNode$props2","expanded","alwaysExpanded","index","targetExpanded","loadPromise","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","onNodeOptionsClick","onOptionsClick","needSync","newState","name","registerTreeNode","isKeyChecked","_this$state$checkedKe","renderTreeNode","child","level","undefined","_this$state5","_this$state5$expanded","_this$state5$selected","_this$state5$halfChec","_this$state5$loadedKe","_this$state5$loadingK","cloneElement","loaded","loading","dragOver","dragOverGapTop","dragOverGapBottom","render","_this2","_this$props5","prefixCls","className","focusable","style","showLine","_this$props5$tabIndex","tabIndex","selectable","showIcon","icon","switcherIcon","draggable","checkable","disabled","motion","filterTreeNode","showOptionsIcon","expandOnSelectorClick","getNodeDropEffect","domProps","createElement","Provider","assign","concat","role","unselectable","getDerivedStateFromProps","prevState","treeData","entitiesMap","autoExpandParent","defaultExpandParent","defaultExpandAll","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","propTypes","string","object","oneOfType","number","any","array","bool","func","arrayOf","defaultProps"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\r\n\r\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nimport * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport warning from \"warning\";\r\nimport toArray from \"rc-util/es/Children/toArray\";\r\nimport { polyfill } from \"react-lifecycles-compat\";\r\nimport { TreeContext } from \"./contextTypes\";\r\nimport { convertTreeToEntities, convertDataToTree, getDataAndAria, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode } from \"./util\";\r\n\r\nvar Tree = /*#__PURE__*/function (_React$Component) {\r\n  _inherits(Tree, _React$Component);\r\n\r\n  var _super = _createSuper(Tree);\r\n\r\n  function Tree() {\r\n    var _this;\r\n\r\n    _classCallCheck(this, Tree);\r\n\r\n    _this = _super.apply(this, arguments);\r\n    /** Internal usage for `rc-tree-select`, we don't promise it will not change. */\r\n\r\n    _this.domTreeNodes = {};\r\n    _this.state = {\r\n      keyEntities: {},\r\n      selectedKeys: [],\r\n      checkedKeys: [],\r\n      halfCheckedKeys: [],\r\n      loadedKeys: [],\r\n      loadingKeys: [],\r\n      expandedKeys: [],\r\n      dragNodesKeys: [],\r\n      dragOverNodeKey: null,\r\n      dropPosition: null,\r\n      treeNode: [],\r\n      prevProps: null\r\n    };\r\n\r\n    _this.onNodeDragStart = function (event, node) {\r\n      var _this$state = _this.state,\r\n          dropPosition = _this$state.dropPosition,\r\n          expandedKeys = _this$state.expandedKeys;\r\n      var onDragStart = _this.props.onDragStart;\r\n      var _node$props = node.props,\r\n          eventKey = _node$props.eventKey,\r\n          children = _node$props.children;\r\n      _this.dragNode = node;\r\n\r\n      _this.setState({\r\n        dragNodesKeys: getDragNodesKeys(children, node),\r\n        expandedKeys: arrDel(expandedKeys, eventKey)\r\n      });\r\n\r\n      if (onDragStart) {\r\n        onDragStart({\r\n          event: event,\r\n          node: node,\r\n          dragNode: _this.dragNode,\r\n          dropPosition: dropPosition\r\n        });\r\n      }\r\n    };\r\n    /**\r\n     * [Legacy] Select handler is less small than node,\r\n     * so that this will trigger when drag enter node or select handler.\r\n     * This is a little tricky if customize css without padding.\r\n     * Better for use mouse move event to refresh drag state.\r\n     * But let's just keep it to avoid event trigger logic change.\r\n     */\r\n\r\n\r\n    _this.onNodeDragEnter = function (event, node) {\r\n      var expandedKeys = _this.state.expandedKeys;\r\n      var onDragEnter = _this.props.onDragEnter;\r\n      var _node$props2 = node.props,\r\n          pos = _node$props2.pos,\r\n          eventKey = _node$props2.eventKey;\r\n      if (!_this.dragNode) return;\r\n      var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\r\n\r\n      if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\r\n        _this.setState({\r\n          dragOverNodeKey: \"\",\r\n          dropPosition: null\r\n        });\r\n\r\n        return;\r\n      } // Ref: https://github.com/react-component/tree/issues/132\r\n      // Add timeout to let onDragLevel fire before onDragEnter,\r\n      // so that we can clean drag props for onDragLeave node.\r\n      // Macro task for this:\r\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\r\n\r\n\r\n      setTimeout(function () {\r\n        // Update drag over node\r\n        _this.setState({\r\n          dragOverNodeKey: eventKey,\r\n          dropPosition: dropPosition\r\n        }); // Side effect for delay drag\r\n\r\n\r\n        if (!_this.delayedDragEnterLogic) {\r\n          _this.delayedDragEnterLogic = {};\r\n        }\r\n\r\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\r\n          clearTimeout(_this.delayedDragEnterLogic[key]);\r\n        });\r\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\r\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\r\n\r\n          if (!(\"expandedKeys\" in _this.props)) {\r\n            _this.setState({\r\n              expandedKeys: newExpandedKeys\r\n            });\r\n          }\r\n\r\n          if (onDragEnter) {\r\n            onDragEnter({\r\n              event: event,\r\n              node: node,\r\n              expandedKeys: newExpandedKeys,\r\n              dragNode: _this.dragNode,\r\n              dropPosition: dropPosition\r\n            });\r\n          }\r\n        }, 400);\r\n      }, 0);\r\n    };\r\n\r\n    _this.onNodeDragOver = function (event, node) {\r\n      var onDragOver = _this.props.onDragOver;\r\n      var eventKey = node.props.eventKey;\r\n      var dropPosition = _this.state.dropPosition; // Update drag position\r\n\r\n      if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\r\n        dropPosition = calcDropPosition(event, node);\r\n        if (dropPosition === _this.state.dropPosition) return;\r\n\r\n        _this.setState({\r\n          dropPosition: dropPosition\r\n        });\r\n      }\r\n\r\n      if (onDragOver) {\r\n        onDragOver({\r\n          event: event,\r\n          node: node,\r\n          dragNode: _this.dragNode,\r\n          dropPosition: dropPosition\r\n        });\r\n      }\r\n    };\r\n\r\n    _this.onNodeDragLeave = function (event, node) {\r\n      var onDragLeave = _this.props.onDragLeave;\r\n      var dropPosition = _this.state.dropPosition;\r\n\r\n      _this.setState({\r\n        dragOverNodeKey: \"\"\r\n      });\r\n\r\n      if (onDragLeave) {\r\n        onDragLeave({\r\n          event: event,\r\n          node: node,\r\n          dragNode: _this.dragNode,\r\n          dropPosition: dropPosition\r\n        });\r\n      }\r\n    };\r\n\r\n    _this.onNodeDragEnd = function (event, node) {\r\n      var onDragEnd = _this.props.onDragEnd;\r\n      var dropPosition = _this.state.dropPosition;\r\n\r\n      _this.setState({\r\n        dragOverNodeKey: \"\"\r\n      });\r\n\r\n      if (onDragEnd) {\r\n        onDragEnd({\r\n          event: event,\r\n          node: node,\r\n          dragNode: _this.dragNode,\r\n          dropPosition: dropPosition\r\n        });\r\n      }\r\n\r\n      _this.dragNode = null;\r\n    };\r\n\r\n    _this.onNodeDrop = function (event, node) {\r\n      var _this$state2 = _this.state,\r\n          _this$state2$dragNode = _this$state2.dragNodesKeys,\r\n          dragNodesKeys = _this$state2$dragNode === void 0 ? [] : _this$state2$dragNode,\r\n          dropPosition = _this$state2.dropPosition;\r\n      var onDrop = _this.props.onDrop;\r\n      var _node$props3 = node.props,\r\n          eventKey = _node$props3.eventKey,\r\n          pos = _node$props3.pos;\r\n\r\n      _this.setState({\r\n        dragOverNodeKey: \"\"\r\n      });\r\n\r\n      if (dragNodesKeys.indexOf(eventKey) !== -1) {\r\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\r\n        return;\r\n      }\r\n\r\n      var posArr = posToArr(pos);\r\n      var dropResult = {\r\n        event: event,\r\n        node: node,\r\n        dragNode: _this.dragNode,\r\n        dragNodesKeys: dragNodesKeys.slice(),\r\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\r\n        dropToGap: false\r\n      };\r\n\r\n      if (dropPosition !== 0) {\r\n        dropResult.dropToGap = true;\r\n      }\r\n\r\n      if (onDrop) {\r\n        onDrop(dropResult);\r\n      }\r\n\r\n      _this.dragNode = null;\r\n    };\r\n\r\n    _this.onNodeClick = function (e, treeNode) {\r\n      var onClick = _this.props.onClick;\r\n\r\n      if (onClick) {\r\n        onClick(e, treeNode);\r\n      }\r\n    };\r\n\r\n    _this.onNodeDoubleClick = function (e, treeNode) {\r\n      var onDoubleClick = _this.props.onDoubleClick;\r\n\r\n      if (onDoubleClick) {\r\n        onDoubleClick(e, treeNode);\r\n      }\r\n    };\r\n\r\n    _this.onNodeSelect = function (e, treeNode) {\r\n      var selectedKeys = _this.state.selectedKeys;\r\n      var keyEntities = _this.state.keyEntities;\r\n      var _this$props = _this.props,\r\n          onSelect = _this$props.onSelect,\r\n          multiple = _this$props.multiple;\r\n      var _treeNode$props = treeNode.props,\r\n          selected = _treeNode$props.selected,\r\n          eventKey = _treeNode$props.eventKey;\r\n      var targetSelected = !selected; // Update selected keys\r\n\r\n      if (!targetSelected) {\r\n        selectedKeys = arrDel(selectedKeys, eventKey);\r\n      } else if (!multiple) {\r\n        selectedKeys = [eventKey];\r\n      } else {\r\n        selectedKeys = arrAdd(selectedKeys, eventKey);\r\n      } // [Legacy] Not found related usage in doc or upper libs\r\n\r\n\r\n      var selectedNodes = selectedKeys.map(function (key) {\r\n        var entity = keyEntities[key];\r\n        if (!entity) return null;\r\n        return entity.node;\r\n      }).filter(function (node) {\r\n        return node;\r\n      });\r\n\r\n      _this.setUncontrolledState({\r\n        selectedKeys: selectedKeys\r\n      });\r\n\r\n      if (onSelect) {\r\n        onSelect(selectedKeys, {\r\n          event: \"select\",\r\n          selected: targetSelected,\r\n          node: treeNode,\r\n          selectedNodes: selectedNodes,\r\n          nativeEvent: e.nativeEvent\r\n        });\r\n      }\r\n    };\r\n\r\n    _this.onNodeCheck = function (e, treeNode, checked) {\r\n      var _this$state3 = _this.state,\r\n          keyEntities = _this$state3.keyEntities,\r\n          oriCheckedKeys = _this$state3.checkedKeys,\r\n          oriHalfCheckedKeys = _this$state3.halfCheckedKeys;\r\n      var _this$props2 = _this.props,\r\n          checkStrictly = _this$props2.checkStrictly,\r\n          onCheck = _this$props2.onCheck;\r\n      var eventKey = treeNode.props.eventKey; // Prepare trigger arguments\r\n\r\n      var checkedObj;\r\n      var eventObj = {\r\n        event: \"check\",\r\n        node: treeNode,\r\n        checked: checked,\r\n        nativeEvent: e.nativeEvent\r\n      };\r\n\r\n      if (checkStrictly) {\r\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\r\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\r\n        checkedObj = {\r\n          checked: checkedKeys,\r\n          halfChecked: halfCheckedKeys\r\n        };\r\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\r\n          return keyEntities[key];\r\n        }).filter(function (entity) {\r\n          return entity;\r\n        }).map(function (entity) {\r\n          return entity.node;\r\n        });\r\n\r\n        _this.setUncontrolledState({\r\n          checkedKeys: checkedKeys\r\n        });\r\n      } else {\r\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\r\n          checkedKeys: oriCheckedKeys,\r\n          halfCheckedKeys: oriHalfCheckedKeys\r\n        }),\r\n            _checkedKeys = _conductCheck.checkedKeys,\r\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys;\r\n\r\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\r\n\r\n        eventObj.checkedNodes = [];\r\n        eventObj.checkedNodesPositions = [];\r\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\r\n\r\n        _checkedKeys.forEach(function (key) {\r\n          var entity = keyEntities[key];\r\n          if (!entity) return;\r\n          var node = entity.node,\r\n              pos = entity.pos;\r\n          eventObj.checkedNodes.push(node);\r\n          eventObj.checkedNodesPositions.push({\r\n            node: node,\r\n            pos: pos\r\n          });\r\n        });\r\n\r\n        _this.setUncontrolledState({\r\n          checkedKeys: _checkedKeys,\r\n          halfCheckedKeys: _halfCheckedKeys\r\n        });\r\n      }\r\n\r\n      if (onCheck) {\r\n        onCheck(checkedObj, eventObj);\r\n      }\r\n    };\r\n\r\n    _this.onNodeLoad = function (treeNode) {\r\n      return new Promise(function (resolve) {\r\n        // We need to get the latest state of loading/loaded keys\r\n        _this.setState(function (_ref) {\r\n          var _ref$loadedKeys = _ref.loadedKeys,\r\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\r\n              _ref$loadingKeys = _ref.loadingKeys,\r\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\r\n          var _this$props3 = _this.props,\r\n              loadData = _this$props3.loadData,\r\n              onLoad = _this$props3.onLoad;\r\n          var eventKey = treeNode.props.eventKey;\r\n\r\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\r\n            // react 15 will warn if return null\r\n            return {};\r\n          } // Process load data\r\n\r\n\r\n          var promise = loadData(treeNode);\r\n          promise.then(function () {\r\n            var _this$state4 = _this.state,\r\n                currentLoadedKeys = _this$state4.loadedKeys,\r\n                currentLoadingKeys = _this$state4.loadingKeys;\r\n            var newLoadedKeys = arrAdd(currentLoadedKeys, eventKey);\r\n            var newLoadingKeys = arrDel(currentLoadingKeys, eventKey); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\r\n            // https://github.com/ant-design/ant-design/issues/12464\r\n\r\n            if (onLoad) {\r\n              onLoad(newLoadedKeys, {\r\n                event: \"load\",\r\n                node: treeNode\r\n              });\r\n            }\r\n\r\n            _this.setUncontrolledState({\r\n              loadedKeys: newLoadedKeys\r\n            });\r\n\r\n            _this.setState({\r\n              loadingKeys: newLoadingKeys\r\n            });\r\n\r\n            resolve();\r\n          });\r\n          return {\r\n            loadingKeys: arrAdd(loadingKeys, eventKey)\r\n          };\r\n        });\r\n      });\r\n    };\r\n\r\n    _this.onNodeExpand = function (e, treeNode) {\r\n      var expandedKeys = _this.state.expandedKeys;\r\n      var _this$props4 = _this.props,\r\n          onExpand = _this$props4.onExpand,\r\n          loadData = _this$props4.loadData;\r\n      var _treeNode$props2 = treeNode.props,\r\n          eventKey = _treeNode$props2.eventKey,\r\n          expanded = _treeNode$props2.expanded,\r\n          alwaysExpanded = _treeNode$props2.alwaysExpanded;\r\n\r\n      if (alwaysExpanded !== \"undefined\" && alwaysExpanded) {\r\n        return;\r\n      } // Update selected keys\r\n\r\n\r\n      var index = expandedKeys.indexOf(eventKey);\r\n      var targetExpanded = !expanded;\r\n      warning(expanded && index !== -1 || !expanded && index === -1, \"Expand state not sync with index check\");\r\n\r\n      if (targetExpanded) {\r\n        expandedKeys = arrAdd(expandedKeys, eventKey);\r\n      } else {\r\n        expandedKeys = arrDel(expandedKeys, eventKey);\r\n      }\r\n\r\n      _this.setUncontrolledState({\r\n        expandedKeys: expandedKeys\r\n      });\r\n\r\n      if (onExpand) {\r\n        onExpand(expandedKeys, {\r\n          node: treeNode,\r\n          expanded: targetExpanded,\r\n          nativeEvent: e.nativeEvent\r\n        });\r\n      } // Async Load data\r\n\r\n\r\n      if (targetExpanded && loadData) {\r\n        var loadPromise = _this.onNodeLoad(treeNode);\r\n\r\n        return loadPromise ? loadPromise.then(function () {\r\n          // [Legacy] Refresh logic\r\n          _this.setUncontrolledState({\r\n            expandedKeys: expandedKeys\r\n          });\r\n        }) : null;\r\n      }\r\n\r\n      return null;\r\n    };\r\n\r\n    _this.onNodeMouseEnter = function (event, node) {\r\n      var onMouseEnter = _this.props.onMouseEnter;\r\n\r\n      if (onMouseEnter) {\r\n        onMouseEnter({\r\n          event: event,\r\n          node: node\r\n        });\r\n      }\r\n    };\r\n\r\n    _this.onNodeMouseLeave = function (event, node) {\r\n      var onMouseLeave = _this.props.onMouseLeave;\r\n\r\n      if (onMouseLeave) {\r\n        onMouseLeave({\r\n          event: event,\r\n          node: node\r\n        });\r\n      }\r\n    };\r\n\r\n    _this.onNodeContextMenu = function (event, node) {\r\n      var onRightClick = _this.props.onRightClick;\r\n\r\n      if (onRightClick) {\r\n        event.preventDefault();\r\n        onRightClick({\r\n          event: event,\r\n          node: node\r\n        });\r\n      }\r\n    };\r\n\r\n    _this.onNodeOptionsClick = function (event, node) {\r\n      var onOptionsClick = _this.props.onOptionsClick;\r\n\r\n      if (onOptionsClick) {\r\n        event.preventDefault();\r\n        onOptionsClick({\r\n          event: event,\r\n          node: node\r\n        });\r\n      }\r\n    };\r\n    /**\r\n     * Only update the value which is not in props\r\n     */\r\n\r\n\r\n    _this.setUncontrolledState = function (state) {\r\n      var needSync = false;\r\n      var newState = {};\r\n      Object.keys(state).forEach(function (name) {\r\n        if (name in _this.props) return;\r\n        needSync = true;\r\n        newState[name] = state[name];\r\n      });\r\n\r\n      if (needSync) {\r\n        _this.setState(newState);\r\n      }\r\n    };\r\n\r\n    _this.registerTreeNode = function (key, node) {\r\n      if (node) {\r\n        _this.domTreeNodes[key] = node;\r\n      } else {\r\n        delete _this.domTreeNodes[key];\r\n      }\r\n    };\r\n\r\n    _this.isKeyChecked = function (key) {\r\n      var _this$state$checkedKe = _this.state.checkedKeys,\r\n          checkedKeys = _this$state$checkedKe === void 0 ? [] : _this$state$checkedKe;\r\n      return checkedKeys.indexOf(key) !== -1;\r\n    };\r\n    /**\r\n     * [Legacy] Original logic use `key` as tracking clue.\r\n     * We have to use `cloneElement` to pass `key`.\r\n     */\r\n\r\n\r\n    _this.renderTreeNode = function (child, index) {\r\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\r\n      var _this$state5 = _this.state,\r\n          keyEntities = _this$state5.keyEntities,\r\n          _this$state5$expanded = _this$state5.expandedKeys,\r\n          expandedKeys = _this$state5$expanded === void 0 ? [] : _this$state5$expanded,\r\n          _this$state5$selected = _this$state5.selectedKeys,\r\n          selectedKeys = _this$state5$selected === void 0 ? [] : _this$state5$selected,\r\n          _this$state5$halfChec = _this$state5.halfCheckedKeys,\r\n          halfCheckedKeys = _this$state5$halfChec === void 0 ? [] : _this$state5$halfChec,\r\n          _this$state5$loadedKe = _this$state5.loadedKeys,\r\n          loadedKeys = _this$state5$loadedKe === void 0 ? [] : _this$state5$loadedKe,\r\n          _this$state5$loadingK = _this$state5.loadingKeys,\r\n          loadingKeys = _this$state5$loadingK === void 0 ? [] : _this$state5$loadingK,\r\n          dragOverNodeKey = _this$state5.dragOverNodeKey,\r\n          dropPosition = _this$state5.dropPosition;\r\n      var pos = getPosition(level, index);\r\n      var key = child.key || pos;\r\n\r\n      if (!keyEntities[key]) {\r\n        warnOnlyTreeNode();\r\n        return null;\r\n      }\r\n\r\n      return React.cloneElement(child, {\r\n        key: key,\r\n        eventKey: key,\r\n        expanded: expandedKeys.indexOf(key) !== -1,\r\n        selected: selectedKeys.indexOf(key) !== -1,\r\n        loaded: loadedKeys.indexOf(key) !== -1,\r\n        loading: loadingKeys.indexOf(key) !== -1,\r\n        checked: _this.isKeyChecked(key),\r\n        halfChecked: halfCheckedKeys.indexOf(key) !== -1,\r\n        pos: pos,\r\n        // [Legacy] Drag props\r\n        dragOver: dragOverNodeKey === key && dropPosition === 0,\r\n        dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\r\n        dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\r\n      });\r\n    };\r\n\r\n    return _this;\r\n  }\r\n\r\n  _createClass(Tree, [{\r\n    key: \"render\",\r\n    value: function render() {\r\n      var _this2 = this;\r\n\r\n      var treeNode = this.state.treeNode;\r\n      var _this$props5 = this.props,\r\n          prefixCls = _this$props5.prefixCls,\r\n          className = _this$props5.className,\r\n          focusable = _this$props5.focusable,\r\n          style = _this$props5.style,\r\n          showLine = _this$props5.showLine,\r\n          _this$props5$tabIndex = _this$props5.tabIndex,\r\n          tabIndex = _this$props5$tabIndex === void 0 ? 0 : _this$props5$tabIndex,\r\n          selectable = _this$props5.selectable,\r\n          showIcon = _this$props5.showIcon,\r\n          icon = _this$props5.icon,\r\n          switcherIcon = _this$props5.switcherIcon,\r\n          draggable = _this$props5.draggable,\r\n          checkable = _this$props5.checkable,\r\n          checkStrictly = _this$props5.checkStrictly,\r\n          disabled = _this$props5.disabled,\r\n          motion = _this$props5.motion,\r\n          loadData = _this$props5.loadData,\r\n          filterTreeNode = _this$props5.filterTreeNode,\r\n          showOptionsIcon = _this$props5.showOptionsIcon,\r\n          expandOnSelectorClick = _this$props5.expandOnSelectorClick,\r\n          getNodeDropEffect = _this$props5.getNodeDropEffect;\r\n      var domProps = getDataAndAria(this.props);\r\n\r\n      if (focusable) {\r\n        domProps.tabIndex = tabIndex;\r\n      }\r\n\r\n      return React.createElement(TreeContext.Provider, {\r\n        value: {\r\n          prefixCls: prefixCls,\r\n          selectable: selectable,\r\n          showIcon: showIcon,\r\n          icon: icon,\r\n          switcherIcon: switcherIcon,\r\n          draggable: draggable,\r\n          checkable: checkable,\r\n          checkStrictly: checkStrictly,\r\n          disabled: disabled,\r\n          motion: motion,\r\n          showOptionsIcon: showOptionsIcon,\r\n          expandOnSelectorClick: expandOnSelectorClick,\r\n          getNodeDropEffect: getNodeDropEffect,\r\n          loadData: loadData,\r\n          filterTreeNode: filterTreeNode,\r\n          renderTreeNode: this.renderTreeNode,\r\n          isKeyChecked: this.isKeyChecked,\r\n          onNodeClick: this.onNodeClick,\r\n          onNodeDoubleClick: this.onNodeDoubleClick,\r\n          onNodeExpand: this.onNodeExpand,\r\n          onNodeSelect: this.onNodeSelect,\r\n          onNodeCheck: this.onNodeCheck,\r\n          onNodeLoad: this.onNodeLoad,\r\n          onNodeMouseEnter: this.onNodeMouseEnter,\r\n          onNodeMouseLeave: this.onNodeMouseLeave,\r\n          onNodeContextMenu: this.onNodeContextMenu,\r\n          onNodeDragStart: this.onNodeDragStart,\r\n          onNodeDragEnter: this.onNodeDragEnter,\r\n          onNodeDragOver: this.onNodeDragOver,\r\n          onNodeDragLeave: this.onNodeDragLeave,\r\n          onNodeDragEnd: this.onNodeDragEnd,\r\n          onNodeDrop: this.onNodeDrop,\r\n          onNodeOptionsClick: this.onNodeOptionsClick,\r\n          registerTreeNode: this.registerTreeNode\r\n        }\r\n      }, React.createElement(\"ul\", Object.assign({}, domProps, {\r\n        className: classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-show-line\"), showLine)),\r\n        style: style,\r\n        role: \"tree\",\r\n        unselectable: \"on\"\r\n      }), mapChildren(treeNode, function (node, index) {\r\n        return _this2.renderTreeNode(node, index);\r\n      })));\r\n    }\r\n  }], [{\r\n    key: \"getDerivedStateFromProps\",\r\n    value: function getDerivedStateFromProps(props, prevState) {\r\n      var prevProps = prevState.prevProps;\r\n      var newState = {\r\n        prevProps: props\r\n      };\r\n\r\n      function needSync(name) {\r\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\r\n      } // ================== Tree Node ==================\r\n\r\n\r\n      var treeNode = null; // Check if `treeData` or `children` changed and save into the state.\r\n\r\n      if (needSync(\"treeData\")) {\r\n        treeNode = convertDataToTree(props.treeData);\r\n      } else if (needSync(\"children\")) {\r\n        treeNode = toArray(props.children);\r\n      } // Tree support filter function which will break the tree structure in the vdm.\r\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\r\n\r\n\r\n      if (treeNode) {\r\n        newState.treeNode = treeNode; // Calculate the entities data for quick match\r\n\r\n        var entitiesMap = convertTreeToEntities(treeNode);\r\n        newState.keyEntities = entitiesMap.keyEntities;\r\n      }\r\n\r\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\r\n\r\n      if (needSync(\"expandedKeys\") || prevProps && needSync(\"autoExpandParent\")) {\r\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\r\n      } else if (!prevProps && props.defaultExpandAll) {\r\n        newState.expandedKeys = Object.keys(keyEntities);\r\n      } else if (!prevProps && props.defaultExpandedKeys) {\r\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\r\n      } // ================ selectedKeys =================\r\n\r\n\r\n      if (props.selectable) {\r\n        if (needSync(\"selectedKeys\")) {\r\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\r\n        } else if (!prevProps && props.defaultSelectedKeys) {\r\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\r\n        }\r\n      } // ================= checkedKeys =================\r\n\r\n\r\n      if (props.checkable) {\r\n        var checkedKeyEntity;\r\n\r\n        if (needSync(\"checkedKeys\")) {\r\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\r\n        } else if (!prevProps && props.defaultCheckedKeys) {\r\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\r\n        } else if (treeNode) {\r\n          // If treeNode changed, we also need check it\r\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\r\n            checkedKeys: prevState.checkedKeys,\r\n            halfCheckedKeys: prevState.halfCheckedKeys\r\n          };\r\n        }\r\n\r\n        if (checkedKeyEntity) {\r\n          var _checkedKeyEntity = checkedKeyEntity,\r\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\r\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\r\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\r\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\r\n\r\n          if (!props.checkStrictly) {\r\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\r\n            checkedKeys = conductKeys.checkedKeys;\r\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\r\n          }\r\n\r\n          newState.checkedKeys = checkedKeys;\r\n          newState.halfCheckedKeys = halfCheckedKeys;\r\n        }\r\n      } // ================= loadedKeys ==================\r\n\r\n\r\n      if (needSync(\"loadedKeys\")) {\r\n        newState.loadedKeys = props.loadedKeys;\r\n      }\r\n\r\n      return newState;\r\n    }\r\n  }]);\r\n\r\n  return Tree;\r\n}(React.Component);\r\n\r\nTree.propTypes = {\r\n  prefixCls: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  children: PropTypes.any,\r\n  treeData: PropTypes.array,\r\n  showLine: PropTypes.bool,\r\n  showIcon: PropTypes.bool,\r\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\r\n  focusable: PropTypes.bool,\r\n  selectable: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  multiple: PropTypes.bool,\r\n  checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\r\n  checkStrictly: PropTypes.bool,\r\n  draggable: PropTypes.bool,\r\n  defaultExpandParent: PropTypes.bool,\r\n  autoExpandParent: PropTypes.bool,\r\n  defaultExpandAll: PropTypes.bool,\r\n  defaultExpandedKeys: PropTypes.arrayOf(PropTypes.string),\r\n  expandedKeys: PropTypes.arrayOf(PropTypes.string),\r\n  defaultCheckedKeys: PropTypes.arrayOf(PropTypes.string),\r\n  checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\r\n  defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\r\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\r\n  onClick: PropTypes.func,\r\n  onDoubleClick: PropTypes.func,\r\n  onExpand: PropTypes.func,\r\n  onCheck: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  onLoad: PropTypes.func,\r\n  loadData: PropTypes.func,\r\n  loadedKeys: PropTypes.arrayOf(PropTypes.string),\r\n  onMouseEnter: PropTypes.func,\r\n  onMouseLeave: PropTypes.func,\r\n  onRightClick: PropTypes.func,\r\n  onDragStart: PropTypes.func,\r\n  onDragEnter: PropTypes.func,\r\n  onDragOver: PropTypes.func,\r\n  onDragLeave: PropTypes.func,\r\n  onDragEnd: PropTypes.func,\r\n  onDrop: PropTypes.func,\r\n  onOptionsClick: PropTypes.func,\r\n  filterTreeNode: PropTypes.func,\r\n  motion: PropTypes.object,\r\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\r\n  showOptionsIcon: PropTypes.bool,\r\n  expandOnSelectorClick: PropTypes.bool,\r\n  getNodeDropEffect: PropTypes.func\r\n};\r\nTree.defaultProps = {\r\n  prefixCls: \"rc-tree\",\r\n  showLine: false,\r\n  showIcon: true,\r\n  selectable: true,\r\n  multiple: false,\r\n  checkable: false,\r\n  disabled: false,\r\n  checkStrictly: false,\r\n  draggable: false,\r\n  defaultExpandParent: true,\r\n  autoExpandParent: false,\r\n  defaultExpandAll: false,\r\n  defaultExpandedKeys: [],\r\n  defaultCheckedKeys: [],\r\n  defaultSelectedKeys: [],\r\n  showOptionsIcon: false,\r\n  expandOnSelectorClick: false\r\n};\r\npolyfill(Tree);\r\nexport default Tree;"]},"metadata":{},"sourceType":"module"}