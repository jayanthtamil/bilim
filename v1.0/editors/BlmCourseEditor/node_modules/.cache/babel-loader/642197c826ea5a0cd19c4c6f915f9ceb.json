{"ast":null,"code":"import { SoundComponent } from \"types\";\nimport { StyleListTypes } from \"editor-constants\";\nimport { getAllHTMLElements, getBLMElement, getHTMLElement, setComponentBy } from \"../../core\";\nimport { createComponentStyle } from \"./common\";\nexport function getAllSoundComponent(parent, selector, repeaterId) {\n  const elements = getAllHTMLElements(parent, selector);\n  const sounds = [];\n\n  for (let element of elements) {\n    const sound = createSound(element);\n    sound.repeaterId = repeaterId;\n    sounds.push(sound);\n  }\n\n  return sounds;\n}\n\nfunction createSound(element) {\n  var _options$parameters, _options$parameters2, _options$parameters3;\n\n  const sound = new SoundComponent();\n  const model = getBLMElement(element);\n  const title = getHTMLElement(element, \".captionwrapper .title\");\n  const desc = getHTMLElement(element, \".captionwrapper .description\");\n  const caption = getHTMLElement(element, \".captionwrapper .caption\");\n  const {\n    attributes,\n    options,\n    editorOptions\n  } = model;\n  const {\n    value\n  } = sound;\n  setComponentBy(sound, model);\n  sound.classList = Array.from(element.classList);\n  sound.options = options || undefined;\n  sound.hasApplyStyle = (attributes === null || attributes === void 0 ? void 0 : attributes[\"unapplystyle\"]) === undefined;\n  value.media = editorOptions === null || editorOptions === void 0 ? void 0 : editorOptions.media;\n  value.image = editorOptions === null || editorOptions === void 0 ? void 0 : editorOptions.image;\n\n  if (value.media && (editorOptions === null || editorOptions === void 0 ? void 0 : editorOptions.subtitle) && (editorOptions === null || editorOptions === void 0 ? void 0 : editorOptions.marker)) {\n    //For legacy code, we can remove after some times\n    value.media.subtitle = editorOptions.subtitle;\n    value.media.marker = editorOptions.marker;\n  }\n\n  value.title = (title === null || title === void 0 ? void 0 : title.textContent) || \"\";\n  value.description = (desc === null || desc === void 0 ? void 0 : desc.textContent) || \"\";\n  value.caption = (caption === null || caption === void 0 ? void 0 : caption.textContent) || \"\";\n  value.autoPlay = (options === null || options === void 0 ? void 0 : (_options$parameters = options.parameters) === null || _options$parameters === void 0 ? void 0 : _options$parameters.autostart) || false;\n  value.localPlay = (options === null || options === void 0 ? void 0 : (_options$parameters2 = options.parameters) === null || _options$parameters2 === void 0 ? void 0 : _options$parameters2.local) !== undefined ? options === null || options === void 0 ? void 0 : (_options$parameters3 = options.parameters) === null || _options$parameters3 === void 0 ? void 0 : _options$parameters3.local : true;\n  value.style = createComponentStyle(element, StyleListTypes.Sound, true);\n  return sound;\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/model/component/sound.ts"],"names":["SoundComponent","StyleListTypes","getAllHTMLElements","getBLMElement","getHTMLElement","setComponentBy","createComponentStyle","getAllSoundComponent","parent","selector","repeaterId","elements","sounds","element","sound","createSound","push","model","title","desc","caption","attributes","options","editorOptions","value","classList","Array","from","undefined","hasApplyStyle","media","image","subtitle","marker","textContent","description","autoPlay","parameters","autostart","localPlay","local","style","Sound"],"mappings":"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","sourcesContent":["import { MediaFile, SoundComponent, SoundConfigJSON } from \"types\";\r\nimport { StyleListTypes } from \"editor-constants\";\r\nimport { getAllHTMLElements, getBLMElement, getHTMLElement, setComponentBy } from \"../../core\";\r\nimport { createComponentStyle } from \"./common\";\r\n\r\nexport function getAllSoundComponent(parent: HTMLElement, selector: string, repeaterId?: string) {\r\n  const elements = getAllHTMLElements(parent, selector);\r\n  const sounds = [];\r\n\r\n  for (let element of elements) {\r\n    const sound = createSound(element);\r\n    sound.repeaterId = repeaterId;\r\n\r\n    sounds.push(sound);\r\n  }\r\n\r\n  return sounds;\r\n}\r\n\r\nfunction createSound(element: HTMLElement) {\r\n  const sound = new SoundComponent();\r\n  const model = getBLMElement<\r\n    SoundConfigJSON,\r\n    Record<\"media\" | \"image\" | \"subtitle\" | \"marker\", MediaFile | undefined> | undefined\r\n  >(element);\r\n  const title = getHTMLElement(element, \".captionwrapper .title\");\r\n  const desc = getHTMLElement(element, \".captionwrapper .description\");\r\n  const caption = getHTMLElement(element, \".captionwrapper .caption\");\r\n  const { attributes, options, editorOptions } = model;\r\n  const { value } = sound;\r\n\r\n  setComponentBy(sound, model);\r\n\r\n  sound.classList = Array.from(element.classList);\r\n  sound.options = options || undefined;\r\n  sound.hasApplyStyle = attributes?.[\"unapplystyle\"] === undefined;\r\n\r\n  value.media = editorOptions?.media;\r\n  value.image = editorOptions?.image;\r\n\r\n  if (value.media && editorOptions?.subtitle && editorOptions?.marker) {\r\n    //For legacy code, we can remove after some times\r\n    value.media.subtitle = editorOptions.subtitle;\r\n    value.media.marker = editorOptions.marker;\r\n  }\r\n\r\n  value.title = title?.textContent || \"\";\r\n  value.description = desc?.textContent || \"\";\r\n  value.caption = caption?.textContent || \"\";\r\n  value.autoPlay = options?.parameters?.autostart || false;\r\n  value.localPlay = options?.parameters?.local !== undefined ? options?.parameters?.local : true;\r\n  value.style = createComponentStyle(element, StyleListTypes.Sound, true);\r\n\r\n  return sound;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}