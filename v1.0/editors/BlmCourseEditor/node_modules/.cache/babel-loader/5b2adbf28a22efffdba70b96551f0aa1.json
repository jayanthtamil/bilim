{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\shared\\\\material-ui\\\\tabs\\\\vertical-tabs.tsx\";\nimport React, { useState, useRef, isValidElement } from \"react\";\nimport clsx from \"clsx\";\nimport MuiTabs from \"@material-ui/core/Tabs\";\nimport MuiTab from \"@material-ui/core/Tab\";\nimport \"./tabs-styles.scss\";\nexport default function VerticalTabs(props) {\n  const {\n    children,\n    otherChildren,\n    selectedIndex,\n    className,\n    onTabChange\n  } = props;\n  const [currentIndex, setCurrentIndex] = useState(selectedIndex);\n  const tabs = children.filter(isValidElement);\n  const tabPanelRef = useRef(null);\n  React.useEffect(() => {\n    setCurrentIndex(selectedIndex);\n  }, [selectedIndex, setCurrentIndex]);\n\n  const handleChange = (event, newValue) => {\n    const tapPanel = tabPanelRef.current;\n    setCurrentIndex(newValue);\n\n    if (tapPanel) {\n      tapPanel.scrollTop = 0;\n    }\n\n    if (onTabChange) {\n      onTabChange(newValue);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"vertical-tabs-container\", className, {\n      \"tab-selected\": currentIndex !== false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MuiTabs, {\n    orientation: \"vertical\",\n    value: currentIndex,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, tabs.map((tab, index) => /*#__PURE__*/React.createElement(MuiTab, {\n    key: index,\n    label: tab.props.label,\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    ref: tabPanelRef,\n    className: \"tab-panel-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, tabs.map((tab, index) => {\n    if (currentIndex === index) {\n      return tab;\n    } else {\n      return null;\n    }\n  })), otherChildren);\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/shared/material-ui/tabs/vertical-tabs.tsx"],"names":["React","useState","useRef","isValidElement","clsx","MuiTabs","MuiTab","VerticalTabs","props","children","otherChildren","selectedIndex","className","onTabChange","currentIndex","setCurrentIndex","tabs","filter","tabPanelRef","useEffect","handleChange","event","newValue","tapPanel","current","scrollTop","map","tab","index","label"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,MAFF,EAKEC,cALF,QAOO,OAPP;AAQA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAGA,OAAO,oBAAP;AAUA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAAwC;AACrD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,aAAZ;AAA2BC,IAAAA,aAA3B;AAA0CC,IAAAA,SAA1C;AAAqDC,IAAAA;AAArD,MAAqEL,KAA3E;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAACU,aAAD,CAAhD;AACA,QAAMK,IAAI,GAAGP,QAAQ,CAACQ,MAAT,CAAwCd,cAAxC,CAAb;AACA,QAAMe,WAAW,GAAGhB,MAAM,CAAwB,IAAxB,CAA1B;AAEAF,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,eAAe,CAACJ,aAAD,CAAf;AACD,GAFD,EAEG,CAACA,aAAD,EAAgBI,eAAhB,CAFH;;AAIA,QAAMK,YAAY,GAAG,CAACC,KAAD,EAAyBC,QAAzB,KAA8C;AACjE,UAAMC,QAAQ,GAAGL,WAAW,CAACM,OAA7B;AAEAT,IAAAA,eAAe,CAACO,QAAD,CAAf;;AAEA,QAAIC,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACE,SAAT,GAAqB,CAArB;AACD;;AAED,QAAIZ,WAAJ,EAAiB;AACfA,MAAAA,WAAW,CAACS,QAAD,CAAX;AACD;AACF,GAZD;;AAcA,sBACE;AACE,IAAA,SAAS,EAAElB,IAAI,CAAC,yBAAD,EAA4BQ,SAA5B,EAAuC;AACpD,sBAAgBE,YAAY,KAAK;AADmB,KAAvC,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,OAAD;AAAS,IAAA,WAAW,EAAC,UAArB;AAAgC,IAAA,KAAK,EAAEA,YAAvC;AAAqD,IAAA,QAAQ,EAAEM,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACU,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,kBACR,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,KAAK,EAAED,GAAG,CAACnB,KAAJ,CAAUqB,KAArC;AAA4C,IAAA,aAAa,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CALF,eAUE;AAAK,IAAA,GAAG,EAAEX,WAAV;AAAuB,IAAA,SAAS,EAAC,qBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACU,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACxB,QAAId,YAAY,KAAKc,KAArB,EAA4B;AAC1B,aAAOD,GAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF,GANA,CADH,CAVF,EAmBGjB,aAnBH,CADF;AAuBD","sourcesContent":["import React, {\r\n  useState,\r\n  useRef,\r\n  ReactElement,\r\n  ChangeEvent,\r\n  isValidElement,\r\n  ReactNode,\r\n} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport MuiTabs from \"@material-ui/core/Tabs\";\r\nimport MuiTab from \"@material-ui/core/Tab\";\r\n\r\nimport { TabProps } from \"./tab\";\r\nimport \"./tabs-styles.scss\";\r\n\r\ninterface CompProps {\r\n  children: (ReactElement<TabProps> | boolean | null | undefined)[];\r\n  otherChildren?: ReactNode;\r\n  selectedIndex?: false | number;\r\n  className?: string;\r\n  onTabChange?: (value: number) => void;\r\n}\r\n\r\nexport default function VerticalTabs(props: CompProps) {\r\n  const { children, otherChildren, selectedIndex, className, onTabChange } = props;\r\n  const [currentIndex, setCurrentIndex] = useState(selectedIndex);\r\n  const tabs = children.filter<ReactElement<TabProps>>(isValidElement);\r\n  const tabPanelRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentIndex(selectedIndex);\r\n  }, [selectedIndex, setCurrentIndex]);\r\n\r\n  const handleChange = (event: ChangeEvent<{}>, newValue: number) => {\r\n    const tapPanel = tabPanelRef.current;\r\n\r\n    setCurrentIndex(newValue);\r\n\r\n    if (tapPanel) {\r\n      tapPanel.scrollTop = 0;\r\n    }\r\n\r\n    if (onTabChange) {\r\n      onTabChange(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\"vertical-tabs-container\", className, {\r\n        \"tab-selected\": currentIndex !== false,\r\n      })}\r\n    >\r\n      <MuiTabs orientation=\"vertical\" value={currentIndex} onChange={handleChange}>\r\n        {tabs.map((tab, index) => (\r\n          <MuiTab key={index} label={tab.props.label} disableRipple />\r\n        ))}\r\n      </MuiTabs>\r\n      <div ref={tabPanelRef} className=\"tab-panel-container\">\r\n        {tabs.map((tab, index) => {\r\n          if (currentIndex === index) {\r\n            return tab;\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </div>\r\n      {otherChildren}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}