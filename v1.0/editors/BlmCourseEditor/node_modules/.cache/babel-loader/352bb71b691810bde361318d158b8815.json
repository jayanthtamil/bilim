{"ast":null,"code":"import { Attributes, BLMElement } from \"types\";\nimport { createStyleStrFromObj, toCamelCase, toJSONObject } from \"utils\";\nimport { getAllHTMLElements, getHTMLElement } from \"./html\";\nexport function getAllBLMElementsBy(parent, selector) {\n  const elements = getAllHTMLElements(parent, selector);\n  const models = [];\n\n  for (const element of elements) {\n    const model = getBLMElement(element);\n    models.push(model);\n  }\n\n  return models;\n}\nexport function getBLMElementBy(parent, selector) {\n  const element = getHTMLElement(parent, selector);\n\n  if (element) {\n    return getBLMElement(element);\n  }\n}\nexport function getBLMElement(element) {\n  const model = new BLMElement();\n\n  if (element) {\n    var _element$getAttribute, _element$getAttribute2, _element$getAttribute3;\n\n    const {\n      innerHTML,\n      classList\n    } = element;\n    model.id = (_element$getAttribute = element.getAttribute(\"blm-id\")) !== null && _element$getAttribute !== void 0 ? _element$getAttribute : undefined;\n    model.mapping = (_element$getAttribute2 = element.getAttribute(\"blm-mapping\")) !== null && _element$getAttribute2 !== void 0 ? _element$getAttribute2 : undefined;\n    model.component = (_element$getAttribute3 = element.getAttribute(\"blm-component\")) !== null && _element$getAttribute3 !== void 0 ? _element$getAttribute3 : undefined;\n    model.innerHTML = innerHTML;\n    model.isEditable = element.hasAttribute(\"blm-editable\");\n    model.isDeletable = element.hasAttribute(\"blm-deletable\");\n    model.option = element.getAttribute(\"blm-option\");\n    model.options = toJSONObject(element.getAttribute(\"blm-options\"));\n    model.editorOptions = toJSONObject(element.getAttribute(\"blm-editor-options\"));\n    model.isDeactivated = model.isDeletable ? classList.contains(\"deactivated\") : undefined;\n    model.attributes = getHTMLAttributes(element);\n  }\n\n  return model;\n}\nexport function setBLMElementBy(parent, selector, model) {\n  const element = getHTMLElement(parent, selector);\n\n  if (element) {\n    setBLMElement(element, model);\n  }\n}\nexport function setBLMElement(element, model) {\n  if (element) {\n    if (model.id) {\n      setHTMLAttribute(element, \"blm-id\", model.id);\n    }\n\n    if (model.innerHTML !== undefined) {\n      element.innerHTML = model.innerHTML;\n    }\n\n    if (model.option !== undefined) {\n      setHTMLAttribute(element, \"blm-option\", model.option);\n    }\n\n    if (model.options !== undefined) {\n      setHTMLAttribute(element, \"blm-options\", model.options ? JSON.stringify(model.options) : null);\n    }\n\n    if (model.editorOptions !== undefined) {\n      setHTMLAttribute(element, \"blm-editor-options\", model.editorOptions ? JSON.stringify(model.editorOptions) : null);\n    }\n\n    if (model.attributes) {\n      updateHTMLAttributes(element, model.attributes);\n    }\n\n    if (model.classAttr) {\n      updateClassAttr(element, model.classAttr);\n    }\n\n    if (model.styleAttr) {\n      updateStyleAttr(element, model.styleAttr);\n    }\n\n    if (model.isDeactivated !== undefined) {\n      if (model.isDeactivated) {\n        element.classList.add(\"deactivated\");\n      } else {\n        element.classList.remove(\"deactivated\");\n      }\n    }\n  }\n}\nexport function setHTMLAttribute(element, attr, value) {\n  if (element) {\n    if (value) {\n      if (value === \"true\") element.setAttribute(attr, \"\");else element.setAttribute(attr, value);\n    } else if (element.hasAttribute(attr)) {\n      element.removeAttribute(attr);\n    }\n\n    return element.outerHTML;\n  }\n}\n\nfunction getHTMLAttributes(element) {\n  const {\n    attributes\n  } = element;\n  const attrs = new Attributes();\n\n  for (let i = 0; i < attributes.length; i++) {\n    const {\n      nodeName,\n      nodeValue\n    } = attributes[i];\n    attrs[nodeName] = nodeValue;\n  }\n\n  return attrs;\n}\n\nfunction updateHTMLAttributes(element, attributes) {\n  if (element && attributes) {\n    const {\n      removables,\n      ...others\n    } = attributes;\n\n    if (removables) {\n      for (const attr of removables) {\n        if (element.hasAttribute(attr)) {\n          element.removeAttribute(attr);\n        }\n      }\n    }\n\n    if (others) {\n      for (const attr in others) {\n        element.setAttribute(attr, others[attr]);\n      }\n    }\n  }\n}\n\nfunction updateClassAttr(element, classAttr) {\n  if (element) {\n    const {\n      classList\n    } = element;\n    const {\n      items,\n      removables\n    } = classAttr;\n\n    for (const cls of removables) {\n      if (typeof cls === \"string\") {\n        if (classList.contains(cls)) {\n          classList.remove(cls);\n        }\n      } else {\n        for (let i = 0; i < classList.length; i++) {\n          const item = classList.item(i);\n\n          if (item && cls.test(item)) {\n            classList.remove(item);\n          }\n        }\n      }\n    }\n\n    for (const cls of items) {\n      if (!classList.contains(cls)) {\n        classList.add(cls);\n      }\n    }\n  }\n}\n\nfunction updateStyleAttr(element, styleAttr) {\n  if (element) {\n    const {\n      removables,\n      ...styles\n    } = styleAttr;\n    const {\n      style\n    } = element;\n\n    if (style) {\n      for (let i = 0; i < style.length; i++) {\n        const key = style.item(i);\n        const value = style.getPropertyValue(key);\n        const name = key.startsWith(\"--\") ? key : toCamelCase(key);\n\n        if (!removables.includes(name) && styles[name] === undefined) {\n          styles[name] = value;\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      element.setAttribute(\"style\", createStyleStrFromObj(styles));\n    } else if (element.hasAttribute(\"style\")) {\n      element.removeAttribute(\"style\");\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/core/element.ts"],"names":["Attributes","BLMElement","createStyleStrFromObj","toCamelCase","toJSONObject","getAllHTMLElements","getHTMLElement","getAllBLMElementsBy","parent","selector","elements","models","element","model","getBLMElement","push","getBLMElementBy","innerHTML","classList","id","getAttribute","undefined","mapping","component","isEditable","hasAttribute","isDeletable","option","options","editorOptions","isDeactivated","contains","attributes","getHTMLAttributes","setBLMElementBy","setBLMElement","setHTMLAttribute","JSON","stringify","updateHTMLAttributes","classAttr","updateClassAttr","styleAttr","updateStyleAttr","add","remove","attr","value","setAttribute","removeAttribute","outerHTML","attrs","i","length","nodeName","nodeValue","removables","others","items","cls","item","test","styles","style","key","getPropertyValue","name","startsWith","includes","Object","keys"],"mappings":"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","sourcesContent":["import { Attributes, BLMElement, ClassAttribute, StyleAttribute } from \"types\";\r\nimport { createStyleStrFromObj, toCamelCase, toJSONObject } from \"utils\";\r\nimport { getAllHTMLElements, getHTMLElement } from \"./html\";\r\n\r\nexport function getAllBLMElementsBy<P = object, Q = object>(parent: HTMLElement, selector: string) {\r\n  const elements = getAllHTMLElements(parent, selector);\r\n  const models = [];\r\n\r\n  for (const element of elements) {\r\n    const model = getBLMElement<P, Q>(element);\r\n\r\n    models.push(model);\r\n  }\r\n\r\n  return models;\r\n}\r\n\r\nexport function getBLMElementBy<P = object, Q = object>(parent: HTMLElement, selector: string) {\r\n  const element = getHTMLElement(parent, selector);\r\n\r\n  if (element) {\r\n    return getBLMElement<P, Q>(element);\r\n  }\r\n}\r\n\r\nexport function getBLMElement<P = object, Q = object>(element: HTMLElement) {\r\n  const model = new BLMElement<P, Q>();\r\n\r\n  if (element) {\r\n    const { innerHTML, classList } = element;\r\n\r\n    model.id = element.getAttribute(\"blm-id\") ?? undefined;\r\n    model.mapping = element.getAttribute(\"blm-mapping\") ?? undefined;\r\n    model.component = element.getAttribute(\"blm-component\") ?? undefined;\r\n    model.innerHTML = innerHTML;\r\n    model.isEditable = element.hasAttribute(\"blm-editable\");\r\n    model.isDeletable = element.hasAttribute(\"blm-deletable\");\r\n    model.option = element.getAttribute(\"blm-option\");\r\n    model.options = toJSONObject<P>(element.getAttribute(\"blm-options\"));\r\n\r\n    model.editorOptions = toJSONObject<Q>(element.getAttribute(\"blm-editor-options\"));\r\n    model.isDeactivated = model.isDeletable ? classList.contains(\"deactivated\") : undefined;\r\n    model.attributes = getHTMLAttributes(element);\r\n  }\r\n\r\n  return model;\r\n}\r\n\r\nexport function setBLMElementBy(parent: HTMLElement, selector: string, model: Partial<BLMElement>) {\r\n  const element = getHTMLElement(parent, selector);\r\n\r\n  if (element) {\r\n    setBLMElement(element, model);\r\n  }\r\n}\r\n\r\nexport function setBLMElement(element: HTMLElement, model: Partial<BLMElement>) {\r\n  if (element) {\r\n    if (model.id) {\r\n      setHTMLAttribute(element, \"blm-id\", model.id);\r\n    }\r\n\r\n    if (model.innerHTML !== undefined) {\r\n      element.innerHTML = model.innerHTML;\r\n    }\r\n\r\n    if (model.option !== undefined) {\r\n      setHTMLAttribute(element, \"blm-option\", model.option);\r\n    }\r\n\r\n    if (model.options !== undefined) {\r\n      setHTMLAttribute(\r\n        element,\r\n        \"blm-options\",\r\n        model.options ? JSON.stringify(model.options) : null\r\n      );\r\n    }\r\n\r\n    if (model.editorOptions !== undefined) {\r\n      setHTMLAttribute(\r\n        element,\r\n        \"blm-editor-options\",\r\n        model.editorOptions ? JSON.stringify(model.editorOptions) : null\r\n      );\r\n    }\r\n\r\n    if (model.attributes) {\r\n      updateHTMLAttributes(element, model.attributes);\r\n    }\r\n\r\n    if (model.classAttr) {\r\n      updateClassAttr(element, model.classAttr);\r\n    }\r\n\r\n    if (model.styleAttr) {\r\n      updateStyleAttr(element, model.styleAttr);\r\n    }\r\n\r\n    if (model.isDeactivated !== undefined) {\r\n      if (model.isDeactivated) {\r\n        element.classList.add(\"deactivated\");\r\n      } else {\r\n        element.classList.remove(\"deactivated\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function setHTMLAttribute(element: HTMLElement, attr: string, value: string | null) {\r\n  if (element) {\r\n    if (value) {\r\n      if (value === \"true\") element.setAttribute(attr, \"\");\r\n      else element.setAttribute(attr, value);\r\n    } else if (element.hasAttribute(attr)) {\r\n      element.removeAttribute(attr);\r\n    }\r\n    return element.outerHTML;\r\n  }\r\n}\r\n\r\nfunction getHTMLAttributes(element: HTMLElement) {\r\n  const { attributes } = element;\r\n  const attrs = new Attributes();\r\n\r\n  for (let i = 0; i < attributes.length; i++) {\r\n    const { nodeName, nodeValue } = attributes[i];\r\n\r\n    attrs[nodeName] = nodeValue;\r\n  }\r\n\r\n  return attrs;\r\n}\r\n\r\nfunction updateHTMLAttributes(element: HTMLElement, attributes: Attributes) {\r\n  if (element && attributes) {\r\n    const { removables, ...others } = attributes;\r\n\r\n    if (removables) {\r\n      for (const attr of removables) {\r\n        if (element.hasAttribute(attr)) {\r\n          element.removeAttribute(attr);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (others) {\r\n      for (const attr in others) {\r\n        element.setAttribute(attr, others[attr]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateClassAttr(element: HTMLElement, classAttr: ClassAttribute) {\r\n  if (element) {\r\n    const { classList } = element;\r\n    const { items, removables } = classAttr;\r\n\r\n    for (const cls of removables) {\r\n      if (typeof cls === \"string\") {\r\n        if (classList.contains(cls)) {\r\n          classList.remove(cls);\r\n        }\r\n      } else {\r\n        for (let i = 0; i < classList.length; i++) {\r\n          const item = classList.item(i);\r\n\r\n          if (item && cls.test(item)) {\r\n            classList.remove(item);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const cls of items) {\r\n      if (!classList.contains(cls)) {\r\n        classList.add(cls);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateStyleAttr(element: HTMLElement, styleAttr: StyleAttribute) {\r\n  if (element) {\r\n    const { removables, ...styles } = styleAttr;\r\n    const { style } = element;\r\n\r\n    if (style) {\r\n      for (let i = 0; i < style.length; i++) {\r\n        const key = style.item(i);\r\n        const value = style.getPropertyValue(key);\r\n        const name = key.startsWith(\"--\") ? key : toCamelCase(key);\r\n\r\n        if (!removables.includes(name) && styles[name] === undefined) {\r\n          styles[name] = value;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (Object.keys(styles).length) {\r\n      element.setAttribute(\"style\", createStyleStrFromObj(styles));\r\n    } else if (element.hasAttribute(\"style\")) {\r\n      element.removeAttribute(\"style\");\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}