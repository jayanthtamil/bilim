{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\properties\\\\controls\\\\custom-evaluation\\\\BlmCustomEvaluationProps.tsx\";\nimport React, { Fragment } from \"react\";\nimport clsx from \"clsx\";\nimport { FormControlLabel, Checkbox, Select, MenuItem, Switch } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { EvaluationType } from \"editor-constants\";\nimport { BlmSubscriptInput } from \"shared\";\nimport { changeKeyMap } from \"./utils\";\nimport \"./custom-evaluation.scss\";\n\nfunction BlmCustomEvaluationProps(props) {\n  const {\n    data,\n    onChange\n  } = props;\n  const state = data.evalutionJSON;\n  const {\n    t\n  } = useTranslation(\"properties\");\n\n  const updateChange = newState => {\n    const newData = { ...data,\n      isEvaluation: newState.evaluation !== EvaluationType.None,\n      evalutionJSON: newState\n    };\n\n    if (onChange) {\n      onChange(newData);\n    }\n  };\n\n  const handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    let newState;\n\n    if (changeKeyMap.hasOwnProperty(name)) {\n      const map = changeKeyMap[name];\n      const {\n        obj,\n        key\n      } = map;\n      newState = { ...state,\n        [obj]: { ...state[obj],\n          [key]: value\n        }\n      };\n    } else {\n      newState = { ...state,\n        [name]: value\n      };\n    }\n\n    updateChange(newState);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-evaluation-props-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"evaluation-top-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"evaluation\",\n    value: state.evaluation,\n    className: \"evaluation-dropdown\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: EvaluationType.None,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, t(\"evaluation.list.none\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: EvaluationType.Evaluation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, t(\"tabs.evaluation\")))), state.evaluation !== EvaluationType.None && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"save_in_lms\",\n    label: t(\"evaluation.save_lms\"),\n    control: /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 22\n      }\n    }),\n    checked: state.save_in_lms,\n    disabled: state.evaluation !== EvaluationType.Evaluation,\n    className: \"evalutaion-switch-frm-lbl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"evaluation-score-quiz-container\", {\n      \"show-retry-quiz-options\": state.evaluation === EvaluationType.Evaluation && state.retry_quiz.checked\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"evaluation-score-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, t(\"evaluation.success_score\")), /*#__PURE__*/React.createElement(BlmSubscriptInput, {\n    name: \"success_score\",\n    label: \"/100\",\n    min: 1,\n    max: 99,\n    value: state.success_score,\n    className: \"evaluation-score-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"retry_quiz\",\n    label: t(\"evaluation.retry_quiz\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 24\n      }\n    }),\n    checked: state.retry_quiz.checked,\n    className: \"evaluation-retry-quiz-frm-lbl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    name: \"retry_quiz_attempts\",\n    value: state.retry_quiz.attempts,\n    className: \"evaluation-retry-quiz-dropdown\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, t(\"evaluation.list.attempt2\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, t(\"evaluation.list.attempt3\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"unlimited\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, t(\"evaluation.list.unlimited\"))), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"retry_quiz_lock\",\n    label: t(\"evaluation.lock\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 24\n      }\n    }),\n    checked: state.retry_quiz.lock_when_success,\n    className: \"evaluation-retry-quiz-lock-frm-lbl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"evaluation-advanced-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"evaluation-advanced-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, t(\"evaluation.advanced\")), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"advanced_option1\",\n    label: t(\"evaluation.show_complete\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 24\n      }\n    }),\n    checked: state.advanced.show_as_complete_even_if_no_succeed,\n    className: \"mui-radio-form-ctrl-lbl-1\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default BlmCustomEvaluationProps;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/properties/controls/custom-evaluation/BlmCustomEvaluationProps.tsx"],"names":["React","Fragment","clsx","FormControlLabel","Checkbox","Select","MenuItem","Switch","useTranslation","EvaluationType","BlmSubscriptInput","changeKeyMap","BlmCustomEvaluationProps","props","data","onChange","state","evalutionJSON","t","updateChange","newState","newData","isEvaluation","evaluation","None","handleChange","event","target","name","value","type","checked","hasOwnProperty","map","obj","key","Evaluation","save_in_lms","retry_quiz","success_score","attempts","lock_when_success","advanced","show_as_complete_even_if_no_succeed"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Fragment } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { FormControlLabel, Checkbox, Select, MenuItem, Switch } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomEvaluationProps, CourseElementProps, ElementPropsComponent } from \"types\";\r\nimport { EvaluationType } from \"editor-constants\";\r\nimport { BlmSubscriptInput, SubscriptInputChangeEvent } from \"shared\";\r\nimport { changeKeyMap } from \"./utils\";\r\nimport \"./custom-evaluation.scss\";\r\n\r\ninterface CompProps extends ElementPropsComponent<CustomEvaluationProps> {}\r\n\r\nfunction BlmCustomEvaluationProps(props: CompProps) {\r\n  const { data, onChange } = props;\r\n  const state = data.evalutionJSON!;\r\n  const { t } = useTranslation(\"properties\");\r\n\r\n  const updateChange = (newState: CustomEvaluationProps) => {\r\n    const newData: CourseElementProps<CustomEvaluationProps> = {\r\n      ...data,\r\n      isEvaluation: newState.evaluation !== EvaluationType.None,\r\n      evalutionJSON: newState,\r\n    };\r\n\r\n    if (onChange) {\r\n      onChange(newData);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<any> | SubscriptInputChangeEvent) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    let newState: CustomEvaluationProps;\r\n\r\n    if (changeKeyMap.hasOwnProperty(name)) {\r\n      const map = changeKeyMap[name];\r\n      const { obj, key } = map;\r\n\r\n      newState = {\r\n        ...state,\r\n        [obj]: {\r\n          ...state[obj],\r\n          [key]: value,\r\n        },\r\n      };\r\n    } else {\r\n      newState = {\r\n        ...state,\r\n        [name]: value,\r\n      };\r\n    }\r\n\r\n    updateChange(newState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"custom-evaluation-props-container\">\r\n      <div className=\"evaluation-top-container\">\r\n        <Select\r\n          name=\"evaluation\"\r\n          value={state.evaluation}\r\n          className=\"evaluation-dropdown\"\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={EvaluationType.None}>{t(\"evaluation.list.none\")}</MenuItem>\r\n          <MenuItem value={EvaluationType.Evaluation}>{t(\"tabs.evaluation\")}</MenuItem>\r\n        </Select>\r\n      </div>\r\n      {state.evaluation !== EvaluationType.None && (\r\n        <Fragment>\r\n          <FormControlLabel\r\n            name=\"save_in_lms\"\r\n            label={t(\"evaluation.save_lms\")}\r\n            control={<Switch />}\r\n            checked={state.save_in_lms}\r\n            disabled={state.evaluation !== EvaluationType.Evaluation}\r\n            className=\"evalutaion-switch-frm-lbl\"\r\n            onChange={handleChange}\r\n          />\r\n          <div\r\n            className={clsx(\"evaluation-score-quiz-container\", {\r\n              \"show-retry-quiz-options\":\r\n                state.evaluation === EvaluationType.Evaluation && state.retry_quiz.checked,\r\n            })}\r\n          >\r\n            <span className=\"evaluation-score-lbl\">{t(\"evaluation.success_score\")}</span>\r\n            <BlmSubscriptInput\r\n              name=\"success_score\"\r\n              label=\"/100\"\r\n              min={1}\r\n              max={99}\r\n              value={state.success_score}\r\n              className=\"evaluation-score-txt\"\r\n              onChange={handleChange}\r\n            />\r\n            <FormControlLabel\r\n              name=\"retry_quiz\"\r\n              label={t(\"evaluation.retry_quiz\")}\r\n              control={<Checkbox />}\r\n              checked={state.retry_quiz.checked}\r\n              className=\"evaluation-retry-quiz-frm-lbl\"\r\n              onChange={handleChange}\r\n            />\r\n            <Select\r\n              name=\"retry_quiz_attempts\"\r\n              value={state.retry_quiz.attempts}\r\n              className=\"evaluation-retry-quiz-dropdown\"\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem value=\"2\">{t(\"evaluation.list.attempt2\")}</MenuItem>\r\n              <MenuItem value=\"3\">{t(\"evaluation.list.attempt3\")}</MenuItem>\r\n              <MenuItem value=\"unlimited\">{t(\"evaluation.list.unlimited\")}</MenuItem>\r\n            </Select>\r\n            <FormControlLabel\r\n              name=\"retry_quiz_lock\"\r\n              label={t(\"evaluation.lock\")}\r\n              control={<Checkbox />}\r\n              checked={state.retry_quiz.lock_when_success}\r\n              className=\"evaluation-retry-quiz-lock-frm-lbl\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"evaluation-advanced-container\">\r\n            <span className=\"evaluation-advanced-title\">{t(\"evaluation.advanced\")}</span>\r\n            <FormControlLabel\r\n              name=\"advanced_option1\"\r\n              label={t(\"evaluation.show_complete\")}\r\n              control={<Checkbox />}\r\n              checked={state.advanced.show_as_complete_even_if_no_succeed}\r\n              className=\"mui-radio-form-ctrl-lbl-1\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmCustomEvaluationProps;\r\n"]},"metadata":{},"sourceType":"module"}