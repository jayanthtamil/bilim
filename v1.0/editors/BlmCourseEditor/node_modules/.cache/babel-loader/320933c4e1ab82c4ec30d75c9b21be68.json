{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\slideshow\\\\item\\\\BlmSlideShowItem.tsx\";\nimport React, { forwardRef } from \"react\";\nimport clsx from \"clsx\";\nimport { ListItemIcon, ListItemText, MenuItem, Select } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { AcceptedFileTypes, ImageDisplayTypes } from \"editor-constants\";\nimport { CoverOptionIcon, ContainOptionIcon, NoResizeOptionIcon } from \"assets/icons\";\nimport { BlmMediaPicker } from \"components/shared\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { BlmPosition } from \"shared\";\nimport \"./styles.scss\";\n\nconst BlmSlideShowItem = (props, ref) => {\n  const {\n    drag,\n    index,\n    data,\n    option,\n    position,\n    isLinked,\n    selected,\n    className,\n    onChange,\n    onClick,\n    onAdd,\n    onDuplicate,\n    onDelete,\n    ...others\n  } = props;\n  const {\n    element\n  } = useContentEditorCtx();\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  const handleClick = event => {\n    if (!selected) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (onClick) {\n        onClick(index);\n      }\n    }\n  };\n\n  const handleAddClick = delta => {\n    if (onAdd) {\n      onAdd(index + delta);\n    }\n  };\n\n  const handleDuplicateClick = () => {\n    if (onDuplicate) {\n      onDuplicate(index);\n    }\n  };\n\n  const handleDeleteClick = () => {\n    if (onDelete) {\n      onDelete(index);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: ref,\n    className: clsx(\"slideshow-item-wrapper\", className, {\n      selected\n    })\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"slideshow-item-drag-btn\"\n  }, drag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-item-duplicate-btn\",\n    onClick: handleDuplicateClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-item-delete-btn\",\n    onClick: handleDeleteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-item-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"media\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Image],\n    data: data,\n    placeholder: \"Select media\",\n    isLinked: isLinked,\n    className: \"media-picker-3\",\n    onChange: onChange,\n    onClickCapture: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-item-add-btn left\",\n    onClick: () => handleAddClick(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideshow-item-add-btn right\",\n    onClick: () => handleAddClick(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    name: \"option\",\n    value: option,\n    MenuProps: {\n      className: \"slideshow-item-option-dropdown-menu\",\n      disableRestoreFocus: true //If It is false, BlmBackgroundEditor is not positioned to anchor element after choosing the item\n\n    },\n    className: \"slideshow-item-option-dropdown\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: ImageDisplayTypes.Cover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CoverOptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, t(\"list.cover\"))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: ImageDisplayTypes.Contain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ContainOptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, t(\"list.contain\"))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: ImageDisplayTypes.NoResize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NoResizeOptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, t(\"list.no_resize\")))), /*#__PURE__*/React.createElement(BlmPosition, {\n    name: \"position\",\n    media: \"media-item\",\n    value: position,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default forwardRef(BlmSlideShowItem);","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/slideshow/item/BlmSlideShowItem.tsx"],"names":["React","forwardRef","clsx","ListItemIcon","ListItemText","MenuItem","Select","useTranslation","AcceptedFileTypes","ImageDisplayTypes","CoverOptionIcon","ContainOptionIcon","NoResizeOptionIcon","BlmMediaPicker","useContentEditorCtx","BlmPosition","BlmSlideShowItem","props","ref","drag","index","data","option","position","isLinked","selected","className","onChange","onClick","onAdd","onDuplicate","onDelete","others","element","t","handleClick","event","preventDefault","stopPropagation","handleAddClick","delta","handleDuplicateClick","handleDeleteClick","id","Image","disableRestoreFocus","Cover","Contain","NoResize"],"mappings":"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","sourcesContent":["import React, {\r\n  MouseEvent,\r\n  ChangeEvent,\r\n  forwardRef,\r\n  ForwardRefRenderFunction,\r\n  HTMLAttributes,\r\n} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { DraggableProvidedDragHandleProps } from \"react-beautiful-dnd\";\r\nimport { ListItemIcon, ListItemText, MenuItem, Select } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { MediaFile, CustomChangeEvent } from \"types\";\r\nimport {\r\n  AcceptedFileTypes,\r\n  ImageDisplayTypes,\r\n  MediaBackgroundPosition,\r\n  MediaPosition,\r\n  Positions,\r\n} from \"editor-constants\";\r\nimport { CoverOptionIcon, ContainOptionIcon, NoResizeOptionIcon } from \"assets/icons\";\r\nimport { BlmMediaPicker, MediaPickerChangeEvent } from \"components/shared\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { BlmPosition } from \"shared\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends Omit<HTMLAttributes<HTMLDivElement>, \"onClick\" | \"onChange\"> {\r\n  index: number;\r\n  data?: MediaFile;\r\n  option: string;\r\n  position: MediaPosition;\r\n  isLinked: boolean;\r\n  selected: boolean;\r\n  drag?: DraggableProvidedDragHandleProps;\r\n  onChange?: (\r\n    evnet:\r\n      | MediaPickerChangeEvent\r\n      | ChangeEvent<any>\r\n      | CustomChangeEvent<MediaFile | MediaPosition | Positions | MediaBackgroundPosition>\r\n  ) => void;\r\n  onAdd?: (index: number) => void;\r\n  onDuplicate?: (index: number) => void;\r\n  onDelete?: (index: number) => void;\r\n  onClick?: (index: number) => void;\r\n}\r\n\r\nconst BlmSlideShowItem: ForwardRefRenderFunction<HTMLDivElement, CompProps> = (props, ref) => {\r\n  const {\r\n    drag,\r\n    index,\r\n    data,\r\n    option,\r\n    position,\r\n    isLinked,\r\n    selected,\r\n    className,\r\n    onChange,\r\n    onClick,\r\n    onAdd,\r\n    onDuplicate,\r\n    onDelete,\r\n    ...others\r\n  } = props;\r\n  const { element } = useContentEditorCtx();\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const handleClick = (event: MouseEvent) => {\r\n    if (!selected) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      if (onClick) {\r\n        onClick(index);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddClick = (delta: number) => {\r\n    if (onAdd) {\r\n      onAdd(index + delta);\r\n    }\r\n  };\r\n\r\n  const handleDuplicateClick = () => {\r\n    if (onDuplicate) {\r\n      onDuplicate(index);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    if (onDelete) {\r\n      onDelete(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={clsx(\"slideshow-item-wrapper\", className, {\r\n        selected,\r\n      })}\r\n      {...others}\r\n    >\r\n      <div className=\"slideshow-item-drag-btn\" {...drag} />\r\n      <div className=\"slideshow-item-duplicate-btn\" onClick={handleDuplicateClick} />\r\n      <div className=\"slideshow-item-delete-btn\" onClick={handleDeleteClick} />\r\n      <div className=\"slideshow-item-lbl\" />\r\n      <BlmMediaPicker\r\n        name=\"media\"\r\n        elementId={element!.id}\r\n        acceptedFiles={[AcceptedFileTypes.Image]}\r\n        data={data}\r\n        placeholder=\"Select media\"\r\n        isLinked={isLinked}\r\n        className=\"media-picker-3\"\r\n        onChange={onChange}\r\n        onClickCapture={handleClick}\r\n      />\r\n      <div className=\"slideshow-item-add-btn left\" onClick={() => handleAddClick(0)} />\r\n      <div className=\"slideshow-item-add-btn right\" onClick={() => handleAddClick(1)} />\r\n      <Select\r\n        name=\"option\"\r\n        value={option}\r\n        MenuProps={{\r\n          className: \"slideshow-item-option-dropdown-menu\",\r\n          disableRestoreFocus: true, //If It is false, BlmBackgroundEditor is not positioned to anchor element after choosing the item\r\n        }}\r\n        className=\"slideshow-item-option-dropdown\"\r\n        onChange={onChange}\r\n      >\r\n        <MenuItem value={ImageDisplayTypes.Cover}>\r\n          <ListItemIcon>\r\n            <CoverOptionIcon />\r\n          </ListItemIcon>\r\n          <ListItemText>{t(\"list.cover\")}</ListItemText>\r\n        </MenuItem>\r\n        <MenuItem value={ImageDisplayTypes.Contain}>\r\n          <ListItemIcon>\r\n            <ContainOptionIcon />\r\n          </ListItemIcon>\r\n          <ListItemText>{t(\"list.contain\")}</ListItemText>\r\n        </MenuItem>\r\n        <MenuItem value={ImageDisplayTypes.NoResize}>\r\n          <ListItemIcon>\r\n            <NoResizeOptionIcon />\r\n          </ListItemIcon>\r\n          <ListItemText>{t(\"list.no_resize\")}</ListItemText>\r\n        </MenuItem>\r\n      </Select>\r\n      <BlmPosition name=\"position\" media=\"media-item\" value={position} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default forwardRef(BlmSlideShowItem);\r\n"]},"metadata":{},"sourceType":"module"}