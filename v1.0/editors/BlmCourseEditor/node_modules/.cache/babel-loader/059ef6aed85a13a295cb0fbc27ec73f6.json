{"ast":null,"code":"import { BaseCourseElement } from \"./element\";\nexport class CourseElementTemplates extends BaseCourseElement {\n  constructor(...args) {\n    super(...args);\n    this.templates = null;\n  }\n\n}\nexport class AssociatedTemplate {\n  constructor(id, name = \"\", light, dark) {\n    this.id = void 0;\n    this.name = void 0;\n    this.light = void 0;\n    this.dark = void 0;\n    this.interaction = void 0;\n    this.course_context = void 0;\n    this.theme = void 0;\n    this.framework = void 0;\n    this.id = id;\n    this.name = name;\n    this.light = light;\n    this.dark = dark;\n  }\n\n}\nexport class TemplateScroll {\n  constructor(type, effect = true, parallaxe = false) {\n    this.type = void 0;\n    this.effect = true;\n    this.parallaxe = false;\n    this.type = type;\n    this.effect = effect;\n    this.parallaxe = parallaxe;\n  }\n\n}\nexport class CourseElementTemplate extends BaseCourseElement {\n  constructor(id, name, type, templateType, html, template, isDarkTemplate) {\n    super(id, name, type);\n    this.templateType = void 0;\n    this.html = void 0;\n    this.isDarkTemplate = false;\n    this.template = void 0;\n    this.options = null;\n    this.scroll = new TemplateScroll();\n    this.hasAnchor = false;\n    this.isSummary = false;\n    this.hasAction = false;\n    this.thumbnail = void 0;\n    this.associatedChapter = void 0;\n    this.htmlJSON = null;\n    this.templateType = templateType;\n    this.html = html;\n    this.template = template;\n    this.isDarkTemplate = isDarkTemplate;\n    this.thumbnail = isDarkTemplate ? template.dark : template.light;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/types/core/course/templates.ts"],"names":["BaseCourseElement","CourseElementTemplates","templates","AssociatedTemplate","constructor","id","name","light","dark","interaction","course_context","theme","framework","TemplateScroll","type","effect","parallaxe","CourseElementTemplate","templateType","html","template","isDarkTemplate","options","scroll","hasAnchor","isSummary","hasAction","thumbnail","associatedChapter","htmlJSON"],"mappings":"AAEA,SAASA,iBAAT,QAAsE,WAAtE;AAEA,OAAO,MAAMC,sBAAN,SAAqCD,iBAArC,CAAuD;AAAA;AAAA;AAAA,SAC5DE,SAD4D,GAChB,IADgB;AAAA;;AAAA;AAI9D,OAAO,MAAMC,kBAAN,CAAyB;AAU9BC,EAAAA,WAAW,CAACC,EAAD,EAAaC,IAAI,GAAG,EAApB,EAAwBC,KAAxB,EAAwCC,IAAxC,EAAuD;AAAA,SATlEH,EASkE;AAAA,SARlEC,IAQkE;AAAA,SAPlEC,KAOkE;AAAA,SANlEC,IAMkE;AAAA,SALlEC,WAKkE;AAAA,SAJlEC,cAIkE;AAAA,SAHlEC,KAGkE;AAAA,SAFlEC,SAEkE;AAChE,SAAKP,EAAL,GAAUA,EAAV;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD;;AAf6B;AAkBhC,OAAO,MAAMK,cAAN,CAAqB;AAK1BT,EAAAA,WAAW,CAACU,IAAD,EAA+BC,MAAM,GAAG,IAAxC,EAA8CC,SAAS,GAAG,KAA1D,EAAiE;AAAA,SAJ5EF,IAI4E;AAAA,SAH5EC,MAG4E,GAHnE,IAGmE;AAAA,SAF5EC,SAE4E,GAFhE,KAEgE;AAC1E,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACD;;AATyB;AAY5B,OAAO,MAAMC,qBAAN,SAAoCjB,iBAApC,CAAsD;AAc3DI,EAAAA,WAAW,CACTC,EADS,EAETC,IAFS,EAGTQ,IAHS,EAITI,YAJS,EAKTC,IALS,EAMTC,QANS,EAOTC,cAPS,EAQT;AACA,UAAMhB,EAAN,EAAUC,IAAV,EAAgBQ,IAAhB;AADA,SArBFI,YAqBE;AAAA,SApBFC,IAoBE;AAAA,SAnBFE,cAmBE,GAnBe,KAmBf;AAAA,SAlBFD,QAkBE;AAAA,SAjBFE,OAiBE,GAjBoC,IAiBpC;AAAA,SAhBFC,MAgBE,GAhBO,IAAIV,cAAJ,EAgBP;AAAA,SAfFW,SAeE,GAfU,KAeV;AAAA,SAdFC,SAcE,GAdU,KAcV;AAAA,SAbFC,SAaE,GAbU,KAaV;AAAA,SAZFC,SAYE;AAAA,SAXFC,iBAWE;AAAA,SAVFC,QAUE,GAVqC,IAUrC;AAGA,SAAKX,YAAL,GAAoBA,YAApB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKM,SAAL,GAAiBN,cAAc,GAAGD,QAAQ,CAACZ,IAAZ,GAAmBY,QAAQ,CAACb,KAA3D;AACD;;AA9B0D","sourcesContent":["import { ScrollTransitionTypes, TemplateTypes } from \"editor-constants\";\r\nimport { TemplateOptionsJSON } from \"../template-editor\";\r\nimport { BaseCourseElement, CourseElement, ElementTemplateJSON } from \"./element\";\r\n\r\nexport class CourseElementTemplates extends BaseCourseElement {\r\n  templates: CourseElementTemplate[] | null = null;\r\n}\r\n\r\nexport class AssociatedTemplate {\r\n  id: string;\r\n  name: string;\r\n  light?: string;\r\n  dark?: string;\r\n  interaction?: boolean;\r\n  course_context?: string;\r\n  theme?: string;\r\n  framework?: { min?: string; max?: string };\r\n\r\n  constructor(id: string, name = \"\", light?: string, dark?: string) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.light = light;\r\n    this.dark = dark;\r\n  }\r\n}\r\n\r\nexport class TemplateScroll {\r\n  type?: ScrollTransitionTypes;\r\n  effect = true;\r\n  parallaxe = false;\r\n\r\n  constructor(type?: ScrollTransitionTypes, effect = true, parallaxe = false) {\r\n    this.type = type;\r\n    this.effect = effect;\r\n    this.parallaxe = parallaxe;\r\n  }\r\n}\r\n\r\nexport class CourseElementTemplate extends BaseCourseElement {\r\n  templateType: TemplateTypes;\r\n  html: string;\r\n  isDarkTemplate = false;\r\n  template: AssociatedTemplate;\r\n  options: TemplateOptionsJSON | null = null;\r\n  scroll = new TemplateScroll();\r\n  hasAnchor = false;\r\n  isSummary = false;\r\n  hasAction = false;\r\n  thumbnail?: string;\r\n  associatedChapter?: CourseElement;\r\n  htmlJSON: ElementTemplateJSON | null = null;\r\n\r\n  constructor(\r\n    id: string,\r\n    name: string,\r\n    type: TemplateTypes,\r\n    templateType: TemplateTypes,\r\n    html: string,\r\n    template: AssociatedTemplate,\r\n    isDarkTemplate: boolean\r\n  ) {\r\n    super(id, name, type);\r\n\r\n    this.templateType = templateType;\r\n    this.html = html;\r\n    this.template = template;\r\n    this.isDarkTemplate = isDarkTemplate;\r\n    this.thumbnail = isDarkTemplate ? template.dark : template.light;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}