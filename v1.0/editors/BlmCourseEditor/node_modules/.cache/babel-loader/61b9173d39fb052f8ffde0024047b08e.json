{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\template-editors\\\\containers\\\\template-background\\\\BlmTemplateBackground.tsx\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { differenceOfObjects } from \"utils\";\nimport { BlmTintPicker } from \"shared\";\nimport { BlmBackgroundMedia, BlmBackgroundSize } from \"components/shared\";\nimport { getPartPageBackgroundMedias, getPartPageBackgroundModel, setPartPageBackgroundHTML } from \"template-builders\";\nimport \"./styles.scss\";\nconst initEditor = {\n  oldMedias: [],\n  isEdited: false\n};\n\nconst createTemplate = (template, background) => {\n  const newTemplate = { ...template\n  };\n  newTemplate.html = setPartPageBackgroundHTML(newTemplate, background);\n  return newTemplate;\n};\n\nconst BlmTemplateBackground = forwardRef((props, ref) => {\n  const {\n    template,\n    bgColors,\n    onPreview,\n    onSave,\n    onClose,\n    removeFiles,\n    clearFiles\n  } = props;\n  const [editor, setEditor] = useState(initEditor);\n  const {\n    data,\n    oldMedias,\n    isEdited\n  } = editor;\n  const {\n    t\n  } = useTranslation(\"template-editors\");\n  useEffect(() => {\n    if (template) {\n      const newBackground = getPartPageBackgroundModel(template);\n\n      if (newBackground) {\n        const oldMedias = getPartPageBackgroundMedias(newBackground);\n        setEditor({\n          data: newBackground,\n          oldMedias,\n          isEdited: false\n        });\n      }\n    }\n  }, [template]);\n  useImperativeHandle(ref, () => ({\n    isEdited,\n    saveOnClose: handleSaveOnClose,\n    revert: revertChanges\n  }));\n\n  const saveChanges = () => {\n    if (isEdited && data) {\n      const newTemplate = createTemplate(template, data);\n      const newMedias = getPartPageBackgroundMedias(data);\n      const deletedMedias = differenceOfObjects(oldMedias, newMedias, \"id\");\n      removeFiles(deletedMedias);\n\n      if (onSave) {\n        onSave(newTemplate);\n      }\n    }\n  };\n\n  const revertChanges = () => {\n    clearFiles(template.id, false);\n  };\n\n  const updatePreivew = newData => {\n    const newTemplate = createTemplate(template, newData);\n\n    if (onPreview) {\n      onPreview(newTemplate);\n    }\n  };\n\n  const updateChange = newData => {\n    setEditor({ ...editor,\n      data: newData,\n      isEdited: true\n    });\n    updatePreivew(newData);\n  };\n\n  const handleChange = event => {\n    if (data) {\n      const {\n        name,\n        value\n      } = event.target;\n      const newData = { ...data\n      };\n\n      if (name === \"media\" || name === \"tint\" || name === \"mediaSize\" || name === \"colorSize\") {\n        newData[name] = value;\n      }\n\n      updateChange(newData);\n    }\n  };\n\n  const handleSaveOnClose = event => {\n    saveChanges();\n    clearFiles(template.id, true);\n\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  if (data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-background-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-bg-anchor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-bg-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-bg-close-btn\",\n      onClick: handleSaveOnClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-bg-media-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"template-bg-media-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, t(\"background.background\")), /*#__PURE__*/React.createElement(BlmBackgroundMedia, {\n      name: \"media\",\n      elementId: template.id,\n      type: \"partpage\",\n      data: data.media,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(BlmBackgroundSize, {\n      title: t(\"background.title.size\"),\n      name: \"mediaSize\",\n      size: data.mediaSize,\n      disabled: !Boolean(data.media.main),\n      className: \"template-bg-media-size-box\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-bg-color-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"template-bg-color-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, t(\"background.background\")), /*#__PURE__*/React.createElement(BlmTintPicker, {\n      title: t(\"background.title.color\"),\n      data: data.tint,\n      colors: bgColors,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"template-bg-color-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, t(\"background.info\"))), /*#__PURE__*/React.createElement(BlmBackgroundSize, {\n      name: \"colorSize\",\n      size: data.colorSize,\n      disabled: !Boolean(data.tint.color),\n      className: \"template-bg-color-size-box\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return null;\n  }\n});\nexport default BlmTemplateBackground;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/template-editors/containers/template-background/BlmTemplateBackground.tsx"],"names":["React","forwardRef","useEffect","useImperativeHandle","useState","useTranslation","differenceOfObjects","BlmTintPicker","BlmBackgroundMedia","BlmBackgroundSize","getPartPageBackgroundMedias","getPartPageBackgroundModel","setPartPageBackgroundHTML","initEditor","oldMedias","isEdited","createTemplate","template","background","newTemplate","html","BlmTemplateBackground","props","ref","bgColors","onPreview","onSave","onClose","removeFiles","clearFiles","editor","setEditor","data","t","newBackground","saveOnClose","handleSaveOnClose","revert","revertChanges","saveChanges","newMedias","deletedMedias","id","updatePreivew","newData","updateChange","handleChange","event","name","value","target","media","mediaSize","Boolean","main","tint","colorSize","color"],"mappings":"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","sourcesContent":["import React, { forwardRef, MouseEvent, useEffect, useImperativeHandle, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  BackgroundMedia,\r\n  CourseElementTemplate,\r\n  CustomChangeEvent,\r\n  MediaFile,\r\n  PartPageBackground,\r\n  TemplateEditorComponent,\r\n  Tint,\r\n} from \"types\";\r\nimport { BackgroundSizeTypes } from \"editor-constants\";\r\nimport { differenceOfObjects } from \"utils\";\r\nimport { BlmTintPicker } from \"shared\";\r\nimport { BlmBackgroundMedia, BlmBackgroundSize } from \"components/shared\";\r\nimport {\r\n  getPartPageBackgroundMedias,\r\n  getPartPageBackgroundModel,\r\n  setPartPageBackgroundHTML,\r\n} from \"template-builders\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  template: CourseElementTemplate;\r\n  onPreview: (template: CourseElementTemplate) => void;\r\n  onSave: (template: CourseElementTemplate) => void;\r\n  onClose: (event: MouseEvent) => void;\r\n}\r\n\r\nexport interface EditorState {\r\n  data?: PartPageBackground;\r\n  oldMedias: MediaFile[];\r\n  isEdited: boolean;\r\n}\r\n\r\nconst initEditor: EditorState = { oldMedias: [], isEdited: false };\r\n\r\nconst createTemplate = (template: CourseElementTemplate, background: PartPageBackground) => {\r\n  const newTemplate: CourseElementTemplate = {\r\n    ...template,\r\n  };\r\n\r\n  newTemplate.html = setPartPageBackgroundHTML(newTemplate, background);\r\n\r\n  return newTemplate;\r\n};\r\n\r\nconst BlmTemplateBackground = forwardRef<TemplateEditorComponent, CompProps>((props, ref) => {\r\n  const { template, bgColors, onPreview, onSave, onClose, removeFiles, clearFiles } = props;\r\n  const [editor, setEditor] = useState(initEditor);\r\n  const { data, oldMedias, isEdited } = editor;\r\n  const { t } = useTranslation(\"template-editors\");\r\n\r\n  useEffect(() => {\r\n    if (template) {\r\n      const newBackground = getPartPageBackgroundModel(template);\r\n\r\n      if (newBackground) {\r\n        const oldMedias = getPartPageBackgroundMedias(newBackground);\r\n\r\n        setEditor({ data: newBackground, oldMedias, isEdited: false });\r\n      }\r\n    }\r\n  }, [template]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    isEdited,\r\n    saveOnClose: handleSaveOnClose,\r\n    revert: revertChanges,\r\n  }));\r\n\r\n  const saveChanges = () => {\r\n    if (isEdited && data) {\r\n      const newTemplate = createTemplate(template, data);\r\n      const newMedias = getPartPageBackgroundMedias(data);\r\n      const deletedMedias = differenceOfObjects(oldMedias, newMedias, \"id\");\r\n\r\n      removeFiles(deletedMedias);\r\n\r\n      if (onSave) {\r\n        onSave(newTemplate);\r\n      }\r\n    }\r\n  };\r\n\r\n  const revertChanges = () => {\r\n    clearFiles(template.id, false);\r\n  };\r\n\r\n  const updatePreivew = (newData: PartPageBackground) => {\r\n    const newTemplate = createTemplate(template, newData);\r\n\r\n    if (onPreview) {\r\n      onPreview(newTemplate);\r\n    }\r\n  };\r\n\r\n  const updateChange = (newData: PartPageBackground) => {\r\n    setEditor({ ...editor, data: newData, isEdited: true });\r\n    updatePreivew(newData);\r\n  };\r\n\r\n  const handleChange = (event: CustomChangeEvent<BackgroundMedia | BackgroundSizeTypes | Tint>) => {\r\n    if (data) {\r\n      const { name, value } = event.target;\r\n      const newData = { ...data };\r\n\r\n      if (name === \"media\" || name === \"tint\" || name === \"mediaSize\" || name === \"colorSize\") {\r\n        newData[name] = value as any;\r\n      }\r\n\r\n      updateChange(newData);\r\n    }\r\n  };\r\n\r\n  const handleSaveOnClose = (event: MouseEvent) => {\r\n    saveChanges();\r\n    clearFiles(template.id, true);\r\n\r\n    if (onClose) {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n  if (data) {\r\n    return (\r\n      <div className=\"template-background-panel\">\r\n        <div className=\"template-bg-anchor\" />\r\n        <div className=\"template-bg-content\">\r\n          <div className=\"template-bg-close-btn\" onClick={handleSaveOnClose} />\r\n          <div className=\"template-bg-media-box\">\r\n            <span className=\"template-bg-media-title\">{t(\"background.background\")}</span>\r\n            <BlmBackgroundMedia\r\n              name=\"media\"\r\n              elementId={template.id}\r\n              type=\"partpage\"\r\n              data={data.media}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <BlmBackgroundSize\r\n            title={t(\"background.title.size\")}\r\n            name=\"mediaSize\"\r\n            size={data.mediaSize}\r\n            disabled={!Boolean(data.media.main)}\r\n            className=\"template-bg-media-size-box\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"template-bg-color-box\">\r\n            <span className=\"template-bg-color-title\">{t(\"background.background\")}</span>\r\n            <BlmTintPicker\r\n              title={t(\"background.title.color\")}\r\n              data={data.tint}\r\n              colors={bgColors}\r\n              onChange={handleChange}\r\n            />\r\n            <span className=\"template-bg-color-info\">{t(\"background.info\")}</span>\r\n          </div>\r\n          <BlmBackgroundSize\r\n            name=\"colorSize\"\r\n            size={data.colorSize}\r\n            disabled={!Boolean(data.tint.color)}\r\n            className=\"template-bg-color-size-box\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n});\r\n\r\nexport default BlmTemplateBackground;\r\n"]},"metadata":{},"sourceType":"module"}