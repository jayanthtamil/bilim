{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\template-editors\\\\core\\\\action-editor\\\\BlmActionEditor.tsx\";\nimport React, { Fragment, useMemo, useRef } from \"react\";\nimport { Popper, Backdrop } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { ElementType } from \"editor-constants\";\nimport { createModifiersForIFrame } from \"../../utils\";\nimport { BlmTemplateAction } from \"../../containers\";\nimport \"./styles.scss\";\nconst popperOptions = {\n  eventsEnabled: true\n};\n\nfunction BlmActionEditor(props) {\n  const {\n    open,\n    anchorEle,\n    element,\n    template,\n    onSave,\n    onClose,\n    openConfirmDialog\n  } = props;\n  const elementType = element.type;\n  const editorRef = useRef(null);\n  const {\n    t\n  } = useTranslation();\n  const modifiers = useMemo(() => {\n    return createModifiersForIFrame(-(elementType === ElementType.PartPage || elementType === ElementType.SimplePartPage ? 163 : 64), 4);\n  }, [elementType]);\n\n  const openSaveConfirmDialog = () => {\n    const options = {\n      className: \"template-editor-warning-dialog\",\n      okLabel: `${t(\"button.save\")}`,\n      cancelLabel: `${t(\"button.cancel\")}`\n    };\n    openConfirmDialog(\"\", `${t(\"alert.save_changes\")}`, handleSave, handleCancel, options);\n  };\n\n  const handleSave = event => {\n    const editor = editorRef.current;\n\n    if (editor) {\n      editor.saveOnClose(event);\n    }\n  };\n\n  const handleCancel = event => {\n    const editor = editorRef.current;\n\n    if (editor) {\n      editor.revert();\n    }\n\n    handleClose(event);\n  };\n\n  const handleBackdropClick = event => {\n    const editor = editorRef.current;\n\n    if (editor && editor.isEdited) {\n      openSaveConfirmDialog();\n    } else {\n      handleClose(event);\n    }\n  };\n\n  const handleClose = event => {\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popper, {\n    id: \"scroll-popper\",\n    open: open,\n    anchorEl: open ? anchorEle : null,\n    placement: \"bottom-start\",\n    popperOptions: popperOptions,\n    modifiers: modifiers,\n    className: \"template-action-editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BlmTemplateAction, {\n    ref: editorRef,\n    element: element,\n    template: template,\n    onSave: onSave,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Backdrop, {\n    open: open,\n    className: \"template-action-editor-backdrop\",\n    onClick: handleBackdropClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BlmActionEditor;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/template-editors/core/action-editor/BlmActionEditor.tsx"],"names":["React","Fragment","useMemo","useRef","Popper","Backdrop","useTranslation","ElementType","createModifiersForIFrame","BlmTemplateAction","popperOptions","eventsEnabled","BlmActionEditor","props","open","anchorEle","element","template","onSave","onClose","openConfirmDialog","elementType","type","editorRef","t","modifiers","PartPage","SimplePartPage","openSaveConfirmDialog","options","className","okLabel","cancelLabel","handleSave","handleCancel","event","editor","current","saveOnClose","revert","handleClose","handleBackdropClick","isEdited"],"mappings":"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","sourcesContent":["import React, { Fragment, MouseEvent, useMemo, useRef } from \"react\";\r\nimport { Popper, Backdrop } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CourseElement, CourseElementTemplate, TemplateEditorComponent } from \"types\";\r\nimport { ElementType } from \"editor-constants\";\r\nimport { createModifiersForIFrame } from \"../../utils\";\r\nimport { BlmTemplateAction } from \"../../containers\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  open: boolean;\r\n  anchorEle: HTMLElement;\r\n  element: CourseElement;\r\n  template: CourseElementTemplate;\r\n  onSave: (template: CourseElementTemplate) => void;\r\n  onClose: (event: MouseEvent) => void;\r\n}\r\n\r\nconst popperOptions = {\r\n  eventsEnabled: true,\r\n};\r\n\r\nfunction BlmActionEditor(props: CompProps) {\r\n  const { open, anchorEle, element, template, onSave, onClose, openConfirmDialog } = props;\r\n  const elementType = element.type;\r\n  const editorRef = useRef<TemplateEditorComponent | null>(null);\r\n  const { t } = useTranslation();\r\n\r\n  const modifiers = useMemo(() => {\r\n    return createModifiersForIFrame(\r\n      -(elementType === ElementType.PartPage || elementType === ElementType.SimplePartPage\r\n        ? 163\r\n        : 64),\r\n      4\r\n    );\r\n  }, [elementType]);\r\n\r\n  const openSaveConfirmDialog = () => {\r\n    const options = {\r\n      className: \"template-editor-warning-dialog\",\r\n      okLabel: `${t(\"button.save\")}`,\r\n      cancelLabel: `${t(\"button.cancel\")}`,\r\n    };\r\n\r\n    openConfirmDialog(\"\", `${t(\"alert.save_changes\")}`, handleSave, handleCancel, options);\r\n  };\r\n\r\n  const handleSave = (event: MouseEvent) => {\r\n    const editor = editorRef.current;\r\n\r\n    if (editor) {\r\n      editor.saveOnClose(event);\r\n    }\r\n  };\r\n\r\n  const handleCancel = (event: MouseEvent) => {\r\n    const editor = editorRef.current;\r\n\r\n    if (editor) {\r\n      editor.revert();\r\n    }\r\n\r\n    handleClose(event);\r\n  };\r\n\r\n  const handleBackdropClick = (event: MouseEvent) => {\r\n    const editor = editorRef.current;\r\n\r\n    if (editor && editor.isEdited) {\r\n      openSaveConfirmDialog();\r\n    } else {\r\n      handleClose(event);\r\n    }\r\n  };\r\n\r\n  const handleClose = (event: MouseEvent) => {\r\n    if (onClose) {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Popper\r\n        id=\"scroll-popper\"\r\n        open={open}\r\n        anchorEl={open ? anchorEle : null}\r\n        placement=\"bottom-start\"\r\n        popperOptions={popperOptions}\r\n        modifiers={modifiers}\r\n        className=\"template-action-editor\"\r\n      >\r\n        <BlmTemplateAction\r\n          ref={editorRef}\r\n          element={element}\r\n          template={template}\r\n          onSave={onSave}\r\n          onClose={handleClose}\r\n        />\r\n      </Popper>\r\n      <Backdrop\r\n        open={open}\r\n        className=\"template-action-editor-backdrop\"\r\n        onClick={handleBackdropClick}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default BlmActionEditor;\r\n"]},"metadata":{},"sourceType":"module"}