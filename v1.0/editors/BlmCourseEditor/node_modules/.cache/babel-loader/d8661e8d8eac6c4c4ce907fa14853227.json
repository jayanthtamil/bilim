{"ast":null,"code":"import clsx from \"clsx\";\nimport { Attributes, ClassAttribute, BLMElement, StyleAttribute } from \"types\";\nimport { MediaFormats, ImageDisplayTypes, MediaVariants, StyleListTypes, HotspotDisplayTypes, MediaCueActions, MediaPosition } from \"editor-constants\";\nimport { isMediaImage, isMediaCustom, isMediaTarget, valueToUnit, isMediaButton, isMediaStandardVideo, isMediaExternalVideo, isMediaSlideshow, isMediaHotspot, findObject, createStyleStrFromObj, isMediaFlipCard, isTooltipAction, isMediaSynchroVideo, formatFullTime, isJSON, isMediaHotspot360, stringifyAttr } from \"utils\";\nimport { setBLMElement } from \"../../core\";\nimport { createAction, getComponentClassNames, getStyleClassNames, getTintStyles } from \"./common\";\nexport function setMediaComponent(element, media) {\n  const model = createMedia(media);\n  setBLMElement(element, model);\n  setMediaHTML(element, media);\n}\n\nfunction createMedia(component) {\n  const {\n    variant,\n    options,\n    format,\n    isDeactivated\n  } = component;\n  const model = new BLMElement();\n  const attrs = new Attributes();\n  const classAttr = new ClassAttribute();\n  const styleAttr = new StyleAttribute();\n  const clsNames = getComponentClassNames([StyleListTypes.MediaImage, StyleListTypes.MediaSlideshow, StyleListTypes.MediaSlideshowItem, StyleListTypes.MediaButton, StyleListTypes.MediaButtonSummary, StyleListTypes.MediaVideo]);\n\n  if (options === null || options === void 0 ? void 0 : options.parameters) {\n    const {\n      parameters,\n      ...rest\n    } = options;\n    model.options = rest;\n  }\n\n  model.isDeactivated = isDeactivated;\n  model.editorOptions = null;\n  attrs.removables = [\"zoomonclick\", \"blm-custom\", \"blm-target\", \"blm-action\"];\n  classAttr.items = format.value ? [format.value] : [];\n  classAttr.removables = [...Object.values(MediaVariants).map(getVariantClsNames).flat(), ...Object.values(ImageDisplayTypes), ...Object.values(MediaFormats), ...Object.values(HotspotDisplayTypes), ...Object.values(MediaPosition), ...clsNames, \"light\", \"dark\", \"lightover\", \"darkover\", \"darkout\", \"autoflip\", \"blmshadow\", \"vertical\", \"horizontal\"];\n  styleAttr.removables = [\"width\", \"height\", \"--blm_tint_color\", \"--blm_tint_opacity\", \"--blm_undertext_color\", \"--blm_undertext_opacity\", \"--tintout\", \"--opacityout\", \"--tintover\", \"--opacityover\"];\n\n  if (format.value === MediaFormats.FixedWidth || format.value === MediaFormats.FixedSize) {\n    styleAttr.width = valueToUnit(format.width || format.defaultWidth);\n  }\n\n  if (format.value === MediaFormats.FixedHeight || format.value === MediaFormats.FixedSize) {\n    styleAttr.height = valueToUnit(format.height || format.defaultHeight);\n  }\n\n  if (variant) {\n    attrs[\"blm-media\"] = variant;\n\n    if (variant !== MediaVariants.Video) {\n      classAttr.items.push(...getVariantClsNames(variant));\n    }\n\n    if (isMediaImage(component)) {\n      const {\n        value: {\n          isZoom,\n          option,\n          style,\n          position\n        }\n      } = component;\n\n      if (isZoom) {\n        attrs.zoomonclick = \"\";\n      }\n\n      if (option) {\n        classAttr.items.push(option);\n      }\n\n      if (position) {\n        classAttr.items.push(position);\n      }\n\n      if (style) {\n        classAttr.items.push(...getStyleClassNames(style, \"media-image\"));\n        Object.assign(styleAttr, getTintStyles(style));\n      }\n    } else if (isMediaSlideshow(component)) {\n      const {\n        value: {\n          style,\n          slideStyle\n        }\n      } = component;\n\n      if (style) {\n        classAttr.items.push(style);\n      }\n\n      classAttr.items.push(...getStyleClassNames(slideStyle));\n    } else if (isMediaButton(component)) {\n      const {\n        value: {\n          option,\n          clickAction,\n          overAction,\n          style,\n          position\n        }\n      } = component;\n      const onClick = createAction(clickAction, \"click\");\n      const onRollOver = createAction(overAction, \"over\");\n\n      if (onClick || onRollOver) {\n        attrs[\"blm-action\"] = JSON.stringify({\n          onClick,\n          onRollOver\n        });\n      }\n\n      if (option) {\n        classAttr.items.push(option);\n      }\n\n      if (position) {\n        classAttr.items.push(position);\n      }\n\n      if (style) {\n        classAttr.items.push(...getStyleClassNames(style, \"media-button\"));\n        Object.assign(styleAttr, getTintStyles(style));\n      }\n    } else if (isMediaFlipCard(component)) {\n      const {\n        value: {\n          flipAction,\n          clickAction,\n          overAction\n        }\n      } = component;\n      const onFlip = {\n        action: flipAction ? \"mouseover\" : \"click\"\n      };\n      const onClick = createAction(clickAction, \"click\");\n      const onRollOver = createAction(overAction, \"over\");\n\n      if (onFlip || onClick || onRollOver) {\n        attrs[\"blm-action\"] = JSON.stringify({\n          onFlip,\n          onClick,\n          onRollOver\n        });\n      }\n\n      if (flipAction) {\n        classAttr.items.push(\"autoflip\");\n      }\n    } else if (isMediaCustom(component)) {\n      const {\n        value: {\n          media\n        }\n      } = component;\n\n      if (media) {\n        attrs[\"blm-custom\"] = media.url + \"/\" + media.rootFile;\n        model.editorOptions = {\n          media\n        };\n      }\n    } else if (isMediaTarget(component)) {\n      const {\n        value: {\n          name,\n          template,\n          transition,\n          background\n        }\n      } = component;\n      attrs[\"blm-target\"] = JSON.stringify({\n        name,\n        default: template,\n        transition,\n        target_background: background\n      });\n    } else if (isMediaExternalVideo(component)) {\n      const {\n        value: {\n          id,\n          server\n        }\n      } = component;\n\n      if (options && id && server) {\n        model.options = { ...options,\n          parameters: {\n            id,\n            server\n          }\n        };\n      }\n    } else if (isMediaStandardVideo(component)) {\n      const {\n        value: {\n          autoPlay,\n          loop,\n          option,\n          style\n        }\n      } = component;\n\n      if (options) {\n        model.options = { ...options,\n          parameters: {\n            autostart: autoPlay,\n            loop\n          }\n        };\n      }\n\n      if (option) {\n        classAttr.items.push(option);\n      }\n\n      if (style) {\n        classAttr.items.push(...getStyleClassNames(style, \"media-video\"));\n      }\n    } else if (isMediaSynchroVideo(component)) {\n      const {\n        value: {\n          main,\n          contents\n        }\n      } = component;\n      const isLottie = main && isJSON(main.type);\n      const actions = contents === null || contents === void 0 ? void 0 : contents.map(item => {\n        const {\n          startTime,\n          endTime,\n          content,\n          action\n        } = item;\n        const start = isLottie ? startTime.toFixed(3) : formatFullTime(startTime);\n        const stop = action === MediaCueActions.ScrollVPauseC ? isLottie ? endTime.toFixed(3) : formatFullTime(endTime) : undefined;\n        return {\n          content,\n          action,\n          start,\n          stop\n        };\n      });\n\n      if (actions) {\n        attrs[\"blm-action\"] = JSON.stringify(actions);\n      }\n    } else if (isMediaHotspot(component)) {\n      const {\n        value: {\n          display\n        }\n      } = component;\n      classAttr.items.push(display.type);\n    } else if (isMediaHotspot360(component)) {\n      if (component.options2) {\n        const blmOptions2 = JSON.stringify(component.options2);\n        attrs[\"blm-options2\"] = blmOptions2;\n      }\n    }\n  }\n\n  model.attributes = attrs;\n  model.classAttr = classAttr;\n  model.styleAttr = styleAttr;\n  return model;\n}\n\nfunction getVariantClsNames(variant) {\n  if (variant === MediaVariants.Slideshow) {\n    return [\"slideshow\", \"splide\"];\n  } else if (variant === MediaVariants.Button) {\n    return [\"buttonmedia\"];\n  } else if (variant === MediaVariants.VideoExternal) {\n    return [\"videoexternal\"];\n  } else if (variant === MediaVariants.VideoStandard) {\n    return [\"videostandard\"];\n  } else if (variant === MediaVariants.SynchroVideo) {\n    return [\"synchromedia\"];\n  } else {\n    return [variant];\n  }\n}\n\nfunction setMediaHTML(element, component) {\n  const {\n    variant\n  } = component;\n\n  if (isMediaImage(component)) {\n    setImageHTML(element, component.value);\n  } else if (isMediaSlideshow(component)) {\n    setSlideshowHTML(element, component.value);\n  } else if (isMediaButton(component)) {\n    setButtonHTML(element, component.value);\n  } else if (isMediaFlipCard(component)) {\n    setFlipCardHTML(element, component.value);\n  } else if (isMediaCustom(component) || isMediaTarget(component)) {\n    element.innerHTML = \"\";\n  } else if (isMediaExternalVideo(component)) {\n    setExternalVideoHTML(element, component.value);\n  } else if (isMediaStandardVideo(component)) {\n    setStandardVideoHTML(element, component.value);\n  } else if (isMediaSynchroVideo(component)) {\n    setSynchroVideoHTML(element, component.value);\n  } else if (isMediaHotspot(component)) {\n    setHotspotHTML(element, component.value);\n  } else if (isMediaHotspot360(component)) {\n    setHotspot360HTML(element, component.value);\n  } else if (variant) {\n    element.innerHTML = `\n        <img src=\"\"></img>\n      `;\n  }\n}\n\nfunction setImageHTML(element, component) {\n  if (component) {\n    const {\n      title,\n      description,\n      caption,\n      media\n    } = component;\n    const options = media && {\n      media\n    };\n    element.innerHTML = `\n        <div class=\"mediawrapper\" ${options ? `blm-editor-options='${JSON.stringify(options)}'` : \"\"}>\n          <img src=\"${(media === null || media === void 0 ? void 0 : media.url) || \"\"}\"/>\n          <div class=\"mediastyletint\"></div>\n          <div class=\"captionwrapper\">\n            <div class=\"title\">${title}</div>\n            <div class=\"description\">${description}</div>\n            <div class=\"caption\">${caption}</div>\n          </div>\n      </div>\n    `;\n  }\n}\n\nfunction setSlideshowHTML(element, component) {\n  if (component) {\n    const {\n      items,\n      slideStyle\n    } = component;\n    const styles = getTintStyles(slideStyle);\n    const stylesStr = Object.keys(styles).length > 0 ? `style='${createStyleStrFromObj(styles)}'` : \"\";\n    element.innerHTML = `\n        <div class=\"splide__track\">\n          <div class=\"splide__list\">${items.map(item => {\n      const {\n        media,\n        title,\n        description,\n        caption,\n        option,\n        clickAction,\n        position\n      } = item;\n      const onClick = createAction(clickAction, \"click\");\n      const options = media && {\n        media\n      };\n      return `\n              <div class=\"mediawrapper splide__slide ${option} ${position}\" ${options ? `blm-editor-options='${JSON.stringify(options)}'` : \"\"} ${onClick ? `blm-action='${JSON.stringify({\n        onClick\n      })}'` : \"\"} ${stylesStr}>\n                <img src=\"${(media === null || media === void 0 ? void 0 : media.url) || \"\"}\">\n                <div class=\"mediastyletint\"></div>\n                <div class=\"captionwrapper\">\n                  <div class=\"title\">${title}</div>\n                  <div class=\"description\">${description}</div>\n                  <div class=\"caption\">${caption}</div>\n                </div>\n              </div>`;\n    }).join(\"\")}\n            </div>\n        </div>\n    `;\n  }\n}\n\nfunction setButtonHTML(element, component) {\n  if (component) {\n    var _ref, _ref2;\n\n    const {\n      out,\n      over,\n      click,\n      icon,\n      label,\n      number,\n      duration,\n      title,\n      description,\n      caption\n    } = component;\n    const options = (out || over || click || icon) && {\n      out,\n      over,\n      click,\n      icon\n    };\n    element.innerHTML = `\n    <div class=\"mediabuttonwrapper\" ${options ? `blm-editor-options='${JSON.stringify(options)}'` : \"\"}>\n      <div class=\"mediawrapper\">\n        <img src=\"${(out === null || out === void 0 ? void 0 : out.url) || \"\"}\" src-over=\"${((_ref = over || out) === null || _ref === void 0 ? void 0 : _ref.url) || \"\"}\" src-click=\"${((_ref2 = click || out) === null || _ref2 === void 0 ? void 0 : _ref2.url) || \"\"}\"/>\n        <div class=\"mediastyletint\"></div>\n      </div>\n      <div class=\"optionwrapper\">\n        <div class=\"iconlabelwrapper\">\n          <div class=\"icon\"><img src=\"${(icon === null || icon === void 0 ? void 0 : icon.url) || \"\"}\"/></div>\n          <div class=\"label\">${label}</div>\n        </div>        \n        <div class=\"duration\">${duration}</div>\n      </div>\n      <div class=\"captionwrapper\">\n        <div class=\"number\">${number}</div>\n        <div class=\"title\">${title}</div>\n        <div class=\"descriptionwrapper\">\n          <div class=\"description\">${description}</div>\n        </div>\n        <div class=\"caption\">${caption}</div>\n      </div>\n    </div>\n  `;\n  }\n}\n\nfunction setFlipCardHTML(element, component) {\n  if (component) {\n    const {\n      recto,\n      verso\n    } = component;\n    element.innerHTML = `\n    <div class=\"flipcardwrapper\">     \n        ${createFlipCardSideHTML(verso, false)}\n        ${createFlipCardSideHTML(recto, true)}\n    </div>\n  `;\n  }\n}\n\nfunction createFlipCardSideHTML(side, isRecto = true) {\n  const {\n    media,\n    icon,\n    title,\n    description,\n    caption,\n    label,\n    duration,\n    number,\n    style,\n    option,\n    position\n  } = side;\n  const options = (media || icon) && {\n    media,\n    icon\n  };\n  const styles = getTintStyles(style);\n  const stylesStr = Object.keys(styles).length > 0 ? `style='${createStyleStrFromObj(styles)}'` : \"\";\n  return ` <div class=\"${clsx(isRecto ? \"flipcardfrontwrapper card-front\" : \"flipcardbackwrapper card-back\", option, position, getStyleClassNames(style))}\" ${stylesStr} ${options ? `blm-editor-options='${JSON.stringify(options)}'` : \"\"} >\n    <div class=\"mediawrapper\">\n      <img src=\"${(media === null || media === void 0 ? void 0 : media.url) || \"\"}\"/>\n      <div class=\"mediastyletint\"></div>\n    </div>\n    <div class=\"optionwrapper\">\n      <div class=\"iconlabelwrapper\">\n        <div class=\"icon\"><img src=\"${(icon === null || icon === void 0 ? void 0 : icon.url) || \"\"}\"/></div>\n        <div class=\"label\">${label}</div>\n      </div>        \n      <div class=\"duration\">${duration}</div>\n    </div>\n    <div class=\"captionwrapper\">\n      <div class=\"number\">${number}</div>\n      <div class=\"title\">${title}</div>\n      <div class=\"descriptionwrapper\">\n        <div class=\"description\">${description}</div>\n      </div>\n      <div class=\"caption\">${caption}</div>\n    </div>\n  </div>`;\n}\n\nfunction setExternalVideoHTML(element, component) {\n  if (component) {\n    const {\n      id,\n      url,\n      thumbnail,\n      server\n    } = component;\n\n    if (id) {\n      const [title, src] = server === \"youtube\" ? [\"Youtube\", `https://www.youtube.com/embed/${id}`] : [\"Vimeo\", `https://player.vimeo.com/video/${id}`];\n      element.innerHTML = `\n      <iframe  src=\"${src}\" title=\"${title} video player\" blm-editor-options='${JSON.stringify({\n        url,\n        thumbnail\n      })}' width=\"100%\" height=\"100%\" frameborder=\"0\" allowfullscreen allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" >\n      </iframe>\n    `;\n    }\n  }\n}\n\nfunction setStandardVideoHTML(element, component) {\n  if (component) {\n    const {\n      main,\n      webm,\n      image,\n      title,\n      description,\n      caption,\n      autoPlay,\n      loop\n    } = component;\n    const options = (main || webm || image) && {\n      main,\n      webm,\n      image\n    };\n    element.innerHTML = `\n    <div class=\"mediawrapper\" ${options ? `blm-editor-options='${JSON.stringify(options)}'` : \"\"}>\n      <video controls ${autoPlay ? \"autoplay\" : \"\"} ${loop ? \"loop\" : \"\"} ${image ? `poster=\"${image.url}\"` : \"\"}>${main ? `\\n\\t<source src=\"${main.url}\" type=\"video/mp4\" />` : \"\"}${webm ? `\\n\\t<source src=\"${webm.url}\" type=\"video/webm\" />` : \"\"}\n    ${(main === null || main === void 0 ? void 0 : main.subtitle) ? `\\n\\t<track label=\"english\" kind=\"subtitles\" srclang=\"en\" src=\"${main.subtitle.url}\" default/>` : \"\"}${(main === null || main === void 0 ? void 0 : main.marker) ? `\\n\\t<track label=\"english\" kind=\"chapters\" srclang=\"en\" src=\"${main.marker.url}\"/>` : \"\"}        \n        Your browser does not support the video tag.\n      </video>\n      <div class=\"captionwrapper\">\n        <div class=\"title\">${title}</div>\n        <div class=\"description\">${description}</div>\n        <div class=\"caption\">${caption}</div>\n      </div>\n    </div>\n  `;\n  }\n}\n\nfunction setSynchroVideoHTML(element, component) {\n  if (component) {\n    const {\n      main,\n      webm,\n      labels\n    } = component;\n    const isLottie = main ? isJSON(main.type) : false;\n    const options = (main || webm) && {\n      main,\n      webm: isLottie ? undefined : webm\n    };\n    element.innerHTML = `\n    <div class=\"mediawrapper\" ${options ? `blm-editor-options='${JSON.stringify(options)}'` : \"\"}>\n      ${isLottie ? `<div source =\"${main.url}\" type=\"video/lottie\" ></div>` : `<video controls>${main ? `\\n\\t<source src=\"${main.url}\" type=\"video/mp4\" />` : \"\"}${webm ? `\\n\\t<source src=\"${webm.url}\" type=\"video/webm\" />` : \"\"}         \n        Your browser does not support the video tag.\n      </video>`}\n      <div class=\"labels\">\n        ${labels === null || labels === void 0 ? void 0 : labels.map((item, ind) => {\n      const {\n        startTime,\n        endTime,\n        text,\n        position\n      } = item;\n      const [start, stop] = isLottie ? [startTime.toFixed(3), endTime.toFixed(3)] : [formatFullTime(startTime), formatFullTime(endTime)];\n      const obj = {\n        start,\n        stop,\n        position\n      };\n      return `<div lbl-id=\"${ind + 1}\" blm-options='${JSON.stringify(obj)}'>${text}</div>`;\n    })}\n      </div> \n    </div>\n  `;\n  }\n}\n\nfunction setHotspotHTML(element, component) {\n  if (component) {\n    const {\n      media,\n      items,\n      groups,\n      display,\n      style,\n      prerequisite\n    } = component;\n    const {\n      type,\n      centerImage,\n      allowZoom,\n      miniView\n    } = display;\n    const displayOptions = type === HotspotDisplayTypes.PanAndZoom ? {\n      centeronclick: centerImage,\n      allowzoom: allowZoom,\n      miniview: miniView\n    } : undefined;\n    const options = {\n      prerequisite,\n      ...displayOptions\n    };\n    const editorOptions = (media || style) && {\n      media,\n      style\n    };\n    element.innerHTML = `${groups.enabled ? `\n        <div class=\"${clsx(\"hotspotgroupwrapper\", groups.style)}\">${groups.items.map((item, ind) => {\n      const {\n        color,\n        name\n      } = item;\n      return `\n            <div blm-role=\"hotspotgroup\" blm-group-id=\"${ind + 1}\" blm-group-color=\"${color}\">${name}</div>`;\n    }).join(\"\")}\n        </div>` : \"\"}    \n        <div class=\"mediawrapper\" ${editorOptions ? `blm-editor-options='${JSON.stringify(editorOptions)}'` : \"\"}>\n          <div class=\"imagewrapper\" blm-options='${JSON.stringify(options)}'>\n            <img src=\"${(media === null || media === void 0 ? void 0 : media.url) || \"\"}\"/>${items.map((item, ind) => {\n      const {\n        x,\n        y,\n        name,\n        groupId,\n        media,\n        style,\n        position,\n        size,\n        hasDark,\n        callToAction,\n        clickAction,\n        overAction\n      } = item;\n      const itemOptions = media && {\n        media\n      };\n      const group = groups.enabled && groupId ? findObject(groups.items, groupId, \"id\") : undefined;\n      const groupInd = group ? groups.items.indexOf(group) : -1;\n      const {\n        html: onClickHtml = \"\",\n        ...onClickObj\n      } = createAction(clickAction, \"click\") || {};\n      const {\n        html: onOverHtml = \"\",\n        ...onOverObj\n      } = createAction(overAction, \"over\") || {};\n      const onClick = Object.keys(onClickObj).length ? onClickObj : undefined;\n      const onRollOver = Object.keys(onOverObj).length ? onOverObj : undefined;\n      const actions = (onClick || onRollOver) && ` blm-action='${JSON.stringify({\n        onClick,\n        onRollOver\n      })}'` || \"\";\n      const isTooltipClick = isTooltipAction(clickAction);\n      const isTootlipOver = isTooltipAction(overAction);\n      return `\n            <div class=\"${clsx(\"hotspot\", style, {\n        light: !hasDark\n      })}\" blm-role=\"hotspot\" blm-order=\"${ind + 1}\" style=\"--hotspot_left: ${x}%; --hotspot_top: ${y}%; ${group ? `--blm_group_color: ${group.color};` : \"\"} \" ${groupInd >= 0 ? `blm-group=\"${groupInd + 1}\"` : \"\"} blm-calltoaction=\"${callToAction.toString()}\" blm-position=\"${position}\" blm-size=\"${size}\"${actions}${itemOptions ? `blm-editor-options='${JSON.stringify(itemOptions)}'` : \"\"}>\n              <div class=\"mediawrapper\">\n                <img src=\"${(media === null || media === void 0 ? void 0 : media.url) || \"\"}\"/>\n              </div>\n              <div class=\"hotspotlabel\"><span>${name}</span></div> ${isTooltipAction(clickAction) || isTooltipAction(overAction) ? `<div class=\"tooltipwrapper\">${isTooltipClick ? onClickHtml : \"\"}${isTootlipOver ? onOverHtml : \"\"}</div>` : \"\"}${!isTooltipClick ? onClickHtml : \"\"}${!isTootlipOver ? onOverHtml : \"\"}    \n            </div>`;\n    }).join(\"\")}\n          </div>\n      </div>\n    `;\n  }\n}\n\nfunction setHotspot360HTML(element, component) {\n  if (component) {\n    const {\n      items\n    } = component;\n    element.innerHTML = items.map(item => {\n      const {\n        id,\n        name,\n        groups,\n        prerequisite,\n        media,\n        items,\n        style\n      } = item;\n      const options = {\n        prerequisite,\n        imagepage: media === null || media === void 0 ? void 0 : media.url\n      };\n      const editorOptions = (media || style) && {\n        media,\n        style\n      };\n      return `\n      <div id='${id}' class=\"tab360\" blm-options='${JSON.stringify(options)}' ${stringifyAttr(\"blm-editor-options\", editorOptions)}>\n        <div class=\"tabname\">${name}</div>        \n          ${groups.enabled ? `<div class=\"${clsx(\"hotspotgroupwrapper\", groups.style)}\">\n            ${groups.items.map((item, ind) => {\n        const {\n          color,\n          name\n        } = item;\n        return `\n              <div blm-role=\"hotspotgroup\" blm-group-id=\"${ind + 1}\" blm-group-color=\"${color}\">${name}</div>`;\n      }).join(\"\")}\n          </div>` : \"\"}\n          ${items.map((item, ind) => {\n        const {\n          x,\n          y,\n          z,\n          name,\n          groupId,\n          media,\n          style,\n          hasDark,\n          callToAction,\n          clickAction,\n          overAction\n        } = item;\n        const options = {\n          position: {\n            x,\n            y,\n            z\n          }\n        };\n        const editorOptions = media && {\n          media\n        };\n        const group = groups.enabled && groupId ? findObject(groups.items, groupId, \"id\") : undefined;\n        const groupInd = group ? groups.items.indexOf(group) : -1;\n        const {\n          html: onClickHtml = \"\",\n          ...onClickObj\n        } = createAction(clickAction, \"click\") || {};\n        const {\n          html: onOverHtml = \"\",\n          ...onOverObj\n        } = createAction(overAction, \"over\") || {};\n        const onClick = Object.keys(onClickObj).length ? onClickObj : undefined;\n        const onRollOver = Object.keys(onOverObj).length ? onOverObj : undefined;\n        const actions = (onClick || onRollOver) && ` blm-action='${JSON.stringify({\n          onClick,\n          onRollOver\n        })}'` || \"\";\n        const isTooltipClick = isTooltipAction(clickAction);\n        const isTootlipOver = isTooltipAction(overAction);\n        return `\n                  <div class=\"${clsx(\"hotspot\", style, {\n          light: !hasDark\n        })}\" blm-role=\"hotspot\" blm-order=\"${ind + 1}\" style=\"${group ? `--blm_group_color: ${group.color};` : \"\"} \" ${groupInd >= 0 ? `blm-group=\"${groupInd + 1}\"` : \"\"} blm-calltoaction=\"${callToAction.toString()}\" ${actions}  blm-options='${JSON.stringify(options)}' ${stringifyAttr(\"blm-editor-options\", editorOptions)}>\n                    <div class=\"mediawrapper\">\n                      <img src=\"${(media === null || media === void 0 ? void 0 : media.url) || \"\"}\"/>\n                    </div>\n                    <div class=\"hotspotlabel\"><span>${name}</span></div> ${isTooltipAction(clickAction) || isTooltipAction(overAction) ? `<div class=\"tooltipwrapper\">${isTooltipClick ? onClickHtml : \"\"}${isTootlipOver ? onOverHtml : \"\"}</div>` : \"\"}${!isTooltipClick ? onClickHtml : \"\"}${!isTootlipOver ? onOverHtml : \"\"}    \n                  </div>`;\n      }).join(\"\")}\n      </div>`;\n    }).join(\"\");\n  }\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/html/component/media.ts"],"names":["clsx","Attributes","ClassAttribute","BLMElement","StyleAttribute","MediaFormats","ImageDisplayTypes","MediaVariants","StyleListTypes","HotspotDisplayTypes","MediaCueActions","MediaPosition","isMediaImage","isMediaCustom","isMediaTarget","valueToUnit","isMediaButton","isMediaStandardVideo","isMediaExternalVideo","isMediaSlideshow","isMediaHotspot","findObject","createStyleStrFromObj","isMediaFlipCard","isTooltipAction","isMediaSynchroVideo","formatFullTime","isJSON","isMediaHotspot360","stringifyAttr","setBLMElement","createAction","getComponentClassNames","getStyleClassNames","getTintStyles","setMediaComponent","element","media","model","createMedia","setMediaHTML","component","variant","options","format","isDeactivated","attrs","classAttr","styleAttr","clsNames","MediaImage","MediaSlideshow","MediaSlideshowItem","MediaButton","MediaButtonSummary","MediaVideo","parameters","rest","editorOptions","removables","items","value","Object","values","map","getVariantClsNames","flat","FixedWidth","FixedSize","width","defaultWidth","FixedHeight","height","defaultHeight","Video","push","isZoom","option","style","position","zoomonclick","assign","slideStyle","clickAction","overAction","onClick","onRollOver","JSON","stringify","flipAction","onFlip","action","url","rootFile","name","template","transition","background","default","target_background","id","server","autoPlay","loop","autostart","main","contents","isLottie","type","actions","item","startTime","endTime","content","start","toFixed","stop","ScrollVPauseC","undefined","display","options2","blmOptions2","attributes","Slideshow","Button","VideoExternal","VideoStandard","SynchroVideo","setImageHTML","setSlideshowHTML","setButtonHTML","setFlipCardHTML","innerHTML","setExternalVideoHTML","setStandardVideoHTML","setSynchroVideoHTML","setHotspotHTML","setHotspot360HTML","title","description","caption","styles","stylesStr","keys","length","join","out","over","click","icon","label","number","duration","recto","verso","createFlipCardSideHTML","side","isRecto","thumbnail","src","webm","image","subtitle","marker","labels","ind","text","obj","groups","prerequisite","centerImage","allowZoom","miniView","displayOptions","PanAndZoom","centeronclick","allowzoom","miniview","enabled","color","x","y","groupId","size","hasDark","callToAction","itemOptions","group","groupInd","indexOf","html","onClickHtml","onClickObj","onOverHtml","onOverObj","isTooltipClick","isTootlipOver","light","toString","imagepage","z"],"mappings":"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","sourcesContent":["import clsx from \"clsx\";\r\n\r\nimport {\r\n  Attributes,\r\n  ClassAttribute,\r\n  BLMElement,\r\n  StyleAttribute,\r\n  ExternalVideo,\r\n  MediaButton,\r\n  MediaComponent,\r\n  MediaConfigJSON,\r\n  MediaHotspot,\r\n  MediaImage,\r\n  MediaSlideshow,\r\n  StandardVideo,\r\n  MediaFlipCard,\r\n  FlipCardSide,\r\n  SynchroVideo,\r\n  MediaHotspot360,\r\n} from \"types\";\r\nimport {\r\n  MediaFormats,\r\n  ImageDisplayTypes,\r\n  MediaVariants,\r\n  StyleListTypes,\r\n  HotspotDisplayTypes,\r\n  MediaCueActions,\r\n  MediaPosition,\r\n} from \"editor-constants\";\r\nimport {\r\n  isMediaImage,\r\n  isMediaCustom,\r\n  isMediaTarget,\r\n  valueToUnit,\r\n  isMediaButton,\r\n  isMediaStandardVideo,\r\n  isMediaExternalVideo,\r\n  isMediaSlideshow,\r\n  isMediaHotspot,\r\n  findObject,\r\n  createStyleStrFromObj,\r\n  isMediaFlipCard,\r\n  isTooltipAction,\r\n  isMediaSynchroVideo,\r\n  formatFullTime,\r\n  isJSON,\r\n  isMediaHotspot360,\r\n  stringifyAttr,\r\n} from \"utils\";\r\nimport { setBLMElement } from \"../../core\";\r\nimport { createAction, getComponentClassNames, getStyleClassNames, getTintStyles } from \"./common\";\r\n\r\nexport function setMediaComponent(element: HTMLElement, media: MediaComponent) {\r\n  const model = createMedia(media);\r\n\r\n  setBLMElement(element, model);\r\n  setMediaHTML(element, media);\r\n}\r\n\r\nfunction createMedia(component: MediaComponent) {\r\n  const { variant, options, format, isDeactivated } = component;\r\n  const model = new BLMElement<MediaConfigJSON>();\r\n  const attrs = new Attributes();\r\n  const classAttr = new ClassAttribute();\r\n  const styleAttr = new StyleAttribute();\r\n  const clsNames = getComponentClassNames([\r\n    StyleListTypes.MediaImage,\r\n    StyleListTypes.MediaSlideshow,\r\n    StyleListTypes.MediaSlideshowItem,\r\n    StyleListTypes.MediaButton,\r\n    StyleListTypes.MediaButtonSummary,\r\n    StyleListTypes.MediaVideo,\r\n  ]);\r\n\r\n  if (options?.parameters) {\r\n    const { parameters, ...rest } = options;\r\n\r\n    model.options = rest;\r\n  }\r\n\r\n  model.isDeactivated = isDeactivated;\r\n  model.editorOptions = null;\r\n\r\n  attrs.removables = [\"zoomonclick\", \"blm-custom\", \"blm-target\", \"blm-action\"];\r\n\r\n  classAttr.items = format.value ? [format.value] : [];\r\n\r\n  classAttr.removables = [\r\n    ...Object.values(MediaVariants).map(getVariantClsNames).flat(),\r\n    ...Object.values(ImageDisplayTypes),\r\n    ...Object.values(MediaFormats),\r\n    ...Object.values(HotspotDisplayTypes),\r\n    ...Object.values(MediaPosition),\r\n    ...clsNames,\r\n    \"light\",\r\n    \"dark\",\r\n    \"lightover\",\r\n    \"darkover\",\r\n    \"darkout\",\r\n    \"autoflip\",\r\n    \"blmshadow\",\r\n    \"vertical\",\r\n    \"horizontal\",\r\n  ];\r\n  styleAttr.removables = [\r\n    \"width\",\r\n    \"height\",\r\n    \"--blm_tint_color\",\r\n    \"--blm_tint_opacity\",\r\n    \"--blm_undertext_color\",\r\n    \"--blm_undertext_opacity\",\r\n    \"--tintout\",\r\n    \"--opacityout\",\r\n    \"--tintover\",\r\n    \"--opacityover\",\r\n  ];\r\n\r\n  if (format.value === MediaFormats.FixedWidth || format.value === MediaFormats.FixedSize) {\r\n    styleAttr.width = valueToUnit(format.width || format.defaultWidth);\r\n  }\r\n\r\n  if (format.value === MediaFormats.FixedHeight || format.value === MediaFormats.FixedSize) {\r\n    styleAttr.height = valueToUnit(format.height || format.defaultHeight);\r\n  }\r\n\r\n  if (variant) {\r\n    attrs[\"blm-media\"] = variant;\r\n\r\n    if (variant !== MediaVariants.Video) {\r\n      classAttr.items.push(...getVariantClsNames(variant));\r\n    }\r\n\r\n    if (isMediaImage(component)) {\r\n      const {\r\n        value: { isZoom, option, style, position },\r\n      } = component;\r\n\r\n      if (isZoom) {\r\n        attrs.zoomonclick = \"\";\r\n      }\r\n\r\n      if (option) {\r\n        classAttr.items.push(option);\r\n      }\r\n\r\n      if (position) {\r\n        classAttr.items.push(position);\r\n      }\r\n\r\n      if (style) {\r\n        classAttr.items.push(...getStyleClassNames(style, \"media-image\"));\r\n        Object.assign(styleAttr, getTintStyles(style));\r\n      }\r\n    } else if (isMediaSlideshow(component)) {\r\n      const {\r\n        value: { style, slideStyle },\r\n      } = component;\r\n\r\n      if (style) {\r\n        classAttr.items.push(style);\r\n      }\r\n\r\n      classAttr.items.push(...getStyleClassNames(slideStyle));\r\n    } else if (isMediaButton(component)) {\r\n      const {\r\n        value: { option, clickAction, overAction, style, position },\r\n      } = component;\r\n      const onClick = createAction(clickAction, \"click\");\r\n      const onRollOver = createAction(overAction, \"over\");\r\n\r\n      if (onClick || onRollOver) {\r\n        attrs[\"blm-action\"] = JSON.stringify({\r\n          onClick,\r\n          onRollOver,\r\n        });\r\n      }\r\n\r\n      if (option) {\r\n        classAttr.items.push(option);\r\n      }\r\n\r\n      if (position) {\r\n        classAttr.items.push(position);\r\n      }\r\n\r\n      if (style) {\r\n        classAttr.items.push(...getStyleClassNames(style, \"media-button\"));\r\n        Object.assign(styleAttr, getTintStyles(style));\r\n      }\r\n    } else if (isMediaFlipCard(component)) {\r\n      const {\r\n        value: { flipAction, clickAction, overAction },\r\n      } = component;\r\n      const onFlip = { action: flipAction ? \"mouseover\" : \"click\" };\r\n      const onClick = createAction(clickAction, \"click\");\r\n      const onRollOver = createAction(overAction, \"over\");\r\n\r\n      if (onFlip || onClick || onRollOver) {\r\n        attrs[\"blm-action\"] = JSON.stringify({ onFlip, onClick, onRollOver });\r\n      }\r\n\r\n      if (flipAction) {\r\n        classAttr.items.push(\"autoflip\");\r\n      }\r\n    } else if (isMediaCustom(component)) {\r\n      const {\r\n        value: { media },\r\n      } = component;\r\n\r\n      if (media) {\r\n        attrs[\"blm-custom\"] = media.url + \"/\" + media.rootFile;\r\n        model.editorOptions = { media };\r\n      }\r\n    } else if (isMediaTarget(component)) {\r\n      const {\r\n        value: { name, template, transition, background },\r\n      } = component;\r\n\r\n      attrs[\"blm-target\"] = JSON.stringify({\r\n        name,\r\n        default: template,\r\n        transition,\r\n        target_background: background,\r\n      });\r\n    } else if (isMediaExternalVideo(component)) {\r\n      const {\r\n        value: { id, server },\r\n      } = component;\r\n\r\n      if (options && id && server) {\r\n        model.options = { ...options, parameters: { id, server } };\r\n      }\r\n    } else if (isMediaStandardVideo(component)) {\r\n      const {\r\n        value: { autoPlay, loop, option, style },\r\n      } = component;\r\n\r\n      if (options) {\r\n        model.options = { ...options, parameters: { autostart: autoPlay, loop } };\r\n      }\r\n\r\n      if (option) {\r\n        classAttr.items.push(option);\r\n      }\r\n\r\n      if (style) {\r\n        classAttr.items.push(...getStyleClassNames(style, \"media-video\"));\r\n      }\r\n    } else if (isMediaSynchroVideo(component)) {\r\n      const {\r\n        value: { main, contents },\r\n      } = component;\r\n      const isLottie = main && isJSON(main.type);\r\n      const actions = contents?.map((item) => {\r\n        const { startTime, endTime, content, action } = item;\r\n        const start = isLottie ? startTime.toFixed(3) : formatFullTime(startTime);\r\n        const stop =\r\n          action === MediaCueActions.ScrollVPauseC\r\n            ? isLottie\r\n              ? endTime.toFixed(3)\r\n              : formatFullTime(endTime)\r\n            : undefined;\r\n\r\n        return { content, action, start, stop };\r\n      });\r\n\r\n      if (actions) {\r\n        attrs[\"blm-action\"] = JSON.stringify(actions);\r\n      }\r\n    } else if (isMediaHotspot(component)) {\r\n      const {\r\n        value: { display },\r\n      } = component;\r\n\r\n      classAttr.items.push(display.type);\r\n    } else if (isMediaHotspot360(component)) {\r\n      if (component.options2) {\r\n        const blmOptions2 = JSON.stringify(component.options2);\r\n        attrs[\"blm-options2\"] = blmOptions2;\r\n      }\r\n    }\r\n  }\r\n\r\n  model.attributes = attrs;\r\n  model.classAttr = classAttr;\r\n  model.styleAttr = styleAttr;\r\n\r\n  return model;\r\n}\r\n\r\nfunction getVariantClsNames(variant: MediaVariants) {\r\n  if (variant === MediaVariants.Slideshow) {\r\n    return [\"slideshow\", \"splide\"];\r\n  } else if (variant === MediaVariants.Button) {\r\n    return [\"buttonmedia\"];\r\n  } else if (variant === MediaVariants.VideoExternal) {\r\n    return [\"videoexternal\"];\r\n  } else if (variant === MediaVariants.VideoStandard) {\r\n    return [\"videostandard\"];\r\n  } else if (variant === MediaVariants.SynchroVideo) {\r\n    return [\"synchromedia\"];\r\n  } else {\r\n    return [variant];\r\n  }\r\n}\r\n\r\nfunction setMediaHTML(element: HTMLElement, component: MediaComponent) {\r\n  const { variant } = component;\r\n\r\n  if (isMediaImage(component)) {\r\n    setImageHTML(element, component.value);\r\n  } else if (isMediaSlideshow(component)) {\r\n    setSlideshowHTML(element, component.value);\r\n  } else if (isMediaButton(component)) {\r\n    setButtonHTML(element, component.value);\r\n  } else if (isMediaFlipCard(component)) {\r\n    setFlipCardHTML(element, component.value);\r\n  } else if (isMediaCustom(component) || isMediaTarget(component)) {\r\n    element.innerHTML = \"\";\r\n  } else if (isMediaExternalVideo(component)) {\r\n    setExternalVideoHTML(element, component.value);\r\n  } else if (isMediaStandardVideo(component)) {\r\n    setStandardVideoHTML(element, component.value);\r\n  } else if (isMediaSynchroVideo(component)) {\r\n    setSynchroVideoHTML(element, component.value);\r\n  } else if (isMediaHotspot(component)) {\r\n    setHotspotHTML(element, component.value);\r\n  } else if (isMediaHotspot360(component)) {\r\n    setHotspot360HTML(element, component.value);\r\n  } else if (variant) {\r\n    element.innerHTML = `\r\n        <img src=\"\"></img>\r\n      `;\r\n  }\r\n}\r\n\r\nfunction setImageHTML(element: HTMLElement, component: MediaImage) {\r\n  if (component) {\r\n    const { title, description, caption, media } = component;\r\n    const options = media && { media };\r\n\r\n    element.innerHTML = `\r\n        <div class=\"mediawrapper\" ${\r\n          options ? `blm-editor-options='${JSON.stringify(options)}'` : \"\"\r\n        }>\r\n          <img src=\"${media?.url || \"\"}\"/>\r\n          <div class=\"mediastyletint\"></div>\r\n          <div class=\"captionwrapper\">\r\n            <div class=\"title\">${title}</div>\r\n            <div class=\"description\">${description}</div>\r\n            <div class=\"caption\">${caption}</div>\r\n          </div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\nfunction setSlideshowHTML(element: HTMLElement, component: MediaSlideshow) {\r\n  if (component) {\r\n    const { items, slideStyle } = component;\r\n    const styles = getTintStyles(slideStyle);\r\n    const stylesStr =\r\n      Object.keys(styles).length > 0 ? `style='${createStyleStrFromObj(styles)}'` : \"\";\r\n\r\n    element.innerHTML = `\r\n        <div class=\"splide__track\">\r\n          <div class=\"splide__list\">${items\r\n            .map((item) => {\r\n              const { media, title, description, caption, option, clickAction, position } = item;\r\n              const onClick = createAction(clickAction, \"click\");\r\n              const options = media && { media };\r\n\r\n              return `\r\n              <div class=\"mediawrapper splide__slide ${option} ${position}\" ${\r\n                options ? `blm-editor-options='${JSON.stringify(options)}'` : \"\"\r\n              } ${\r\n                onClick\r\n                  ? `blm-action='${JSON.stringify({\r\n                      onClick,\r\n                    })}'`\r\n                  : \"\"\r\n              } ${stylesStr}>\r\n                <img src=\"${media?.url || \"\"}\">\r\n                <div class=\"mediastyletint\"></div>\r\n                <div class=\"captionwrapper\">\r\n                  <div class=\"title\">${title}</div>\r\n                  <div class=\"description\">${description}</div>\r\n                  <div class=\"caption\">${caption}</div>\r\n                </div>\r\n              </div>`;\r\n            })\r\n            .join(\"\")}\r\n            </div>\r\n        </div>\r\n    `;\r\n  }\r\n}\r\n\r\nfunction setButtonHTML(element: HTMLElement, component: MediaButton) {\r\n  if (component) {\r\n    const { out, over, click, icon, label, number, duration, title, description, caption } =\r\n      component;\r\n    const options = (out || over || click || icon) && { out, over, click, icon };\r\n\r\n    element.innerHTML = `\r\n    <div class=\"mediabuttonwrapper\" ${\r\n      options ? `blm-editor-options='${JSON.stringify(options)}'` : \"\"\r\n    }>\r\n      <div class=\"mediawrapper\">\r\n        <img src=\"${out?.url || \"\"}\" src-over=\"${(over || out)?.url || \"\"}\" src-click=\"${\r\n      (click || out)?.url || \"\"\r\n    }\"/>\r\n        <div class=\"mediastyletint\"></div>\r\n      </div>\r\n      <div class=\"optionwrapper\">\r\n        <div class=\"iconlabelwrapper\">\r\n          <div class=\"icon\"><img src=\"${icon?.url || \"\"}\"/></div>\r\n          <div class=\"label\">${label}</div>\r\n        </div>        \r\n        <div class=\"duration\">${duration}</div>\r\n      </div>\r\n      <div class=\"captionwrapper\">\r\n        <div class=\"number\">${number}</div>\r\n        <div class=\"title\">${title}</div>\r\n        <div class=\"descriptionwrapper\">\r\n          <div class=\"description\">${description}</div>\r\n        </div>\r\n        <div class=\"caption\">${caption}</div>\r\n      </div>\r\n    </div>\r\n  `;\r\n  }\r\n}\r\n\r\nfunction setFlipCardHTML(element: HTMLElement, component: MediaFlipCard) {\r\n  if (component) {\r\n    const { recto, verso } = component;\r\n\r\n    element.innerHTML = `\r\n    <div class=\"flipcardwrapper\">     \r\n        ${createFlipCardSideHTML(verso, false)}\r\n        ${createFlipCardSideHTML(recto, true)}\r\n    </div>\r\n  `;\r\n  }\r\n}\r\n\r\nfunction createFlipCardSideHTML(side: FlipCardSide, isRecto = true) {\r\n  const {\r\n    media,\r\n    icon,\r\n    title,\r\n    description,\r\n    caption,\r\n    label,\r\n    duration,\r\n    number,\r\n    style,\r\n    option,\r\n    position,\r\n  } = side;\r\n  const options = (media || icon) && { media, icon };\r\n  const styles = getTintStyles(style);\r\n  const stylesStr =\r\n    Object.keys(styles).length > 0 ? `style='${createStyleStrFromObj(styles)}'` : \"\";\r\n\r\n  return ` <div class=\"${clsx(\r\n    isRecto ? \"flipcardfrontwrapper card-front\" : \"flipcardbackwrapper card-back\",\r\n    option,\r\n    position,\r\n    getStyleClassNames(style)\r\n  )}\" ${stylesStr} ${options ? `blm-editor-options='${JSON.stringify(options)}'` : \"\"} >\r\n    <div class=\"mediawrapper\">\r\n      <img src=\"${media?.url || \"\"}\"/>\r\n      <div class=\"mediastyletint\"></div>\r\n    </div>\r\n    <div class=\"optionwrapper\">\r\n      <div class=\"iconlabelwrapper\">\r\n        <div class=\"icon\"><img src=\"${icon?.url || \"\"}\"/></div>\r\n        <div class=\"label\">${label}</div>\r\n      </div>        \r\n      <div class=\"duration\">${duration}</div>\r\n    </div>\r\n    <div class=\"captionwrapper\">\r\n      <div class=\"number\">${number}</div>\r\n      <div class=\"title\">${title}</div>\r\n      <div class=\"descriptionwrapper\">\r\n        <div class=\"description\">${description}</div>\r\n      </div>\r\n      <div class=\"caption\">${caption}</div>\r\n    </div>\r\n  </div>`;\r\n}\r\n\r\nfunction setExternalVideoHTML(element: HTMLElement, component: ExternalVideo) {\r\n  if (component) {\r\n    const { id, url, thumbnail, server } = component;\r\n\r\n    if (id) {\r\n      const [title, src] =\r\n        server === \"youtube\"\r\n          ? [\"Youtube\", `https://www.youtube.com/embed/${id}`]\r\n          : [\"Vimeo\", `https://player.vimeo.com/video/${id}`];\r\n\r\n      element.innerHTML = `\r\n      <iframe  src=\"${src}\" title=\"${title} video player\" blm-editor-options='${JSON.stringify({\r\n        url,\r\n        thumbnail,\r\n      })}' width=\"100%\" height=\"100%\" frameborder=\"0\" allowfullscreen allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" >\r\n      </iframe>\r\n    `;\r\n    }\r\n  }\r\n}\r\n\r\nfunction setStandardVideoHTML(element: HTMLElement, component: StandardVideo) {\r\n  if (component) {\r\n    const { main, webm, image, title, description, caption, autoPlay, loop } = component;\r\n    const options = (main || webm || image) && { main, webm, image };\r\n\r\n    element.innerHTML = `\r\n    <div class=\"mediawrapper\" ${options ? `blm-editor-options='${JSON.stringify(options)}'` : \"\"}>\r\n      <video controls ${autoPlay ? \"autoplay\" : \"\"} ${loop ? \"loop\" : \"\"} ${\r\n      image ? `poster=\"${image.url}\"` : \"\"\r\n    }>${main ? `\\n\\t<source src=\"${main.url}\" type=\"video/mp4\" />` : \"\"}${\r\n      webm ? `\\n\\t<source src=\"${webm.url}\" type=\"video/webm\" />` : \"\"\r\n    }\r\n    ${\r\n      main?.subtitle\r\n        ? `\\n\\t<track label=\"english\" kind=\"subtitles\" srclang=\"en\" src=\"${main.subtitle.url}\" default/>`\r\n        : \"\"\r\n    }${\r\n      main?.marker\r\n        ? `\\n\\t<track label=\"english\" kind=\"chapters\" srclang=\"en\" src=\"${main.marker.url}\"/>`\r\n        : \"\"\r\n    }        \r\n        Your browser does not support the video tag.\r\n      </video>\r\n      <div class=\"captionwrapper\">\r\n        <div class=\"title\">${title}</div>\r\n        <div class=\"description\">${description}</div>\r\n        <div class=\"caption\">${caption}</div>\r\n      </div>\r\n    </div>\r\n  `;\r\n  }\r\n}\r\n\r\nfunction setSynchroVideoHTML(element: HTMLElement, component: SynchroVideo) {\r\n  if (component) {\r\n    const { main, webm, labels } = component;\r\n    const isLottie = main ? isJSON(main.type) : false;\r\n    const options = (main || webm) && { main, webm: isLottie ? undefined : webm };\r\n\r\n    element.innerHTML = `\r\n    <div class=\"mediawrapper\" ${options ? `blm-editor-options='${JSON.stringify(options)}'` : \"\"}>\r\n      ${\r\n        isLottie\r\n          ? `<div source =\"${main!.url}\" type=\"video/lottie\" ></div>`\r\n          : `<video controls>${main ? `\\n\\t<source src=\"${main.url}\" type=\"video/mp4\" />` : \"\"}${\r\n              webm ? `\\n\\t<source src=\"${webm.url}\" type=\"video/webm\" />` : \"\"\r\n            }         \r\n        Your browser does not support the video tag.\r\n      </video>`\r\n      }\r\n      <div class=\"labels\">\r\n        ${labels?.map((item, ind) => {\r\n          const { startTime, endTime, text, position } = item;\r\n          const [start, stop] = isLottie\r\n            ? [startTime.toFixed(3), endTime.toFixed(3)]\r\n            : [formatFullTime(startTime), formatFullTime(endTime)];\r\n\r\n          const obj = {\r\n            start,\r\n            stop,\r\n            position,\r\n          };\r\n\r\n          return `<div lbl-id=\"${ind + 1}\" blm-options='${JSON.stringify(obj)}'>${text}</div>`;\r\n        })}\r\n      </div> \r\n    </div>\r\n  `;\r\n  }\r\n}\r\n\r\nfunction setHotspotHTML(element: HTMLElement, component: MediaHotspot) {\r\n  if (component) {\r\n    const { media, items, groups, display, style, prerequisite } = component;\r\n    const { type, centerImage, allowZoom, miniView } = display;\r\n    const displayOptions =\r\n      type === HotspotDisplayTypes.PanAndZoom\r\n        ? { centeronclick: centerImage, allowzoom: allowZoom, miniview: miniView }\r\n        : undefined;\r\n    const options = { prerequisite, ...displayOptions };\r\n    const editorOptions = (media || style) && { media, style };\r\n\r\n    element.innerHTML = `${\r\n      groups.enabled\r\n        ? `\r\n        <div class=\"${clsx(\"hotspotgroupwrapper\", groups.style)}\">${groups.items\r\n            .map((item, ind) => {\r\n              const { color, name } = item;\r\n\r\n              return `\r\n            <div blm-role=\"hotspotgroup\" blm-group-id=\"${\r\n              ind + 1\r\n            }\" blm-group-color=\"${color}\">${name}</div>`;\r\n            })\r\n            .join(\"\")}\r\n        </div>`\r\n        : \"\"\r\n    }    \r\n        <div class=\"mediawrapper\" ${\r\n          editorOptions ? `blm-editor-options='${JSON.stringify(editorOptions)}'` : \"\"\r\n        }>\r\n          <div class=\"imagewrapper\" blm-options='${JSON.stringify(options)}'>\r\n            <img src=\"${media?.url || \"\"}\"/>${items\r\n      .map((item, ind) => {\r\n        const {\r\n          x,\r\n          y,\r\n          name,\r\n          groupId,\r\n          media,\r\n          style,\r\n          position,\r\n          size,\r\n          hasDark,\r\n          callToAction,\r\n          clickAction,\r\n          overAction,\r\n        } = item;\r\n        const itemOptions = media && { media };\r\n        const group =\r\n          groups.enabled && groupId ? findObject(groups.items, groupId, \"id\") : undefined;\r\n        const groupInd = group ? groups.items.indexOf(group) : -1;\r\n        const { html: onClickHtml = \"\", ...onClickObj } = createAction(clickAction, \"click\") || {};\r\n        const { html: onOverHtml = \"\", ...onOverObj } = createAction(overAction, \"over\") || {};\r\n        const onClick = Object.keys(onClickObj).length ? onClickObj : undefined;\r\n        const onRollOver = Object.keys(onOverObj).length ? onOverObj : undefined;\r\n        const actions =\r\n          ((onClick || onRollOver) &&\r\n            ` blm-action='${JSON.stringify({\r\n              onClick,\r\n              onRollOver,\r\n            })}'`) ||\r\n          \"\";\r\n        const isTooltipClick = isTooltipAction(clickAction);\r\n        const isTootlipOver = isTooltipAction(overAction);\r\n\r\n        return `\r\n            <div class=\"${clsx(\"hotspot\", style, {\r\n              light: !hasDark,\r\n            })}\" blm-role=\"hotspot\" blm-order=\"${\r\n          ind + 1\r\n        }\" style=\"--hotspot_left: ${x}%; --hotspot_top: ${y}%; ${\r\n          group ? `--blm_group_color: ${group.color};` : \"\"\r\n        } \" ${\r\n          groupInd >= 0 ? `blm-group=\"${groupInd + 1}\"` : \"\"\r\n        } blm-calltoaction=\"${callToAction.toString()}\" blm-position=\"${position}\" blm-size=\"${size}\"${actions}${\r\n          itemOptions ? `blm-editor-options='${JSON.stringify(itemOptions)}'` : \"\"\r\n        }>\r\n              <div class=\"mediawrapper\">\r\n                <img src=\"${media?.url || \"\"}\"/>\r\n              </div>\r\n              <div class=\"hotspotlabel\"><span>${name}</span></div> ${\r\n          isTooltipAction(clickAction) || isTooltipAction(overAction)\r\n            ? `<div class=\"tooltipwrapper\">${isTooltipClick ? onClickHtml : \"\"}${\r\n                isTootlipOver ? onOverHtml : \"\"\r\n              }</div>`\r\n            : \"\"\r\n        }${!isTooltipClick ? onClickHtml : \"\"}${!isTootlipOver ? onOverHtml : \"\"}    \r\n            </div>`;\r\n      })\r\n      .join(\"\")}\r\n          </div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\nfunction setHotspot360HTML(element: HTMLElement, component: MediaHotspot360) {\r\n  if (component) {\r\n    const { items } = component;\r\n\r\n    element.innerHTML = items\r\n      .map((item) => {\r\n        const { id, name, groups, prerequisite, media, items, style } = item;\r\n        const options = { prerequisite, imagepage: media?.url };\r\n        const editorOptions = (media || style) && { media, style };\r\n\r\n        return `\r\n      <div id='${id}' class=\"tab360\" blm-options='${JSON.stringify(options)}' ${stringifyAttr(\r\n          \"blm-editor-options\",\r\n          editorOptions\r\n        )}>\r\n        <div class=\"tabname\">${name}</div>        \r\n          ${\r\n            groups.enabled\r\n              ? `<div class=\"${clsx(\"hotspotgroupwrapper\", groups.style)}\">\r\n            ${groups.items\r\n              .map((item, ind) => {\r\n                const { color, name } = item;\r\n\r\n                return `\r\n              <div blm-role=\"hotspotgroup\" blm-group-id=\"${\r\n                ind + 1\r\n              }\" blm-group-color=\"${color}\">${name}</div>`;\r\n              })\r\n              .join(\"\")}\r\n          </div>`\r\n              : \"\"\r\n          }\r\n          ${items\r\n            .map((item, ind) => {\r\n              const {\r\n                x,\r\n                y,\r\n                z,\r\n                name,\r\n                groupId,\r\n                media,\r\n                style,\r\n                hasDark,\r\n                callToAction,\r\n                clickAction,\r\n                overAction,\r\n              } = item;\r\n              const options = { position: { x, y, z } };\r\n              const editorOptions = media && { media };\r\n              const group =\r\n                groups.enabled && groupId ? findObject(groups.items, groupId, \"id\") : undefined;\r\n              const groupInd = group ? groups.items.indexOf(group) : -1;\r\n              const { html: onClickHtml = \"\", ...onClickObj } =\r\n                createAction(clickAction, \"click\") || {};\r\n              const { html: onOverHtml = \"\", ...onOverObj } =\r\n                createAction(overAction, \"over\") || {};\r\n              const onClick = Object.keys(onClickObj).length ? onClickObj : undefined;\r\n              const onRollOver = Object.keys(onOverObj).length ? onOverObj : undefined;\r\n              const actions =\r\n                ((onClick || onRollOver) &&\r\n                  ` blm-action='${JSON.stringify({\r\n                    onClick,\r\n                    onRollOver,\r\n                  })}'`) ||\r\n                \"\";\r\n              const isTooltipClick = isTooltipAction(clickAction);\r\n              const isTootlipOver = isTooltipAction(overAction);\r\n\r\n              return `\r\n                  <div class=\"${clsx(\"hotspot\", style, {\r\n                    light: !hasDark,\r\n                  })}\" blm-role=\"hotspot\" blm-order=\"${ind + 1}\" style=\"${\r\n                group ? `--blm_group_color: ${group.color};` : \"\"\r\n              } \" ${\r\n                groupInd >= 0 ? `blm-group=\"${groupInd + 1}\"` : \"\"\r\n              } blm-calltoaction=\"${callToAction.toString()}\" ${actions}  blm-options='${JSON.stringify(\r\n                options\r\n              )}' ${stringifyAttr(\"blm-editor-options\", editorOptions)}>\r\n                    <div class=\"mediawrapper\">\r\n                      <img src=\"${media?.url || \"\"}\"/>\r\n                    </div>\r\n                    <div class=\"hotspotlabel\"><span>${name}</span></div> ${\r\n                isTooltipAction(clickAction) || isTooltipAction(overAction)\r\n                  ? `<div class=\"tooltipwrapper\">${isTooltipClick ? onClickHtml : \"\"}${\r\n                      isTootlipOver ? onOverHtml : \"\"\r\n                    }</div>`\r\n                  : \"\"\r\n              }${!isTooltipClick ? onClickHtml : \"\"}${!isTootlipOver ? onOverHtml : \"\"}    \r\n                  </div>`;\r\n            })\r\n            .join(\"\")}\r\n      </div>`;\r\n      })\r\n      .join(\"\");\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}