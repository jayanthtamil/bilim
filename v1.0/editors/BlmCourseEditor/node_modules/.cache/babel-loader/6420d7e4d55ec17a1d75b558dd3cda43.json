{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\structures\\\\select\\\\select\\\\BlmSelect.tsx\";\nimport React, { Fragment } from \"react\";\nimport clsx from \"clsx\";\nimport { Popper, Backdrop, withStyles, Portal } from \"@material-ui/core\";\nimport { styles } from \"./select-styles\";\nconst MAX_HEIGHT = 300;\n\nconst setAutoHeight = data => {\n  const {\n    instance: {\n      reference\n    },\n    offsets: {\n      reference: {\n        bottom\n      }\n    },\n    styles: popperStyles\n  } = data;\n  const bodyHeight = reference.ownerDocument.body.offsetHeight;\n  popperStyles.maxHeight = Math.max(bodyHeight - bottom, MAX_HEIGHT) - 10 + \"px\";\n  return data;\n};\n\nconst modifiers = {\n  flip: {\n    enabled: true\n  },\n  hide: {\n    enabled: false\n  },\n  preventOverflow: {\n    enabled: false\n  },\n  autoHeight: {\n    enabled: true,\n    order: 849,\n    fn: setAutoHeight\n  }\n};\n\nfunction BlmSelect(props) {\n  const {\n    name,\n    value,\n    placeholder,\n    open: openProp,\n    disabled,\n    autoWidth,\n    classes,\n    className,\n    children,\n    onOpen,\n    onClose\n  } = props;\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const [openState, setOpenState] = React.useState(false);\n  const isOpen = displayNode !== null && (isOpenControlled ? openProp : openState);\n\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n\n    event.preventDefault();\n    if (displayNode) displayNode.focus();\n    update(true, event);\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    update(false, event);\n  }; // Avoid performing a layout computation in the render method.\n\n\n  let menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"BlmSelect-root\", classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: setDisplayNode,\n    className: clsx(\"BlmSelect-select\", classes.select, classes.selectMenu, {\n      [classes.disabled]: disabled\n    }),\n    onMouseDown: disabled ? undefined : handleMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, value || placeholder)), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"BlmSelect-icon\", classes.icon, {\n      [classes.iconOpen]: isOpen,\n      [classes.disabled]: disabled\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  })), isOpen && displayNode && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Portal, {\n    container: displayNode.ownerDocument.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Backdrop, {\n    open: true,\n    className: clsx(\"BlmSelect-backdrop\", classes.backdrop),\n    onClick: handleBackdropClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Popper, {\n    id: `blm-${name || \"select\"}-popper`,\n    anchorEl: displayNode,\n    open: true,\n    keepMounted: true,\n    placement: \"bottom-start\",\n    modifiers: modifiers,\n    style: {\n      minWidth: menuMinWidth || 0\n    },\n    className: clsx(\"BlmSelect-popper\", classes.popper),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, children)));\n}\n\nexport default withStyles(styles, {\n  name: \"BlmSelect\"\n})(BlmSelect);","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/structures/select/select/BlmSelect.tsx"],"names":["React","Fragment","clsx","Popper","Backdrop","withStyles","Portal","styles","MAX_HEIGHT","setAutoHeight","data","instance","reference","offsets","bottom","popperStyles","bodyHeight","ownerDocument","body","offsetHeight","maxHeight","Math","max","modifiers","flip","enabled","hide","preventOverflow","autoHeight","order","fn","BlmSelect","props","name","value","placeholder","open","openProp","disabled","autoWidth","classes","className","children","onOpen","onClose","displayNode","setDisplayNode","useState","current","isOpenControlled","useRef","menuMinWidthState","setMenuMinWidthState","openState","setOpenState","isOpen","update","event","clientWidth","handleMouseDown","button","preventDefault","focus","handleBackdropClick","target","currentTarget","menuMinWidth","root","select","selectMenu","undefined","icon","iconOpen","backdrop","minWidth","popper"],"mappings":"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","sourcesContent":["import React, { Fragment, MouseEvent, PropsWithChildren } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Popper, Backdrop, withStyles, Portal } from \"@material-ui/core\";\r\n\r\nimport { styles } from \"./select-styles\";\r\n\r\nexport interface CompProps {\r\n  name?: string;\r\n  value?: string;\r\n  placeholder?: string;\r\n  open?: boolean;\r\n  disabled?: boolean;\r\n  autoWidth?: boolean;\r\n  classes: {\r\n    root: string;\r\n    select: string;\r\n    selectMenu: string;\r\n    disabled: string;\r\n    icon: string;\r\n    iconOpen: string;\r\n    backdrop: string;\r\n    popper: string;\r\n  };\r\n  className?: string;\r\n  onOpen?: (event: MouseEvent) => void;\r\n  onClose?: (event: MouseEvent) => void;\r\n}\r\n\r\nconst MAX_HEIGHT = 300;\r\n\r\nconst setAutoHeight = (data: any) => {\r\n  const {\r\n    instance: { reference },\r\n    offsets: {\r\n      reference: { bottom },\r\n    },\r\n    styles: popperStyles,\r\n  } = data;\r\n\r\n  const bodyHeight = reference.ownerDocument.body.offsetHeight;\r\n\r\n  popperStyles.maxHeight = Math.max(bodyHeight - bottom, MAX_HEIGHT) - 10 + \"px\";\r\n\r\n  return data;\r\n};\r\n\r\nconst modifiers = {\r\n  flip: {\r\n    enabled: true,\r\n  },\r\n  hide: {\r\n    enabled: false,\r\n  },\r\n  preventOverflow: {\r\n    enabled: false,\r\n  },\r\n  autoHeight: {\r\n    enabled: true,\r\n    order: 849,\r\n    fn: setAutoHeight,\r\n  },\r\n};\r\n\r\nfunction BlmSelect(props: PropsWithChildren<CompProps>) {\r\n  const {\r\n    name,\r\n    value,\r\n    placeholder,\r\n    open: openProp,\r\n    disabled,\r\n    autoWidth,\r\n    classes,\r\n    className,\r\n    children,\r\n    onOpen,\r\n    onClose,\r\n  } = props;\r\n  const [displayNode, setDisplayNode] = React.useState<HTMLDivElement | null>(null);\r\n  const { current: isOpenControlled } = React.useRef(openProp != null);\r\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState<number | null>();\r\n  const [openState, setOpenState] = React.useState(false);\r\n  const isOpen = displayNode !== null && (isOpenControlled ? openProp : openState);\r\n\r\n  const update = (open: boolean, event: MouseEvent) => {\r\n    if (open) {\r\n      if (onOpen) {\r\n        onOpen(event);\r\n      }\r\n    } else if (onClose) {\r\n      onClose(event);\r\n    }\r\n\r\n    if (!isOpenControlled) {\r\n      setMenuMinWidthState(autoWidth ? null : displayNode!.clientWidth);\r\n      setOpenState(open);\r\n    }\r\n  };\r\n\r\n  const handleMouseDown = (event: MouseEvent<HTMLDivElement>) => {\r\n    // Ignore everything but left-click\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n    // Hijack the default focus behavior.\r\n    event.preventDefault();\r\n\r\n    if (displayNode) displayNode.focus();\r\n\r\n    update(true, event);\r\n  };\r\n\r\n  const handleBackdropClick = (event: MouseEvent) => {\r\n    if (event.target !== event.currentTarget) {\r\n      return;\r\n    }\r\n\r\n    update(false, event);\r\n  };\r\n\r\n  // Avoid performing a layout computation in the render method.\r\n  let menuMinWidth = menuMinWidthState;\r\n\r\n  if (!autoWidth && isOpenControlled && displayNode) {\r\n    menuMinWidth = displayNode.clientWidth;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={clsx(\"BlmSelect-root\", classes.root, className)}>\r\n        <div\r\n          ref={setDisplayNode}\r\n          className={clsx(\"BlmSelect-select\", classes.select, classes.selectMenu, {\r\n            [classes.disabled]: disabled,\r\n          })}\r\n          onMouseDown={disabled ? undefined : handleMouseDown}\r\n        >\r\n          <span>{value || placeholder}</span>\r\n        </div>\r\n        <div\r\n          className={clsx(\"BlmSelect-icon\", classes.icon, {\r\n            [classes.iconOpen]: isOpen,\r\n            [classes.disabled]: disabled,\r\n          })}\r\n        />\r\n      </div>\r\n      {isOpen && displayNode && (\r\n        <Fragment>\r\n          <Portal container={displayNode.ownerDocument.body}>\r\n            <Backdrop\r\n              open={true}\r\n              className={clsx(\"BlmSelect-backdrop\", classes.backdrop)}\r\n              onClick={handleBackdropClick}\r\n            />\r\n          </Portal>\r\n          <Popper\r\n            id={`blm-${name || \"select\"}-popper`}\r\n            anchorEl={displayNode}\r\n            open={true}\r\n            keepMounted={true}\r\n            placement={\"bottom-start\"}\r\n            modifiers={modifiers}\r\n            style={{\r\n              minWidth: menuMinWidth || 0,\r\n            }}\r\n            className={clsx(\"BlmSelect-popper\", classes.popper)}\r\n          >\r\n            {children}\r\n          </Popper>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { name: \"BlmSelect\" })(BlmSelect);\r\n"]},"metadata":{},"sourceType":"module"}