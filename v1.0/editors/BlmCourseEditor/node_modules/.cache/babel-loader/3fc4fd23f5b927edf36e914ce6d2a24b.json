{"ast":null,"code":"import { MediaFormats } from \"editor-constants\";\nimport { isMediaComponent, toNumber } from \"utils\";\nexport function getRelativeStyles(rules, name, ...components) {\n  components.flat().forEach(component => {\n    if (isMediaComponent(component)) {\n      const {\n        id,\n        format: {\n          value\n        }\n      } = component;\n      const root = new RegExp(`^.(rt-etr-\\\\w+|q?${name}\\\\w?)$`);\n      const relative = new RegExp(`^.(rt-etr-\\\\w+|q?${name}\\\\w?) div \\\\[blm-id=\"${id}\"\\\\].relativeheight$`);\n      Array.from(rules).forEach(rule => {\n        if (rule instanceof CSSStyleRule) {\n          var _component$config;\n\n          const {\n            selectorText,\n            style\n          } = rule;\n\n          if (((_component$config = component.config) === null || _component$config === void 0 ? void 0 : _component$config.saveInCSS) && root.test(selectorText) || relative.test(selectorText)) {\n            const val = toNumber(style.getPropertyValue(`--media-height-${id}`));\n\n            if (!isNaN(val)) {\n              component.format.defaultHeight = val;\n\n              if (value === MediaFormats.RelativeHeight) {\n                component.format.height = val;\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/model/component/styles.ts"],"names":["MediaFormats","isMediaComponent","toNumber","getRelativeStyles","rules","name","components","flat","forEach","component","id","format","value","root","RegExp","relative","Array","from","rule","CSSStyleRule","selectorText","style","config","saveInCSS","test","val","getPropertyValue","isNaN","defaultHeight","RelativeHeight","height"],"mappings":"AACA,SAASA,YAAT,QAA6B,kBAA7B;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,SAASC,iBAAT,CACLC,KADK,EAELC,IAFK,EAGL,GAAGC,UAHE,EAIL;AACAA,EAAAA,UAAU,CAACC,IAAX,GAAkBC,OAAlB,CAA2BC,SAAD,IAAe;AACvC,QAAIR,gBAAgB,CAACQ,SAAD,CAApB,EAAiC;AAC/B,YAAM;AACJC,QAAAA,EADI;AAEJC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAFJ,UAGFH,SAHJ;AAIA,YAAMI,IAAI,GAAG,IAAIC,MAAJ,CAAY,oBAAmBT,IAAK,QAApC,CAAb;AACA,YAAMU,QAAQ,GAAG,IAAID,MAAJ,CACd,oBAAmBT,IAAK,wBAAuBK,EAAG,sBADpC,CAAjB;AAIAM,MAAAA,KAAK,CAACC,IAAN,CAAWb,KAAX,EAAkBI,OAAlB,CAA2BU,IAAD,IAAU;AAClC,YAAIA,IAAI,YAAYC,YAApB,EAAkC;AAAA;;AAChC,gBAAM;AAAEC,YAAAA,YAAF;AAAgBC,YAAAA;AAAhB,cAA0BH,IAAhC;;AAEA,cACG,sBAAAT,SAAS,CAACa,MAAV,wEAAkBC,SAAlB,KAA+BV,IAAI,CAACW,IAAL,CAAUJ,YAAV,CAAhC,IACAL,QAAQ,CAACS,IAAT,CAAcJ,YAAd,CAFF,EAGE;AACA,kBAAMK,GAAG,GAAGvB,QAAQ,CAACmB,KAAK,CAACK,gBAAN,CAAwB,kBAAiBhB,EAAG,EAA5C,CAAD,CAApB;;AAEA,gBAAI,CAACiB,KAAK,CAACF,GAAD,CAAV,EAAiB;AACfhB,cAAAA,SAAS,CAACE,MAAV,CAAiBiB,aAAjB,GAAiCH,GAAjC;;AAEA,kBAAIb,KAAK,KAAKZ,YAAY,CAAC6B,cAA3B,EAA2C;AACzCpB,gBAAAA,SAAS,CAACE,MAAV,CAAiBmB,MAAjB,GAA0BL,GAA1B;AACD;AACF;AACF;AACF;AACF,OAnBD;AAoBD;AACF,GAhCD;AAiCD","sourcesContent":["import { BaseComponent } from \"types\";\r\nimport { MediaFormats } from \"editor-constants\";\r\nimport { isMediaComponent, toNumber } from \"utils\";\r\n\r\nexport function getRelativeStyles<T>(\r\n  rules: CSSRuleList,\r\n  name: string,\r\n  ...components: BaseComponent<T>[][]\r\n) {\r\n  components.flat().forEach((component) => {\r\n    if (isMediaComponent(component)) {\r\n      const {\r\n        id,\r\n        format: { value },\r\n      } = component;\r\n      const root = new RegExp(`^.(rt-etr-\\\\w+|q?${name}\\\\w?)$`);\r\n      const relative = new RegExp(\r\n        `^.(rt-etr-\\\\w+|q?${name}\\\\w?) div \\\\[blm-id=\"${id}\"\\\\].relativeheight$`\r\n      );\r\n\r\n      Array.from(rules).forEach((rule) => {\r\n        if (rule instanceof CSSStyleRule) {\r\n          const { selectorText, style } = rule;\r\n\r\n          if (\r\n            (component.config?.saveInCSS && root.test(selectorText)) ||\r\n            relative.test(selectorText)\r\n          ) {\r\n            const val = toNumber(style.getPropertyValue(`--media-height-${id}`));\r\n\r\n            if (!isNaN(val)) {\r\n              component.format.defaultHeight = val;\r\n\r\n              if (value === MediaFormats.RelativeHeight) {\r\n                component.format.height = val;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}