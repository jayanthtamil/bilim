{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\question-editor\\\\panels\\\\parameters\\\\BlmQuestionParameters.tsx\";\nimport React, { useState } from \"react\";\nimport { FormGroup, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { BlmSubscriptInput } from \"shared\";\nimport { BlmAutoComplete } from \"shared/material-ui\";\nimport { updateQuestionParameters } from \"components/question-editor/reducers\";\nimport BlmStructureSelect from \"components/structures/select\";\nimport \"./styles.scss\";\nconst weights = [\"1\", \"2\", \"3\"];\n\nfunction BlmQuestionParameters(props) {\n  const {\n    data,\n    dispatch\n  } = props;\n  const {\n    relatedTo,\n    weight,\n    mandatory,\n    eliminatory,\n    useforscoring,\n    timer\n  } = data;\n  const [state, setState] = useState({\n    relatedTo,\n    weight,\n    timer\n  });\n  const isRelatedTo = relatedTo !== undefined;\n  const isWeight = weight !== undefined && weight !== 0;\n  const isTimer = timer !== undefined && timer !== 0;\n  const {\n    t\n  } = useTranslation(\"question-editor\");\n\n  const handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const newData = { ...data\n    };\n\n    if (name === \"relatedToChk\") {\n      newData.relatedTo = value ? state.relatedTo || \"none\" : undefined;\n    } else if (name === \"relatedTo\") {\n      newData.relatedTo = value;\n    } else if (name === \"weightChk\") {\n      newData.weight = value ? state.weight || 1 : undefined;\n    } else if (name === \"weight\") {\n      newData.weight = value;\n    } else if (name === \"mandatory\") {\n      newData.mandatory = value;\n    } else if (name === \"eliminatory\") {\n      newData.eliminatory = value;\n    } else if (name === \"useForScoring\") {\n      newData.useforscoring = value;\n    } else if (name === \"timerChk\") {\n      newData.timer = value ? state.timer || 10 : undefined;\n    } else if (name === \"timer\") {\n      newData.timer = value;\n    }\n\n    if (name === \"relatedTo\" || name === \"weight\" || name === \"timer\") {\n      setState({ ...state,\n        [name]: value\n      });\n    }\n\n    if (dispatch) {\n      dispatch(updateQuestionParameters(newData));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-parameters-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"question-parameters-form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"relatedToChk\",\n    label: t(\"parameters.related_to\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"checkbox-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }\n    }),\n    checked: isRelatedTo,\n    className: \"question-parameters-form-ctrl-lbl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), isRelatedTo && /*#__PURE__*/React.createElement(BlmStructureSelect, {\n    name: \"relatedTo\",\n    value: data.relatedTo,\n    className: \"question-parameters-sc-dropdown\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-parameters-weight-dropdown-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"weightChk\",\n    label: t(\"parameters.weight\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"checkbox-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 22\n      }\n    }),\n    checked: isWeight,\n    className: \"question-parameters-form-ctrl-lbl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), isWeight && /*#__PURE__*/React.createElement(BlmAutoComplete, {\n    name: \"weight\",\n    value: weight,\n    min: 1,\n    max: 9,\n    options: weights,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"mandatory\",\n    label: t(\"parameters.mandatory\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"checkbox-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }\n    }),\n    checked: mandatory || false,\n    className: \"question-parameters-form-ctrl-lbl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"eliminatory\",\n    label: t(\"parameters.eliminatory\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"checkbox-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 20\n      }\n    }),\n    checked: eliminatory || false,\n    className: \"question-parameters-form-ctrl-lbl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"useForScoring\",\n    label: t(\"parameters.scoring\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"checkbox-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 20\n      }\n    }),\n    checked: useforscoring || false,\n    className: \"question-parameters-form-ctrl-lbl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"timerChk\",\n    label: t(\"label.timer\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"checkbox-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 20\n      }\n    }),\n    checked: isTimer,\n    className: \"question-parameters-form-ctrl-lbl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), isTimer && /*#__PURE__*/React.createElement(BlmSubscriptInput, {\n    name: \"timer\",\n    label: t(\"label.sec\"),\n    min: 1,\n    max: 180,\n    value: timer || 10,\n    className: \"question-parameters-timer-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default BlmQuestionParameters;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/question-editor/panels/parameters/BlmQuestionParameters.tsx"],"names":["React","useState","FormGroup","FormControlLabel","Checkbox","useTranslation","BlmSubscriptInput","BlmAutoComplete","updateQuestionParameters","BlmStructureSelect","weights","BlmQuestionParameters","props","data","dispatch","relatedTo","weight","mandatory","eliminatory","useforscoring","timer","state","setState","isRelatedTo","undefined","isWeight","isTimer","t","handleChange","event","target","name","value","type","checked","newData"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState } from \"react\";\r\nimport { FormGroup, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomChangeEvent, QuestionParameters } from \"types\";\r\nimport { BlmSubscriptInput } from \"shared\";\r\nimport { BlmAutoComplete } from \"shared/material-ui\";\r\nimport {\r\n  QuestionEditorDispatch,\r\n  updateQuestionParameters,\r\n} from \"components/question-editor/reducers\";\r\nimport BlmStructureSelect from \"components/structures/select\";\r\nimport \"./styles.scss\";\r\n\r\ninterface CompProps {\r\n  data: QuestionParameters;\r\n  dispatch: QuestionEditorDispatch;\r\n}\r\n\r\nconst weights = [\"1\", \"2\", \"3\"];\r\n\r\nfunction BlmQuestionParameters(props: CompProps) {\r\n  const { data, dispatch } = props;\r\n  const { relatedTo, weight, mandatory, eliminatory, useforscoring, timer } = data;\r\n  const [state, setState] = useState({ relatedTo, weight, timer });\r\n  const isRelatedTo = relatedTo !== undefined;\r\n  const isWeight = weight !== undefined && weight !== 0;\r\n  const isTimer = timer !== undefined && timer !== 0;\r\n  const { t } = useTranslation(\"question-editor\");\r\n\r\n  const handleChange = (\r\n    event: ChangeEvent<{}> | CustomChangeEvent<number | string | undefined>\r\n  ) => {\r\n    const target = event.target as HTMLInputElement;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const newData: QuestionParameters = { ...data };\r\n\r\n    if (name === \"relatedToChk\") {\r\n      newData.relatedTo = value ? state.relatedTo || \"none\" : undefined;\r\n    } else if (name === \"relatedTo\") {\r\n      newData.relatedTo = value as string;\r\n    } else if (name === \"weightChk\") {\r\n      newData.weight = value ? state.weight || 1 : undefined;\r\n    } else if (name === \"weight\") {\r\n      newData.weight = value as unknown as number;\r\n    } else if (name === \"mandatory\") {\r\n      newData.mandatory = value as boolean;\r\n    } else if (name === \"eliminatory\") {\r\n      newData.eliminatory = value as boolean;\r\n    } else if (name === \"useForScoring\") {\r\n      newData.useforscoring = value as boolean;\r\n    } else if (name === \"timerChk\") {\r\n      newData.timer = value ? state.timer || 10 : undefined;\r\n    } else if (name === \"timer\") {\r\n      newData.timer = value as unknown as number;\r\n    }\r\n\r\n    if (name === \"relatedTo\" || name === \"weight\" || name === \"timer\") {\r\n      setState({ ...state, [name]: value });\r\n    }\r\n\r\n    if (dispatch) {\r\n      dispatch(updateQuestionParameters(newData));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-parameters-wrapper\">\r\n      <FormGroup className=\"question-parameters-form-group\">\r\n        <FormControlLabel\r\n          name=\"relatedToChk\"\r\n          label={t(\"parameters.related_to\")}\r\n          control={<Checkbox className=\"checkbox-3\" />}\r\n          checked={isRelatedTo}\r\n          className=\"question-parameters-form-ctrl-lbl\"\r\n          onChange={handleChange}\r\n        />\r\n        {isRelatedTo && (\r\n          <BlmStructureSelect\r\n            name=\"relatedTo\"\r\n            value={data.relatedTo}\r\n            className=\"question-parameters-sc-dropdown\"\r\n            onChange={handleChange}\r\n          />\r\n        )}\r\n        <div className=\"question-parameters-weight-dropdown-box\">\r\n          <FormControlLabel\r\n            name=\"weightChk\"\r\n            label={t(\"parameters.weight\")}\r\n            control={<Checkbox className=\"checkbox-3\" />}\r\n            checked={isWeight}\r\n            className=\"question-parameters-form-ctrl-lbl\"\r\n            onChange={handleChange}\r\n          />\r\n          {isWeight && (\r\n            <BlmAutoComplete\r\n              name=\"weight\"\r\n              value={weight}\r\n              min={1}\r\n              max={9}\r\n              options={weights}\r\n              onChange={handleChange}\r\n            />\r\n          )}\r\n        </div>\r\n        <FormControlLabel\r\n          name=\"mandatory\"\r\n          label={t(\"parameters.mandatory\")}\r\n          control={<Checkbox className=\"checkbox-3\" />}\r\n          checked={mandatory || false}\r\n          className=\"question-parameters-form-ctrl-lbl\"\r\n          onChange={handleChange}\r\n        />\r\n        <FormControlLabel\r\n          name=\"eliminatory\"\r\n          label={t(\"parameters.eliminatory\")}\r\n          control={<Checkbox className=\"checkbox-3\" />}\r\n          checked={eliminatory || false}\r\n          className=\"question-parameters-form-ctrl-lbl\"\r\n          onChange={handleChange}\r\n        />\r\n        <FormControlLabel\r\n          name=\"useForScoring\"\r\n          label={t(\"parameters.scoring\")}\r\n          control={<Checkbox className=\"checkbox-3\" />}\r\n          checked={useforscoring || false}\r\n          className=\"question-parameters-form-ctrl-lbl\"\r\n          onChange={handleChange}\r\n        />\r\n        <FormControlLabel\r\n          name=\"timerChk\"\r\n          label={t(\"label.timer\")}\r\n          control={<Checkbox className=\"checkbox-3\" />}\r\n          checked={isTimer}\r\n          className=\"question-parameters-form-ctrl-lbl\"\r\n          onChange={handleChange}\r\n        />\r\n        {isTimer && (\r\n          <BlmSubscriptInput\r\n            name=\"timer\"\r\n            label={t(\"label.sec\")}\r\n            min={1}\r\n            max={180}\r\n            value={timer || 10}\r\n            className=\"question-parameters-timer-txt\"\r\n            onChange={handleChange}\r\n          />\r\n        )}\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmQuestionParameters;\r\n"]},"metadata":{},"sourceType":"module"}