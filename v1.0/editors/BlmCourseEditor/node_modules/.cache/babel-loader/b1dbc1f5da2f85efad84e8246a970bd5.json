{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\template-editors\\\\containers\\\\template-expert\\\\BlmTemplateExpert.tsx\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useMemo, useState } from \"react\";\nimport { PanelCloseReasons } from \"editor-constants\";\nimport { addClassToString, removeClassFromString, getTemplateAndVariant } from \"utils\";\nimport { getTemplateSizeModel, setTemplateSizeHTML, changeTemplateVariant } from \"template-builders\";\nimport BlmTemplateSize from \"../template-size\";\nimport \"./styles.scss\";\nconst initListEditor = {\n  isDarkSelected: false,\n  isEdited: false\n};\nconst initSizeEditor = {\n  size: null,\n  isEdited: false\n};\n\nconst createTemplate = (template, listEditor, sizeEditor, isRelative = true, oldListEditor) => {\n  const {\n    isDarkTemplate,\n    template: {\n      id: templateId\n    }\n  } = template;\n  let newTemplate = { ...template\n  };\n  let isEdited = false;\n  let isVariantChanged = false;\n\n  if (listEditor.isEdited) {\n    var _oldListEditor$varian;\n\n    const {\n      variant,\n      isDarkSelected\n    } = listEditor;\n    const prevTemplateId = oldListEditor ? (_oldListEditor$varian = oldListEditor.variant) === null || _oldListEditor$varian === void 0 ? void 0 : _oldListEditor$varian.id : templateId;\n    const prevIsDarkTemplate = oldListEditor ? oldListEditor.isDarkSelected : isDarkTemplate;\n\n    if (variant && variant.id !== prevTemplateId && variant.html) {\n      newTemplate = changeTemplateVariant(template, variant, isDarkSelected, isRelative);\n      isEdited = true;\n      isVariantChanged = true;\n    } else if (isDarkSelected !== prevIsDarkTemplate) {\n      if (isDarkSelected) {\n        newTemplate.html = addClassToString(newTemplate.html, [\"dark\"]);\n      } else {\n        newTemplate.html = removeClassFromString(newTemplate.html, [\"dark\"]);\n      }\n\n      newTemplate.isDarkTemplate = isDarkSelected;\n      isEdited = true;\n    }\n  }\n\n  if (sizeEditor.size && (sizeEditor.isEdited || isVariantChanged)) {\n    newTemplate.html = setTemplateSizeHTML(newTemplate, sizeEditor.size);\n    isEdited = true;\n  }\n\n  if (isEdited) {\n    return newTemplate;\n  }\n};\n\nconst BlmTemplateExpert = forwardRef((props, ref) => {\n  const {\n    element,\n    template,\n    templates,\n    templateEle,\n    course,\n    onPreview,\n    onSave,\n    onClose,\n    getTemplates,\n    getTemplateProperties\n  } = props;\n  const [variantList, setVariantList] = useState();\n  const [listEditor] = useState(initListEditor);\n  const [sizeEditor, setSizeEditor] = useState(initSizeEditor);\n  const {\n    size,\n    isEdited\n  } = sizeEditor;\n  const {\n    isOutdated,\n    forAlertIcon\n  } = element;\n  const [idealTemplate, variants] = useMemo(() => {\n    if (variantList) {\n      const {\n        template,\n        selectedTemplate\n      } = variantList;\n\n      if (isOutdated && forAlertIcon) {\n        var _template$substitue;\n\n        return [(_template$substitue = template.substitue) === null || _template$substitue === void 0 ? void 0 : _template$substitue.template, [selectedTemplate]];\n      } else {\n        return [template, [template, ...template.variants]];\n      }\n    }\n\n    return [];\n  }, [variantList, isOutdated, forAlertIcon]);\n  useImperativeHandle(ref, () => ({\n    isEdited: isEdited || listEditor.isEdited,\n    saveOnClose: handleSaveOnClose,\n    revert: () => {}\n  }));\n  useEffect(() => {\n    if (!templates && course) {\n      getTemplates(course);\n    } else if (templates) {\n      const result = getTemplateAndVariant(templates, template.template.id);\n\n      if (result) {\n        var _result$variant;\n\n        setVariantList({\n          template: result.template,\n          selectedTemplate: (_result$variant = result.variant) !== null && _result$variant !== void 0 ? _result$variant : result.template\n        });\n      }\n    }\n  }, [template, course, templates, setVariantList, getTemplates]);\n  useEffect(() => {\n    if (idealTemplate && !idealTemplate.html) {\n      getTemplateProperties(idealTemplate);\n    }\n  }, [idealTemplate, getTemplateProperties]);\n  useEffect(() => {\n    if (template) {\n      let newSize = getTemplateSizeModel(template, templateEle);\n\n      if (newSize) {\n        setSizeEditor({\n          size: newSize,\n          isEdited: false\n        });\n      }\n    }\n  }, [template, templateEle]);\n\n  const saveChanges = () => {\n    const newTemplate = createTemplate(template, listEditor, sizeEditor, !isOutdated);\n\n    if (onSave && newTemplate) {\n      onSave(newTemplate);\n      return true;\n    }\n\n    return false;\n  };\n\n  const updatePreivew = (newListEditor, newSizeEditor, oldListEditor) => {\n    const newTemplate = createTemplate(template, newListEditor, newSizeEditor, !isOutdated, oldListEditor);\n\n    if (onPreview && newTemplate) {\n      onPreview(newTemplate);\n    }\n  };\n\n  const handleSizeChange = newSize => {\n    if (newSize) {\n      const newSizeEditor = {\n        size: newSize,\n        isEdited: true\n      };\n      setSizeEditor(newSizeEditor);\n      updatePreivew(listEditor, newSizeEditor);\n    }\n  };\n\n  const handleSaveOnClose = event => {\n    const isSaved = saveChanges();\n\n    if (onClose) {\n      onClose(event, isSaved ? PanelCloseReasons.Close : PanelCloseReasons.Cancel);\n    }\n  };\n\n  if (!variantList || !variants) {\n    return null;\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-expert-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-expert-anchor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-expert-list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }), size && /*#__PURE__*/React.createElement(BlmTemplateSize, {\n      data: size,\n      onChange: handleSizeChange,\n      onCloseClick: handleSaveOnClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }\n    }));\n  }\n});\nexport default BlmTemplateExpert;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/template-editors/containers/template-expert/BlmTemplateExpert.tsx"],"names":["React","forwardRef","useEffect","useImperativeHandle","useMemo","useState","PanelCloseReasons","addClassToString","removeClassFromString","getTemplateAndVariant","getTemplateSizeModel","setTemplateSizeHTML","changeTemplateVariant","BlmTemplateSize","initListEditor","isDarkSelected","isEdited","initSizeEditor","size","createTemplate","template","listEditor","sizeEditor","isRelative","oldListEditor","isDarkTemplate","id","templateId","newTemplate","isVariantChanged","variant","prevTemplateId","prevIsDarkTemplate","html","BlmTemplateExpert","props","ref","element","templates","templateEle","course","onPreview","onSave","onClose","getTemplates","getTemplateProperties","variantList","setVariantList","setSizeEditor","isOutdated","forAlertIcon","idealTemplate","variants","selectedTemplate","substitue","saveOnClose","handleSaveOnClose","revert","result","newSize","saveChanges","updatePreivew","newListEditor","newSizeEditor","handleSizeChange","event","isSaved","Close","Cancel"],"mappings":"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","sourcesContent":["import React, {\r\n  forwardRef,\r\n  MouseEvent,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport {\r\n  CourseElementTemplate,\r\n  Template,\r\n  TemplateBase,\r\n  TemplateSize,\r\n  TemplateEditorComponent,\r\n  CourseElement,\r\n  TemplatePanelOptions,\r\n} from \"types\";\r\nimport { PanelCloseReasons } from \"editor-constants\";\r\nimport { addClassToString, removeClassFromString, getTemplateAndVariant } from \"utils\";\r\nimport {\r\n  getTemplateSizeModel,\r\n  setTemplateSizeHTML,\r\n  changeTemplateVariant,\r\n} from \"template-builders\";\r\nimport BlmTemplateSize from \"../template-size\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  element: CourseElement;\r\n  template: CourseElementTemplate;\r\n  templateEle: HTMLElement;\r\n  onPreview: (template: CourseElementTemplate) => void;\r\n  onMore: (options: TemplatePanelOptions) => void;\r\n  onSave: (template: CourseElementTemplate) => void;\r\n  onClose: (event: MouseEvent, reason: PanelCloseReasons) => void;\r\n}\r\n\r\ninterface ListEditorState {\r\n  variant?: TemplateBase;\r\n  isDarkSelected: boolean;\r\n  isEdited: boolean;\r\n}\r\n\r\ninterface SizeEditorState {\r\n  size: TemplateSize | null;\r\n  isEdited: boolean;\r\n}\r\n\r\ninterface ListState {\r\n  template: Template;\r\n  selectedTemplate: TemplateBase;\r\n}\r\n\r\nconst initListEditor = {\r\n  isDarkSelected: false,\r\n  isEdited: false,\r\n};\r\nconst initSizeEditor: SizeEditorState = { size: null, isEdited: false };\r\n\r\nconst createTemplate = (\r\n  template: CourseElementTemplate,\r\n  listEditor: ListEditorState,\r\n  sizeEditor: SizeEditorState,\r\n  isRelative = true,\r\n  oldListEditor?: ListEditorState\r\n) => {\r\n  const {\r\n    isDarkTemplate,\r\n    template: { id: templateId },\r\n  } = template;\r\n  let newTemplate: CourseElementTemplate = { ...template };\r\n  let isEdited = false;\r\n  let isVariantChanged = false;\r\n\r\n  if (listEditor.isEdited) {\r\n    const { variant, isDarkSelected } = listEditor;\r\n    const prevTemplateId = oldListEditor ? oldListEditor.variant?.id : templateId;\r\n    const prevIsDarkTemplate = oldListEditor ? oldListEditor.isDarkSelected : isDarkTemplate;\r\n\r\n    if (variant && variant.id !== prevTemplateId && variant.html) {\r\n      newTemplate = changeTemplateVariant(template, variant, isDarkSelected, isRelative);\r\n\r\n      isEdited = true;\r\n      isVariantChanged = true;\r\n    } else if (isDarkSelected !== prevIsDarkTemplate) {\r\n      if (isDarkSelected) {\r\n        newTemplate.html = addClassToString(newTemplate.html, [\"dark\"]);\r\n      } else {\r\n        newTemplate.html = removeClassFromString(newTemplate.html, [\"dark\"]);\r\n      }\r\n\r\n      newTemplate.isDarkTemplate = isDarkSelected;\r\n\r\n      isEdited = true;\r\n    }\r\n  }\r\n\r\n  if (sizeEditor.size && (sizeEditor.isEdited || isVariantChanged)) {\r\n    newTemplate.html = setTemplateSizeHTML(newTemplate, sizeEditor.size);\r\n\r\n    isEdited = true;\r\n  }\r\n\r\n  if (isEdited) {\r\n    return newTemplate;\r\n  }\r\n};\r\n\r\nconst BlmTemplateExpert = forwardRef<TemplateEditorComponent, CompProps>((props, ref) => {\r\n  const {\r\n    element,\r\n    template,\r\n    templates,\r\n    templateEle,\r\n    course,\r\n    onPreview,\r\n    onSave,\r\n    onClose,\r\n    getTemplates,\r\n    getTemplateProperties,\r\n  } = props;\r\n  const [variantList, setVariantList] = useState<ListState>();\r\n  const [listEditor] = useState<ListEditorState>(initListEditor);\r\n  const [sizeEditor, setSizeEditor] = useState<SizeEditorState>(initSizeEditor);\r\n  const { size, isEdited } = sizeEditor;\r\n  const { isOutdated, forAlertIcon } = element;\r\n\r\n  const [idealTemplate, variants] = useMemo(() => {\r\n    if (variantList) {\r\n      const { template, selectedTemplate } = variantList;\r\n\r\n      if (isOutdated && forAlertIcon) {\r\n        return [template.substitue?.template, [selectedTemplate]];\r\n      } else {\r\n        return [template, [template, ...template.variants]];\r\n      }\r\n    }\r\n\r\n    return [];\r\n  }, [variantList, isOutdated, forAlertIcon]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    isEdited: isEdited || listEditor.isEdited,\r\n    saveOnClose: handleSaveOnClose,\r\n    revert: () => {},\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (!templates && course) {\r\n      getTemplates(course);\r\n    } else if (templates) {\r\n      const result = getTemplateAndVariant(templates, template.template.id);\r\n\r\n      if (result) {\r\n        setVariantList({\r\n          template: result.template,\r\n          selectedTemplate: result.variant ?? result.template,\r\n        });\r\n      }\r\n    }\r\n  }, [template, course, templates, setVariantList, getTemplates]);\r\n\r\n  useEffect(() => {\r\n    if (idealTemplate && !idealTemplate.html) {\r\n      getTemplateProperties(idealTemplate);\r\n    }\r\n  }, [idealTemplate, getTemplateProperties]);\r\n\r\n  useEffect(() => {\r\n    if (template) {\r\n      let newSize = getTemplateSizeModel(template, templateEle);\r\n\r\n      if (newSize) {\r\n        setSizeEditor({ size: newSize, isEdited: false });\r\n      }\r\n    }\r\n  }, [template, templateEle]);\r\n\r\n  const saveChanges = () => {\r\n    const newTemplate = createTemplate(template, listEditor, sizeEditor, !isOutdated);\r\n\r\n    if (onSave && newTemplate) {\r\n      onSave(newTemplate);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const updatePreivew = (\r\n    newListEditor: ListEditorState,\r\n    newSizeEditor: SizeEditorState,\r\n    oldListEditor?: ListEditorState\r\n  ) => {\r\n    const newTemplate = createTemplate(\r\n      template,\r\n      newListEditor,\r\n      newSizeEditor,\r\n      !isOutdated,\r\n      oldListEditor\r\n    );\r\n\r\n    if (onPreview && newTemplate) {\r\n      onPreview(newTemplate);\r\n    }\r\n  };\r\n\r\n  const handleSizeChange = (newSize: TemplateSize) => {\r\n    if (newSize) {\r\n      const newSizeEditor = { size: newSize, isEdited: true };\r\n\r\n      setSizeEditor(newSizeEditor);\r\n      updatePreivew(listEditor, newSizeEditor);\r\n    }\r\n  };\r\n\r\n  const handleSaveOnClose = (event: MouseEvent) => {\r\n    const isSaved = saveChanges();\r\n\r\n    if (onClose) {\r\n      onClose(event, isSaved ? PanelCloseReasons.Close : PanelCloseReasons.Cancel);\r\n    }\r\n  };\r\n  if (!variantList || !variants) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <div className=\"template-expert-panel\">\r\n        <div className=\"template-expert-anchor\" />\r\n        <div className=\"template-expert-list-wrapper\" />\r\n        {size && (\r\n          <BlmTemplateSize\r\n            data={size}\r\n            onChange={handleSizeChange}\r\n            onCloseClick={handleSaveOnClose}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n});\r\n\r\nexport default BlmTemplateExpert;\r\n"]},"metadata":{},"sourceType":"module"}