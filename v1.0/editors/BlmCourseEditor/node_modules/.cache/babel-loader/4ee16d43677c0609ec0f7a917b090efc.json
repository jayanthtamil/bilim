{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\actions\\\\navigation\\\\BlmNavigationAction.tsx\";\nimport React, { useMemo } from \"react\";\nimport { Select, MenuItem, Divider, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { ElementType, GotoActionTypes } from \"editor-constants\";\nimport BlmStructureSelect from \"components/structures/select\";\nimport \"./styles.scss\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nconst STRUCTURE_ITEMS = [ElementType.Chapter, ElementType.Page, ElementType.Screen, ElementType.Question, ElementType.Custom];\n\nfunction BlmNavigationAction(props) {\n  const {\n    data,\n    showNavigation = true,\n    showPage = true,\n    showRedoEval,\n    onChange\n  } = props;\n  const {\n    action,\n    gotoId\n  } = data || {};\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n  const {\n    element\n  } = useContentEditorCtx();\n  const items = useMemo(() => {\n    var _element$root;\n\n    const result = [];\n\n    if (showNavigation) {\n      result.push( // \"divider\",\n      \"NAVIGATION\", {\n        label: t(\"go_to_opt.previous\"),\n        type: GotoActionTypes.Previous\n      }, {\n        label: t(\"go_to_opt.next\"),\n        type: GotoActionTypes.Next\n      }, {\n        label: t(\"go_to_opt.home\"),\n        type: GotoActionTypes.Home\n      });\n    }\n\n    if (showNavigation && (element === null || element === void 0 ? void 0 : (_element$root = element.root) === null || _element$root === void 0 ? void 0 : _element$root.type) === ElementType.Starting) {\n      result.push({\n        label: t(\"go_to_opt.last_location\"),\n        type: GotoActionTypes.LastLocation\n      });\n    }\n\n    if (showRedoEval) {\n      result.push({\n        label: t(\"go_to_opt.redo_evaluation\"),\n        type: GotoActionTypes.RedoEvaluation\n      });\n    }\n\n    if (showPage) {\n      result.push(\"divider\", \"IN PAGE\", {\n        label: t(\"go_to_opt.top\"),\n        type: GotoActionTypes.Top\n      }, {\n        label: t(\"go_to_opt.previous_partpage\"),\n        type: GotoActionTypes.PreviousPartPage\n      }, {\n        label: t(\"go_to_opt.next_partpage\"),\n        type: GotoActionTypes.NextPartPage\n      }, {\n        label: t(\"go_to_opt.previous_anchor\"),\n        type: GotoActionTypes.PreviousAnchor\n      }, {\n        label: t(\"go_to_opt.next_anchor\"),\n        type: GotoActionTypes.NextAnchor\n      });\n    }\n\n    return result;\n  }, [showNavigation, showPage, showRedoEval, t, element]);\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange({\n        target: {\n          name: \"goto\",\n          value: newData\n        }\n      });\n    }\n  };\n\n  const renderPlaceholder = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }\n    }, \"Select Action\");\n  };\n\n  const isAllowedItem = item => {\n    var _item$parent;\n\n    return ((_item$parent = item.parent) === null || _item$parent === void 0 ? void 0 : _item$parent.isEvaluation) ? false : STRUCTURE_ITEMS.includes(item.type);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newData = {\n      action,\n      gotoId\n    };\n\n    if (name === \"action\") {\n      newData.action = value;\n    } else if (name === \"courseElement\") {\n      newData.gotoId = value;\n    }\n\n    updateChange(newData);\n  };\n\n  const renderItems = () => {\n    if (items) {\n      return items.map((item, ind) => {\n        if (typeof item === \"object\") {\n          const {\n            type,\n            label\n          } = item;\n          return /*#__PURE__*/React.createElement(MenuItem, {\n            key: type,\n            value: type,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(ListItemIcon, {\n            className: type,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(ListItemText, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }\n          }, label));\n        } else if (item === \"divider\") {\n          return /*#__PURE__*/React.createElement(Divider, {\n            key: item + ind,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 18\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: item,\n            className: \"goto-dropdown-menu-title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }\n          }, item);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"goto-action-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"action\",\n    value: action || \"\",\n    displayEmpty: true,\n    MenuProps: {\n      className: \"goto-actions-dropdown-popover\"\n    },\n    className: \"goto-actions-dropdown\",\n    renderValue: action ? undefined : renderPlaceholder,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, renderItems()), action === GotoActionTypes.PageScreen && /*#__PURE__*/React.createElement(BlmStructureSelect, {\n    name: \"courseElement\",\n    value: gotoId,\n    placeholder: t(\"go_to_opt.select_structure\"),\n    structures: {\n      show: true,\n      allowedItems: isAllowedItem\n    },\n    selectables: STRUCTURE_ITEMS,\n    className: \"structure-select-with-icons\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default BlmNavigationAction;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/actions/navigation/BlmNavigationAction.tsx"],"names":["React","useMemo","Select","MenuItem","Divider","ListItemIcon","ListItemText","useTranslation","ElementType","GotoActionTypes","BlmStructureSelect","useContentEditorCtx","STRUCTURE_ITEMS","Chapter","Page","Screen","Question","Custom","BlmNavigationAction","props","data","showNavigation","showPage","showRedoEval","onChange","action","gotoId","t","element","items","result","push","label","type","Previous","Next","Home","root","Starting","LastLocation","RedoEvaluation","Top","PreviousPartPage","NextPartPage","PreviousAnchor","NextAnchor","updateChange","newData","target","name","value","renderPlaceholder","isAllowedItem","item","parent","isEvaluation","includes","handleChange","event","renderItems","map","ind","className","undefined","PageScreen","show","allowedItems"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useMemo } from \"react\";\r\nimport { Select, MenuItem, Divider, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { GotoAction, CustomChangeEvent, CourseElement } from \"types\";\r\nimport { ElementType, GotoActionTypes } from \"editor-constants\";\r\nimport BlmStructureSelect from \"components/structures/select\";\r\nimport \"./styles.scss\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\n\r\nexport interface CompProps {\r\n  data?: GotoAction;\r\n  showNavigation?: boolean;\r\n  showPage?: boolean;\r\n  showRedoEval?: boolean;\r\n  onChange?: (event: CustomChangeEvent<GotoAction>) => void;\r\n}\r\n\r\nconst STRUCTURE_ITEMS: ElementType[] = [\r\n  ElementType.Chapter,\r\n  ElementType.Page,\r\n  ElementType.Screen,\r\n  ElementType.Question,\r\n  ElementType.Custom,\r\n];\r\n\r\nfunction BlmNavigationAction(props: CompProps) {\r\n  const { data, showNavigation = true, showPage = true, showRedoEval, onChange } = props;\r\n  const { action, gotoId } = data || {};\r\n  const { t } = useTranslation(\"content-editor\");\r\n  const { element } = useContentEditorCtx();\r\n\r\n  const items = useMemo(() => {\r\n    const result = [];\r\n\r\n    if (showNavigation) {\r\n      result.push(\r\n        // \"divider\",\r\n        \"NAVIGATION\",\r\n        { label: t(\"go_to_opt.previous\"), type: GotoActionTypes.Previous },\r\n        { label: t(\"go_to_opt.next\"), type: GotoActionTypes.Next },\r\n        { label: t(\"go_to_opt.home\"), type: GotoActionTypes.Home }\r\n      );\r\n    }\r\n\r\n    if (showNavigation && element?.root?.type === ElementType.Starting) {\r\n      result.push({ label: t(\"go_to_opt.last_location\"), type: GotoActionTypes.LastLocation });\r\n    }\r\n\r\n    if (showRedoEval) {\r\n      result.push({ label: t(\"go_to_opt.redo_evaluation\"), type: GotoActionTypes.RedoEvaluation });\r\n    }\r\n\r\n    if (showPage) {\r\n      result.push(\r\n        \"divider\",\r\n        \"IN PAGE\",\r\n        { label: t(\"go_to_opt.top\"), type: GotoActionTypes.Top },\r\n        { label: t(\"go_to_opt.previous_partpage\"), type: GotoActionTypes.PreviousPartPage },\r\n        { label: t(\"go_to_opt.next_partpage\"), type: GotoActionTypes.NextPartPage },\r\n        { label: t(\"go_to_opt.previous_anchor\"), type: GotoActionTypes.PreviousAnchor },\r\n        { label: t(\"go_to_opt.next_anchor\"), type: GotoActionTypes.NextAnchor }\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }, [showNavigation, showPage, showRedoEval, t, element]);\r\n\r\n  const updateChange = (newData: GotoAction) => {\r\n    if (onChange) {\r\n      onChange({ target: { name: \"goto\", value: newData } });\r\n    }\r\n  };\r\n\r\n  const renderPlaceholder = () => {\r\n    return <div>Select Action</div>;\r\n  };\r\n\r\n  const isAllowedItem = (item: CourseElement) => {\r\n    return item.parent?.isEvaluation ? false : STRUCTURE_ITEMS.includes(item.type);\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<any> | CustomChangeEvent<string>) => {\r\n    const { name, value } = event.target;\r\n    const newData = { action, gotoId };\r\n\r\n    if (name === \"action\") {\r\n      newData.action = value;\r\n    } else if (name === \"courseElement\") {\r\n      newData.gotoId = value;\r\n    }\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const renderItems = () => {\r\n    if (items) {\r\n      return items.map((item, ind) => {\r\n        if (typeof item === \"object\") {\r\n          const { type, label } = item;\r\n          return (\r\n            <MenuItem key={type} value={type}>\r\n              <ListItemIcon className={type} />\r\n              <ListItemText>{label}</ListItemText>\r\n            </MenuItem>\r\n          );\r\n        } else if (item === \"divider\") {\r\n          return <Divider key={item + ind} />;\r\n        } else {\r\n          return (\r\n            <div key={item} className=\"goto-dropdown-menu-title\">\r\n              {item}\r\n            </div>\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"goto-action-wrapper\">\r\n      <Select\r\n        name=\"action\"\r\n        value={action || \"\"}\r\n        displayEmpty={true}\r\n        MenuProps={{\r\n          className: \"goto-actions-dropdown-popover\",\r\n        }}\r\n        className=\"goto-actions-dropdown\"\r\n        renderValue={action ? undefined : renderPlaceholder}\r\n        onChange={handleChange}\r\n      >\r\n        {renderItems()}\r\n      </Select>\r\n      {action === GotoActionTypes.PageScreen && (\r\n        <BlmStructureSelect\r\n          name=\"courseElement\"\r\n          value={gotoId}\r\n          placeholder={t(\"go_to_opt.select_structure\")}\r\n          structures={{ show: true, allowedItems: isAllowedItem }}\r\n          selectables={STRUCTURE_ITEMS}\r\n          className=\"structure-select-with-icons\"\r\n          onChange={handleChange}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmNavigationAction;\r\n"]},"metadata":{},"sourceType":"module"}