{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\video\\\\BlmMediaVideo.tsx\";\nimport React from \"react\";\nimport { Select, MenuItem } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { MediaVariants } from \"editor-constants\";\nimport { getMediaVideo, getMediaExternalVideo, getMediaStandardVideo, isMediaExternalVideo, isMediaStandardVideo } from \"utils\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\nimport BlmMediaDashboard from \"../dashboard\";\nimport BlmExternalVideo from \"./external\";\nimport BlmStandardVideo from \"./standard\";\nimport \"./styles.scss\";\n\nfunction BlmMediaVideo(props) {\n  const {\n    data\n  } = props;\n  const state = getMediaVideo(data);\n  const {\n    variant\n  } = state;\n  const {\n    dispatch\n  } = useContentEditorCtx();\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  const updateChange = newData => {\n    if (dispatch) {\n      dispatch(updateMediaComponent(newData));\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n\n    if (value === MediaVariants.VideoExternal) {\n      updateChange(getMediaExternalVideo(state));\n    } else if (value === MediaVariants.VideoStandard) {\n      updateChange(getMediaStandardVideo(state));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(BlmMediaDashboard, {\n    data: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-media-video-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-params-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-params-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, t(\"title.parameters\")), /*#__PURE__*/React.createElement(Select, {\n    name: \"videoType\",\n    value: variant,\n    MenuProps: {\n      className: \"video-types-dropdown-menus\"\n    },\n    className: \"video-types-dropdown\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: MediaVariants.Video,\n    className: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, t(\"label.select\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: MediaVariants.VideoExternal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-types-dropdown-item external\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"video-item-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, t(\"video.external\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"video-item-title-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 41\n    }\n  }, \"\\u20AC\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"video-item-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, t(\"video.no_subtitles\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"video-item-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, t(\"video.load_external\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }), \" \", t(\"video.platforms\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"video-item-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: MediaVariants.VideoStandard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-types-dropdown-item standard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"video-item-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, t(\"video.video_standard\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"video-item-title-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 47\n    }\n  }, \"\\u20AC\\u20AC\\u20AC\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"video-item-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, t(\"video.with_subtitles\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"video-item-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, t(\"video.importer_video_with\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 52\n    }\n  }), t(\"video.subtitles\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"video-item-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }))))), isMediaExternalVideo(state) && /*#__PURE__*/React.createElement(BlmExternalVideo, {\n    data: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 41\n    }\n  }), isMediaStandardVideo(state) && /*#__PURE__*/React.createElement(BlmStandardVideo, {\n    data: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 41\n    }\n  })));\n}\n\nexport default BlmMediaVideo;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/video/BlmMediaVideo.tsx"],"names":["React","Select","MenuItem","useTranslation","MediaVariants","getMediaVideo","getMediaExternalVideo","getMediaStandardVideo","isMediaExternalVideo","isMediaStandardVideo","useContentEditorCtx","updateMediaComponent","BlmMediaDashboard","BlmExternalVideo","BlmStandardVideo","BlmMediaVideo","props","data","state","variant","dispatch","t","updateChange","newData","handleChange","event","value","target","VideoExternal","VideoStandard","className","Video"],"mappings":"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","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport { Select, MenuItem } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { MediaComponent } from \"types\";\r\nimport { MediaVariants } from \"editor-constants\";\r\nimport {\r\n  getMediaVideo,\r\n  getMediaExternalVideo,\r\n  getMediaStandardVideo,\r\n  isMediaExternalVideo,\r\n  isMediaStandardVideo,\r\n} from \"utils\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\r\nimport BlmMediaDashboard from \"../dashboard\";\r\nimport BlmExternalVideo from \"./external\";\r\nimport BlmStandardVideo from \"./standard\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  label: string;\r\n  data: MediaComponent;\r\n}\r\n\r\nfunction BlmMediaVideo(props: CompProps) {\r\n  const { data } = props;\r\n  const state = getMediaVideo(data);\r\n  const { variant } = state;\r\n  const { dispatch } = useContentEditorCtx();\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const updateChange = (newData: MediaComponent) => {\r\n    if (dispatch) {\r\n      dispatch(updateMediaComponent(newData));\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<any>) => {\r\n    const { value } = event.target;\r\n\r\n    if (value === MediaVariants.VideoExternal) {\r\n      updateChange(getMediaExternalVideo(state));\r\n    } else if (value === MediaVariants.VideoStandard) {\r\n      updateChange(getMediaStandardVideo(state));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BlmMediaDashboard data={state}>\r\n      <div className=\"content-media-video-wrapper\">\r\n        <div className=\"video-params-wrapper\">\r\n          <div className=\"video-params-title\">{t(\"title.parameters\")}</div>\r\n          <Select\r\n            name=\"videoType\"\r\n            value={variant}\r\n            MenuProps={{\r\n              className: \"video-types-dropdown-menus\",\r\n            }}\r\n            className=\"video-types-dropdown\"\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value={MediaVariants.Video} className=\"none\">\r\n              {t(\"label.select\")}\r\n            </MenuItem>\r\n            <MenuItem value={MediaVariants.VideoExternal}>\r\n              <div className=\"video-types-dropdown-item external\">\r\n                <span className=\"video-item-title\">\r\n                  {t(\"video.external\")} <span className=\"video-item-title-icon\">€</span>\r\n                </span>\r\n                <span className=\"video-item-sub-title\">{t(\"video.no_subtitles\")}</span>\r\n                <span className=\"video-item-info\">\r\n                  {t(\"video.load_external\")}\r\n                  <br /> {t(\"video.platforms\")}\r\n                </span>\r\n                <span className=\"video-item-icon\" />\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem value={MediaVariants.VideoStandard}>\r\n              <div className=\"video-types-dropdown-item standard\">\r\n                <span className=\"video-item-title\">\r\n                  {t(\"video.video_standard\")} <span className=\"video-item-title-icon\">€€€</span>\r\n                </span>\r\n                <span className=\"video-item-sub-title\">{t(\"video.with_subtitles\")}</span>\r\n                <span className=\"video-item-info\">\r\n                  {t(\"video.importer_video_with\")} <br />\r\n                  {t(\"video.subtitles\")}\r\n                </span>\r\n                <span className=\"video-item-icon\" />\r\n              </div>\r\n            </MenuItem>\r\n          </Select>\r\n        </div>\r\n        {isMediaExternalVideo(state) && <BlmExternalVideo data={state} />}\r\n        {isMediaStandardVideo(state) && <BlmStandardVideo data={state} />}\r\n      </div>\r\n    </BlmMediaDashboard>\r\n  );\r\n}\r\nexport default BlmMediaVideo;\r\n"]},"metadata":{},"sourceType":"module"}