{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport domain from \"./domain\";\nimport course from \"./course\";\nimport editor from \"./editor\";\nimport others from \"./others\";\nimport crossSliceReducer from \"./crossReducer\";\nexport const reducers = {\n  user,\n  domain,\n  course,\n  editor,\n  others\n};\nconst combinedReducer = combineReducers(reducers);\n\nconst rootReducer = (state, action) => {\n  const intermediateState = combinedReducer(state, action);\n  const finalState = crossSliceReducer(intermediateState, action);\n  return finalState;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/redux/rootReducer.ts"],"names":["combineReducers","user","domain","course","editor","others","crossSliceReducer","reducers","combinedReducer","rootReducer","state","action","intermediateState","finalState"],"mappings":"AAAA,SAASA,eAAT,QAAwD,OAAxD;AAGA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,iBAAP,MAA8B,gBAA9B;AAEA,OAAO,MAAMC,QAAQ,GAAG;AACtBN,EAAAA,IADsB;AAEtBC,EAAAA,MAFsB;AAGtBC,EAAAA,MAHsB;AAItBC,EAAAA,MAJsB;AAKtBC,EAAAA;AALsB,CAAjB;AAQP,MAAMG,eAAe,GAAGR,eAAe,CAACO,QAAD,CAAvC;;AAEA,MAAME,WAA2D,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrF,QAAMC,iBAAiB,GAAGJ,eAAe,CAACE,KAAD,EAAQC,MAAR,CAAzC;AACA,QAAME,UAAU,GAAGP,iBAAiB,CAACM,iBAAD,EAAoBD,MAApB,CAApC;AAEA,SAAOE,UAAP;AACD,CALD;;AAOA,eAAeJ,WAAf","sourcesContent":["import { combineReducers, CombinedState, Reducer } from \"redux\";\r\n\r\nimport { RootActions, RootState } from \"./types\";\r\nimport user from \"./user\";\r\nimport domain from \"./domain\";\r\nimport course from \"./course\";\r\nimport editor from \"./editor\";\r\nimport others from \"./others\";\r\nimport crossSliceReducer from \"./crossReducer\";\r\n\r\nexport const reducers = {\r\n  user,\r\n  domain,\r\n  course,\r\n  editor,\r\n  others,\r\n};\r\n\r\nconst combinedReducer = combineReducers(reducers);\r\n\r\nconst rootReducer: Reducer<CombinedState<RootState>, RootActions> = (state, action) => {\r\n  const intermediateState = combinedReducer(state, action);\r\n  const finalState = crossSliceReducer(intermediateState, action);\r\n\r\n  return finalState;\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}