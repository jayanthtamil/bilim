{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\structures\\\\panel\\\\accordion\\\\BlmAccordion.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Accordion, AccordionDetails } from \"@material-ui/core\";\nimport { RepoExpandIcon, RepoOptionsIcon } from \"assets/icons\";\nimport { BlmAccordionSummary } from \"shared/material-ui\";\nimport BlmCourseTree from \"../course-tree\";\n\nfunction BlmAccordion(props) {\n  const {\n    title,\n    treeType,\n    data,\n    ctxItem,\n    expanded: expandedProp,\n    onOptionsClick,\n    onPanelChange\n  } = props;\n  const [expanded, setExpanded] = useState(true);\n  useEffect(() => {\n    if (expandedProp !== undefined) {\n      setExpanded(expandedProp);\n    }\n  }, [expandedProp]);\n\n  const handleTreeOptionsClick = (element, item) => {\n    handleOptionsClick(element, item);\n  };\n\n  const handlePanelOptionsClick = event => {\n    handleOptionsClick(event.currentTarget, data);\n  };\n\n  const handleOptionsClick = (element, item) => {\n    if (onOptionsClick) {\n      onOptionsClick(element, item, treeType);\n    }\n  };\n\n  const handleOnChange = (event, isExpanded) => {\n    if (onPanelChange) {\n      onPanelChange(event, isExpanded);\n    } //state.expanded exclusively used for expand icon rotation in panel summary, because we can't get this value from AccordionContext.\n\n\n    setExpanded(isExpanded);\n  };\n\n  return /*#__PURE__*/React.createElement(Accordion, {\n    square: true,\n    defaultExpanded: true,\n    expanded: expanded,\n    className: \"mui-accordion\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BlmAccordionSummary, {\n    expanded: expanded,\n    showOptionsIcon: ctxItem === data,\n    expandIcon: /*#__PURE__*/React.createElement(RepoExpandIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }),\n    optionsIcon: /*#__PURE__*/React.createElement(RepoOptionsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 22\n      }\n    }),\n    onOptionsClick: handlePanelOptionsClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(AccordionDetails, {\n    className: \"mui-accordion-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BlmCourseTree, {\n    treeType: treeType,\n    data: data,\n    ctxItem: ctxItem,\n    onTreeOptionsClick: handleTreeOptionsClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default BlmAccordion;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/structures/panel/accordion/BlmAccordion.tsx"],"names":["React","useState","useEffect","Accordion","AccordionDetails","RepoExpandIcon","RepoOptionsIcon","BlmAccordionSummary","BlmCourseTree","BlmAccordion","props","title","treeType","data","ctxItem","expanded","expandedProp","onOptionsClick","onPanelChange","setExpanded","undefined","handleTreeOptionsClick","element","item","handleOptionsClick","handlePanelOptionsClick","event","currentTarget","handleOnChange","isExpanded"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAmDC,SAAnD,QAAoE,OAApE;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4D,mBAA5D;AAIA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,cAAhD;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAYA,SAASC,YAAT,CAAsBC,KAAtB,EAAwC;AACtC,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,QAAQ,EAAEC,YALN;AAMJC,IAAAA,cANI;AAOJC,IAAAA;AAPI,MAQFR,KARJ;AASA,QAAM,CAACK,QAAD,EAAWI,WAAX,IAA0BlB,QAAQ,CAAC,IAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,YAAY,KAAKI,SAArB,EAAgC;AAC9BD,MAAAA,WAAW,CAACH,YAAD,CAAX;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;;AAMA,QAAMK,sBAA+C,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACzEC,IAAAA,kBAAkB,CAACF,OAAD,EAAUC,IAAV,CAAlB;AACD,GAFD;;AAIA,QAAME,uBAAuB,GAAIC,KAAD,IAAoC;AAClEF,IAAAA,kBAAkB,CAACE,KAAK,CAACC,aAAP,EAAsBd,IAAtB,CAAlB;AACD,GAFD;;AAIA,QAAMW,kBAAkB,GAAG,CAACF,OAAD,EAAuBC,IAAvB,KAA+C;AACxE,QAAIN,cAAJ,EAAoB;AAClBA,MAAAA,cAAc,CAACK,OAAD,EAAUC,IAAV,EAAgBX,QAAhB,CAAd;AACD;AACF,GAJD;;AAMA,QAAMgB,cAAc,GAAG,CAACF,KAAD,EAAyBG,UAAzB,KAAiD;AACtE,QAAIX,aAAJ,EAAmB;AACjBA,MAAAA,aAAa,CAACQ,KAAD,EAAQG,UAAR,CAAb;AACD,KAHqE,CAKtE;;;AACAV,IAAAA,WAAW,CAACU,UAAD,CAAX;AACD,GAPD;;AASA,sBACE,oBAAC,SAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,eAAe,EAAE,IAFnB;AAGE,IAAA,QAAQ,EAAEd,QAHZ;AAIE,IAAA,SAAS,EAAC,eAJZ;AAKE,IAAA,QAAQ,EAAEa,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,mBAAD;AACE,IAAA,QAAQ,EAAEb,QADZ;AAEE,IAAA,eAAe,EAAED,OAAO,KAAKD,IAF/B;AAGE,IAAA,UAAU,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHd;AAIE,IAAA,WAAW,eAAE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJf;AAKE,IAAA,cAAc,EAAEY,uBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGd,KAPH,CAPF,eAgBE,oBAAC,gBAAD;AAAkB,IAAA,SAAS,EAAC,uBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,QAAQ,EAAEC,QADZ;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,kBAAkB,EAAEO,sBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBF,CADF;AA2BD;;AAED,eAAeZ,YAAf","sourcesContent":["import React, { useState, ChangeEvent, MouseEvent, useEffect } from \"react\";\r\nimport { Accordion, AccordionDetails, AccordionProps } from \"@material-ui/core\";\r\n\r\nimport { CourseElement, OptionsClickHandler, TreeOptionsClickHandler } from \"types\";\r\nimport { ElementType } from \"editor-constants\";\r\nimport { RepoExpandIcon, RepoOptionsIcon } from \"assets/icons\";\r\nimport { BlmAccordionSummary } from \"shared/material-ui\";\r\nimport BlmCourseTree from \"../course-tree\";\r\n\r\nexport interface CompProps {\r\n  title: string;\r\n  treeType: ElementType;\r\n  data: CourseElement;\r\n  ctxItem?: CourseElement;\r\n  expanded?: boolean;\r\n  onOptionsClick: OptionsClickHandler;\r\n  onPanelChange: AccordionProps[\"onChange\"];\r\n}\r\n\r\nfunction BlmAccordion(props: CompProps) {\r\n  const {\r\n    title,\r\n    treeType,\r\n    data,\r\n    ctxItem,\r\n    expanded: expandedProp,\r\n    onOptionsClick,\r\n    onPanelChange,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (expandedProp !== undefined) {\r\n      setExpanded(expandedProp);\r\n    }\r\n  }, [expandedProp]);\r\n\r\n  const handleTreeOptionsClick: TreeOptionsClickHandler = (element, item) => {\r\n    handleOptionsClick(element, item);\r\n  };\r\n\r\n  const handlePanelOptionsClick = (event: MouseEvent<HTMLElement>) => {\r\n    handleOptionsClick(event.currentTarget, data);\r\n  };\r\n\r\n  const handleOptionsClick = (element: HTMLElement, item: CourseElement) => {\r\n    if (onOptionsClick) {\r\n      onOptionsClick(element, item, treeType);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (event: ChangeEvent<{}>, isExpanded: boolean) => {\r\n    if (onPanelChange) {\r\n      onPanelChange(event, isExpanded);\r\n    }\r\n\r\n    //state.expanded exclusively used for expand icon rotation in panel summary, because we can't get this value from AccordionContext.\r\n    setExpanded(isExpanded);\r\n  };\r\n\r\n  return (\r\n    <Accordion\r\n      square\r\n      defaultExpanded={true}\r\n      expanded={expanded}\r\n      className=\"mui-accordion\"\r\n      onChange={handleOnChange}\r\n    >\r\n      <BlmAccordionSummary\r\n        expanded={expanded}\r\n        showOptionsIcon={ctxItem === data}\r\n        expandIcon={<RepoExpandIcon />}\r\n        optionsIcon={<RepoOptionsIcon />}\r\n        onOptionsClick={handlePanelOptionsClick}\r\n      >\r\n        {title}\r\n      </BlmAccordionSummary>\r\n      <AccordionDetails className=\"mui-accordion-details\">\r\n        <BlmCourseTree\r\n          treeType={treeType}\r\n          data={data}\r\n          ctxItem={ctxItem}\r\n          onTreeOptionsClick={handleTreeOptionsClick}\r\n        />\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default BlmAccordion;\r\n"]},"metadata":{},"sourceType":"module"}