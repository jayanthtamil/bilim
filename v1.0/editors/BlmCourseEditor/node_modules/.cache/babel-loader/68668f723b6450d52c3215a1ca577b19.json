{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\main\\\\header\\\\BlmHeader.tsx\";\nimport React, { useRef, useState, Fragment, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { Breadcrumbs } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { BlmCoursePropertiesPanel } from \"components/course-properties\";\nimport { BlmCourseExportPanel } from \"components/course-export\";\nimport \"./header.scss\";\nimport { textArea } from \"utils\";\nconst initEditorPanel = {\n  open: false,\n  type: \"none\"\n};\n\nfunction flatChild(parent) {\n  let arr = [];\n\n  if (parent) {\n    arr.push(parent);\n\n    if (parent.child) {\n      const result = flatChild(parent.child);\n      arr = arr.concat(result);\n    }\n  }\n\n  return arr;\n}\n\nfunction BlmHeader(props) {\n  const {\n    panel,\n    tree,\n    courseProps,\n    element,\n    toggleStructurePanel,\n    toggleStructurePanelPin,\n    setStructureAnchorEle,\n    getCoursePreview\n  } = props;\n  const header = tree.item ? tree.item.name : \"\";\n  const anchorRef = useRef(null);\n  const [editorPanel, setEditorPanel] = useState(initEditorPanel);\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    const element = anchorRef.current;\n\n    if (element) {\n      setStructureAnchorEle(element);\n      toggleStructurePanel(true);\n    }\n  }, [setStructureAnchorEle, toggleStructurePanel]);\n\n  const toggleEditorPanel = (open, type = \"none\", anchorEle) => {\n    setEditorPanel({\n      open,\n      type,\n      anchorEle\n    });\n  };\n\n  const handleBackClick = () => {\n    if (window.history.length > 1) {\n      window.history.back();\n    } else if (process.env.REACT_APP_BACK_URL) {\n      window.location.href = process.env.REACT_APP_BACK_URL;\n    }\n  };\n\n  const handleStructuresClick = () => {\n    toggleStructurePanel();\n  };\n\n  const handlePinClick = event => {\n    event.stopPropagation();\n    toggleStructurePanelPin();\n  };\n\n  const renderBreadcrumbItems = () => {\n    const {\n      title\n    } = courseProps || {};\n    const items = [];\n    const parents = flatChild(courseProps === null || courseProps === void 0 ? void 0 : courseProps.parent);\n\n    if (parents) {\n      for (let parent of parents) {\n        const {\n          id,\n          title: folderTitle,\n          link: folderLink\n        } = parent;\n        items.push( /*#__PURE__*/React.createElement(\"a\", {\n          key: id,\n          href: folderLink || \"\",\n          className: \"breadcrumb-link\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }\n        }, folderTitle));\n      }\n    }\n\n    if (title) {\n      items.push( /*#__PURE__*/React.createElement(\"span\", {\n        key: \"title\",\n        className: \"breadcrumb-lbl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, title));\n    }\n\n    return items;\n  };\n\n  const handlePreviewClick = event => {\n    if (courseProps) {\n      getCoursePreview(courseProps.id, element === null || element === void 0 ? void 0 : element.id, event.ctrlKey).then(result => {\n        if (!result.error) {\n          const {\n            file_uri\n          } = result.payload;\n\n          if (file_uri) {\n            window.open(file_uri);\n          }\n        }\n      });\n    }\n  };\n\n  const handleExportClick = event => {\n    toggleEditorPanel(true, \"export\", event.currentTarget);\n  };\n\n  const handlePropertiesClick = event => {\n    toggleEditorPanel(true, \"properties\", event.currentTarget);\n  };\n\n  const handleEditorClose = () => {\n    toggleEditorPanel(false);\n  };\n\n  const renderEditorPanel = () => {\n    const {\n      open,\n      type,\n      anchorEle\n    } = editorPanel;\n\n    if (open && anchorEle) {\n      if (type === \"export\" && (courseProps === null || courseProps === void 0 ? void 0 : courseProps.id)) {\n        return /*#__PURE__*/React.createElement(BlmCourseExportPanel, {\n          open: true,\n          anchorEle: anchorEle,\n          courseId: courseProps.id,\n          onClose: handleEditorClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }\n        });\n      } else if (type === \"properties\" && courseProps) {\n        let newDescription = textArea(courseProps.description, \"<br>\", \"\\n\");\n        courseProps.description = newDescription;\n        return /*#__PURE__*/React.createElement(BlmCoursePropertiesPanel, {\n          open: true,\n          anchorEle: anchorEle,\n          data: courseProps,\n          onClose: handleEditorClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"editor-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    title: t(\"tooltips.back_domain\"),\n    className: \"editor-back-btn\",\n    onClick: handleBackClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: anchorRef,\n    className: \"structure-anchor\",\n    onClick: handleStructuresClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"anchor-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"anchor-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, header), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"pin-icon\", {\n      pinned: panel.isPinned\n    }),\n    onClick: handlePinClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Breadcrumbs, {\n    separator: \">\",\n    \"aria-label\": \"breadcrumb\",\n    className: \"breadcrumb-ctrl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, renderBreadcrumbItems()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editor-version\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, process.env.REACT_APP_VERSION), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"preview-btn\",\n    onClick: handlePreviewClick,\n    title: \"Press ctrl key to deactivate the preprequisites\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, t(\"buttons.preview\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"export-btn\",\n    onClick: handleExportClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, t(\"buttons.export\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-btn-separator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"library-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, t(\"buttons.library\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-btn-separator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"properties-btn\",\n    onClick: handlePropertiesClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, t(\"buttons.properties\"))), renderEditorPanel());\n}\n\nexport default BlmHeader;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/main/header/BlmHeader.tsx"],"names":["React","useRef","useState","Fragment","useEffect","clsx","Breadcrumbs","useTranslation","BlmCoursePropertiesPanel","BlmCourseExportPanel","textArea","initEditorPanel","open","type","flatChild","parent","arr","push","child","result","concat","BlmHeader","props","panel","tree","courseProps","element","toggleStructurePanel","toggleStructurePanelPin","setStructureAnchorEle","getCoursePreview","header","item","name","anchorRef","editorPanel","setEditorPanel","t","current","toggleEditorPanel","anchorEle","handleBackClick","window","history","length","back","process","env","REACT_APP_BACK_URL","location","href","handleStructuresClick","handlePinClick","event","stopPropagation","renderBreadcrumbItems","title","items","parents","id","folderTitle","link","folderLink","handlePreviewClick","ctrlKey","then","error","file_uri","payload","handleExportClick","currentTarget","handlePropertiesClick","handleEditorClose","renderEditorPanel","newDescription","description","pinned","isPinned","REACT_APP_VERSION"],"mappings":"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","sourcesContent":["import React, { useRef, MouseEvent, useState, Fragment, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Breadcrumbs } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CMSFolder } from \"types\";\r\nimport { BlmCoursePropertiesPanel } from \"components/course-properties\";\r\nimport { BlmCourseExportPanel } from \"components/course-export\";\r\nimport { ContainerProps } from \"./header-container\";\r\nimport \"./header.scss\";\r\nimport { textArea } from \"utils\";\r\n\r\nexport interface CompProps extends ContainerProps {}\r\n\r\ninterface EditorPanelState {\r\n  open: boolean;\r\n  type: \"none\" | \"properties\" | \"export\";\r\n  anchorEle?: HTMLElement;\r\n}\r\n\r\nconst initEditorPanel: EditorPanelState = {\r\n  open: false,\r\n  type: \"none\",\r\n};\r\n\r\nfunction flatChild(parent?: CMSFolder | null) {\r\n  let arr: CMSFolder[] = [];\r\n\r\n  if (parent) {\r\n    arr.push(parent);\r\n\r\n    if (parent.child) {\r\n      const result = flatChild(parent.child);\r\n      arr = arr.concat(result);\r\n    }\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nfunction BlmHeader(props: CompProps) {\r\n  const {\r\n    panel,\r\n    tree,\r\n    courseProps,\r\n    element,\r\n    toggleStructurePanel,\r\n    toggleStructurePanelPin,\r\n    setStructureAnchorEle,\r\n    getCoursePreview,\r\n  } = props;\r\n  const header = tree.item ? tree.item.name : \"\";\r\n  const anchorRef = useRef<HTMLDivElement>(null);\r\n  const [editorPanel, setEditorPanel] = useState(initEditorPanel);\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const element = anchorRef.current;\r\n\r\n    if (element) {\r\n      setStructureAnchorEle(element);\r\n      toggleStructurePanel(true);\r\n    }\r\n  }, [setStructureAnchorEle, toggleStructurePanel]);\r\n\r\n  const toggleEditorPanel = (\r\n    open: boolean,\r\n    type: EditorPanelState[\"type\"] = \"none\",\r\n    anchorEle?: HTMLElement\r\n  ) => {\r\n    setEditorPanel({ open, type, anchorEle });\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    if (window.history.length > 1) {\r\n      window.history.back();\r\n    } else if (process.env.REACT_APP_BACK_URL) {\r\n      window.location.href = process.env.REACT_APP_BACK_URL;\r\n    }\r\n  };\r\n\r\n  const handleStructuresClick = () => {\r\n    toggleStructurePanel();\r\n  };\r\n\r\n  const handlePinClick = (event: MouseEvent) => {\r\n    event.stopPropagation();\r\n\r\n    toggleStructurePanelPin();\r\n  };\r\n\r\n  const renderBreadcrumbItems = () => {\r\n    const { title } = courseProps || {};\r\n    const items = [];\r\n    const parents = flatChild(courseProps?.parent);\r\n\r\n    if (parents) {\r\n      for (let parent of parents) {\r\n        const { id, title: folderTitle, link: folderLink } = parent;\r\n\r\n        items.push(\r\n          <a key={id} href={folderLink || \"\"} className=\"breadcrumb-link\">\r\n            {folderTitle}\r\n          </a>\r\n        );\r\n      }\r\n    }\r\n\r\n    if (title) {\r\n      items.push(\r\n        <span key=\"title\" className=\"breadcrumb-lbl\">\r\n          {title}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  const handlePreviewClick = (event: MouseEvent) => {\r\n    if (courseProps) {\r\n      getCoursePreview(courseProps.id, element?.id, event.ctrlKey).then((result) => {\r\n        if (!result.error) {\r\n          const { file_uri } = result.payload;\r\n\r\n          if (file_uri) {\r\n            window.open(file_uri);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleExportClick = (event: MouseEvent<HTMLElement>) => {\r\n    toggleEditorPanel(true, \"export\", event.currentTarget);\r\n  };\r\n\r\n  const handlePropertiesClick = (event: MouseEvent<HTMLElement>) => {\r\n    toggleEditorPanel(true, \"properties\", event.currentTarget);\r\n  };\r\n\r\n  const handleEditorClose = () => {\r\n    toggleEditorPanel(false);\r\n  };\r\n\r\n  const renderEditorPanel = () => {\r\n    const { open, type, anchorEle } = editorPanel;\r\n\r\n    if (open && anchorEle) {\r\n      if (type === \"export\" && courseProps?.id) {\r\n        return (\r\n          <BlmCourseExportPanel\r\n            open={true}\r\n            anchorEle={anchorEle}\r\n            courseId={courseProps.id}\r\n            onClose={handleEditorClose}\r\n          />\r\n        );\r\n      } else if (type === \"properties\" && courseProps) {\r\n        let newDescription = textArea(courseProps.description, \"<br>\", \"\\n\");\r\n        courseProps.description = newDescription;\r\n        return (\r\n          <BlmCoursePropertiesPanel\r\n            open={true}\r\n            anchorEle={anchorEle}\r\n            data={courseProps}\r\n            onClose={handleEditorClose}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <header className=\"editor-header\">\r\n        <button\r\n          title={t(\"tooltips.back_domain\")}\r\n          className=\"editor-back-btn\"\r\n          onClick={handleBackClick}\r\n        />\r\n        <div ref={anchorRef} className=\"structure-anchor\" onClick={handleStructuresClick}>\r\n          <div className=\"anchor-icon\" />\r\n          <span className=\"anchor-lbl\">{header}</span>\r\n          <div\r\n            className={clsx(\"pin-icon\", {\r\n              pinned: panel.isPinned,\r\n            })}\r\n            onClick={handlePinClick}\r\n          />\r\n        </div>\r\n        <Breadcrumbs separator=\">\" aria-label=\"breadcrumb\" className=\"breadcrumb-ctrl\">\r\n          {renderBreadcrumbItems()}\r\n        </Breadcrumbs>\r\n        <div className=\"editor-version\">{process.env.REACT_APP_VERSION}</div>\r\n        <button\r\n          className=\"preview-btn\"\r\n          onClick={handlePreviewClick}\r\n          title=\"Press ctrl key to deactivate the preprequisites\"\r\n        >\r\n          {t(\"buttons.preview\")}\r\n        </button>\r\n        <button className=\"export-btn\" onClick={handleExportClick}>\r\n          {t(\"buttons.export\")}\r\n        </button>\r\n        <div className=\"header-btn-separator\" />\r\n        <button className=\"library-btn\">{t(\"buttons.library\")}</button>\r\n        <div className=\"header-btn-separator\" />\r\n        <button className=\"properties-btn\" onClick={handlePropertiesClick}>\r\n          {t(\"buttons.properties\")}\r\n        </button>\r\n      </header>\r\n      {renderEditorPanel()}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default BlmHeader;\r\n"]},"metadata":{},"sourceType":"module"}