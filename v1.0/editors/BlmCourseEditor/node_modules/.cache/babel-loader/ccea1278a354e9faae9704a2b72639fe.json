{"ast":null,"code":"import { TemplateSize } from \"types\";\nimport { TemplateWidthTypes } from \"editor-constants\";\nimport { hasPixel, createHTMLElement, unitToValue, toNumber } from \"utils\";\nimport { getComputedStyle, getHTMLElement } from \"../../core\";\nexport function getTemplateSizeModel(template, templateEle) {\n  const htmlElement = createHTMLElement(`<div>${template.html}</div>`);\n\n  if (htmlElement) {\n    return getTemplateSize(htmlElement, templateEle);\n  }\n}\n\nfunction getTemplateSize(parent, templateEle) {\n  const outer = getHTMLElement(parent, \".outercontainer\");\n  const inner = getHTMLElement(parent, \".innercontainer\");\n  const size = new TemplateSize();\n\n  if (outer) {\n    size.isFullscreen = outer.classList.contains(\"fullscreen\");\n\n    if (inner) {\n      var _globalStyle$getPrope, _globalStyle$getPrope2, _globalStyle$getPrope3, _globalStyle$getPrope4;\n\n      const globalStyle = getComputedStyle(templateEle, \".innercontainer\");\n      const {\n        classList,\n        style\n      } = inner;\n      var {\n        width,\n        margin: {\n          left,\n          top,\n          right,\n          bottom,\n          globalTop\n        },\n        padding: {\n          top: pTop,\n          bottom: pBottom\n        }\n      } = size;\n      const {\n        width: newWidth\n      } = width;\n      const widthVal = style.getPropertyValue(\"--partpage_width\") || \"50%\";\n      const marginTop = style.getPropertyValue(\"--partpage_top_margin\");\n      const marginLeft = style.getPropertyValue(\"--partpage_left_margin\");\n      const marginBottom = style.getPropertyValue(\"--partpage_bottom_margin\");\n      const marginRight = style.getPropertyValue(\"--partpage_right_margin\");\n      const paddingTop = style.getPropertyValue(\"--partpage_top_padding\");\n      const paddingBottom = style.getPropertyValue(\"--partpage_bottom_padding\");\n      var globalMarginTop = (_globalStyle$getPrope = globalStyle === null || globalStyle === void 0 ? void 0 : globalStyle.getPropertyValue(\"--partpage_top_margin\")) !== null && _globalStyle$getPrope !== void 0 ? _globalStyle$getPrope : \"\";\n      var globalMarginBottom = (_globalStyle$getPrope2 = globalStyle === null || globalStyle === void 0 ? void 0 : globalStyle.getPropertyValue(\"--partpage_bottom_margin\")) !== null && _globalStyle$getPrope2 !== void 0 ? _globalStyle$getPrope2 : \"\";\n      const globalPaddingTop = (_globalStyle$getPrope3 = globalStyle === null || globalStyle === void 0 ? void 0 : globalStyle.getPropertyValue(\"--partpage_top_padding\")) !== null && _globalStyle$getPrope3 !== void 0 ? _globalStyle$getPrope3 : \"\";\n      const globalPaddingBottom = (_globalStyle$getPrope4 = globalStyle === null || globalStyle === void 0 ? void 0 : globalStyle.getPropertyValue(\"--partpage_bottom_padding\")) !== null && _globalStyle$getPrope4 !== void 0 ? _globalStyle$getPrope4 : \"\";\n      newWidth.value = unitToValue(widthVal);\n      newWidth.isSelected = hasPixel(widthVal);\n\n      if (classList.contains(\"templateleft\")) {\n        width.type = TemplateWidthTypes.Left;\n      } else if (classList.contains(\"templatecenter\")) {\n        width.type = TemplateWidthTypes.Center;\n      } else if (classList.contains(\"templateright\")) {\n        width.type = TemplateWidthTypes.Right;\n      } else {\n        width.type = TemplateWidthTypes.Full;\n      }\n\n      left.value = unitToValue(marginLeft);\n      left.isSelected = hasPixel(marginLeft);\n      right.value = unitToValue(marginRight);\n      right.isSelected = hasPixel(marginRight);\n      var roundTop = Math.round(toNumber(globalMarginTop));\n      var roundBottom = Math.round(toNumber(globalMarginBottom));\n\n      if (marginTop !== \"\") {\n        top.value = unitToValue(marginTop);\n        top.isSelected = true;\n        globalTop.value = false;\n\n        if (paddingTop === \"\") {\n          pTop.value = unitToValue(globalPaddingTop);\n        }\n      } else if (toNumber(globalMarginTop) !== 0) {\n        top.value = unitToValue(roundTop.toString());\n        top.isSelected = false;\n        globalTop.value = true;\n\n        if (toNumber(globalPaddingTop) !== 0) {\n          pTop.value = unitToValue(globalPaddingTop);\n        }\n      }\n\n      if (paddingTop !== \"\") {\n        pTop.value = unitToValue(paddingTop);\n        pTop.isSelected = false;\n\n        if (marginTop === \"\") {\n          top.value = unitToValue(roundTop.toString());\n        }\n      } else if (toNumber(globalPaddingTop) !== 0) {\n        top.value = unitToValue(globalPaddingTop);\n        top.isSelected = false;\n\n        if (toNumber(globalMarginTop) !== 0) {\n          top.value = unitToValue(roundTop.toString());\n          top.isSelected = false;\n        }\n      }\n\n      if (marginBottom !== \"\") {\n        bottom.value = unitToValue(marginBottom);\n        bottom.isSelected = true;\n        globalTop.value = false;\n\n        if (paddingBottom === \"\") {\n          pBottom.value = unitToValue(globalPaddingBottom);\n        }\n      } else if (paddingBottom !== \"\") {\n        pBottom.value = unitToValue(paddingBottom);\n        pBottom.isSelected = false;\n\n        if (marginBottom === \"\") {\n          bottom.value = unitToValue(roundBottom.toString());\n        }\n      } else if (toNumber(globalMarginBottom) !== 0) {\n        bottom.value = unitToValue(roundBottom.toString());\n        bottom.isSelected = true;\n        globalTop.value = true;\n\n        if (toNumber(globalPaddingBottom) !== 0) {\n          pBottom.value = unitToValue(globalPaddingBottom);\n        }\n      } else if (toNumber(globalPaddingBottom) !== 0) {\n        pBottom.value = unitToValue(globalPaddingBottom);\n        pBottom.isSelected = false;\n\n        if (toNumber(globalMarginBottom) !== 0) {\n          bottom.value = unitToValue(roundBottom.toString());\n          bottom.isSelected = false;\n        }\n      }\n\n      size.hasInnerContainer = true;\n    } else {\n      size.hasInnerContainer = false;\n    }\n  }\n\n  return size;\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/model/size/index.ts"],"names":["TemplateSize","TemplateWidthTypes","hasPixel","createHTMLElement","unitToValue","toNumber","getComputedStyle","getHTMLElement","getTemplateSizeModel","template","templateEle","htmlElement","html","getTemplateSize","parent","outer","inner","size","isFullscreen","classList","contains","globalStyle","style","width","margin","left","top","right","bottom","globalTop","padding","pTop","pBottom","newWidth","widthVal","getPropertyValue","marginTop","marginLeft","marginBottom","marginRight","paddingTop","paddingBottom","globalMarginTop","globalMarginBottom","globalPaddingTop","globalPaddingBottom","value","isSelected","type","Left","Center","Right","Full","roundTop","Math","round","roundBottom","toString","hasInnerContainer"],"mappings":"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","sourcesContent":["import { CourseElementTemplate, TemplateSize } from \"types\";\r\nimport { TemplateWidthTypes } from \"editor-constants\";\r\nimport { hasPixel, createHTMLElement, unitToValue, toNumber } from \"utils\";\r\nimport { getComputedStyle, getHTMLElement } from \"../../core\";\r\n\r\nexport function getTemplateSizeModel(template: CourseElementTemplate, templateEle: HTMLElement) {\r\n  const htmlElement = createHTMLElement(`<div>${template.html}</div>`);\r\n\r\n  if (htmlElement) {\r\n    return getTemplateSize(htmlElement, templateEle);\r\n  }\r\n}\r\n\r\nfunction getTemplateSize(parent: HTMLElement, templateEle: HTMLElement) {\r\n  const outer = getHTMLElement(parent, \".outercontainer\");\r\n  const inner = getHTMLElement(parent, \".innercontainer\");\r\n  const size = new TemplateSize();\r\n\r\n  if (outer) {\r\n    size.isFullscreen = outer.classList.contains(\"fullscreen\");\r\n\r\n    if (inner) {\r\n      const globalStyle = getComputedStyle(templateEle, \".innercontainer\");\r\n      const { classList, style } = inner;\r\n      var {\r\n        width,\r\n        margin: { left, top, right, bottom, globalTop },\r\n        padding: { top: pTop, bottom: pBottom },\r\n      } = size;\r\n      const { width: newWidth } = width;\r\n\r\n      const widthVal = style.getPropertyValue(\"--partpage_width\") || \"50%\";\r\n      const marginTop = style.getPropertyValue(\"--partpage_top_margin\");\r\n      const marginLeft = style.getPropertyValue(\"--partpage_left_margin\");\r\n      const marginBottom = style.getPropertyValue(\"--partpage_bottom_margin\");\r\n      const marginRight = style.getPropertyValue(\"--partpage_right_margin\");\r\n      const paddingTop = style.getPropertyValue(\"--partpage_top_padding\");\r\n      const paddingBottom = style.getPropertyValue(\"--partpage_bottom_padding\");\r\n      var globalMarginTop = globalStyle?.getPropertyValue(\"--partpage_top_margin\") ?? \"\";\r\n      var globalMarginBottom = globalStyle?.getPropertyValue(\"--partpage_bottom_margin\") ?? \"\";\r\n      const globalPaddingTop = globalStyle?.getPropertyValue(\"--partpage_top_padding\") ?? \"\";\r\n      const globalPaddingBottom = globalStyle?.getPropertyValue(\"--partpage_bottom_padding\") ?? \"\";\r\n\r\n      newWidth.value = unitToValue(widthVal);\r\n      newWidth.isSelected = hasPixel(widthVal);\r\n\r\n      if (classList.contains(\"templateleft\")) {\r\n        width.type = TemplateWidthTypes.Left;\r\n      } else if (classList.contains(\"templatecenter\")) {\r\n        width.type = TemplateWidthTypes.Center;\r\n      } else if (classList.contains(\"templateright\")) {\r\n        width.type = TemplateWidthTypes.Right;\r\n      } else {\r\n        width.type = TemplateWidthTypes.Full;\r\n      }\r\n\r\n      left.value = unitToValue(marginLeft);\r\n      left.isSelected = hasPixel(marginLeft);\r\n\r\n      right.value = unitToValue(marginRight);\r\n      right.isSelected = hasPixel(marginRight);\r\n\r\n      var roundTop = Math.round(toNumber(globalMarginTop));\r\n      var roundBottom = Math.round(toNumber(globalMarginBottom));\r\n      if (marginTop !== \"\") {\r\n        top.value = unitToValue(marginTop);\r\n        top.isSelected = true;\r\n        globalTop.value = false;\r\n\r\n        if (paddingTop === \"\") {\r\n          pTop.value = unitToValue(globalPaddingTop);\r\n        }\r\n      } else if (toNumber(globalMarginTop) !== 0) {\r\n        top.value = unitToValue(roundTop.toString());\r\n        top.isSelected = false;\r\n        globalTop.value = true;\r\n        if (toNumber(globalPaddingTop) !== 0) {\r\n          pTop.value = unitToValue(globalPaddingTop);\r\n        }\r\n      }\r\n\r\n      if (paddingTop !== \"\") {\r\n        pTop.value = unitToValue(paddingTop);\r\n        pTop.isSelected = false;\r\n        if (marginTop === \"\") {\r\n          top.value = unitToValue(roundTop.toString());\r\n        }\r\n      } else if (toNumber(globalPaddingTop) !== 0) {\r\n        top.value = unitToValue(globalPaddingTop);\r\n        top.isSelected = false;\r\n        if (toNumber(globalMarginTop) !== 0) {\r\n          top.value = unitToValue(roundTop.toString());\r\n          top.isSelected = false;\r\n        }\r\n      }\r\n\r\n      if (marginBottom !== \"\") {\r\n        bottom.value = unitToValue(marginBottom);\r\n        bottom.isSelected = true;\r\n        globalTop.value = false;\r\n        if (paddingBottom === \"\") {\r\n          pBottom.value = unitToValue(globalPaddingBottom);\r\n        }\r\n      } else if (paddingBottom !== \"\") {\r\n        pBottom.value = unitToValue(paddingBottom);\r\n        pBottom.isSelected = false;\r\n        if (marginBottom === \"\") {\r\n          bottom.value = unitToValue(roundBottom.toString());\r\n        }\r\n      } else if (toNumber(globalMarginBottom) !== 0) {\r\n        bottom.value = unitToValue(roundBottom.toString());\r\n        bottom.isSelected = true;\r\n        globalTop.value = true;\r\n        if (toNumber(globalPaddingBottom) !== 0) {\r\n          pBottom.value = unitToValue(globalPaddingBottom);\r\n        }\r\n      } else if (toNumber(globalPaddingBottom) !== 0) {\r\n        pBottom.value = unitToValue(globalPaddingBottom);\r\n        pBottom.isSelected = false;\r\n\r\n        if (toNumber(globalMarginBottom) !== 0) {\r\n          bottom.value = unitToValue(roundBottom.toString());\r\n          bottom.isSelected = false;\r\n        }\r\n      }\r\n\r\n      size.hasInnerContainer = true;\r\n    } else {\r\n      size.hasInnerContainer = false;\r\n    }\r\n  }\r\n\r\n  return size;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}