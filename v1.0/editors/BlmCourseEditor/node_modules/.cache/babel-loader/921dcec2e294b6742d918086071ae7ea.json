{"ast":null,"code":"import * as actions from \"../types\";\nimport { createPropertiesModel, createTemplatesModel } from \"../utils\";\nimport { createCourseStructureModel } from \"redux/course/structure/utils/index\";\nexport const initState = {\n  properties: {},\n  templates: undefined,\n  structures: undefined\n};\nexport default function elementReducer(state = initState, action) {\n  state = typeof state !== \"undefined\" ? state : initState;\n  const {\n    templates\n  } = state;\n\n  switch (action.type) {\n    case actions.GET_ELEMENT_PROPERTIES_SUCCESS:\n      const {\n        payload,\n        meta\n      } = action;\n      const props = createPropertiesModel(payload, meta);\n      return { ...state,\n        properties: { ...state.properties,\n          [meta.id]: props\n        }\n      };\n\n    case actions.UPDATE_ELEMENT_PROPERTIES_SUCCESS:\n      const {\n        meta: props2\n      } = action;\n\n      if (props2 && state.properties[props2.id]) {\n        return { ...state,\n          properties: { ...state.properties,\n            [props2.id]: props2\n          }\n        };\n      }\n\n      return state;\n\n    case actions.CLEAR_ELEMENT_PROPERTIES:\n      const {\n        id\n      } = action.payload;\n\n      if (id) {\n        const {\n          [id]: newId,\n          ...others\n        } = state.properties;\n        return { ...state,\n          properties: { ...others\n          }\n        };\n      } else {\n        return { ...state,\n          properties: {}\n        };\n      }\n\n    case actions.GET_ELEMENT_TEMPLATES_STARTED:\n      return { ...state,\n        templates: templates && templates.id === action.meta.id ? templates : undefined\n      };\n\n    case actions.GET_SELECTED_ELEMENT_TEMPLATES_STARTED:\n      return { ...state,\n        templates: templates && templates.id === action.meta ? templates : undefined\n      };\n\n    case actions.GET_ELEMENT_TEMPLATES_SUCCESS:\n      return { ...state,\n        templates: createTemplatesModel(action.payload, action.meta)\n      };\n\n    case actions.RESET_ELEMENT_TEMPLATE_SUCCESS:\n      return { ...state,\n        templates: undefined\n      };\n\n    case actions.GET_COPY_FROM_STRUCTURE_LIST_SUCCESS:\n      return { ...state,\n        structures: createCourseStructureModel(action.payload)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/redux/course/element/reducers/index.ts"],"names":["actions","createPropertiesModel","createTemplatesModel","createCourseStructureModel","initState","properties","templates","undefined","structures","elementReducer","state","action","type","GET_ELEMENT_PROPERTIES_SUCCESS","payload","meta","props","id","UPDATE_ELEMENT_PROPERTIES_SUCCESS","props2","CLEAR_ELEMENT_PROPERTIES","newId","others","GET_ELEMENT_TEMPLATES_STARTED","GET_SELECTED_ELEMENT_TEMPLATES_STARTED","GET_ELEMENT_TEMPLATES_SUCCESS","RESET_ELEMENT_TEMPLATE_SUCCESS","GET_COPY_FROM_STRUCTURE_LIST_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,UAAzB;AACA,SAASC,qBAAT,EAAgCC,oBAAhC,QAA4D,UAA5D;AACA,SAASC,0BAAT,QAA2C,oCAA3C;AAEA,OAAO,MAAMC,SAAqC,GAAG;AACnDC,EAAAA,UAAU,EAAE,EADuC;AAEnDC,EAAAA,SAAS,EAAEC,SAFwC;AAGnDC,EAAAA,UAAU,EAAED;AAHuC,CAA9C;AAMP,eAAe,SAASE,cAAT,CACbC,KAAK,GAAGN,SADK,EAEbO,MAFa,EAGe;AAC5BD,EAAAA,KAAK,GAAG,OAAOA,KAAP,KAAiB,WAAjB,GAA+BA,KAA/B,GAAuCN,SAA/C;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBI,KAAtB;;AAEA,UAAQC,MAAM,CAACC,IAAf;AACE,SAAKZ,OAAO,CAACa,8BAAb;AACE,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAoBJ,MAA1B;AACA,YAAMK,KAAK,GAAGf,qBAAqB,CAACa,OAAD,EAAUC,IAAV,CAAnC;AAEA,aAAO,EACL,GAAGL,KADE;AAELL,QAAAA,UAAU,EAAE,EAAE,GAAGK,KAAK,CAACL,UAAX;AAAuB,WAACU,IAAI,CAACE,EAAN,GAAWD;AAAlC;AAFP,OAAP;;AAIF,SAAKhB,OAAO,CAACkB,iCAAb;AACE,YAAM;AAAEH,QAAAA,IAAI,EAAEI;AAAR,UAAmBR,MAAzB;;AAEA,UAAIQ,MAAM,IAAIT,KAAK,CAACL,UAAN,CAAiBc,MAAM,CAACF,EAAxB,CAAd,EAA2C;AACzC,eAAO,EACL,GAAGP,KADE;AAELL,UAAAA,UAAU,EAAE,EAAE,GAAGK,KAAK,CAACL,UAAX;AAAuB,aAACc,MAAM,CAACF,EAAR,GAAaE;AAApC;AAFP,SAAP;AAID;;AAED,aAAOT,KAAP;;AACF,SAAKV,OAAO,CAACoB,wBAAb;AACE,YAAM;AAAEH,QAAAA;AAAF,UAASN,MAAM,CAACG,OAAtB;;AAEA,UAAIG,EAAJ,EAAQ;AACN,cAAM;AAAE,WAACA,EAAD,GAAMI,KAAR;AAAe,aAAGC;AAAlB,YAA6BZ,KAAK,CAACL,UAAzC;AAEA,eAAO,EACL,GAAGK,KADE;AAELL,UAAAA,UAAU,EAAE,EAAE,GAAGiB;AAAL;AAFP,SAAP;AAID,OAPD,MAOO;AACL,eAAO,EACL,GAAGZ,KADE;AAELL,UAAAA,UAAU,EAAE;AAFP,SAAP;AAID;;AACH,SAAKL,OAAO,CAACuB,6BAAb;AACE,aAAO,EACL,GAAGb,KADE;AAELJ,QAAAA,SAAS,EAAEA,SAAS,IAAIA,SAAS,CAACW,EAAV,KAAiBN,MAAM,CAACI,IAAP,CAAYE,EAA1C,GAA+CX,SAA/C,GAA2DC;AAFjE,OAAP;;AAIF,SAAKP,OAAO,CAACwB,sCAAb;AACE,aAAO,EACL,GAAGd,KADE;AAELJ,QAAAA,SAAS,EAAEA,SAAS,IAAIA,SAAS,CAACW,EAAV,KAAiBN,MAAM,CAACI,IAArC,GAA4CT,SAA5C,GAAwDC;AAF9D,OAAP;;AAIF,SAAKP,OAAO,CAACyB,6BAAb;AACE,aAAO,EACL,GAAGf,KADE;AAELJ,QAAAA,SAAS,EAAEJ,oBAAoB,CAACS,MAAM,CAACG,OAAR,EAAiBH,MAAM,CAACI,IAAxB;AAF1B,OAAP;;AAIF,SAAKf,OAAO,CAAC0B,8BAAb;AACE,aAAO,EACL,GAAGhB,KADE;AAELJ,QAAAA,SAAS,EAAEC;AAFN,OAAP;;AAIF,SAAKP,OAAO,CAAC2B,oCAAb;AACE,aAAO,EACL,GAAGjB,KADE;AAELF,QAAAA,UAAU,EAAEL,0BAA0B,CAACQ,MAAM,CAACG,OAAR;AAFjC,OAAP;;AAIF;AACE,aAAOJ,KAAP;AA9DJ;AAgED","sourcesContent":["import * as actions from \"../types\";\r\nimport { createPropertiesModel, createTemplatesModel } from \"../utils\";\r\nimport { createCourseStructureModel } from \"redux/course/structure/utils/index\";\r\n\r\nexport const initState: actions.CourseElementState = {\r\n  properties: {},\r\n  templates: undefined,\r\n  structures: undefined,\r\n};\r\n\r\nexport default function elementReducer(\r\n  state = initState,\r\n  action: actions.ElementActions\r\n): actions.CourseElementState {\r\n  state = typeof state !== \"undefined\" ? state : initState;\r\n  const { templates } = state;\r\n\r\n  switch (action.type) {\r\n    case actions.GET_ELEMENT_PROPERTIES_SUCCESS:\r\n      const { payload, meta } = action;\r\n      const props = createPropertiesModel(payload, meta);\r\n\r\n      return {\r\n        ...state,\r\n        properties: { ...state.properties, [meta.id]: props },\r\n      };\r\n    case actions.UPDATE_ELEMENT_PROPERTIES_SUCCESS:\r\n      const { meta: props2 } = action;\r\n\r\n      if (props2 && state.properties[props2.id]) {\r\n        return {\r\n          ...state,\r\n          properties: { ...state.properties, [props2.id]: props2 },\r\n        };\r\n      }\r\n\r\n      return state;\r\n    case actions.CLEAR_ELEMENT_PROPERTIES:\r\n      const { id } = action.payload;\r\n\r\n      if (id) {\r\n        const { [id]: newId, ...others } = state.properties;\r\n\r\n        return {\r\n          ...state,\r\n          properties: { ...others },\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          properties: {},\r\n        };\r\n      }\r\n    case actions.GET_ELEMENT_TEMPLATES_STARTED:\r\n      return {\r\n        ...state,\r\n        templates: templates && templates.id === action.meta.id ? templates : undefined,\r\n      };\r\n    case actions.GET_SELECTED_ELEMENT_TEMPLATES_STARTED:\r\n      return {\r\n        ...state,\r\n        templates: templates && templates.id === action.meta ? templates : undefined,\r\n      };\r\n    case actions.GET_ELEMENT_TEMPLATES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        templates: createTemplatesModel(action.payload, action.meta),\r\n      };\r\n    case actions.RESET_ELEMENT_TEMPLATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        templates: undefined,\r\n      };\r\n    case actions.GET_COPY_FROM_STRUCTURE_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        structures: createCourseStructureModel(action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}