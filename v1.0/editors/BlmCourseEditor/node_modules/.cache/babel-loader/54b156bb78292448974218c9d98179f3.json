{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\course-properties\\\\core\\\\BlmCoursePropertiesPanel.tsx\";\nimport React, { Fragment, useState } from \"react\";\nimport { Popper, Backdrop } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { CourseCompletionProps, CourseNavigationProps } from \"types\";\nimport { Tabs } from \"shared/material-ui\";\nimport { BlmCourseGeneralProps, BlmCourseNavigationProps, BlmCourseCompletionProps, BlmCourseEvaluationProps, BlmCourseTranslationProps, BlmCourseStyleProps, BlmCourseLogProps } from \"../controls\";\nimport \"./styles.scss\";\nimport { textArea } from \"utils\";\n\nconst createState = (props, config) => {\n  let data = { ...props,\n    navigation: { ...new CourseNavigationProps(),\n      ...(config === null || config === void 0 ? void 0 : config.navigation),\n      ...props.navigation\n    },\n    completion: { ...new CourseCompletionProps(),\n      ...props.completion\n    }\n  };\n  return {\n    data,\n    isEdited: false\n  };\n};\n\nconst modifiers = {\n  offset: {\n    offset: \"10,27\",\n    enabled: true\n  },\n  flip: {\n    enabled: false\n  },\n  keepTogether: {\n    enabled: false\n  },\n  arrow: {\n    enabled: false\n  },\n  preventOverflow: {\n    enabled: false\n  },\n  hide: {\n    enabled: false\n  }\n};\n\nfunction BlmCoursePropertiesPanel(props) {\n  const {\n    open,\n    anchorEle,\n    config,\n    onClose,\n    setCourseProperties,\n    updateCourseProperties,\n    openConfirmDialog\n  } = props;\n  const [state, setState] = useState(() => createState(props.data, config));\n  const {\n    data,\n    isEdited\n  } = state;\n  const {\n    t\n  } = useTranslation();\n\n  const openSaveConfirmDialog = () => {\n    const options = {\n      className: \"template-editor-warning-dialog\",\n      okLabel: `${t(\"button.save\")}`,\n      cancelLabel: `${t(\"button.cancel\")}`\n    };\n    openConfirmDialog(\"\", `${t(\"alert.save_changes\")}`, handleSave, handleCancel, options);\n  };\n\n  const updateTree = newData => {\n    var _newData$navigation;\n\n    if (data && (!newData || data.navigation.navigationlevel !== ((_newData$navigation = newData.navigation) === null || _newData$navigation === void 0 ? void 0 : _newData$navigation.navigationlevel) || data.isEvaluation !== newData.isEvaluation || data.hasFeedback !== newData.hasFeedback)) {\n      setCourseProperties(newData);\n    }\n  };\n\n  const saveChanges = () => {\n    if (isEdited) {\n      let newDescription = textArea(data.description, \"\\n\", \"<br>\");\n      data.description = newDescription;\n      updateCourseProperties(data);\n    }\n  };\n\n  const revertChanges = () => {\n    updateTree();\n  };\n\n  const closePanel = () => {\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  const handleChange = newData => {\n    updateTree(newData);\n    setState({\n      data: newData,\n      isEdited: true\n    });\n  };\n\n  const handleSave = () => {\n    saveChanges();\n    closePanel();\n  };\n\n  const handleCancel = () => {\n    revertChanges();\n    closePanel();\n  };\n\n  const handleBackdropClose = () => {\n    if (isEdited) {\n      openSaveConfirmDialog();\n    } else {\n      closePanel();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Backdrop, {\n    open: open,\n    className: \"course-props-panel-backdrop\",\n    onClick: handleBackdropClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Popper, {\n    open: open,\n    anchorEl: open ? anchorEle : null,\n    placement: \"bottom-end\",\n    modifiers: modifiers,\n    className: \"course-props-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"course-props-panel-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"course-props-panel-anchor-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"course-props-panel-close-btn\",\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tabs, {\n    className: \"course-props-tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BlmCourseGeneralProps, {\n    label: t(\"tabs.general\"),\n    data: data,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BlmCourseNavigationProps, {\n    label: t(\"tabs.navigation\"),\n    config: config,\n    data: data,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BlmCourseCompletionProps, {\n    label: t(\"tabs.completion\"),\n    data: data,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BlmCourseEvaluationProps, {\n    label: t(\"tabs.evaluation\"),\n    data: data,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BlmCourseTranslationProps, {\n    label: t(\"tabs.translation\"),\n    data: data,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BlmCourseStyleProps, {\n    label: t(\"tabs.style\"),\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BlmCourseLogProps, {\n    label: t(\"tabs.log\"),\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default BlmCoursePropertiesPanel;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/course-properties/core/BlmCoursePropertiesPanel.tsx"],"names":["React","Fragment","useState","Popper","Backdrop","useTranslation","CourseCompletionProps","CourseNavigationProps","Tabs","BlmCourseGeneralProps","BlmCourseNavigationProps","BlmCourseCompletionProps","BlmCourseEvaluationProps","BlmCourseTranslationProps","BlmCourseStyleProps","BlmCourseLogProps","textArea","createState","props","config","data","navigation","completion","isEdited","modifiers","offset","enabled","flip","keepTogether","arrow","preventOverflow","hide","BlmCoursePropertiesPanel","open","anchorEle","onClose","setCourseProperties","updateCourseProperties","openConfirmDialog","state","setState","t","openSaveConfirmDialog","options","className","okLabel","cancelLabel","handleSave","handleCancel","updateTree","newData","navigationlevel","isEvaluation","hasFeedback","saveChanges","newDescription","description","revertChanges","closePanel","handleChange","handleBackdropClose"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { Popper, Backdrop } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CourseCompletionProps, CourseNavigationProps, CourseProps, StyleConfig } from \"types\";\r\nimport { Tabs } from \"shared/material-ui\";\r\nimport {\r\n  BlmCourseGeneralProps,\r\n  BlmCourseNavigationProps,\r\n  BlmCourseCompletionProps,\r\n  BlmCourseEvaluationProps,\r\n  BlmCourseTranslationProps,\r\n  BlmCourseStyleProps,\r\n  BlmCourseLogProps,\r\n} from \"../controls\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\nimport { textArea } from \"utils\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  open: boolean;\r\n  anchorEle: HTMLElement;\r\n  data: CourseProps;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst createState = (props: CourseProps, config?: StyleConfig) => {\r\n  let data = {\r\n    ...props,\r\n    navigation: { ...new CourseNavigationProps(), ...config?.navigation, ...props.navigation },\r\n    completion: { ...new CourseCompletionProps(), ...props.completion },\r\n  };\r\n\r\n  return { data, isEdited: false };\r\n};\r\n\r\nconst modifiers = {\r\n  offset: {\r\n    offset: \"10,27\",\r\n    enabled: true,\r\n  },\r\n  flip: {\r\n    enabled: false,\r\n  },\r\n  keepTogether: {\r\n    enabled: false,\r\n  },\r\n  arrow: {\r\n    enabled: false,\r\n  },\r\n  preventOverflow: {\r\n    enabled: false,\r\n  },\r\n  hide: {\r\n    enabled: false,\r\n  },\r\n};\r\n\r\nfunction BlmCoursePropertiesPanel(props: CompProps) {\r\n  const {\r\n    open,\r\n    anchorEle,\r\n    config,\r\n    onClose,\r\n    setCourseProperties,\r\n    updateCourseProperties,\r\n    openConfirmDialog,\r\n  } = props;\r\n  const [state, setState] = useState(() => createState(props.data, config));\r\n  const { data, isEdited } = state;\r\n  const { t } = useTranslation();\r\n\r\n  const openSaveConfirmDialog = () => {\r\n    const options = {\r\n      className: \"template-editor-warning-dialog\",\r\n      okLabel: `${t(\"button.save\")}`,\r\n      cancelLabel: `${t(\"button.cancel\")}`,\r\n    };\r\n\r\n    openConfirmDialog(\"\", `${t(\"alert.save_changes\")}`, handleSave, handleCancel, options);\r\n  };\r\n\r\n  const updateTree = (newData?: CourseProps) => {\r\n    if (\r\n      data &&\r\n      (!newData ||\r\n        data.navigation.navigationlevel !== newData.navigation?.navigationlevel ||\r\n        data.isEvaluation !== newData.isEvaluation ||\r\n        data.hasFeedback !== newData.hasFeedback)\r\n    ) {\r\n      setCourseProperties(newData);\r\n    }\r\n  };\r\n\r\n  const saveChanges = () => {\r\n    if (isEdited) {\r\n      let newDescription = textArea(data.description, \"\\n\", \"<br>\");\r\n      data.description = newDescription;\r\n\r\n      updateCourseProperties(data);\r\n    }\r\n  };\r\n\r\n  const revertChanges = () => {\r\n    updateTree();\r\n  };\r\n\r\n  const closePanel = () => {\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleChange = (newData: CourseProps) => {\r\n    updateTree(newData);\r\n    setState({\r\n      data: newData as CourseProps & {\r\n        navigation: CourseNavigationProps;\r\n        completion: CourseCompletionProps;\r\n      },\r\n      isEdited: true,\r\n    });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    saveChanges();\r\n    closePanel();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    revertChanges();\r\n    closePanel();\r\n  };\r\n\r\n  const handleBackdropClose = () => {\r\n    if (isEdited) {\r\n      openSaveConfirmDialog();\r\n    } else {\r\n      closePanel();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Backdrop open={open} className=\"course-props-panel-backdrop\" onClick={handleBackdropClose} />\r\n      <Popper\r\n        open={open}\r\n        anchorEl={open ? anchorEle : null}\r\n        placement=\"bottom-end\"\r\n        modifiers={modifiers}\r\n        className=\"course-props-panel\"\r\n      >\r\n        <div className=\"course-props-panel-container\">\r\n          <div className=\"course-props-panel-anchor-btn\" />\r\n          <div className=\"course-props-panel-close-btn\" onClick={handleSave} />\r\n          <Tabs className=\"course-props-tabs\">\r\n            <BlmCourseGeneralProps label={t(\"tabs.general\")} data={data} onChange={handleChange} />\r\n            <BlmCourseNavigationProps\r\n              label={t(\"tabs.navigation\")}\r\n              config={config}\r\n              data={data}\r\n              onChange={handleChange}\r\n            />\r\n            <BlmCourseCompletionProps\r\n              label={t(\"tabs.completion\")}\r\n              data={data}\r\n              onChange={handleChange}\r\n            />\r\n            <BlmCourseEvaluationProps\r\n              label={t(\"tabs.evaluation\")}\r\n              data={data}\r\n              onChange={handleChange}\r\n            />\r\n            <BlmCourseTranslationProps\r\n              label={t(\"tabs.translation\")}\r\n              data={data}\r\n              onChange={handleChange}\r\n            />\r\n            <BlmCourseStyleProps label={t(\"tabs.style\")} data={data} />\r\n            <BlmCourseLogProps label={t(\"tabs.log\")} data={data} />\r\n          </Tabs>\r\n        </div>\r\n      </Popper>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default BlmCoursePropertiesPanel;\r\n"]},"metadata":{},"sourceType":"module"}