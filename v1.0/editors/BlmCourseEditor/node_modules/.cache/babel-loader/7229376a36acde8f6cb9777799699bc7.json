{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\template-editors\\\\containers\\\\template-scroll\\\\BlmTemplateScroll.tsx\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { Checkbox, FormControlLabel, MenuItem, MenuList } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { ScrollTransitionTypes } from \"editor-constants\";\nimport { filterFalsy, toggleAttributeInString, toJSONString } from \"utils\";\nimport \"./styles.scss\";\nconst initEditor = {\n  isEdited: false\n};\n\nconst createTemplate = (template, scroll) => {\n  const newTemplate = { ...template\n  };\n  const {\n    type = ScrollTransitionTypes.Basic,\n    effect,\n    parallaxe\n  } = scroll;\n  const options = {\n    parallaxecomponents: type !== ScrollTransitionTypes.Zoom ? parallaxe : undefined,\n    fixedtransitioneffects: type === ScrollTransitionTypes.Fixed ? effect : undefined\n  };\n  const attrs = {\n    \"blm-scroll-transition\": type,\n    \"blm-scroll-option\": filterFalsy(Object.values(options)).length ? toJSONString(options) : undefined\n  };\n  newTemplate.scroll = scroll;\n  newTemplate.html = toggleAttributeInString(newTemplate.html, attrs, \".outercontainer\");\n  return newTemplate;\n};\n\nconst BlmTemplateScroll = forwardRef((props, ref) => {\n  var _data$effect, _data$parallaxe;\n\n  const {\n    template,\n    onSave,\n    onClose\n  } = props;\n  const [editor, setEditor] = useState(initEditor);\n  const {\n    data,\n    isEdited\n  } = editor;\n  const {\n    t\n  } = useTranslation(\"template-editors\");\n  useEffect(() => {\n    if (template) {\n      const newData = { ...template.scroll,\n        type: template.scroll.type || ScrollTransitionTypes.Basic\n      };\n      setEditor({\n        data: newData,\n        isEdited: !template.scroll.type\n      });\n    }\n  }, [template]);\n  useImperativeHandle(ref, () => ({\n    isEdited,\n    saveOnClose: handleSaveOnClose,\n    revert: () => {}\n  }));\n\n  const saveChanges = () => {\n    if (isEdited && data) {\n      const newTemplate = createTemplate(template, data);\n\n      if (onSave) {\n        onSave(newTemplate);\n      }\n    }\n  };\n\n  const updateChange = newData => {\n    setEditor({\n      data: newData,\n      isEdited: true\n    });\n  };\n\n  const handleItemClick = event => {\n    const {\n      dataset: {\n        value\n      }\n    } = event.currentTarget;\n\n    if (data && value) {\n      updateChange({ ...data,\n        type: value\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n\n    if (data && (name === \"effect\" || \"parallax\")) {\n      updateChange({ ...data,\n        [name]: value\n      });\n    }\n  };\n\n  const handleSaveOnClose = event => {\n    saveChanges();\n\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-scroll-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-scroll-anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-scroll-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-scroll-close-btn\",\n    onClick: handleSaveOnClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MenuList, {\n    className: \"template-scroll-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    \"data-value\": ScrollTransitionTypes.Basic,\n    selected: (data === null || data === void 0 ? void 0 : data.type) === ScrollTransitionTypes.Basic,\n    className: \"basic\",\n    onClick: handleItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, t(\"transition.basic\")), /*#__PURE__*/React.createElement(MenuItem, {\n    \"data-value\": ScrollTransitionTypes.Fixed,\n    selected: (data === null || data === void 0 ? void 0 : data.type) === ScrollTransitionTypes.Fixed,\n    className: \"fixed\",\n    onClick: handleItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, t(\"transition.fixed\")), /*#__PURE__*/React.createElement(MenuItem, {\n    \"data-value\": ScrollTransitionTypes.Parallax,\n    selected: (data === null || data === void 0 ? void 0 : data.type) === ScrollTransitionTypes.Parallax,\n    className: \"parallax\",\n    onClick: handleItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, t(\"transition.parallax\")), /*#__PURE__*/React.createElement(MenuItem, {\n    \"data-value\": ScrollTransitionTypes.Zoom,\n    selected: (data === null || data === void 0 ? void 0 : data.type) === ScrollTransitionTypes.Zoom,\n    className: \"zoom\",\n    onClick: handleItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, t(\"transition.zoom\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"template-scroll-ctrls\", data === null || data === void 0 ? void 0 : data.type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-scroll-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }), (data === null || data === void 0 ? void 0 : data.type) === ScrollTransitionTypes.Fixed && /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"effect\",\n    label: t(\"transition.label.shadow\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 24\n      }\n    }),\n    checked: (_data$effect = data === null || data === void 0 ? void 0 : data.effect) !== null && _data$effect !== void 0 ? _data$effect : false,\n    className: \"template-scroll-effect-frm-ctrl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), (data === null || data === void 0 ? void 0 : data.type) !== ScrollTransitionTypes.Zoom && /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"parallaxe\",\n    label: t(\"transition.label.comp_parallaxe\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 24\n      }\n    }),\n    checked: (_data$parallaxe = data === null || data === void 0 ? void 0 : data.parallaxe) !== null && _data$parallaxe !== void 0 ? _data$parallaxe : false,\n    className: \"template-scroll-parallaxe-frm-ctrl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }))));\n});\nexport default BlmTemplateScroll;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/template-editors/containers/template-scroll/BlmTemplateScroll.tsx"],"names":["React","forwardRef","useEffect","useImperativeHandle","useState","clsx","Checkbox","FormControlLabel","MenuItem","MenuList","useTranslation","ScrollTransitionTypes","filterFalsy","toggleAttributeInString","toJSONString","initEditor","isEdited","createTemplate","template","scroll","newTemplate","type","Basic","effect","parallaxe","options","parallaxecomponents","Zoom","undefined","fixedtransitioneffects","Fixed","attrs","Object","values","length","html","BlmTemplateScroll","props","ref","onSave","onClose","editor","setEditor","data","t","newData","saveOnClose","handleSaveOnClose","revert","saveChanges","updateChange","handleItemClick","event","dataset","value","currentTarget","handleChange","target","name","checked","Parallax"],"mappings":"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","sourcesContent":["import React, {\r\n  ChangeEvent,\r\n  forwardRef,\r\n  MouseEvent,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useState,\r\n} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Checkbox, FormControlLabel, MenuItem, MenuList } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CourseElementTemplate, TemplateEditorComponent, TemplateScroll } from \"types\";\r\nimport { ScrollTransitionTypes } from \"editor-constants\";\r\nimport { filterFalsy, toggleAttributeInString, toJSONString } from \"utils\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  template: CourseElementTemplate;\r\n  onSave?: (template: CourseElementTemplate) => void;\r\n  onClose?: (event: MouseEvent) => void;\r\n}\r\n\r\nexport interface EditorState {\r\n  data?: TemplateScroll;\r\n  isEdited: boolean;\r\n}\r\n\r\nconst initEditor: EditorState = { isEdited: false };\r\n\r\nconst createTemplate = (template: CourseElementTemplate, scroll: TemplateScroll) => {\r\n  const newTemplate = { ...template };\r\n  const { type = ScrollTransitionTypes.Basic, effect, parallaxe } = scroll;\r\n  const options = {\r\n    parallaxecomponents: type !== ScrollTransitionTypes.Zoom ? parallaxe : undefined,\r\n    fixedtransitioneffects: type === ScrollTransitionTypes.Fixed ? effect : undefined,\r\n  };\r\n  const attrs = {\r\n    \"blm-scroll-transition\": type,\r\n    \"blm-scroll-option\": filterFalsy(Object.values(options)).length\r\n      ? toJSONString(options)\r\n      : undefined,\r\n  };\r\n\r\n  newTemplate.scroll = scroll;\r\n  newTemplate.html = toggleAttributeInString(newTemplate.html, attrs, \".outercontainer\");\r\n\r\n  return newTemplate;\r\n};\r\n\r\nconst BlmTemplateScroll = forwardRef<TemplateEditorComponent, CompProps>((props, ref) => {\r\n  const { template, onSave, onClose } = props;\r\n  const [editor, setEditor] = useState(initEditor);\r\n  const { data, isEdited } = editor;\r\n  const { t } = useTranslation(\"template-editors\");\r\n\r\n  useEffect(() => {\r\n    if (template) {\r\n      const newData = {\r\n        ...template.scroll,\r\n        type: template.scroll.type || ScrollTransitionTypes.Basic,\r\n      };\r\n\r\n      setEditor({ data: newData, isEdited: !template.scroll.type });\r\n    }\r\n  }, [template]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    isEdited,\r\n    saveOnClose: handleSaveOnClose,\r\n    revert: () => {},\r\n  }));\r\n\r\n  const saveChanges = () => {\r\n    if (isEdited && data) {\r\n      const newTemplate = createTemplate(template, data);\r\n\r\n      if (onSave) {\r\n        onSave(newTemplate);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateChange = (newData: TemplateScroll) => {\r\n    setEditor({ data: newData, isEdited: true });\r\n  };\r\n\r\n  const handleItemClick = (event: MouseEvent<HTMLElement>) => {\r\n    const {\r\n      dataset: { value },\r\n    } = event.currentTarget;\r\n\r\n    if (data && value) {\r\n      updateChange({ ...data, type: value as ScrollTransitionTypes });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<any>) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    if (data && (name === \"effect\" || \"parallax\")) {\r\n      updateChange({ ...data, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSaveOnClose = (event: MouseEvent) => {\r\n    saveChanges();\r\n\r\n    if (onClose) {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"template-scroll-panel\">\r\n      <div className=\"template-scroll-anchor\" />\r\n      <div className=\"template-scroll-content\">\r\n        <div className=\"template-scroll-close-btn\" onClick={handleSaveOnClose} />\r\n        <MenuList className=\"template-scroll-list\">\r\n          <MenuItem\r\n            data-value={ScrollTransitionTypes.Basic}\r\n            selected={data?.type === ScrollTransitionTypes.Basic}\r\n            className=\"basic\"\r\n            onClick={handleItemClick}\r\n          >\r\n            {t(\"transition.basic\")}\r\n          </MenuItem>\r\n          <MenuItem\r\n            data-value={ScrollTransitionTypes.Fixed}\r\n            selected={data?.type === ScrollTransitionTypes.Fixed}\r\n            className=\"fixed\"\r\n            onClick={handleItemClick}\r\n          >\r\n            {t(\"transition.fixed\")}\r\n          </MenuItem>\r\n          <MenuItem\r\n            data-value={ScrollTransitionTypes.Parallax}\r\n            selected={data?.type === ScrollTransitionTypes.Parallax}\r\n            className=\"parallax\"\r\n            onClick={handleItemClick}\r\n          >\r\n            {t(\"transition.parallax\")}\r\n          </MenuItem>\r\n          <MenuItem\r\n            data-value={ScrollTransitionTypes.Zoom}\r\n            selected={data?.type === ScrollTransitionTypes.Zoom}\r\n            className=\"zoom\"\r\n            onClick={handleItemClick}\r\n          >\r\n            {t(\"transition.zoom\")}\r\n          </MenuItem>\r\n        </MenuList>\r\n        <div className={clsx(\"template-scroll-ctrls\", data?.type)}>\r\n          <div className=\"template-scroll-preview\" />\r\n          {data?.type === ScrollTransitionTypes.Fixed && (\r\n            <FormControlLabel\r\n              name=\"effect\"\r\n              label={t(\"transition.label.shadow\")}\r\n              control={<Checkbox />}\r\n              checked={data?.effect ?? false}\r\n              className=\"template-scroll-effect-frm-ctrl\"\r\n              onChange={handleChange}\r\n            />\r\n          )}\r\n          {data?.type !== ScrollTransitionTypes.Zoom && (\r\n            <FormControlLabel\r\n              name=\"parallaxe\"\r\n              label={t(\"transition.label.comp_parallaxe\")}\r\n              control={<Checkbox />}\r\n              checked={data?.parallaxe ?? false}\r\n              className=\"template-scroll-parallaxe-frm-ctrl\"\r\n              onChange={handleChange}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default BlmTemplateScroll;\r\n"]},"metadata":{},"sourceType":"module"}