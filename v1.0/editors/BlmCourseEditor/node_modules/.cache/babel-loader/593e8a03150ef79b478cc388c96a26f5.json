{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\domain\\\\templates-panel\\\\category-list\\\\category-list-item\\\\BlmCategoryListItem.tsx\";\nimport React, { Fragment, useState, useContext } from \"react\";\nimport clsx from \"clsx\";\nimport { Collapse } from \"@material-ui/core\";\nimport { hasSubCategory } from \"utils\";\nimport { createCategoryList } from \"../utils\";\nimport CategoryListContext from \"../CategoryListContext\";\nimport \"./category-list-item.scss\";\n\nfunction isInitialyOpened(category, selected) {\n  if (hasSubCategory(category) && selected) {\n    let parent = selected.parent;\n\n    while (parent) {\n      if (parent === category) {\n        return true;\n      }\n\n      parent = parent.parent;\n    }\n  }\n\n  return false;\n}\n\nfunction BlmCategoryListItem(props) {\n  const {\n    data\n  } = props;\n  const {\n    name,\n    description\n  } = data;\n  const {\n    selectedCategory,\n    onCategoryItemClick\n  } = useContext(CategoryListContext);\n  const [open, setOpen] = useState(() => isInitialyOpened(data, selectedCategory));\n\n  const handleClick = event => {\n    if (onCategoryItemClick) {\n      onCategoryItemClick(data);\n    }\n  };\n\n  const handleCollapseClick = event => {\n    setOpen(!open);\n  };\n\n  const createChildren = () => {\n    if (hasSubCategory(data)) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"category-item-wrapper\",\n        onClick: handleCollapseClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: clsx(\"category-item-switch\", {\n          open\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, description ? description : name)), /*#__PURE__*/React.createElement(Collapse, {\n        in: open,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, createCategoryList(data.children)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"category-item-lbl\",\n        onClick: handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, description ? description : name));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: clsx(\"category-list-item\", {\n      selected: (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id) === data.id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, createChildren());\n}\n\nexport default BlmCategoryListItem;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/domain/templates-panel/category-list/category-list-item/BlmCategoryListItem.tsx"],"names":["React","Fragment","useState","useContext","clsx","Collapse","hasSubCategory","createCategoryList","CategoryListContext","isInitialyOpened","category","selected","parent","BlmCategoryListItem","props","data","name","description","selectedCategory","onCategoryItemClick","open","setOpen","handleClick","event","handleCollapseClick","createChildren","children","id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useContext, MouseEvent } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Collapse } from \"@material-ui/core\";\r\n\r\nimport { TemplateCategory } from \"types\";\r\nimport { hasSubCategory } from \"utils\";\r\nimport { createCategoryList } from \"../utils\";\r\nimport CategoryListContext from \"../CategoryListContext\";\r\nimport \"./category-list-item.scss\";\r\n\r\nexport interface CompProps {\r\n  data: TemplateCategory;\r\n}\r\n\r\nfunction isInitialyOpened(category: TemplateCategory, selected?: TemplateCategory) {\r\n  if (hasSubCategory(category) && selected) {\r\n    let parent = selected.parent;\r\n\r\n    while (parent) {\r\n      if (parent === category) {\r\n        return true;\r\n      }\r\n      parent = parent.parent;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction BlmCategoryListItem(props: CompProps) {\r\n  const { data } = props;\r\n  const { name, description } = data;\r\n  const { selectedCategory, onCategoryItemClick } = useContext(CategoryListContext);\r\n  const [open, setOpen] = useState(() => isInitialyOpened(data, selectedCategory));\r\n\r\n  const handleClick = (event: MouseEvent) => {\r\n    if (onCategoryItemClick) {\r\n      onCategoryItemClick(data);\r\n    }\r\n  };\r\n\r\n  const handleCollapseClick = (event: MouseEvent) => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const createChildren = () => {\r\n    if (hasSubCategory(data)) {\r\n      return (\r\n        <Fragment>\r\n          <div className=\"category-item-wrapper\" onClick={handleCollapseClick}>\r\n            <div className={clsx(\"category-item-switch\", { open })} />\r\n            <span>{description ? description : name}</span>\r\n          </div>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            {createCategoryList(data.children as TemplateCategory[])}\r\n          </Collapse>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"category-item-lbl\" onClick={handleClick}>\r\n          <span>{description ? description : name}</span>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li\r\n      className={clsx(\"category-list-item\", {\r\n        selected: selectedCategory?.id === data.id,\r\n      })}\r\n    >\r\n      {createChildren()}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default BlmCategoryListItem;\r\n"]},"metadata":{},"sourceType":"module"}