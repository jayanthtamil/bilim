{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\templates\\\\controls\\\\anchor\\\\BlmAnchorBtn.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAnchorButtonStyle } from \"./styles\";\n\nfunction BlmAnchorBtn(props) {\n  const {\n    name,\n    hasAnchor,\n    className,\n    onNameChange,\n    onAnchorChange\n  } = props;\n  const [title, setTitle] = useState(name);\n  const classes = useAnchorButtonStyle();\n  const {\n    t\n  } = useTranslation(\"templates\");\n  useEffect(() => {\n    setTitle(name);\n  }, [name, setTitle]);\n\n  const handleAnchorClick = () => {\n    if (onAnchorChange) {\n      onAnchorChange(!hasAnchor);\n    }\n  };\n\n  const handleTitleChange = event => {\n    const {\n      value\n    } = event.target;\n    setTitle(value);\n  };\n\n  const updateTitle = () => {\n    if (name !== title && onNameChange) {\n      onNameChange(title);\n    }\n  };\n\n  const handleTitleBlur = () => {\n    updateTitle();\n  };\n\n  const handleTitleKeyDown = event => {\n    if (event.keyCode === 13) {\n      updateTitle();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, className, {\n      [classes.hasAnchor]: hasAnchor\n    }),\n    title: t(\"part_page_tool.anchor\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, hasAnchor && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    className: classes.anchorTxt,\n    onChange: handleTitleChange,\n    onBlur: handleTitleBlur,\n    onKeyDown: handleTitleKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.anchorBtn,\n    onClick: handleAnchorClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BlmAnchorBtn;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/templates/controls/anchor/BlmAnchorBtn.tsx"],"names":["React","useState","useEffect","clsx","useTranslation","useAnchorButtonStyle","BlmAnchorBtn","props","name","hasAnchor","className","onNameChange","onAnchorChange","title","setTitle","classes","t","handleAnchorClick","handleTitleChange","event","value","target","updateTitle","handleTitleBlur","handleTitleKeyDown","keyCode","root","anchorTxt","anchorBtn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAsDC,SAAtD,QAAuE,OAAvE;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,SAASC,oBAAT,QAAqC,UAArC;;AAUA,SAASC,YAAT,CAAsBC,KAAtB,EAAwC;AACtC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA,YAA9B;AAA4CC,IAAAA;AAA5C,MAA+DL,KAArE;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACO,IAAD,CAAlC;AACA,QAAMO,OAAO,GAAGV,oBAAoB,EAApC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAQZ,cAAc,CAAC,WAAD,CAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACN,IAAD,CAAR;AACD,GAFQ,EAEN,CAACA,IAAD,EAAOM,QAAP,CAFM,CAAT;;AAIA,QAAMG,iBAAiB,GAAG,MAAM;AAC9B,QAAIL,cAAJ,EAAoB;AAClBA,MAAAA,cAAc,CAAC,CAACH,SAAF,CAAd;AACD;AACF,GAJD;;AAMA,QAAMS,iBAAiB,GAAIC,KAAD,IAA0C;AAClE,UAAM;AAAEC,MAAAA;AAAF,QAAYD,KAAK,CAACE,MAAxB;AAEAP,IAAAA,QAAQ,CAACM,KAAD,CAAR;AACD,GAJD;;AAMA,QAAME,WAAW,GAAG,MAAM;AACxB,QAAId,IAAI,KAAKK,KAAT,IAAkBF,YAAtB,EAAoC;AAClCA,MAAAA,YAAY,CAACE,KAAD,CAAZ;AACD;AACF,GAJD;;AAMA,QAAMU,eAAe,GAAG,MAAM;AAC5BD,IAAAA,WAAW;AACZ,GAFD;;AAIA,QAAME,kBAAkB,GAAIL,KAAD,IAA0B;AACnD,QAAIA,KAAK,CAACM,OAAN,KAAkB,EAAtB,EAA0B;AACxBH,MAAAA,WAAW;AACZ;AACF,GAJD;;AAMA,sBACE;AACE,IAAA,SAAS,EAAEnB,IAAI,CAACY,OAAO,CAACW,IAAT,EAAehB,SAAf,EAA0B;AACvC,OAACK,OAAO,CAACN,SAAT,GAAqBA;AADkB,KAA1B,CADjB;AAIE,IAAA,KAAK,EAAEO,CAAC,CAAC,uBAAD,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGP,SAAS,iBACR;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEI,KAFT;AAGE,IAAA,SAAS,EAAEE,OAAO,CAACY,SAHrB;AAIE,IAAA,QAAQ,EAAET,iBAJZ;AAKE,IAAA,MAAM,EAAEK,eALV;AAME,IAAA,SAAS,EAAEC,kBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAgBE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACa,SAAxB;AAAmC,IAAA,OAAO,EAAEX,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAoBD;;AACD,eAAeX,YAAf","sourcesContent":["import React, { useState, ChangeEvent, KeyboardEvent, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { useAnchorButtonStyle } from \"./styles\";\r\n\r\ninterface CompProps {\r\n  name: string;\r\n  hasAnchor: boolean;\r\n  className?: string;\r\n  onNameChange: (name: string) => void;\r\n  onAnchorChange: (hasAnchor: boolean) => void;\r\n}\r\n\r\nfunction BlmAnchorBtn(props: CompProps) {\r\n  const { name, hasAnchor, className, onNameChange, onAnchorChange } = props;\r\n  const [title, setTitle] = useState(name);\r\n  const classes = useAnchorButtonStyle();\r\n  const { t } = useTranslation(\"templates\");\r\n\r\n  useEffect(() => {\r\n    setTitle(name);\r\n  }, [name, setTitle]);\r\n\r\n  const handleAnchorClick = () => {\r\n    if (onAnchorChange) {\r\n      onAnchorChange(!hasAnchor);\r\n    }\r\n  };\r\n\r\n  const handleTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    setTitle(value);\r\n  };\r\n\r\n  const updateTitle = () => {\r\n    if (name !== title && onNameChange) {\r\n      onNameChange(title);\r\n    }\r\n  };\r\n\r\n  const handleTitleBlur = () => {\r\n    updateTitle();\r\n  };\r\n\r\n  const handleTitleKeyDown = (event: KeyboardEvent) => {\r\n    if (event.keyCode === 13) {\r\n      updateTitle();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className, {\r\n        [classes.hasAnchor]: hasAnchor,\r\n      })}\r\n      title={t(\"part_page_tool.anchor\")}\r\n    >\r\n      {hasAnchor && (\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          className={classes.anchorTxt}\r\n          onChange={handleTitleChange}\r\n          onBlur={handleTitleBlur}\r\n          onKeyDown={handleTitleKeyDown}\r\n        />\r\n      )}\r\n      <div className={classes.anchorBtn} onClick={handleAnchorClick} />\r\n    </div>\r\n  );\r\n}\r\nexport default BlmAnchorBtn;\r\n"]},"metadata":{},"sourceType":"module"}