{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall draft_js\n */\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nvar BlockMapBuilder = require(\"./BlockMapBuilder\");\n\nvar CharacterMetadata = require(\"./CharacterMetadata\");\n\nvar ContentBlock = require(\"./ContentBlock\");\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar DraftEntity = require(\"./DraftEntity\");\n\nvar SelectionState = require(\"./SelectionState\");\n\nvar generateRandomKey = require(\"./generateRandomKey\");\n\nvar getOwnObjectValues = require(\"./getOwnObjectValues\");\n\nvar gkx = require(\"./gkx\");\n\nvar Immutable = require(\"immutable\");\n\nvar sanitizeDraftText = require(\"./sanitizeDraftText\");\n\nvar List = Immutable.List,\n    Record = Immutable.Record,\n    Repeat = Immutable.Repeat,\n    ImmutableMap = Immutable.Map,\n    OrderedMap = Immutable.OrderedMap;\nvar defaultRecord = {\n  entityMap: null,\n  blockMap: null,\n  selectionBefore: null,\n  selectionAfter: null\n}; // Immutable 3 typedefs are not good, so ContentState ends up\n// subclassing `any`. Define a rudimentary type for the\n// supercalss here instead.\n\nvar ContentStateRecord = Record(defaultRecord);\n/* $FlowFixMe[signature-verification-failure] Supressing a `signature-\n * verification-failure` error here. TODO: T65949050 Clean up the branch for\n * this GK */\n\nvar ContentBlockNodeRecord = gkx('draft_tree_data_support') ? ContentBlockNode : ContentBlock;\n\nvar ContentState = /*#__PURE__*/function (_ContentStateRecord) {\n  _inheritsLoose(ContentState, _ContentStateRecord);\n\n  function ContentState() {\n    return _ContentStateRecord.apply(this, arguments) || this;\n  }\n\n  var _proto = ContentState.prototype;\n\n  _proto.getEntityMap = function getEntityMap() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity;\n  };\n\n  _proto.getBlockMap = function getBlockMap() {\n    // $FlowFixMe[prop-missing] found when removing casts of this to any\n    return this.get('blockMap');\n  };\n\n  _proto.getSelectionBefore = function getSelectionBefore() {\n    // $FlowFixMe[prop-missing] found when removing casts of this to any\n    return this.get('selectionBefore');\n  };\n\n  _proto.getSelectionAfter = function getSelectionAfter() {\n    // $FlowFixMe[prop-missing] found when removing casts of this to any\n    return this.get('selectionAfter');\n  };\n\n  _proto.getBlockForKey = function getBlockForKey(key) {\n    var block = this.getBlockMap().get(key);\n    return block;\n  };\n\n  _proto.getKeyBefore = function getKeyBefore(key) {\n    return this.getBlockMap().reverse().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n\n  _proto.getKeyAfter = function getKeyAfter(key) {\n    return this.getBlockMap().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n\n  _proto.getBlockAfter = function getBlockAfter(key) {\n    return this.getBlockMap().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n\n  _proto.getBlockBefore = function getBlockBefore(key) {\n    return this.getBlockMap().reverse().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n\n  _proto.getBlocksAsArray = function getBlocksAsArray() {\n    return this.getBlockMap().toArray();\n  };\n\n  _proto.getFirstBlock = function getFirstBlock() {\n    return this.getBlockMap().first();\n  };\n\n  _proto.getLastBlock = function getLastBlock() {\n    return this.getBlockMap().last();\n  };\n\n  _proto.getPlainText = function getPlainText(delimiter) {\n    return this.getBlockMap().map(function (block) {\n      return block ? block.getText() : '';\n    }).join(delimiter || '\\n');\n  };\n\n  _proto.getLastCreatedEntityKey = function getLastCreatedEntityKey() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__getLastCreatedEntityKey();\n  };\n\n  _proto.hasText = function hasText() {\n    var blockMap = this.getBlockMap();\n    return blockMap.size > 1 || // make sure that there are no zero width space chars\n    escape(blockMap.first().getText()).replace(/%u200B/g, '').length > 0;\n  };\n\n  _proto.createEntity = function createEntity(type, mutability, data) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__create(type, mutability, data);\n\n    return this;\n  };\n\n  _proto.mergeEntityData = function mergeEntityData(key, toMerge) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__mergeData(key, toMerge);\n\n    return this;\n  };\n\n  _proto.replaceEntityData = function replaceEntityData(key, newData) {\n    // TODO: update this when we fully remove DraftEntity\n\n    /* $FlowFixMe[class-object-subtyping] added when improving typing for this\n     * parameters */\n    DraftEntity.__replaceData(key, newData);\n\n    return this;\n  };\n\n  _proto.addEntity = function addEntity(instance) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__add(instance);\n\n    return this;\n  };\n\n  _proto.getEntity = function getEntity(key) {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__get(key);\n  };\n\n  _proto.getAllEntities = function getAllEntities() {\n    return DraftEntity.__getAll();\n  };\n\n  _proto.setEntityMap = function setEntityMap(entityMap) {\n    DraftEntity.__loadWithEntities(entityMap);\n\n    return this;\n  };\n\n  ContentState.mergeEntityMaps = function mergeEntityMaps(to, from) {\n    return to.merge(from.__getAll());\n  } // TODO: when EntityMap is moved into content state this and `setEntityMap`\n  // Will be the exact same. Merge them then.\n  ;\n\n  _proto.replaceEntityMap = function replaceEntityMap(entityMap) {\n    return this.setEntityMap(entityMap.__getAll());\n  };\n\n  _proto.setSelectionBefore = function setSelectionBefore(selection) {\n    // $FlowFixMe[prop-missing] found when removing casts of this to any\n    return this.set('selectionBefore', selection);\n  };\n\n  _proto.setSelectionAfter = function setSelectionAfter(selection) {\n    // $FlowFixMe[prop-missing] found when removing casts of this to any\n    return this.set('selectionAfter', selection);\n  };\n\n  _proto.setBlockMap = function setBlockMap(blockMap) {\n    // $FlowFixMe[prop-missing] found when removing casts of this to any\n    return this.set('blockMap', blockMap);\n  };\n\n  ContentState.createFromBlockArray = function createFromBlockArray( // TODO: update flow type when we completely deprecate the old entity API\n  blocks, entityMap) {\n    // TODO: remove this when we completely deprecate the old entity API\n    var theBlocks = Array.isArray(blocks) ? blocks : blocks.contentBlocks;\n    var blockMap = BlockMapBuilder.createFromArray(theBlocks);\n    var selectionState = blockMap.isEmpty() ? new SelectionState() : SelectionState.createEmpty(blockMap.first().getKey());\n    return new ContentState({\n      blockMap: blockMap,\n      entityMap: entityMap || DraftEntity,\n      selectionBefore: selectionState,\n      selectionAfter: selectionState\n    });\n  };\n\n  ContentState.createFromText = function createFromText(text) {\n    var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /\\r\\n?|\\n/g;\n    var strings = text.split(delimiter);\n    var blocks = strings.map(function (block) {\n      block = sanitizeDraftText(block);\n      return new ContentBlockNodeRecord({\n        key: generateRandomKey(),\n        text: block,\n        type: 'unstyled',\n        characterList: List(Repeat(CharacterMetadata.EMPTY, block.length))\n      });\n    });\n    return ContentState.createFromBlockArray(blocks);\n  };\n\n  ContentState.fromJS = function fromJS(state) {\n    return new ContentState(_objectSpread(_objectSpread({}, state), {}, {\n      blockMap: OrderedMap(state.blockMap).map( // $FlowFixMe[method-unbinding]\n      ContentState.createContentBlockFromJS),\n      selectionBefore: new SelectionState(state.selectionBefore),\n      selectionAfter: new SelectionState(state.selectionAfter)\n    }));\n  };\n\n  ContentState.createContentBlockFromJS = function createContentBlockFromJS(block) {\n    var characterList = block.characterList;\n    return new ContentBlockNodeRecord(_objectSpread(_objectSpread({}, block), {}, {\n      data: ImmutableMap(block.data),\n      characterList: characterList != null ? List((Array.isArray(characterList) ? characterList : getOwnObjectValues(characterList)).map(function (c) {\n        return CharacterMetadata.fromJS(c);\n      })) : undefined\n    }));\n  };\n\n  return ContentState;\n}(ContentStateRecord);\n\nmodule.exports = ContentState;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/node_modules/draft-js/lib/ContentState.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_inheritsLoose","subClass","superClass","prototype","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","BlockMapBuilder","require","CharacterMetadata","ContentBlock","ContentBlockNode","DraftEntity","SelectionState","generateRandomKey","getOwnObjectValues","gkx","Immutable","sanitizeDraftText","List","Record","Repeat","ImmutableMap","Map","OrderedMap","defaultRecord","entityMap","blockMap","selectionBefore","selectionAfter","ContentStateRecord","ContentBlockNodeRecord","ContentState","_ContentStateRecord","_proto","getEntityMap","getBlockMap","get","getSelectionBefore","getSelectionAfter","getBlockForKey","block","getKeyBefore","reverse","keySeq","skipUntil","v","skip","first","getKeyAfter","getBlockAfter","_","k","getBlockBefore","getBlocksAsArray","toArray","getFirstBlock","getLastBlock","last","getPlainText","delimiter","map","getText","join","getLastCreatedEntityKey","__getLastCreatedEntityKey","hasText","size","escape","replace","createEntity","type","mutability","data","__create","mergeEntityData","toMerge","__mergeData","replaceEntityData","newData","__replaceData","addEntity","instance","__add","getEntity","__get","getAllEntities","__getAll","setEntityMap","__loadWithEntities","mergeEntityMaps","to","from","merge","replaceEntityMap","setSelectionBefore","selection","set","setSelectionAfter","setBlockMap","createFromBlockArray","blocks","theBlocks","Array","isArray","contentBlocks","createFromArray","selectionState","isEmpty","createEmpty","getKey","createFromText","text","undefined","strings","split","characterList","EMPTY","fromJS","state","createContentBlockFromJS","c","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall draft_js\n */\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar BlockMapBuilder = require(\"./BlockMapBuilder\");\n\nvar CharacterMetadata = require(\"./CharacterMetadata\");\n\nvar ContentBlock = require(\"./ContentBlock\");\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar DraftEntity = require(\"./DraftEntity\");\n\nvar SelectionState = require(\"./SelectionState\");\n\nvar generateRandomKey = require(\"./generateRandomKey\");\n\nvar getOwnObjectValues = require(\"./getOwnObjectValues\");\n\nvar gkx = require(\"./gkx\");\n\nvar Immutable = require(\"immutable\");\n\nvar sanitizeDraftText = require(\"./sanitizeDraftText\");\n\nvar List = Immutable.List,\n    Record = Immutable.Record,\n    Repeat = Immutable.Repeat,\n    ImmutableMap = Immutable.Map,\n    OrderedMap = Immutable.OrderedMap;\nvar defaultRecord = {\n  entityMap: null,\n  blockMap: null,\n  selectionBefore: null,\n  selectionAfter: null\n}; // Immutable 3 typedefs are not good, so ContentState ends up\n// subclassing `any`. Define a rudimentary type for the\n// supercalss here instead.\n\nvar ContentStateRecord = Record(defaultRecord);\n/* $FlowFixMe[signature-verification-failure] Supressing a `signature-\n * verification-failure` error here. TODO: T65949050 Clean up the branch for\n * this GK */\n\nvar ContentBlockNodeRecord = gkx('draft_tree_data_support') ? ContentBlockNode : ContentBlock;\n\nvar ContentState = /*#__PURE__*/function (_ContentStateRecord) {\n  _inheritsLoose(ContentState, _ContentStateRecord);\n\n  function ContentState() {\n    return _ContentStateRecord.apply(this, arguments) || this;\n  }\n\n  var _proto = ContentState.prototype;\n\n  _proto.getEntityMap = function getEntityMap() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity;\n  };\n\n  _proto.getBlockMap = function getBlockMap() {\n    // $FlowFixMe[prop-missing] found when removing casts of this to any\n    return this.get('blockMap');\n  };\n\n  _proto.getSelectionBefore = function getSelectionBefore() {\n    // $FlowFixMe[prop-missing] found when removing casts of this to any\n    return this.get('selectionBefore');\n  };\n\n  _proto.getSelectionAfter = function getSelectionAfter() {\n    // $FlowFixMe[prop-missing] found when removing casts of this to any\n    return this.get('selectionAfter');\n  };\n\n  _proto.getBlockForKey = function getBlockForKey(key) {\n    var block = this.getBlockMap().get(key);\n    return block;\n  };\n\n  _proto.getKeyBefore = function getKeyBefore(key) {\n    return this.getBlockMap().reverse().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n\n  _proto.getKeyAfter = function getKeyAfter(key) {\n    return this.getBlockMap().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n\n  _proto.getBlockAfter = function getBlockAfter(key) {\n    return this.getBlockMap().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n\n  _proto.getBlockBefore = function getBlockBefore(key) {\n    return this.getBlockMap().reverse().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n\n  _proto.getBlocksAsArray = function getBlocksAsArray() {\n    return this.getBlockMap().toArray();\n  };\n\n  _proto.getFirstBlock = function getFirstBlock() {\n    return this.getBlockMap().first();\n  };\n\n  _proto.getLastBlock = function getLastBlock() {\n    return this.getBlockMap().last();\n  };\n\n  _proto.getPlainText = function getPlainText(delimiter) {\n    return this.getBlockMap().map(function (block) {\n      return block ? block.getText() : '';\n    }).join(delimiter || '\\n');\n  };\n\n  _proto.getLastCreatedEntityKey = function getLastCreatedEntityKey() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__getLastCreatedEntityKey();\n  };\n\n  _proto.hasText = function hasText() {\n    var blockMap = this.getBlockMap();\n    return blockMap.size > 1 || // make sure that there are no zero width space chars\n    escape(blockMap.first().getText()).replace(/%u200B/g, '').length > 0;\n  };\n\n  _proto.createEntity = function createEntity(type, mutability, data) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__create(type, mutability, data);\n\n    return this;\n  };\n\n  _proto.mergeEntityData = function mergeEntityData(key, toMerge) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__mergeData(key, toMerge);\n\n    return this;\n  };\n\n  _proto.replaceEntityData = function replaceEntityData(key, newData) {\n    // TODO: update this when we fully remove DraftEntity\n\n    /* $FlowFixMe[class-object-subtyping] added when improving typing for this\n     * parameters */\n    DraftEntity.__replaceData(key, newData);\n\n    return this;\n  };\n\n  _proto.addEntity = function addEntity(instance) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__add(instance);\n\n    return this;\n  };\n\n  _proto.getEntity = function getEntity(key) {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__get(key);\n  };\n\n  _proto.getAllEntities = function getAllEntities() {\n    return DraftEntity.__getAll();\n  };\n\n  _proto.setEntityMap = function setEntityMap(entityMap) {\n    DraftEntity.__loadWithEntities(entityMap);\n\n    return this;\n  };\n\n  ContentState.mergeEntityMaps = function mergeEntityMaps(to, from) {\n    return to.merge(from.__getAll());\n  } // TODO: when EntityMap is moved into content state this and `setEntityMap`\n  // Will be the exact same. Merge them then.\n  ;\n\n  _proto.replaceEntityMap = function replaceEntityMap(entityMap) {\n    return this.setEntityMap(entityMap.__getAll());\n  };\n\n  _proto.setSelectionBefore = function setSelectionBefore(selection) {\n    // $FlowFixMe[prop-missing] found when removing casts of this to any\n    return this.set('selectionBefore', selection);\n  };\n\n  _proto.setSelectionAfter = function setSelectionAfter(selection) {\n    // $FlowFixMe[prop-missing] found when removing casts of this to any\n    return this.set('selectionAfter', selection);\n  };\n\n  _proto.setBlockMap = function setBlockMap(blockMap) {\n    // $FlowFixMe[prop-missing] found when removing casts of this to any\n    return this.set('blockMap', blockMap);\n  };\n\n  ContentState.createFromBlockArray = function createFromBlockArray( // TODO: update flow type when we completely deprecate the old entity API\n  blocks, entityMap) {\n    // TODO: remove this when we completely deprecate the old entity API\n    var theBlocks = Array.isArray(blocks) ? blocks : blocks.contentBlocks;\n    var blockMap = BlockMapBuilder.createFromArray(theBlocks);\n    var selectionState = blockMap.isEmpty() ? new SelectionState() : SelectionState.createEmpty(blockMap.first().getKey());\n    return new ContentState({\n      blockMap: blockMap,\n      entityMap: entityMap || DraftEntity,\n      selectionBefore: selectionState,\n      selectionAfter: selectionState\n    });\n  };\n\n  ContentState.createFromText = function createFromText(text) {\n    var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /\\r\\n?|\\n/g;\n    var strings = text.split(delimiter);\n    var blocks = strings.map(function (block) {\n      block = sanitizeDraftText(block);\n      return new ContentBlockNodeRecord({\n        key: generateRandomKey(),\n        text: block,\n        type: 'unstyled',\n        characterList: List(Repeat(CharacterMetadata.EMPTY, block.length))\n      });\n    });\n    return ContentState.createFromBlockArray(blocks);\n  };\n\n  ContentState.fromJS = function fromJS(state) {\n    return new ContentState(_objectSpread(_objectSpread({}, state), {}, {\n      blockMap: OrderedMap(state.blockMap).map( // $FlowFixMe[method-unbinding]\n      ContentState.createContentBlockFromJS),\n      selectionBefore: new SelectionState(state.selectionBefore),\n      selectionAfter: new SelectionState(state.selectionAfter)\n    }));\n  };\n\n  ContentState.createContentBlockFromJS = function createContentBlockFromJS(block) {\n    var characterList = block.characterList;\n    return new ContentBlockNodeRecord(_objectSpread(_objectSpread({}, block), {}, {\n      data: ImmutableMap(block.data),\n      characterList: characterList != null ? List((Array.isArray(characterList) ? characterList : getOwnObjectValues(characterList)).map(function (c) {\n        return CharacterMetadata.fromJS(c);\n      })) : undefined\n    }));\n  };\n\n  return ContentState;\n}(ContentStateRecord);\n\nmodule.exports = ContentState;"]},"metadata":{},"sourceType":"script"}