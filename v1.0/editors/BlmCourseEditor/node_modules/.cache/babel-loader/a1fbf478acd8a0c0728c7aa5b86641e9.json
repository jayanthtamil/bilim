{"ast":null,"code":"import { isButtonRepeater, isMediaRepeater, isMediaComponent, isButtonComponent, isSoundRepeater, isSoundComponent } from \"utils\";\nimport { getContentMedias } from \"template-builders\";\nimport { initializeButton, initializeMedia, initializeSound, mapRepeaters, applyMediaComponetStyles, applyButtonComponetStyles, applySoundComponetStyles, initializeRepeater } from \"./utils\";\nimport * as Types from \"./types\";\nexport default function contentReducer(state, action) {\n  const {\n    template,\n    data\n  } = state;\n  let {\n    component\n  } = state;\n\n  const setCurrentComponent = newComponent => {\n    if (component && newComponent.id === component.id) {\n      component = newComponent;\n    }\n  };\n\n  if (action.type === Types.SET_COMPONENT) {\n    return { ...state,\n      component: action.payload\n    };\n  } else if (action.type === Types.INIT_CONTENT_EDITOR_DATA) {\n    const {\n      template,\n      data\n    } = action.payload;\n    return { ...state,\n      isEdited: false,\n      template,\n      data,\n      oldMedias: getContentMedias(data)\n    };\n  } else if (data && template) {\n    const newData = { ...data\n    };\n\n    if (action.type === Types.UPDATE_TEXT_COMPONENT) {\n      const {\n        texts\n      } = newData;\n      const newText = { ...action.payload,\n        isEdited: true\n      };\n      newData.texts = texts.map(text => text.id === newText.id ? newText : text);\n    } else if (action.type === Types.UPDATE_MEDIA_COMPONENT) {\n      const newMedia = initializeMedia(action.payload, template);\n\n      const callback = media => media.id === newMedia.id ? newMedia : media;\n\n      if (newMedia.repeaterId) {\n        newData.repeater.medias = mapRepeaters(newData.repeater.medias, newMedia.repeaterId, callback);\n      } else {\n        newData.medias = newData.medias.map(callback);\n      }\n\n      setCurrentComponent(newMedia);\n    } else if (action.type === Types.UPDATE_360_MEDIA_OPTION) {\n      const newMedia = initializeMedia(action.payload, template);\n\n      const callback = media => media.id === newMedia.id ? newMedia : media;\n\n      newData.medias = newData.medias.map(callback);\n      setCurrentComponent(newMedia);\n    } else if (action.type === Types.UPDATE_BUTTON_COMPONENT) {\n      const newButton = initializeButton(action.payload);\n\n      const callback = button => button.id === newButton.id ? newButton : button;\n\n      if (newButton.repeaterId) {\n        newData.repeater.buttons = mapRepeaters(newData.repeater.buttons, newButton.repeaterId, callback);\n      } else {\n        newData.buttons = newData.buttons.map(callback);\n      }\n\n      setCurrentComponent(newButton);\n    } else if (action.type === Types.UPDATE_SOUND_COMPONENT) {\n      const newSound = initializeSound(action.payload);\n\n      const callback = sound => sound.id === newSound.id ? newSound : sound;\n\n      if (newSound.repeaterId) {\n        newData.repeater.sounds = mapRepeaters(newData.repeater.sounds, newSound.repeaterId, callback);\n      } else {\n        newData.sounds = newData.sounds.map(callback);\n      }\n\n      setCurrentComponent(newSound);\n    } else if (action.type === Types.UPDATE_REPEATER_COMPONENT) {\n      const newRepeater = initializeRepeater(action.payload);\n\n      const callback = repeater => repeater.id === newRepeater.id ? newRepeater : repeater;\n\n      if (isMediaRepeater(newRepeater) && newData.repeater.medias) {\n        newData.repeater.medias = newData.repeater.medias.map(callback);\n      } else if (isButtonRepeater(newRepeater) && newData.repeater.buttons) {\n        newData.repeater.buttons = newData.repeater.buttons.map(callback);\n      } else if (isSoundRepeater(newRepeater) && newData.repeater.sounds) {\n        newData.repeater.sounds = newData.repeater.sounds.map(callback);\n      }\n    } else if (action.type === Types.APPLY_COMPONENT_STYLE && component) {\n      const {\n        styleName,\n        style\n      } = action.payload;\n\n      if (isMediaComponent(component)) {\n        const mediaCallback = media => {\n          const newMedia = applyMediaComponetStyles(media, component, template, styleName, style);\n          setCurrentComponent(newMedia);\n          return newMedia;\n        };\n\n        if (component && component.repeaterId) {\n          newData.repeater.medias = mapRepeaters(newData.repeater.medias, component.repeaterId, mediaCallback);\n        } else {\n          newData.medias = newData.medias.map(mediaCallback);\n        }\n      } else if (isButtonComponent(component) && styleName) {\n        const buttonCallback = button => {\n          const newButton = applyButtonComponetStyles(button, styleName, component.buttonOptions, style);\n          setCurrentComponent(newButton);\n          return newButton;\n        };\n\n        if (component && component.repeaterId) {\n          newData.repeater.buttons = mapRepeaters(newData.repeater.buttons, component.repeaterId, buttonCallback);\n        } else {\n          newData.buttons = newData.buttons.map(buttonCallback);\n        }\n      } else if (isSoundComponent(component) && styleName) {\n        const soundCallback = sound => {\n          const newSound = applySoundComponetStyles(sound, styleName, style);\n          setCurrentComponent(newSound);\n          return newSound;\n        };\n\n        if (component && component.repeaterId) {\n          newData.repeater.sounds = mapRepeaters(newData.repeater.sounds, component.repeaterId, soundCallback);\n        } else {\n          newData.sounds = newData.sounds.map(soundCallback);\n        }\n      }\n    }\n\n    return { ...state,\n      isEdited: true,\n      data: newData,\n      component\n    };\n  }\n\n  return state;\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/reducers/reducer.ts"],"names":["isButtonRepeater","isMediaRepeater","isMediaComponent","isButtonComponent","isSoundRepeater","isSoundComponent","getContentMedias","initializeButton","initializeMedia","initializeSound","mapRepeaters","applyMediaComponetStyles","applyButtonComponetStyles","applySoundComponetStyles","initializeRepeater","Types","contentReducer","state","action","template","data","component","setCurrentComponent","newComponent","id","type","SET_COMPONENT","payload","INIT_CONTENT_EDITOR_DATA","isEdited","oldMedias","newData","UPDATE_TEXT_COMPONENT","texts","newText","map","text","UPDATE_MEDIA_COMPONENT","newMedia","callback","media","repeaterId","repeater","medias","UPDATE_360_MEDIA_OPTION","UPDATE_BUTTON_COMPONENT","newButton","button","buttons","UPDATE_SOUND_COMPONENT","newSound","sound","sounds","UPDATE_REPEATER_COMPONENT","newRepeater","APPLY_COMPONENT_STYLE","styleName","style","mediaCallback","buttonCallback","buttonOptions","soundCallback"],"mappings":"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","sourcesContent":["import {\r\n  ButtonComponent,\r\n  MediaComponent,\r\n  MediaRepeaterComponent,\r\n  RepeaterComponent,\r\n  SoundComponent,\r\n  TextComponent,\r\n} from \"types\";\r\nimport {\r\n  isButtonRepeater,\r\n  isMediaRepeater,\r\n  isMediaComponent,\r\n  isButtonComponent,\r\n  isSoundRepeater,\r\n  isSoundComponent,\r\n} from \"utils\";\r\nimport { getContentMedias } from \"template-builders\";\r\nimport {\r\n  initializeButton,\r\n  initializeMedia,\r\n  initializeSound,\r\n  mapRepeaters,\r\n  applyMediaComponetStyles,\r\n  applyButtonComponetStyles,\r\n  applySoundComponetStyles,\r\n  initializeRepeater,\r\n} from \"./utils\";\r\nimport * as Types from \"./types\";\r\n\r\nexport default function contentReducer(\r\n  state: Types.ContentEditorState,\r\n  action: Types.ContentEditorActions\r\n): Types.ContentEditorState {\r\n  const { template, data } = state;\r\n  let { component } = state;\r\n\r\n  const setCurrentComponent = (newComponent: MediaComponent | ButtonComponent | SoundComponent) => {\r\n    if (component && newComponent.id === component.id) {\r\n      component = newComponent;\r\n    }\r\n  };\r\n\r\n  if (action.type === Types.SET_COMPONENT) {\r\n    return { ...state, component: action.payload };\r\n  } else if (action.type === Types.INIT_CONTENT_EDITOR_DATA) {\r\n    const { template, data } = action.payload;\r\n\r\n    return {\r\n      ...state,\r\n      isEdited: false,\r\n      template,\r\n      data,\r\n      oldMedias: getContentMedias(data),\r\n    };\r\n  } else if (data && template) {\r\n    const newData = { ...data };\r\n\r\n    if (action.type === Types.UPDATE_TEXT_COMPONENT) {\r\n      const { texts } = newData;\r\n      const newText: TextComponent = { ...action.payload, isEdited: true };\r\n\r\n      newData.texts = texts.map((text) => (text.id === newText.id ? newText : text));\r\n    } else if (action.type === Types.UPDATE_MEDIA_COMPONENT) {\r\n      const newMedia = initializeMedia(action.payload, template);\r\n      const callback = (media: MediaComponent) => (media.id === newMedia.id ? newMedia : media);\r\n\r\n      if (newMedia.repeaterId) {\r\n        newData.repeater.medias = mapRepeaters(\r\n          newData.repeater.medias,\r\n          newMedia.repeaterId!,\r\n          callback\r\n        ) as MediaRepeaterComponent[];\r\n      } else {\r\n        newData.medias = newData.medias.map(callback);\r\n      }\r\n\r\n      setCurrentComponent(newMedia);\r\n    } else if (action.type === Types.UPDATE_360_MEDIA_OPTION) {\r\n      const newMedia = initializeMedia(action.payload, template);\r\n      const callback = (media: MediaComponent) => (media.id === newMedia.id ? newMedia : media);\r\n      newData.medias = newData.medias.map(callback);\r\n      setCurrentComponent(newMedia);\r\n    } else if (action.type === Types.UPDATE_BUTTON_COMPONENT) {\r\n      const newButton = initializeButton(action.payload);\r\n      const callback = (button: ButtonComponent) =>\r\n        button.id === newButton.id ? newButton : button;\r\n\r\n      if (newButton.repeaterId) {\r\n        newData.repeater.buttons = mapRepeaters(\r\n          newData.repeater.buttons,\r\n          newButton.repeaterId,\r\n          callback\r\n        );\r\n      } else {\r\n        newData.buttons = newData.buttons.map(callback);\r\n      }\r\n\r\n      setCurrentComponent(newButton);\r\n    } else if (action.type === Types.UPDATE_SOUND_COMPONENT) {\r\n      const newSound = initializeSound(action.payload);\r\n      const callback = (sound: SoundComponent) => (sound.id === newSound.id ? newSound : sound);\r\n\r\n      if (newSound.repeaterId) {\r\n        newData.repeater.sounds = mapRepeaters(\r\n          newData.repeater.sounds,\r\n          newSound.repeaterId,\r\n          callback\r\n        );\r\n      } else {\r\n        newData.sounds = newData.sounds.map(callback);\r\n      }\r\n\r\n      setCurrentComponent(newSound);\r\n    } else if (action.type === Types.UPDATE_REPEATER_COMPONENT) {\r\n      const newRepeater = initializeRepeater(action.payload);\r\n      const callback = <T>(repeater: RepeaterComponent<T>) =>\r\n        repeater.id === newRepeater.id\r\n          ? (newRepeater as unknown as RepeaterComponent<T>)\r\n          : repeater;\r\n\r\n      if (isMediaRepeater(newRepeater) && newData.repeater.medias) {\r\n        newData.repeater.medias = newData.repeater.medias.map(callback) as MediaRepeaterComponent[];\r\n      } else if (isButtonRepeater(newRepeater) && newData.repeater.buttons) {\r\n        newData.repeater.buttons = newData.repeater.buttons.map(callback);\r\n      } else if (isSoundRepeater(newRepeater) && newData.repeater.sounds) {\r\n        newData.repeater.sounds = newData.repeater.sounds.map(callback);\r\n      }\r\n    } else if (action.type === Types.APPLY_COMPONENT_STYLE && component) {\r\n      const { styleName, style } = action.payload;\r\n\r\n      if (isMediaComponent(component)) {\r\n        const mediaCallback = (media: MediaComponent) => {\r\n          const newMedia = applyMediaComponetStyles(\r\n            media,\r\n            component as MediaComponent,\r\n            template,\r\n            styleName,\r\n            style\r\n          );\r\n\r\n          setCurrentComponent(newMedia);\r\n          return newMedia;\r\n        };\r\n\r\n        if (component && component.repeaterId) {\r\n          newData.repeater.medias = mapRepeaters(\r\n            newData.repeater.medias,\r\n            component.repeaterId,\r\n            mediaCallback\r\n          ) as MediaRepeaterComponent[];\r\n        } else {\r\n          newData.medias = newData.medias.map(mediaCallback);\r\n        }\r\n      } else if (isButtonComponent(component) && styleName) {\r\n        const buttonCallback = (button: ButtonComponent) => {\r\n          const newButton = applyButtonComponetStyles(button, styleName, (component as ButtonComponent).buttonOptions, style);\r\n\r\n          setCurrentComponent(newButton);\r\n          return newButton;\r\n        };\r\n\r\n        if (component && component.repeaterId) {\r\n          newData.repeater.buttons = mapRepeaters(\r\n            newData.repeater.buttons,\r\n            component.repeaterId,\r\n            buttonCallback\r\n          );\r\n        } else {\r\n          newData.buttons = newData.buttons.map(buttonCallback);\r\n        }\r\n      } else if (isSoundComponent(component) && styleName) {\r\n        const soundCallback = (sound: SoundComponent) => {\r\n          const newSound = applySoundComponetStyles(sound, styleName, style);\r\n\r\n          setCurrentComponent(newSound);\r\n          return newSound;\r\n        };\r\n\r\n        if (component && component.repeaterId) {\r\n          newData.repeater.sounds = mapRepeaters(\r\n            newData.repeater.sounds,\r\n            component.repeaterId,\r\n            soundCallback\r\n          );\r\n        } else {\r\n          newData.sounds = newData.sounds.map(soundCallback);\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      isEdited: true,\r\n      data: newData,\r\n      component,\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}