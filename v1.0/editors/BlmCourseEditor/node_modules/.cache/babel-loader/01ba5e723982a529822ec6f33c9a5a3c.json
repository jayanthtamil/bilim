{"ast":null,"code":"import { ElementType } from \"editor-constants\";\nexport function createMarkers(thresholds) {\n  let markers = [];\n  let prevMarker;\n  let completion;\n\n  for (let i = 0; i < thresholds.length; i++) {\n    const item = thresholds[i];\n    const {\n      threshold,\n      ...other\n    } = item;\n    const marker = {\n      start: threshold,\n      end: 100,\n      threshold,\n      ...other\n    };\n\n    if (prevMarker) {\n      prevMarker.end = item.threshold;\n    }\n\n    prevMarker = marker;\n    if (marker.start !== 100) markers.push(marker);else completion = item;\n  }\n\n  return {\n    markers,\n    completion\n  };\n}\nexport function getFeedbackElements(element) {\n  const arr = element.children;\n\n  if (arr) {\n    for (let i = 0; i < arr.length; i++) {\n      const item = arr[i];\n\n      if (item.type === ElementType.Feedback) {\n        return item.children;\n      }\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/feedback-slider/utils.ts"],"names":["ElementType","createMarkers","thresholds","markers","prevMarker","completion","i","length","item","threshold","other","marker","start","end","push","getFeedbackElements","element","arr","children","type","Feedback"],"mappings":"AACA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,OAAO,SAASC,aAAT,CAAuBC,UAAvB,EAAgD;AACrD,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,UAAJ;AACA,MAAIC,UAAJ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAAU,CAACK,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,UAAME,IAAI,GAAGN,UAAU,CAACI,CAAD,CAAvB;AACA,UAAM;AAAEG,MAAAA,SAAF;AAAa,SAAGC;AAAhB,QAA0BF,IAAhC;AACA,UAAMG,MAAuB,GAAG;AAC9BC,MAAAA,KAAK,EAAEH,SADuB;AAE9BI,MAAAA,GAAG,EAAE,GAFyB;AAG9BJ,MAAAA,SAH8B;AAI9B,SAAGC;AAJ2B,KAAhC;;AAOA,QAAIN,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAACS,GAAX,GAAiBL,IAAI,CAACC,SAAtB;AACD;;AAEDL,IAAAA,UAAU,GAAGO,MAAb;AAEA,QAAIA,MAAM,CAACC,KAAP,KAAiB,GAArB,EAA0BT,OAAO,CAACW,IAAR,CAAaH,MAAb,EAA1B,KACKN,UAAU,GAAGG,IAAb;AACN;;AAED,SAAO;AAAEL,IAAAA,OAAF;AAAWE,IAAAA;AAAX,GAAP;AACD;AAED,OAAO,SAASU,mBAAT,CAA6BC,OAA7B,EAAqD;AAC1D,QAAMC,GAAG,GAAGD,OAAO,CAACE,QAApB;;AAEA,MAAID,GAAJ,EAAS;AACP,SAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,GAAG,CAACV,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,YAAME,IAAI,GAAGS,GAAG,CAACX,CAAD,CAAhB;;AACA,UAAIE,IAAI,CAACW,IAAL,KAAcnB,WAAW,CAACoB,QAA9B,EAAwC;AACtC,eAAOZ,IAAI,CAACU,QAAZ;AACD;AACF;AACF;AACF","sourcesContent":["import { CourseElement, Threshold } from \"types\";\r\nimport { ElementType } from \"editor-constants\";\r\nimport { MarkerThreshold } from \"./threshold\";\r\n\r\nexport function createMarkers(thresholds: Threshold[]) {\r\n  let markers = [];\r\n  let prevMarker;\r\n  let completion;\r\n\r\n  for (let i = 0; i < thresholds.length; i++) {\r\n    const item = thresholds[i];\r\n    const { threshold, ...other } = item;\r\n    const marker: MarkerThreshold = {\r\n      start: threshold,\r\n      end: 100,\r\n      threshold,\r\n      ...other,\r\n    };\r\n\r\n    if (prevMarker) {\r\n      prevMarker.end = item.threshold;\r\n    }\r\n\r\n    prevMarker = marker;\r\n\r\n    if (marker.start !== 100) markers.push(marker);\r\n    else completion = item;\r\n  }\r\n\r\n  return { markers, completion };\r\n}\r\n\r\nexport function getFeedbackElements(element: CourseElement) {\r\n  const arr = element.children;\r\n\r\n  if (arr) {\r\n    for (let i = 0; i < arr.length; i++) {\r\n      const item = arr[i];\r\n      if (item.type === ElementType.Feedback) {\r\n        return item.children;\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}