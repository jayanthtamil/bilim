{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\question-editor\\\\components\\\\feedback\\\\global-item\\\\BlmGobalFeedbackItem.tsx\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { Select, MenuItem } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { AcceptedFileTypes, QuestionFeedbackTypes } from \"editor-constants\";\nimport { BlmMediaPicker, BlmMediaPickerEditor } from \"components/shared\";\nimport { useQuestionEditorCtx } from \"components/question-editor/core\";\nimport \"./styles.scss\";\n\nfunction BlmGobalItem(props) {\n  const {\n    type,\n    header,\n    data,\n    className,\n    onChange\n  } = props;\n  const {\n    title,\n    text,\n    media,\n    sound,\n    simpleContent\n  } = data;\n  const {\n    element\n  } = useQuestionEditorCtx();\n  const isFlap = type === QuestionFeedbackTypes.Flap;\n  const {\n    t\n  } = useTranslation(\"question-editor\");\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newData = { ...data\n    };\n\n    if (name === \"title\") {\n      newData.title.value = value;\n    } else if (name === \"text\") {\n      newData.text.value = value;\n    } else if (name === \"media\") {\n      newData.media.value = value;\n    } else if (name === \"sound\") {\n      if (value && !value.subtitle) {\n        var _newData$sound, _newData$sound$value;\n\n        value.subtitle = (_newData$sound = newData.sound) === null || _newData$sound === void 0 ? void 0 : (_newData$sound$value = _newData$sound.value) === null || _newData$sound$value === void 0 ? void 0 : _newData$sound$value.subtitle;\n      }\n\n      if (value && !value.marker) {\n        var _newData$sound2, _newData$sound2$value;\n\n        value.marker = (_newData$sound2 = newData.sound) === null || _newData$sound2 === void 0 ? void 0 : (_newData$sound2$value = _newData$sound2.value) === null || _newData$sound2$value === void 0 ? void 0 : _newData$sound2$value.marker;\n      }\n\n      newData.sound.value = value;\n    } else if (name === \"simpleContent\") {\n      newData.simpleContent.value = value;\n    }\n\n    if (onChange) {\n      onChange(newData);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"global-feedback-item-wrapper\", type, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"global-feedback-item-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, header), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"global-feedback-item-grid-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, isFlap && /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"media\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Image, AcceptedFileTypes.Video],\n    data: media.value,\n    placeholder: t(\"label.select_media\"),\n    disabled: !media.isEditable,\n    className: \"media-picker-1\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"global-feedback-item-text-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    type: \"text\",\n    value: title.value || \"\",\n    disabled: !title.isEditable,\n    className: \"global-feedback-item-title\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"global-feedback-item-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"text\",\n    value: text.value || \"\",\n    disabled: !text.isEditable,\n    className: \"global-feedback-item-desc\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(BlmMediaPickerEditor, {\n    name: \"sound\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Audio],\n    data: sound.value,\n    placeholder: t(\"label.no_sound\"),\n    disabled: !sound.isEditable,\n    className: \"sound-picker-1\",\n    onChange: handleChange,\n    showDesign: \"showDesign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), isFlap && /*#__PURE__*/React.createElement(Select, {\n    name: \"simpleContent\",\n    value: simpleContent.value,\n    disabled: !simpleContent.isEditable,\n    className: \"simple-content-select\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"simple-content-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-none-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-none-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, t(\"label.no_simple_content\")))), element === null || element === void 0 ? void 0 : element.children.map(item => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: item.id,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"simple-content-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-lbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, item.name)));\n  }))));\n}\n\nexport default BlmGobalItem;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/question-editor/components/feedback/global-item/BlmGobalFeedbackItem.tsx"],"names":["React","clsx","Select","MenuItem","useTranslation","AcceptedFileTypes","QuestionFeedbackTypes","BlmMediaPicker","BlmMediaPickerEditor","useQuestionEditorCtx","BlmGobalItem","props","type","header","data","className","onChange","title","text","media","sound","simpleContent","element","isFlap","Flap","t","handleChange","event","name","value","target","newData","subtitle","marker","id","Image","Video","isEditable","Audio","children","map","item"],"mappings":"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","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Select, MenuItem } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { QuestionGlobalFeedbackItem } from \"types\";\r\nimport { AcceptedFileTypes, QuestionFeedbackTypes } from \"editor-constants\";\r\nimport { BlmMediaPicker, MediaPickerChangeEvent, BlmMediaPickerEditor } from \"components/shared\";\r\nimport { useQuestionEditorCtx } from \"components/question-editor/core\";\r\nimport \"./styles.scss\";\r\n\r\ninterface CompProps {\r\n  type: QuestionFeedbackTypes;\r\n  header: string;\r\n  data: QuestionGlobalFeedbackItem;\r\n  className?: string;\r\n  onChange: (data: QuestionGlobalFeedbackItem) => void;\r\n}\r\n\r\nfunction BlmGobalItem(props: CompProps) {\r\n  const { type, header, data, className, onChange } = props;\r\n  const { title, text, media, sound, simpleContent } = data;\r\n  const { element } = useQuestionEditorCtx();\r\n  const isFlap = type === QuestionFeedbackTypes.Flap;\r\n  const { t } = useTranslation(\"question-editor\");\r\n\r\n  const handleChange = (event: ChangeEvent<any> | MediaPickerChangeEvent) => {\r\n    const { name, value } = event.target;\r\n    const newData = { ...data };\r\n\r\n    if (name === \"title\") {\r\n      newData.title.value = value;\r\n    } else if (name === \"text\") {\r\n      newData.text.value = value;\r\n    } else if (name === \"media\") {\r\n      newData.media.value = value;\r\n    } else if (name === \"sound\") {\r\n      if (value && !value.subtitle) {\r\n        value.subtitle = newData.sound?.value?.subtitle;\r\n      }\r\n      if (value && !value.marker) {\r\n        value.marker = newData.sound?.value?.marker;\r\n      }\r\n      newData.sound.value = value;\r\n    } else if (name === \"simpleContent\") {\r\n      newData.simpleContent.value = value;\r\n    }\r\n\r\n    if (onChange) {\r\n      onChange(newData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(\"global-feedback-item-wrapper\", type, className)}>\r\n      <div className=\"global-feedback-item-header\">{header}</div>\r\n      <div className=\"global-feedback-item-grid-box\">\r\n        {isFlap && (\r\n          <BlmMediaPicker\r\n            name=\"media\"\r\n            elementId={element!.id}\r\n            acceptedFiles={[AcceptedFileTypes.Image, AcceptedFileTypes.Video]}\r\n            data={media.value}\r\n            placeholder={t(\"label.select_media\")}\r\n            disabled={!media.isEditable}\r\n            className=\"media-picker-1\"\r\n            onChange={handleChange}\r\n          />\r\n        )}\r\n        <div className=\"global-feedback-item-text-box\">\r\n          <input\r\n            name=\"title\"\r\n            type=\"text\"\r\n            value={title.value || \"\"}\r\n            disabled={!title.isEditable}\r\n            className=\"global-feedback-item-title\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"global-feedback-item-hr\" />\r\n          <textarea\r\n            name=\"text\"\r\n            value={text.value || \"\"}\r\n            disabled={!text.isEditable}\r\n            className=\"global-feedback-item-desc\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <BlmMediaPickerEditor\r\n          name=\"sound\"\r\n          elementId={element!.id}\r\n          acceptedFiles={[AcceptedFileTypes.Audio]}\r\n          data={sound.value}\r\n          placeholder={t(\"label.no_sound\")}\r\n          disabled={!sound.isEditable}\r\n          className=\"sound-picker-1\"\r\n          onChange={handleChange}\r\n          showDesign=\"showDesign\"\r\n        />\r\n        {isFlap && (\r\n          <Select\r\n            name=\"simpleContent\"\r\n            value={simpleContent.value}\r\n            disabled={!simpleContent.isEditable}\r\n            className=\"simple-content-select\"\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value=\"none\">\r\n              <div className=\"simple-content-item\">\r\n                <div className=\"item-none-icon\" />\r\n                <div className=\"item-none-lbl\">{t(\"label.no_simple_content\")}</div>\r\n              </div>\r\n            </MenuItem>\r\n            {element?.children.map((item) => {\r\n              return (\r\n                <MenuItem key={item.id} value={item.id}>\r\n                  <div className=\"simple-content-item\">\r\n                    <div className=\"item-icon\" />\r\n                    <div className=\"item-lbl\">{item.name}</div>\r\n                  </div>\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmGobalItem;\r\n"]},"metadata":{},"sourceType":"module"}