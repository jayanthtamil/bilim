{"ast":null,"code":"import { fetchAPI } from \"redux/api\";\nimport * as actions from \"../types\";\nexport const getThemes = coutseID => {\n  return fetchAPI({\n    url: \"api/template/theme/\" + coutseID,\n    method: \"GET\",\n    authenticated: true,\n    types: [actions.GET_THEMES_STARTED, actions.GET_THEMES_SUCCESS, actions.GET_THEMES_ERROR]\n  });\n};\nexport const getLanguages = () => {\n  return fetchAPI({\n    url: \"api/language\",\n    method: \"GET\",\n    authenticated: true,\n    types: [actions.GET_LANGUAGES_STARTED, actions.GET_LANGUAGES_SUCCESS, actions.GET_LANGUAGES_ERROR]\n  });\n};\nexport const getTemplates = course => {\n  return fetchAPI({\n    url: \"api/template/template/\" + course.id,\n    method: \"GET\",\n    authenticated: true,\n    types: [actions.GET_TEMPLATES_STARTED, actions.GET_TEMPLATES_SUCCESS, actions.GET_TEMPLATES_ERROR]\n  });\n};\nexport const getTemplateProperties = template => {\n  return fetchAPI({\n    url: \"api/temp_properties/\" + template.id,\n    method: \"GET\",\n    authenticated: true,\n    types: [actions.GET_TEMPLATE_PROPERTIES_STARTED, actions.GET_TEMPLATE_PROPERTIES_SUCCESS, actions.GET_TEMPLATE_PROPERTIES_ERROR]\n  });\n};","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/redux/domain/actions/index.ts"],"names":["fetchAPI","actions","getThemes","coutseID","url","method","authenticated","types","GET_THEMES_STARTED","GET_THEMES_SUCCESS","GET_THEMES_ERROR","getLanguages","GET_LANGUAGES_STARTED","GET_LANGUAGES_SUCCESS","GET_LANGUAGES_ERROR","getTemplates","course","id","GET_TEMPLATES_STARTED","GET_TEMPLATES_SUCCESS","GET_TEMPLATES_ERROR","getTemplateProperties","template","GET_TEMPLATE_PROPERTIES_STARTED","GET_TEMPLATE_PROPERTIES_SUCCESS","GET_TEMPLATE_PROPERTIES_ERROR"],"mappings":"AACA,SAASA,QAAT,QAAyB,WAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,UAAzB;AAEA,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAAsB;AAC7C,SAAOH,QAAQ,CAAC;AACdI,IAAAA,GAAG,EAAE,wBAAwBD,QADf;AAEdE,IAAAA,MAAM,EAAE,KAFM;AAGdC,IAAAA,aAAa,EAAE,IAHD;AAIdC,IAAAA,KAAK,EAAE,CAACN,OAAO,CAACO,kBAAT,EAA6BP,OAAO,CAACQ,kBAArC,EAAyDR,OAAO,CAACS,gBAAjE;AAJO,GAAD,CAAf;AAMD,CAPM;AASP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAOX,QAAQ,CAAC;AACdI,IAAAA,GAAG,EAAE,cADS;AAEdC,IAAAA,MAAM,EAAE,KAFM;AAGdC,IAAAA,aAAa,EAAE,IAHD;AAIdC,IAAAA,KAAK,EAAE,CACLN,OAAO,CAACW,qBADH,EAELX,OAAO,CAACY,qBAFH,EAGLZ,OAAO,CAACa,mBAHH;AAJO,GAAD,CAAf;AAUD,CAXM;AAaP,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAyB;AACnD,SAAOhB,QAAQ,CAAC;AACdI,IAAAA,GAAG,EAAE,2BAA2BY,MAAM,CAACC,EADzB;AAEdZ,IAAAA,MAAM,EAAE,KAFM;AAGdC,IAAAA,aAAa,EAAE,IAHD;AAIdC,IAAAA,KAAK,EAAE,CACLN,OAAO,CAACiB,qBADH,EAELjB,OAAO,CAACkB,qBAFH,EAGLlB,OAAO,CAACmB,mBAHH;AAJO,GAAD,CAAf;AAUD,CAXM;AAaP,OAAO,MAAMC,qBAAqB,GAAIC,QAAD,IAA4B;AAC/D,SAAOtB,QAAQ,CAAC;AACdI,IAAAA,GAAG,EAAE,yBAAyBkB,QAAQ,CAACL,EADzB;AAEdZ,IAAAA,MAAM,EAAE,KAFM;AAGdC,IAAAA,aAAa,EAAE,IAHD;AAIdC,IAAAA,KAAK,EAAE,CACLN,OAAO,CAACsB,+BADH,EAELtB,OAAO,CAACuB,+BAFH,EAGLvB,OAAO,CAACwB,6BAHH;AAJO,GAAD,CAAf;AAUD,CAXM","sourcesContent":["import { CourseProps, TemplateBase } from \"types\";\r\nimport { fetchAPI } from \"redux/api\";\r\nimport * as actions from \"../types\";\r\n\r\nexport const getThemes = (coutseID: string) => {\r\n  return fetchAPI({\r\n    url: \"api/template/theme/\" + coutseID,\r\n    method: \"GET\",\r\n    authenticated: true,\r\n    types: [actions.GET_THEMES_STARTED, actions.GET_THEMES_SUCCESS, actions.GET_THEMES_ERROR],\r\n  });\r\n};\r\n\r\nexport const getLanguages = () => {\r\n  return fetchAPI({\r\n    url: \"api/language\",\r\n    method: \"GET\",\r\n    authenticated: true,\r\n    types: [\r\n      actions.GET_LANGUAGES_STARTED,\r\n      actions.GET_LANGUAGES_SUCCESS,\r\n      actions.GET_LANGUAGES_ERROR,\r\n    ],\r\n  });\r\n};\r\n\r\nexport const getTemplates = (course: CourseProps) => {\r\n  return fetchAPI({\r\n    url: \"api/template/template/\" + course.id,\r\n    method: \"GET\",\r\n    authenticated: true,\r\n    types: [\r\n      actions.GET_TEMPLATES_STARTED,\r\n      actions.GET_TEMPLATES_SUCCESS,\r\n      actions.GET_TEMPLATES_ERROR,\r\n    ],\r\n  });\r\n};\r\n\r\nexport const getTemplateProperties = (template: TemplateBase) => {\r\n  return fetchAPI({\r\n    url: \"api/temp_properties/\" + template.id,\r\n    method: \"GET\",\r\n    authenticated: true,\r\n    types: [\r\n      actions.GET_TEMPLATE_PROPERTIES_STARTED,\r\n      actions.GET_TEMPLATE_PROPERTIES_SUCCESS,\r\n      actions.GET_TEMPLATE_PROPERTIES_ERROR,\r\n    ],\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}