{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\shared\\\\color-picker\\\\custom-picker\\\\BlmCustomFields.tsx\";\nimport React from \"react\";\nimport reactCSS from \"reactcss\";\nimport UnfoldMoreHorizontalIcon from \"@material-ui/icons/UnfoldMore\"; //@ts-ignore\n\nimport * as color from \"react-color/lib/helpers\";\nimport isUndefined from \"lodash/isUndefined\";\nimport { EditableInput } from \"react-color/lib/components/common\";\nexport class BlmCustomFields extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleViews = () => {\n      if (this.state.view === \"hex\") {\n        this.setState({\n          view: \"rgb\"\n        });\n      } else if (this.state.view === \"rgb\") {\n        this.setState({\n          view: \"hsl\"\n        });\n      } else if (this.state.view === \"hsl\") {\n        if (this.props.hsl.a === 1) {\n          this.setState({\n            view: \"hex\"\n          });\n        } else {\n          this.setState({\n            view: \"rgb\"\n          });\n        }\n      }\n    };\n\n    this.handleChange = (data, e) => {\n      if (data.hex) {\n        color.isValidHex(data.hex) && this.props.onChange({\n          hex: data.hex,\n          source: \"hex\"\n        }, e);\n      } else if (data.r || data.g || data.b) {\n        this.props.onChange({\n          r: data.r || this.props.rgb.r,\n          g: data.g || this.props.rgb.g,\n          b: data.b || this.props.rgb.b,\n          source: \"rgb\"\n        }, e);\n      } else if (data.a) {\n        if (data.a < 0) {\n          data.a = 0;\n        } else if (data.a > 1) {\n          data.a = 1;\n        }\n\n        this.props.onChange({\n          h: this.props.hsl.h,\n          s: this.props.hsl.s,\n          l: this.props.hsl.l,\n          a: Math.round(data.a * 100) / 100,\n          source: \"rgb\"\n        }, e);\n      } else if (data.h || data.s || data.l) {\n        // Remove any occurances of '%'.\n        if (typeof data.s === \"string\" && data.s.includes(\"%\")) {\n          data.s = data.s.replace(\"%\", \"\");\n        }\n\n        if (typeof data.l === \"string\" && data.l.includes(\"%\")) {\n          data.l = data.l.replace(\"%\", \"\");\n        } // We store HSL as a unit interval so we need to override the 1 input to 0.01\n\n\n        if (data.s === 1) {\n          data.s = 0.01;\n        } else if (data.l === 1) {\n          data.l = 0.01;\n        }\n\n        this.props.onChange({\n          h: data.h || this.props.hsl.h,\n          s: Number(!isUndefined(data.s) ? data.s : this.props.hsl.s),\n          l: Number(!isUndefined(data.l) ? data.l : this.props.hsl.l),\n          source: \"hsl\"\n        }, e);\n      }\n    };\n\n    this.showHighlight = e => {\n      e.currentTarget.style.background = \"#eee\";\n    };\n\n    this.hideHighlight = e => {\n      e.currentTarget.style.background = \"transparent\";\n    };\n\n    if (props.hsl.a !== 1 && props.view === \"hex\") {\n      this.state = {\n        view: \"rgb\"\n      };\n    } else {\n      this.state = {\n        view: props.view || \"hex\"\n      };\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    if (nextProps.hsl.a !== 1 && state.view === \"hex\") {\n      return {\n        view: \"rgb\"\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const styles = reactCSS({\n      default: {\n        wrap: {\n          paddingTop: \"16px\",\n          display: \"flex\"\n        },\n        fields: {\n          flex: \"1\",\n          display: \"flex\",\n          marginLeft: \"-6px\"\n        },\n        field: {\n          paddingLeft: \"6px\",\n          width: \"100%\"\n        },\n        toggle: {\n          width: \"32px\",\n          textAlign: \"right\",\n          position: \"relative\"\n        },\n        icon: {\n          marginRight: \"-4px\",\n          marginTop: \"12px\",\n          cursor: \"pointer\",\n          position: \"relative\"\n        },\n        iconHighlight: {\n          position: \"absolute\",\n          width: \"24px\",\n          height: \"28px\",\n          background: \"#eee\",\n          borderRadius: \"4px\",\n          top: \"10px\",\n          left: \"12px\",\n          display: \"none\"\n        },\n        input: {\n          fontSize: \"11px\",\n          color: \"#333\",\n          width: \"100%\",\n          borderRadius: \"2px\",\n          border: \"none\",\n          boxShadow: \"inset 0 0 0 1px #dadada\",\n          height: \"21px\",\n          textAlign: \"center\"\n        },\n        label: {\n          textTransform: \"uppercase\",\n          fontSize: \"11px\",\n          lineHeight: \"11px\",\n          color: \"#969696\",\n          textAlign: \"center\",\n          display: \"block\",\n          marginTop: \"12px\"\n        },\n        svg: {\n          fill: \"#333\",\n          width: \"24px\",\n          height: \"24px\",\n          border: \"1px transparent solid\",\n          borderRadius: \"5px\"\n        }\n      }\n    }, this.props, this.state);\n    let fields;\n\n    if (this.state.view === \"hex\") {\n      fields = /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.fields,\n        className: \"flexbox-fix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.field,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(EditableInput, {\n        style: {\n          input: styles.input,\n          label: styles.label\n        },\n        label: \"hex\",\n        value: this.props.hex,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      })));\n    } else if (this.state.view === \"rgb\") {\n      fields = /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.fields,\n        className: \"flexbox-fix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.field,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(EditableInput, {\n        style: {\n          input: styles.input,\n          label: styles.label\n        },\n        label: \"r\",\n        value: this.props.rgb.r,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.field,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(EditableInput, {\n        style: {\n          input: styles.input,\n          label: styles.label\n        },\n        label: \"g\",\n        value: this.props.rgb.g,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.field,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(EditableInput, {\n        style: {\n          input: styles.input,\n          label: styles.label\n        },\n        label: \"b\",\n        value: this.props.rgb.b,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      })));\n    } else if (this.state.view === \"hsl\") {\n      fields = /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.fields,\n        className: \"flexbox-fix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.field,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(EditableInput, {\n        style: {\n          input: styles.input,\n          label: styles.label\n        },\n        label: \"h\",\n        value: Math.round(this.props.hsl.h),\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.field,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(EditableInput, {\n        style: {\n          input: styles.input,\n          label: styles.label\n        },\n        label: \"s\",\n        value: `${Math.round(this.props.hsl.s * 100)}%`,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.field,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(EditableInput, {\n        style: {\n          input: styles.input,\n          label: styles.label\n        },\n        label: \"l\",\n        value: `${Math.round(this.props.hsl.l * 100)}%`,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.wrap,\n      className: \"flexbox-fix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 7\n      }\n    }, fields, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.icon,\n      onClick: this.toggleViews,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(UnfoldMoreHorizontalIcon, {\n      style: styles.svg,\n      onMouseOver: this.showHighlight,\n      onMouseEnter: this.showHighlight,\n      onMouseOut: this.hideHighlight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\nexport default BlmCustomFields;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/shared/color-picker/custom-picker/BlmCustomFields.tsx"],"names":["React","reactCSS","UnfoldMoreHorizontalIcon","color","isUndefined","EditableInput","BlmCustomFields","Component","constructor","props","toggleViews","state","view","setState","hsl","a","handleChange","data","e","hex","isValidHex","onChange","source","r","g","b","rgb","h","s","l","Math","round","includes","replace","Number","showHighlight","currentTarget","style","background","hideHighlight","getDerivedStateFromProps","nextProps","render","styles","default","wrap","paddingTop","display","fields","flex","marginLeft","field","paddingLeft","width","toggle","textAlign","position","icon","marginRight","marginTop","cursor","iconHighlight","height","borderRadius","top","left","input","fontSize","border","boxShadow","label","textTransform","lineHeight","svg","fill"],"mappings":"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","sourcesContent":["import React, { CSSProperties, MouseEvent } from \"react\";\r\nimport reactCSS from \"reactcss\";\r\nimport { ColorState } from \"react-color\";\r\nimport UnfoldMoreHorizontalIcon from \"@material-ui/icons/UnfoldMore\";\r\n//@ts-ignore\r\nimport * as color from \"react-color/lib/helpers\";\r\nimport isUndefined from \"lodash/isUndefined\";\r\nimport { EditableInput } from \"react-color/lib/components/common\";\r\nimport { EditableInputStyles } from \"react-color/lib/components/common/EditableInput\";\r\n\r\ninterface CompProps extends Pick<ColorState, \"rgb\" | \"hsl\" | \"hex\"> {\r\n  view?: \"hex\" | \"rgb\" | \"hsl\";\r\n  onChange: any;\r\n}\r\n\r\ninterface CompState {\r\n  view: \"hex\" | \"rgb\" | \"hsl\";\r\n}\r\n\r\nexport class BlmCustomFields extends React.Component<CompProps, CompState> {\r\n  constructor(props: CompProps) {\r\n    super(props);\r\n\r\n    if (props.hsl.a !== 1 && props.view === \"hex\") {\r\n      this.state = {\r\n        view: \"rgb\",\r\n      };\r\n    } else {\r\n      this.state = {\r\n        view: props.view || \"hex\",\r\n      };\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps: CompProps, state: CompState) {\r\n    if (nextProps.hsl.a !== 1 && state.view === \"hex\") {\r\n      return { view: \"rgb\" };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  toggleViews = () => {\r\n    if (this.state.view === \"hex\") {\r\n      this.setState({ view: \"rgb\" });\r\n    } else if (this.state.view === \"rgb\") {\r\n      this.setState({ view: \"hsl\" });\r\n    } else if (this.state.view === \"hsl\") {\r\n      if (this.props.hsl.a === 1) {\r\n        this.setState({ view: \"hex\" });\r\n      } else {\r\n        this.setState({ view: \"rgb\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = (data: any, e?: any) => {\r\n    if (data.hex) {\r\n      color.isValidHex(data.hex) &&\r\n        this.props.onChange(\r\n          {\r\n            hex: data.hex,\r\n            source: \"hex\",\r\n          },\r\n          e\r\n        );\r\n    } else if (data.r || data.g || data.b) {\r\n      this.props.onChange(\r\n        {\r\n          r: data.r || this.props.rgb.r,\r\n          g: data.g || this.props.rgb.g,\r\n          b: data.b || this.props.rgb.b,\r\n          source: \"rgb\",\r\n        },\r\n        e\r\n      );\r\n    } else if (data.a) {\r\n      if (data.a < 0) {\r\n        data.a = 0;\r\n      } else if (data.a > 1) {\r\n        data.a = 1;\r\n      }\r\n\r\n      this.props.onChange(\r\n        {\r\n          h: this.props.hsl.h,\r\n          s: this.props.hsl.s,\r\n          l: this.props.hsl.l,\r\n          a: Math.round(data.a * 100) / 100,\r\n          source: \"rgb\",\r\n        },\r\n        e\r\n      );\r\n    } else if (data.h || data.s || data.l) {\r\n      // Remove any occurances of '%'.\r\n      if (typeof data.s === \"string\" && data.s.includes(\"%\")) {\r\n        data.s = data.s.replace(\"%\", \"\");\r\n      }\r\n      if (typeof data.l === \"string\" && data.l.includes(\"%\")) {\r\n        data.l = data.l.replace(\"%\", \"\");\r\n      }\r\n\r\n      // We store HSL as a unit interval so we need to override the 1 input to 0.01\r\n      if (data.s === 1) {\r\n        data.s = 0.01;\r\n      } else if (data.l === 1) {\r\n        data.l = 0.01;\r\n      }\r\n\r\n      this.props.onChange(\r\n        {\r\n          h: data.h || this.props.hsl.h,\r\n          s: Number(!isUndefined(data.s) ? data.s : this.props.hsl.s),\r\n          l: Number(!isUndefined(data.l) ? data.l : this.props.hsl.l),\r\n          source: \"hsl\",\r\n        },\r\n        e\r\n      );\r\n    }\r\n  };\r\n\r\n  showHighlight = (e: MouseEvent<HTMLElement>) => {\r\n    e.currentTarget.style.background = \"#eee\";\r\n  };\r\n\r\n  hideHighlight = (e: MouseEvent<HTMLElement>) => {\r\n    e.currentTarget.style.background = \"transparent\";\r\n  };\r\n\r\n  render() {\r\n    const styles = reactCSS(\r\n      {\r\n        default: {\r\n          wrap: {\r\n            paddingTop: \"16px\",\r\n            display: \"flex\",\r\n          },\r\n          fields: {\r\n            flex: \"1\",\r\n            display: \"flex\",\r\n            marginLeft: \"-6px\",\r\n          },\r\n          field: {\r\n            paddingLeft: \"6px\",\r\n            width: \"100%\",\r\n          },\r\n          toggle: {\r\n            width: \"32px\",\r\n            textAlign: \"right\",\r\n            position: \"relative\",\r\n          },\r\n          icon: {\r\n            marginRight: \"-4px\",\r\n            marginTop: \"12px\",\r\n            cursor: \"pointer\",\r\n            position: \"relative\",\r\n          },\r\n          iconHighlight: {\r\n            position: \"absolute\",\r\n            width: \"24px\",\r\n            height: \"28px\",\r\n            background: \"#eee\",\r\n            borderRadius: \"4px\",\r\n            top: \"10px\",\r\n            left: \"12px\",\r\n            display: \"none\",\r\n          },\r\n          input: {\r\n            fontSize: \"11px\",\r\n            color: \"#333\",\r\n            width: \"100%\",\r\n            borderRadius: \"2px\",\r\n            border: \"none\",\r\n            boxShadow: \"inset 0 0 0 1px #dadada\",\r\n            height: \"21px\",\r\n            textAlign: \"center\",\r\n          },\r\n          label: {\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"11px\",\r\n            lineHeight: \"11px\",\r\n            color: \"#969696\",\r\n            textAlign: \"center\",\r\n            display: \"block\",\r\n            marginTop: \"12px\",\r\n          },\r\n          svg: {\r\n            fill: \"#333\",\r\n            width: \"24px\",\r\n            height: \"24px\",\r\n            border: \"1px transparent solid\",\r\n            borderRadius: \"5px\",\r\n          },\r\n        },\r\n      },\r\n      this.props,\r\n      this.state\r\n    );\r\n\r\n    let fields;\r\n    if (this.state.view === \"hex\") {\r\n      fields = (\r\n        <div style={styles.fields} className=\"flexbox-fix\">\r\n          <div style={styles.field}>\r\n            <EditableInput\r\n              style={{ input: styles.input, label: styles.label } as EditableInputStyles}\r\n              label=\"hex\"\r\n              value={this.props.hex}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.state.view === \"rgb\") {\r\n      fields = (\r\n        <div style={styles.fields} className=\"flexbox-fix\">\r\n          <div style={styles.field}>\r\n            <EditableInput\r\n              style={{ input: styles.input, label: styles.label } as EditableInputStyles}\r\n              label=\"r\"\r\n              value={this.props.rgb.r}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div style={styles.field}>\r\n            <EditableInput\r\n              style={{ input: styles.input, label: styles.label } as EditableInputStyles}\r\n              label=\"g\"\r\n              value={this.props.rgb.g}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div style={styles.field}>\r\n            <EditableInput\r\n              style={{ input: styles.input, label: styles.label } as EditableInputStyles}\r\n              label=\"b\"\r\n              value={this.props.rgb.b}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.state.view === \"hsl\") {\r\n      fields = (\r\n        <div style={styles.fields} className=\"flexbox-fix\">\r\n          <div style={styles.field}>\r\n            <EditableInput\r\n              style={{ input: styles.input, label: styles.label } as EditableInputStyles}\r\n              label=\"h\"\r\n              value={Math.round(this.props.hsl.h)}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div style={styles.field}>\r\n            <EditableInput\r\n              style={{ input: styles.input, label: styles.label } as EditableInputStyles}\r\n              label=\"s\"\r\n              value={`${Math.round(this.props.hsl.s * 100)}%`}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div style={styles.field}>\r\n            <EditableInput\r\n              style={{ input: styles.input, label: styles.label } as EditableInputStyles}\r\n              label=\"l\"\r\n              value={`${Math.round(this.props.hsl.l * 100)}%`}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div style={styles.wrap} className=\"flexbox-fix\">\r\n        {fields}\r\n        <div style={styles.toggle as CSSProperties}>\r\n          <div style={styles.icon as CSSProperties} onClick={this.toggleViews}>\r\n            {/* @ts-ignore */}\r\n            <UnfoldMoreHorizontalIcon\r\n              style={styles.svg}\r\n              onMouseOver={this.showHighlight}\r\n              onMouseEnter={this.showHighlight}\r\n              onMouseOut={this.hideHighlight}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlmCustomFields;\r\n"]},"metadata":{},"sourceType":"module"}