{"ast":null,"code":"import { RepeaterComponent } from \"types\";\nimport { createUUID, isButtonRepeater, isMediaRepeater, isSoundRepeater } from \"utils\";\nimport { getAllHTMLElements, getBLMElement, setComponentBy } from \"../../core\";\nimport { getAllButtonComponent } from \"./button\";\nimport { getAllMediaComponent } from \"./media\";\nimport { getAllSoundComponent } from \"./sound\";\nexport function getAllRepeaterComponent(parent, selector) {\n  const elements = getAllHTMLElements(parent, selector);\n  const repeaters = [];\n\n  for (const element of elements) {\n    const model = getBLMElement(element);\n    const repeater = createRepater(element, model);\n    repeaters.push(repeater);\n  }\n\n  return repeaters;\n}\n\nfunction createRepater(parent, element) {\n  const component = new RepeaterComponent();\n  const {\n    style\n  } = parent;\n\n  if (element) {\n    const {\n      options\n    } = element;\n    setComponentBy(component, element);\n\n    if (options) {\n      const {\n        allowcomponent,\n        min_items,\n        max_items,\n        default_class,\n        repeater_options,\n        media_options,\n        duplicate,\n        saveincss\n      } = options;\n      component.id = createUUID();\n      component.allowComponent = allowcomponent;\n      component.minimum = min_items;\n      component.maximum = max_items;\n      component.defaultClass = default_class;\n      component.options = repeater_options;\n\n      for (let i = 0; i < style.length; i++) {\n        const key = style.item(i);\n        const value = style.getPropertyValue(key);\n\n        if (key.startsWith(\"--\")) {\n          component.variables = { ...component.variables,\n            [key]: value\n          };\n        }\n      }\n\n      if (isMediaRepeater(component)) {\n        component.mediaConfig = media_options;\n        component.saveInCSS = saveincss || false;\n        component.value = getAllMediaComponent(parent, `[blm-component=\"media\"]`, component.id);\n      } else if (isButtonRepeater(component)) {\n        component.duplicate = duplicate;\n        component.value = getAllButtonComponent(parent, `[blm-component=\"button\"]`, component.id);\n      } else if (isSoundRepeater(component)) {\n        component.value = getAllSoundComponent(parent, `[blm-component=\"audio\"]`, component.id);\n      }\n    }\n  }\n\n  return component;\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/model/component/repeater.ts"],"names":["RepeaterComponent","createUUID","isButtonRepeater","isMediaRepeater","isSoundRepeater","getAllHTMLElements","getBLMElement","setComponentBy","getAllButtonComponent","getAllMediaComponent","getAllSoundComponent","getAllRepeaterComponent","parent","selector","elements","repeaters","element","model","repeater","createRepater","push","component","style","options","allowcomponent","min_items","max_items","default_class","repeater_options","media_options","duplicate","saveincss","id","allowComponent","minimum","maximum","defaultClass","i","length","key","item","value","getPropertyValue","startsWith","variables","mediaConfig","saveInCSS"],"mappings":"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","sourcesContent":["import { BLMElement, RepeaterComponent, RepeaterConfigJSON } from \"types\";\r\nimport { createUUID, isButtonRepeater, isMediaRepeater, isSoundRepeater } from \"utils\";\r\nimport { getAllHTMLElements, getBLMElement, setComponentBy } from \"../../core\";\r\nimport { getAllButtonComponent } from \"./button\";\r\nimport { getAllMediaComponent } from \"./media\";\r\nimport { getAllSoundComponent } from \"./sound\";\r\n\r\nexport function getAllRepeaterComponent(parent: HTMLElement, selector: string) {\r\n  const elements = getAllHTMLElements(parent, selector);\r\n  const repeaters = [];\r\n\r\n  for (const element of elements) {\r\n    const model = getBLMElement<RepeaterConfigJSON>(element);\r\n    const repeater = createRepater(element, model);\r\n\r\n    repeaters.push(repeater);\r\n  }\r\n\r\n  return repeaters;\r\n}\r\n\r\nfunction createRepater(parent: HTMLElement, element?: BLMElement<RepeaterConfigJSON>) {\r\n  const component = new RepeaterComponent();\r\n  const { style } = parent;\r\n\r\n  if (element) {\r\n    const { options } = element;\r\n\r\n    setComponentBy(component, element);\r\n\r\n    if (options) {\r\n      const {\r\n        allowcomponent,\r\n        min_items,\r\n        max_items,\r\n        default_class,\r\n        repeater_options,\r\n        media_options,\r\n        duplicate,\r\n        saveincss,\r\n      } = options;\r\n\r\n      component.id = createUUID();\r\n      component.allowComponent = allowcomponent;\r\n      component.minimum = min_items;\r\n      component.maximum = max_items;\r\n      component.defaultClass = default_class;\r\n      component.options = repeater_options;\r\n\r\n      for (let i = 0; i < style.length; i++) {\r\n        const key = style.item(i);\r\n        const value = style.getPropertyValue(key);\r\n\r\n        if (key.startsWith(\"--\")) {\r\n          component.variables = { ...component.variables, [key]: value };\r\n        }\r\n      }\r\n\r\n      if (isMediaRepeater(component)) {\r\n        component.mediaConfig = media_options;\r\n        component.saveInCSS = saveincss || false;\r\n        component.value = getAllMediaComponent(parent, `[blm-component=\"media\"]`, component.id);\r\n      } else if (isButtonRepeater(component)) {\r\n        component.duplicate = duplicate;\r\n        component.value = getAllButtonComponent(parent, `[blm-component=\"button\"]`, component.id);\r\n      } else if (isSoundRepeater(component)) {\r\n        component.value = getAllSoundComponent(parent, `[blm-component=\"audio\"]`, component.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  return component;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}