{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\shared\\\\transform\\\\BlmTransformHandle.tsx\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { HandleRoles } from \"./types\";\n\nfunction BlmTransformHandle(props) {\n  const {\n    type,\n    onMouseDown\n  } = props;\n\n  const getRole = () => {\n    if (type === \"n\") {\n      return HandleRoles.RESIZE_UP;\n    } else if (type === \"e\") {\n      return HandleRoles.RESIZE_RIGHT;\n    } else if (type === \"s\") {\n      return HandleRoles.RESIZE_DOWN;\n    } else if (type === \"w\") {\n      return HandleRoles.RESIZE_LEFT;\n    } else if (type === \"ne\") {\n      return HandleRoles.RESIZE_UP + HandleRoles.RESIZE_RIGHT;\n    } else if (type === \"se\") {\n      return HandleRoles.RESIZE_DOWN + HandleRoles.RESIZE_RIGHT;\n    } else if (type === \"nw\") {\n      return HandleRoles.RESIZE_UP + HandleRoles.RESIZE_LEFT;\n    } else if (type === \"sw\") {\n      return HandleRoles.RESIZE_DOWN + HandleRoles.RESIZE_LEFT;\n    } else {\n      return HandleRoles.NO_ROLE;\n    }\n  };\n\n  const handleMouseDown = event => {\n    const role = getRole();\n\n    if (onMouseDown) {\n      onMouseDown(event, role);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"transform-handle-wrapper\", type),\n    onMouseDown: handleMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  });\n}\n\nexport default BlmTransformHandle;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/shared/transform/BlmTransformHandle.tsx"],"names":["React","clsx","HandleRoles","BlmTransformHandle","props","type","onMouseDown","getRole","RESIZE_UP","RESIZE_RIGHT","RESIZE_DOWN","RESIZE_LEFT","NO_ROLE","handleMouseDown","event","role"],"mappings":";AAAA,OAAOA,KAAP,MAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,WAAT,QAA4B,SAA5B;;AAOA,SAASC,kBAAT,CAA4BC,KAA5B,EAAyD;AACvD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAwBF,KAA9B;;AAEA,QAAMG,OAAO,GAAG,MAAM;AACpB,QAAIF,IAAI,KAAK,GAAb,EAAkB;AAChB,aAAOH,WAAW,CAACM,SAAnB;AACD,KAFD,MAEO,IAAIH,IAAI,KAAK,GAAb,EAAkB;AACvB,aAAOH,WAAW,CAACO,YAAnB;AACD,KAFM,MAEA,IAAIJ,IAAI,KAAK,GAAb,EAAkB;AACvB,aAAOH,WAAW,CAACQ,WAAnB;AACD,KAFM,MAEA,IAAIL,IAAI,KAAK,GAAb,EAAkB;AACvB,aAAOH,WAAW,CAACS,WAAnB;AACD,KAFM,MAEA,IAAIN,IAAI,KAAK,IAAb,EAAmB;AACxB,aAAOH,WAAW,CAACM,SAAZ,GAAwBN,WAAW,CAACO,YAA3C;AACD,KAFM,MAEA,IAAIJ,IAAI,KAAK,IAAb,EAAmB;AACxB,aAAOH,WAAW,CAACQ,WAAZ,GAA0BR,WAAW,CAACO,YAA7C;AACD,KAFM,MAEA,IAAIJ,IAAI,KAAK,IAAb,EAAmB;AACxB,aAAOH,WAAW,CAACM,SAAZ,GAAwBN,WAAW,CAACS,WAA3C;AACD,KAFM,MAEA,IAAIN,IAAI,KAAK,IAAb,EAAmB;AACxB,aAAOH,WAAW,CAACQ,WAAZ,GAA0BR,WAAW,CAACS,WAA7C;AACD,KAFM,MAEA;AACL,aAAOT,WAAW,CAACU,OAAnB;AACD;AACF,GApBD;;AAsBA,QAAMC,eAAe,GAAIC,KAAD,IAAuB;AAC7C,UAAMC,IAAI,GAAGR,OAAO,EAApB;;AAEA,QAAID,WAAJ,EAAiB;AACfA,MAAAA,WAAW,CAACQ,KAAD,EAAQC,IAAR,CAAX;AACD;AACF,GAND;;AAQA,sBAAO;AAAK,IAAA,SAAS,EAAEd,IAAI,CAAC,0BAAD,EAA6BI,IAA7B,CAApB;AAAwD,IAAA,WAAW,EAAEQ,eAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,eAAeV,kBAAf","sourcesContent":["import React, { MouseEvent } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { HandleRoles } from \"./types\";\r\n\r\nexport interface TransformHandleProps {\r\n  type: string;\r\n  onMouseDown: (event: MouseEvent, role: number) => void;\r\n}\r\n\r\nfunction BlmTransformHandle(props: TransformHandleProps) {\r\n  const { type, onMouseDown } = props;\r\n\r\n  const getRole = () => {\r\n    if (type === \"n\") {\r\n      return HandleRoles.RESIZE_UP;\r\n    } else if (type === \"e\") {\r\n      return HandleRoles.RESIZE_RIGHT;\r\n    } else if (type === \"s\") {\r\n      return HandleRoles.RESIZE_DOWN;\r\n    } else if (type === \"w\") {\r\n      return HandleRoles.RESIZE_LEFT;\r\n    } else if (type === \"ne\") {\r\n      return HandleRoles.RESIZE_UP + HandleRoles.RESIZE_RIGHT;\r\n    } else if (type === \"se\") {\r\n      return HandleRoles.RESIZE_DOWN + HandleRoles.RESIZE_RIGHT;\r\n    } else if (type === \"nw\") {\r\n      return HandleRoles.RESIZE_UP + HandleRoles.RESIZE_LEFT;\r\n    } else if (type === \"sw\") {\r\n      return HandleRoles.RESIZE_DOWN + HandleRoles.RESIZE_LEFT;\r\n    } else {\r\n      return HandleRoles.NO_ROLE;\r\n    }\r\n  };\r\n\r\n  const handleMouseDown = (event: MouseEvent) => {\r\n    const role = getRole();\r\n\r\n    if (onMouseDown) {\r\n      onMouseDown(event, role);\r\n    }\r\n  };\r\n\r\n  return <div className={clsx(\"transform-handle-wrapper\", type)} onMouseDown={handleMouseDown} />;\r\n}\r\n\r\nexport default BlmTransformHandle;\r\n"]},"metadata":{},"sourceType":"module"}