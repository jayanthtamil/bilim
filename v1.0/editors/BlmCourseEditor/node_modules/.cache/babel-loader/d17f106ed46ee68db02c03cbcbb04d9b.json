{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\hotspot\\\\list\\\\BlmHotspotsEditor.tsx\";\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Checkbox, Drawer, FormControlLabel } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { findObject, reorderArray } from \"utils\";\nimport BlmHotspotCard from \"./card\";\nimport \"./styles.scss\";\n\nconst getDraggableStyle = draggableStyle => ({\n  userSelect: \"none\",\n  ...draggableStyle\n});\n\nfunction BlmHotspotsEditor(props) {\n  const {\n    data,\n    onSave,\n    onClose,\n    openConfirmDialog\n  } = props;\n  const [state, setState] = useState({\n    hotspot: data,\n    isEdited: false\n  });\n  const {\n    hotspot,\n    isEdited\n  } = state;\n  const {\n    prerequisite,\n    items,\n    groups\n  } = hotspot;\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  const saveChanges = () => {\n    if (onSave) {\n      onSave(hotspot);\n    }\n  };\n\n  const updateChange = newHotspot => {\n    setState({\n      hotspot: newHotspot,\n      isEdited: true\n    });\n  };\n\n  const getItemGroup = item => {\n    const {\n      groupId\n    } = item;\n\n    if (groupId && groups.enabled) {\n      return findObject(groups.items, groupId, \"id\");\n    }\n  };\n\n  const handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const newHotspot = { ...hotspot\n    };\n\n    if (name === \"prerequisite\") {\n      newHotspot[name] = value;\n    }\n\n    updateChange(newHotspot);\n  };\n\n  const handleDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    const newHotspot = { ...hotspot,\n      items: reorderArray(items, result.source.index, result.destination.index)\n    };\n    updateChange(newHotspot);\n  };\n\n  const handleSave = event => {\n    if (isEdited) {\n      saveChanges();\n    }\n\n    handleClose(event);\n  };\n\n  const openSaveConfirmDialog = () => {\n    const onOk = event => {\n      handleSave(event);\n    };\n\n    const onCancel = event => {\n      handleClose(event);\n    };\n\n    const options = {\n      className: \"template-editor-warning-dialog\",\n      okLabel: `${t(\"button.save\")}`,\n      cancelLabel: `${t(\"button.cancel\")}`\n    };\n    openConfirmDialog(`${t(\"alert.cancel_confirm\")}`, `${t(\"alert.save_all_changes\")}`, onOk, onCancel, options);\n  };\n\n  const handleDrawerClose = event => {\n    if (isEdited) {\n      openSaveConfirmDialog();\n    } else {\n      handleClose(event);\n    }\n  };\n\n  const handleClose = event => {\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    className: \"hotspots-editor-drawer\",\n    open: true,\n    onClose: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspots-editor-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"prerequisite\",\n    label: t(\"hotspot.prerequisite_order\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"checkbox-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 20\n      }\n    }),\n    checked: prerequisite,\n    className: \"hotspots-prerequisite-frm-lbl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspots-editor-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, t(\"hotspot.hotspot_order\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspots-editor-list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"droppable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: provided.innerRef,\n    className: \"hotspots-editor-list\"\n  }, provided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), items.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n    key: item.id,\n    draggableId: item.id,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, (providedItem, snapshot) => {\n    return /*#__PURE__*/React.createElement(BlmHotspotCard, Object.assign({\n      ref: providedItem.innerRef,\n      key: item.id,\n      data: item,\n      group: getItemGroup(item),\n      drag: providedItem.dragHandleProps,\n      style: getDraggableStyle(providedItem.draggableProps.style),\n      className: clsx({\n        dragging: snapshot.isDragging\n      })\n    }, providedItem.draggableProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 27\n      }\n    }));\n  })), provided.placeholder)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspots-editor-btn-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspots-editor-save-btn\",\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, t(\"button.save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspots-editor-cancel-btn\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, t(\"button.cancel\")))));\n}\n\nexport default BlmHotspotsEditor;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/hotspot/list/BlmHotspotsEditor.tsx"],"names":["React","useState","clsx","DragDropContext","Draggable","Droppable","Checkbox","Drawer","FormControlLabel","useTranslation","findObject","reorderArray","BlmHotspotCard","getDraggableStyle","draggableStyle","userSelect","BlmHotspotsEditor","props","data","onSave","onClose","openConfirmDialog","state","setState","hotspot","isEdited","prerequisite","items","groups","t","saveChanges","updateChange","newHotspot","getItemGroup","item","groupId","enabled","handleChange","event","target","name","value","type","checked","handleDragEnd","result","destination","source","index","handleSave","handleClose","openSaveConfirmDialog","onOk","onCancel","options","className","okLabel","cancelLabel","handleDrawerClose","provided","innerRef","droppableProps","map","id","providedItem","snapshot","dragHandleProps","draggableProps","style","dragging","isDragging","placeholder"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, MouseEvent, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { DragDropContext, Draggable, Droppable, DropResult } from \"react-beautiful-dnd\";\r\nimport { Checkbox, Drawer, FormControlLabel } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { MediaHotspot, MediaHotspotItem } from \"types\";\r\nimport { findObject, reorderArray } from \"utils\";\r\nimport BlmHotspotCard from \"./card\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  data: MediaHotspot;\r\n  onSave?: (data: MediaHotspot) => void;\r\n  onClose?: (event: MouseEvent) => void;\r\n}\r\n\r\nconst getDraggableStyle = (draggableStyle: any) => ({\r\n  userSelect: \"none\",\r\n  ...draggableStyle,\r\n});\r\n\r\nfunction BlmHotspotsEditor(props: CompProps) {\r\n  const { data, onSave, onClose, openConfirmDialog } = props;\r\n  const [state, setState] = useState({ hotspot: data, isEdited: false });\r\n  const { hotspot, isEdited } = state;\r\n  const { prerequisite, items, groups } = hotspot;\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const saveChanges = () => {\r\n    if (onSave) {\r\n      onSave(hotspot);\r\n    }\r\n  };\r\n\r\n  const updateChange = (newHotspot: MediaHotspot) => {\r\n    setState({ hotspot: newHotspot, isEdited: true });\r\n  };\r\n\r\n  const getItemGroup = (item: MediaHotspotItem) => {\r\n    const { groupId } = item;\r\n\r\n    if (groupId && groups.enabled) {\r\n      return findObject(groups.items, groupId, \"id\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<any>) => {\r\n    const target = event.target;\r\n    const name = target.name as string;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const newHotspot = { ...hotspot };\r\n\r\n    if (name === \"prerequisite\") {\r\n      newHotspot[name] = value;\r\n    }\r\n\r\n    updateChange(newHotspot);\r\n  };\r\n\r\n  const handleDragEnd = (result: DropResult) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const newHotspot = {\r\n      ...hotspot,\r\n      items: reorderArray(items, result.source.index, result.destination.index),\r\n    };\r\n\r\n    updateChange(newHotspot);\r\n  };\r\n\r\n  const handleSave = (event: MouseEvent) => {\r\n    if (isEdited) {\r\n      saveChanges();\r\n    }\r\n\r\n    handleClose(event);\r\n  };\r\n\r\n  const openSaveConfirmDialog = () => {\r\n    const onOk = (event: MouseEvent) => {\r\n      handleSave(event);\r\n    };\r\n    const onCancel = (event: MouseEvent) => {\r\n      handleClose(event);\r\n    };\r\n    const options = {\r\n      className: \"template-editor-warning-dialog\",\r\n      okLabel: `${t(\"button.save\")}`,\r\n      cancelLabel: `${t(\"button.cancel\")}`,\r\n    };\r\n\r\n    openConfirmDialog(\r\n      `${t(\"alert.cancel_confirm\")}`,\r\n      `${t(\"alert.save_all_changes\")}`,\r\n      onOk,\r\n      onCancel,\r\n      options\r\n    );\r\n  };\r\n\r\n  const handleDrawerClose = (event: any) => {\r\n    if (isEdited) {\r\n      openSaveConfirmDialog();\r\n    } else {\r\n      handleClose(event);\r\n    }\r\n  };\r\n\r\n  const handleClose = (event: MouseEvent) => {\r\n    if (onClose) {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer className=\"hotspots-editor-drawer\" open={true} onClose={handleDrawerClose}>\r\n      <div className=\"hotspots-editor-wrapper\">\r\n        <FormControlLabel\r\n          name=\"prerequisite\"\r\n          label={t(\"hotspot.prerequisite_order\")}\r\n          control={<Checkbox className=\"checkbox-2\" />}\r\n          checked={prerequisite}\r\n          className=\"hotspots-prerequisite-frm-lbl\"\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"hotspots-editor-title\">{t(\"hotspot.hotspot_order\")}</div>\r\n        <div className=\"hotspots-editor-list-wrapper\">\r\n          <DragDropContext onDragEnd={handleDragEnd}>\r\n            <Droppable droppableId=\"droppable\">\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  className=\"hotspots-editor-list\"\r\n                  {...provided.droppableProps}\r\n                >\r\n                  {items.map((item, index) => (\r\n                    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                      {(providedItem, snapshot) => {\r\n                        return (\r\n                          <BlmHotspotCard\r\n                            ref={providedItem.innerRef}\r\n                            key={item.id}\r\n                            data={item}\r\n                            group={getItemGroup(item)}\r\n                            drag={providedItem.dragHandleProps}\r\n                            style={getDraggableStyle(providedItem.draggableProps.style)}\r\n                            className={clsx({ dragging: snapshot.isDragging })}\r\n                            {...providedItem.draggableProps}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </div>\r\n        <div className=\"hotspots-editor-btn-wrapper\">\r\n          <div className=\"hotspots-editor-save-btn\" onClick={handleSave}>\r\n            {t(\"button.save\")}\r\n          </div>\r\n          <div className=\"hotspots-editor-cancel-btn\" onClick={handleClose}>\r\n            {t(\"button.cancel\")}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default BlmHotspotsEditor;\r\n"]},"metadata":{},"sourceType":"module"}