{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\properties\\\\controls\\\\page-background\\\\BlmPageBackgroundProps.tsx\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { isVideo } from \"utils\";\nimport { BlmTintPicker } from \"shared\";\nimport { BlmBackgroundMedia, BlmBackgroundSize } from \"components/shared\";\nimport \"./page-background.scss\";\n\nconst BlmPageBackgroundProps = props => {\n  const {\n    data,\n    bgColors,\n    onChange\n  } = props;\n  const state = data.backgroundJSON;\n  const {\n    media,\n    tint,\n    mediaSize,\n    colorSize\n  } = state;\n  const {\n    t\n  } = useTranslation(\"properties\");\n\n  const updateChange = newState => {\n    if (onChange && data) {\n      const newData = { ...data,\n        backgroundJSON: newState\n      };\n      onChange(newData);\n    }\n  };\n\n  const handleChange = event => {\n    if (data) {\n      const {\n        name,\n        value\n      } = event.target;\n      const newState = { ...state\n      };\n\n      if (name === \"media\" || name === \"tint\" || name === \"mediaSize\" || name === \"colorSize\") {\n        newState[name] = value;\n      }\n\n      updateChange(newState);\n    }\n  };\n\n  if (data) {\n    var _media$main, _media$main2;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-background-props-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-bg-props-bg-media-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, ((_media$main = media.main) === null || _media$main === void 0 ? void 0 : _media$main.type) && isVideo((_media$main2 = media.main) === null || _media$main2 === void 0 ? void 0 : _media$main2.type) ? \"Background Video\" : \"Background Media\"), /*#__PURE__*/React.createElement(BlmBackgroundMedia, {\n      name: \"media\",\n      elementId: data.id,\n      type: \"page\",\n      data: media,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BlmBackgroundSize, {\n      title: t(\"page_screen_background.size\"),\n      name: \"mediaSize\",\n      size: mediaSize,\n      disabled: !Boolean(media.main),\n      className: \"page-bg-props-media-size-box\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-bg-props-bg-color-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, t(\"page_screen_background.background_clr\")), /*#__PURE__*/React.createElement(BlmTintPicker, {\n      data: tint,\n      colors: bgColors,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BlmBackgroundSize, {\n      name: \"colorSize\",\n      size: colorSize,\n      disabled: !Boolean(tint.color),\n      className: \"page-bg-props-color-size-box\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return null;\n  }\n};\n\nexport default BlmPageBackgroundProps;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/properties/controls/page-background/BlmPageBackgroundProps.tsx"],"names":["React","useTranslation","isVideo","BlmTintPicker","BlmBackgroundMedia","BlmBackgroundSize","BlmPageBackgroundProps","props","data","bgColors","onChange","state","backgroundJSON","media","tint","mediaSize","colorSize","t","updateChange","newState","newData","handleChange","event","name","value","target","main","type","id","Boolean","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  BackgroundMedia,\r\n  BackgroundProps,\r\n  CustomChangeEvent,\r\n  ElementPropsComponent,\r\n  Tint,\r\n} from \"types\";\r\nimport { BackgroundSizeTypes } from \"editor-constants\";\r\nimport { isVideo } from \"utils\";\r\nimport { BlmTintPicker } from \"shared\";\r\nimport { BlmBackgroundMedia, BlmBackgroundSize } from \"components/shared\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./page-background.scss\";\r\n\r\nexport interface CompProps extends ElementPropsComponent, ContainerProps {}\r\n\r\nconst BlmPageBackgroundProps = (props: CompProps) => {\r\n  const { data, bgColors, onChange } = props;\r\n  const state = data.backgroundJSON!;\r\n  const { media, tint, mediaSize, colorSize } = state;\r\n  const { t } = useTranslation(\"properties\");\r\n\r\n  const updateChange = (newState: BackgroundProps) => {\r\n    if (onChange && data) {\r\n      const newData = { ...data, backgroundJSON: newState };\r\n\r\n      onChange(newData);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: CustomChangeEvent<BackgroundMedia | BackgroundSizeTypes | Tint>) => {\r\n    if (data) {\r\n      const { name, value } = event.target;\r\n      const newState = { ...state };\r\n\r\n      if (name === \"media\" || name === \"tint\" || name === \"mediaSize\" || name === \"colorSize\") {\r\n        newState[name] = value as any;\r\n      }\r\n\r\n      updateChange(newState);\r\n    }\r\n  };\r\n\r\n  if (data) {\r\n    return (\r\n      <div className=\"page-background-props-container\">\r\n        <div className=\"page-bg-props-bg-media-title\">\r\n          {media.main?.type && isVideo(media.main?.type) ? \"Background Video\" : \"Background Media\"}\r\n        </div>\r\n        <BlmBackgroundMedia\r\n          name=\"media\"\r\n          elementId={data.id}\r\n          type=\"page\"\r\n          data={media}\r\n          onChange={handleChange}\r\n        />\r\n        <BlmBackgroundSize\r\n          title={t(\"page_screen_background.size\")}\r\n          name=\"mediaSize\"\r\n          size={mediaSize}\r\n          disabled={!Boolean(media.main)}\r\n          className=\"page-bg-props-media-size-box\"\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"page-bg-props-bg-color-title\">\r\n          {t(\"page_screen_background.background_clr\")}\r\n        </div>\r\n        <BlmTintPicker data={tint} colors={bgColors} onChange={handleChange} />\r\n        <BlmBackgroundSize\r\n          name=\"colorSize\"\r\n          size={colorSize}\r\n          disabled={!Boolean(tint.color)}\r\n          className=\"page-bg-props-color-size-box\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default BlmPageBackgroundProps;\r\n"]},"metadata":{},"sourceType":"module"}