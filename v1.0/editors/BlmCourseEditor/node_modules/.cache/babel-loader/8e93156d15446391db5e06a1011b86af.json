{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\shared\\\\media-editor\\\\components\\\\top-timeline\\\\BlmTopTimeline.tsx\";\nimport React, { memo, useRef, useState } from \"react\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport { MediaCueActions } from \"editor-constants\";\nimport { removeObject } from \"utils\";\nimport { convertTimeToXPos, getCurrentCues, cloneCues } from \"../../utils\";\nimport BlmTopCue from \"./cue\";\nimport \"./styles.scss\";\nconst initCtx = {\n  x: 0,\n  y: 0\n};\n\nfunction BlmTopTimeline(props) {\n  const {\n    type,\n    wavesurfer,\n    data,\n    currentCue,\n    onAdd,\n    onChange,\n    onTimeChange\n  } = props;\n  const containerRef = useRef(null);\n  const [ctxMenu, setCtxMenu] = useState({ ...initCtx\n  });\n  const {\n    currentTime,\n    scrollTime,\n    currentDuration,\n    pxPerSec\n  } = wavesurfer;\n  const curCues = getCurrentCues(type, data, scrollTime, currentDuration);\n  const isCtxOpen = ctxMenu.cue !== undefined;\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange(type, newData);\n    }\n  };\n\n  const updateTimeChange = time => {\n    if (onTimeChange) {\n      onTimeChange(time);\n    }\n  };\n\n  const handleAddClick = () => {\n    var _currentCue$startTime;\n\n    const startTime = (_currentCue$startTime = currentCue === null || currentCue === void 0 ? void 0 : currentCue.startTime) !== null && _currentCue$startTime !== void 0 ? _currentCue$startTime : 0;\n    const endTime = (currentCue === null || currentCue === void 0 ? void 0 : currentCue.action) === MediaCueActions.ScrollVPauseC ? currentCue.endTime : startTime + 0.1;\n    if (onAdd && (!currentCue || startTime > currentTime || currentTime > endTime)) onAdd(type, currentTime, NaN);\n  };\n\n  const handleChange = (oldCue, newCue) => {\n    const newData = cloneCues(data, oldCue, newCue);\n    updateChange(newData);\n  };\n\n  const handleDelete = cue => {\n    const newData = removeObject(data, cue);\n    updateChange(newData);\n  };\n\n  const handleTimeChange = time => {\n    updateTimeChange(time);\n  };\n\n  const handleContextMenu = (event, cue) => {\n    event.preventDefault();\n    setCtxMenu({\n      x: event.clientX - 2,\n      y: event.clientY - 4,\n      cue\n    });\n  };\n\n  const handleContextItemClick = item => {\n    const {\n      cue\n    } = ctxMenu;\n    let newData;\n\n    if (cue) {\n      if (item === \"delete\") {\n        newData = removeObject(data, cue);\n      }\n\n      if (newData) {\n        updateChange(newData);\n      }\n    }\n\n    handleContextMenuClose();\n  };\n\n  const handleContextMenuClose = () => {\n    setCtxMenu({ ...initCtx\n    });\n  };\n\n  const renderChildren = () => {\n    return curCues.map((cue, ind) => {\n      const previous = ind > 0 && ind <= curCues.length ? curCues[ind - 1] : undefined;\n      const next = ind >= 0 && ind < curCues.length ? curCues[ind + 1] : undefined;\n      const minTime = (previous === null || previous === void 0 ? void 0 : previous.action) === MediaCueActions.ScrollVPauseC ? previous === null || previous === void 0 ? void 0 : previous.endTime : previous === null || previous === void 0 ? void 0 : previous.startTime;\n      const maxTime = next === null || next === void 0 ? void 0 : next.startTime;\n      return /*#__PURE__*/React.createElement(BlmTopCue, {\n        key: ind,\n        data: cue,\n        index: ind,\n        wavesurfer: wavesurfer,\n        minTime: minTime,\n        maxTime: maxTime,\n        onChange: handleChange,\n        onDelete: handleDelete,\n        onTimeChange: handleTimeChange,\n        onContextMenu: handleContextMenu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    className: \"top-timeline-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      left: convertTimeToXPos(currentTime, pxPerSec, scrollTime) + \"px\"\n    },\n    className: \"add-cue-btn\",\n    onClick: handleAddClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-cues-scroller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-cues-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, renderChildren())), /*#__PURE__*/React.createElement(Menu, {\n    keepMounted: true,\n    open: isCtxOpen,\n    anchorReference: \"anchorPosition\",\n    anchorPosition: isCtxOpen ? {\n      top: ctxMenu.y,\n      left: ctxMenu.x\n    } : undefined,\n    className: \"top-timeline-ctx-menu\",\n    onClose: handleContextMenuClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: event => handleContextItemClick(\"delete\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"Delete\")));\n}\n\nexport default memo(BlmTopTimeline);","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/media-editor/components/top-timeline/BlmTopTimeline.tsx"],"names":["React","memo","useRef","useState","Menu","MenuItem","MediaCueActions","removeObject","convertTimeToXPos","getCurrentCues","cloneCues","BlmTopCue","initCtx","x","y","BlmTopTimeline","props","type","wavesurfer","data","currentCue","onAdd","onChange","onTimeChange","containerRef","ctxMenu","setCtxMenu","currentTime","scrollTime","currentDuration","pxPerSec","curCues","isCtxOpen","cue","undefined","updateChange","newData","updateTimeChange","time","handleAddClick","startTime","endTime","action","ScrollVPauseC","NaN","handleChange","oldCue","newCue","handleDelete","handleTimeChange","handleContextMenu","event","preventDefault","clientX","clientY","handleContextItemClick","item","handleContextMenuClose","renderChildren","map","ind","previous","length","next","minTime","maxTime","left","top"],"mappings":"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","sourcesContent":["import React, { memo, useRef, MouseEvent as ReactMouseEvent, useState } from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nimport { MediaTrackCue, MediaWavesurfer } from \"types\";\r\nimport { MediaCueActions, MediaTrackTypes } from \"editor-constants\";\r\nimport { removeObject } from \"utils\";\r\nimport { convertTimeToXPos, getCurrentCues, cloneCues } from \"../../utils\";\r\nimport BlmTopCue from \"./cue\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  type: MediaTrackTypes;\r\n  wavesurfer: MediaWavesurfer;\r\n  data: MediaTrackCue[];\r\n  currentCue?: MediaTrackCue;\r\n  onAdd?: (type: MediaTrackTypes, startTime: number, endTime: number) => void;\r\n  onChange?: (type: MediaTrackTypes, data: MediaTrackCue[]) => void;\r\n  onTimeChange?: (time: number) => void;\r\n}\r\n\r\ninterface CtxMenu {\r\n  cue?: MediaTrackCue;\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nconst initCtx: CtxMenu = { x: 0, y: 0 };\r\n\r\nfunction BlmTopTimeline(props: CompProps) {\r\n  const { type, wavesurfer, data, currentCue, onAdd, onChange, onTimeChange } = props;\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [ctxMenu, setCtxMenu] = useState({ ...initCtx });\r\n  const { currentTime, scrollTime, currentDuration, pxPerSec } = wavesurfer;\r\n  const curCues = getCurrentCues(type, data, scrollTime, currentDuration);\r\n  const isCtxOpen = ctxMenu.cue !== undefined;\r\n\r\n  const updateChange = (newData: MediaTrackCue[]) => {\r\n    if (onChange) {\r\n      onChange(type, newData);\r\n    }\r\n  };\r\n\r\n  const updateTimeChange = (time: number) => {\r\n    if (onTimeChange) {\r\n      onTimeChange(time);\r\n    }\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    const startTime = currentCue?.startTime ?? 0;\r\n    const endTime =\r\n      currentCue?.action === MediaCueActions.ScrollVPauseC ? currentCue.endTime : startTime + 0.1;\r\n\r\n    if (onAdd && (!currentCue || startTime > currentTime || currentTime > endTime))\r\n      onAdd(type, currentTime, NaN);\r\n  };\r\n\r\n  const handleChange = (oldCue: MediaTrackCue, newCue: MediaTrackCue) => {\r\n    const newData = cloneCues(data, oldCue, newCue);\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleDelete = (cue: MediaTrackCue) => {\r\n    const newData = removeObject(data, cue);\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleTimeChange = (time: number) => {\r\n    updateTimeChange(time);\r\n  };\r\n\r\n  const handleContextMenu = (event: ReactMouseEvent, cue: MediaTrackCue) => {\r\n    event.preventDefault();\r\n\r\n    setCtxMenu({ x: event.clientX - 2, y: event.clientY - 4, cue });\r\n  };\r\n\r\n  const handleContextItemClick = (item: \"delete\") => {\r\n    const { cue } = ctxMenu;\r\n    let newData;\r\n\r\n    if (cue) {\r\n      if (item === \"delete\") {\r\n        newData = removeObject(data, cue);\r\n      }\r\n\r\n      if (newData) {\r\n        updateChange(newData);\r\n      }\r\n    }\r\n\r\n    handleContextMenuClose();\r\n  };\r\n\r\n  const handleContextMenuClose = () => {\r\n    setCtxMenu({ ...initCtx });\r\n  };\r\n\r\n  const renderChildren = () => {\r\n    return curCues.map((cue, ind) => {\r\n      const previous = ind > 0 && ind <= curCues.length ? curCues[ind - 1] : undefined;\r\n      const next = ind >= 0 && ind < curCues.length ? curCues[ind + 1] : undefined;\r\n      const minTime =\r\n        previous?.action === MediaCueActions.ScrollVPauseC\r\n          ? previous?.endTime\r\n          : previous?.startTime;\r\n      const maxTime = next?.startTime;\r\n\r\n      return (\r\n        <BlmTopCue\r\n          key={ind}\r\n          data={cue}\r\n          index={ind}\r\n          wavesurfer={wavesurfer}\r\n          minTime={minTime}\r\n          maxTime={maxTime}\r\n          onChange={handleChange}\r\n          onDelete={handleDelete}\r\n          onTimeChange={handleTimeChange}\r\n          onContextMenu={handleContextMenu}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef} className=\"top-timeline-wrapper\">\r\n      <div\r\n        style={{ left: convertTimeToXPos(currentTime, pxPerSec, scrollTime) + \"px\" }}\r\n        className=\"add-cue-btn\"\r\n        onClick={handleAddClick}\r\n      />\r\n      <div className=\"top-cues-scroller\">\r\n        <div className=\"top-cues-wrapper\">{renderChildren()}</div>\r\n      </div>\r\n      <Menu\r\n        keepMounted\r\n        open={isCtxOpen}\r\n        anchorReference=\"anchorPosition\"\r\n        anchorPosition={isCtxOpen ? { top: ctxMenu.y, left: ctxMenu.x } : undefined}\r\n        className=\"top-timeline-ctx-menu\"\r\n        onClose={handleContextMenuClose}\r\n      >\r\n        <MenuItem onClick={(event) => handleContextItemClick(\"delete\")}>Delete</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(BlmTopTimeline);\r\n"]},"metadata":{},"sourceType":"module"}