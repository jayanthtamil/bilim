{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\domain\\\\templates-panel\\\\template-list\\\\template-list-item\\\\BlmTemplateListItem.tsx\";\nimport React, { useContext } from \"react\";\nimport clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\nimport { TemplatePanelTypes } from \"editor-constants\";\nimport TemplatesPanelContext from \"../../TemplatesPanelContext\";\nimport TemplateListContext from \"../TemplateListContext\";\nimport \"./template-list-item.scss\";\n\nfunction BlmTemplateListItem(props) {\n  const {\n    data\n  } = props;\n  const {\n    name,\n    description,\n    thumbnailLight,\n    info,\n    warning\n  } = data;\n  const {\n    type\n  } = useContext(TemplatesPanelContext);\n  const {\n    t\n  } = useTranslation(\"domain\");\n  const {\n    selectedTemplate,\n    onInfoClick,\n    onAddClick,\n    onVariantsClick\n  } = useContext(TemplateListContext);\n\n  const handleAddClick = event => {\n    if (onAddClick) {\n      onAddClick(data);\n    }\n  };\n\n  const handleVariantsClick = event => {\n    if (onVariantsClick) {\n      onVariantsClick(data);\n    }\n  };\n\n  const handleInfoClick = event => {\n    if (info && onInfoClick) {\n      onInfoClick(event.currentTarget, info);\n    }\n  };\n\n  const handleWarningClick = event => {\n    if (warning && onInfoClick) {\n      onInfoClick(event.currentTarget, warning);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"template-item-wrapper\", {\n      selected: selectedTemplate === data\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"template-item-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-item-img-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: thumbnailLight,\n    className: \"template-item-img\",\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"template-item-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, description || name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-item-add-btn\",\n    onClick: handleAddClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, type === TemplatePanelTypes.Switchable ? `${t(\"template_list_item.replace\")}` : `${t(\"template_list_item.add\")}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-item-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-item-variant-btn\",\n    onClick: handleVariantsClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, t(\"template_list_item.variant\")), info && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-item-info-icon\",\n    onClick: handleInfoClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }\n  }), warning && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-item-warning-icon\",\n    onClick: handleWarningClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }));\n}\n\nexport default BlmTemplateListItem;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/domain/templates-panel/template-list/template-list-item/BlmTemplateListItem.tsx"],"names":["React","useContext","clsx","useTranslation","TemplatePanelTypes","TemplatesPanelContext","TemplateListContext","BlmTemplateListItem","props","data","name","description","thumbnailLight","info","warning","type","t","selectedTemplate","onInfoClick","onAddClick","onVariantsClick","handleAddClick","event","handleVariantsClick","handleInfoClick","currentTarget","handleWarningClick","selected","Switchable"],"mappings":"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","sourcesContent":["import React, { useContext, MouseEvent } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { Template } from \"types\";\r\nimport { TemplatePanelTypes } from \"editor-constants\";\r\nimport TemplatesPanelContext from \"../../TemplatesPanelContext\";\r\nimport TemplateListContext from \"../TemplateListContext\";\r\nimport \"./template-list-item.scss\";\r\n\r\nexport interface CompProps {\r\n  data: Template;\r\n}\r\n\r\nfunction BlmTemplateListItem(props: CompProps) {\r\n  const { data } = props;\r\n  const { name, description, thumbnailLight, info, warning } = data;\r\n  const { type } = useContext(TemplatesPanelContext);\r\n  const { t } = useTranslation(\"domain\");\r\n  const { selectedTemplate, onInfoClick, onAddClick, onVariantsClick } =\r\n    useContext(TemplateListContext);\r\n\r\n  const handleAddClick = (event: MouseEvent) => {\r\n    if (onAddClick) {\r\n      onAddClick(data);\r\n    }\r\n  };\r\n\r\n  const handleVariantsClick = (event: MouseEvent) => {\r\n    if (onVariantsClick) {\r\n      onVariantsClick(data);\r\n    }\r\n  };\r\n\r\n  const handleInfoClick = (event: MouseEvent<HTMLElement>) => {\r\n    if (info && onInfoClick) {\r\n      onInfoClick(event.currentTarget, info);\r\n    }\r\n  };\r\n\r\n  const handleWarningClick = (event: MouseEvent<HTMLElement>) => {\r\n    if (warning && onInfoClick) {\r\n      onInfoClick(event.currentTarget, warning);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\"template-item-wrapper\", {\r\n        selected: selectedTemplate === data,\r\n      })}\r\n    >\r\n      <span className=\"template-item-lbl\" />\r\n      <div className=\"template-item-img-wrapper\">\r\n        <img src={thumbnailLight} className=\"template-item-img\" alt={name} />\r\n      </div>\r\n      <span className=\"template-item-name\">{description || name}</span>\r\n      <div className=\"template-item-add-btn\" onClick={handleAddClick}>\r\n        {type === TemplatePanelTypes.Switchable\r\n          ? `${t(\"template_list_item.replace\")}`\r\n          : `${t(\"template_list_item.add\")}`}\r\n      </div>\r\n      <div className=\"template-item-divider\" />\r\n      <div className=\"template-item-variant-btn\" onClick={handleVariantsClick}>\r\n        {t(\"template_list_item.variant\")}\r\n      </div>\r\n      {info && <div className=\"template-item-info-icon\" onClick={handleInfoClick} />}\r\n      {warning && <div className=\"template-item-warning-icon\" onClick={handleWarningClick} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmTemplateListItem;\r\n"]},"metadata":{},"sourceType":"module"}