{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\domain\\\\templates-panel\\\\variant-list\\\\BlmVariantList.tsx\";\nimport React, { useState, useMemo, useContext, Fragment } from \"react\";\nimport clsx from \"clsx\";\nimport { Checkbox, Switch } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport TemplatesPanelContext from \"../TemplatesPanelContext\";\nimport BlmVariantListItem from \"./variant-list-item\";\nimport \"./variant-list.scss\";\nimport { ElementType } from \"editor-constants\";\n\nfunction BlmVariantList(props) {\n  const {\n    title,\n    data,\n    show,\n    selectedVariant: pSelectedVariant,\n    isBgChecked: pIsBgChecked = false,\n    substitude,\n    showWarning = false,\n    showMoreButton = false,\n    onBgChange,\n    onMoreClick,\n    onCloseClick,\n    size,\n    element,\n    onChange\n  } = props;\n\n  if (size) {\n    var {\n      isFullscreen,\n      width,\n      margin,\n      padding\n    } = size;\n  }\n\n  const {\n    onAddTemplateClick\n  } = useContext(TemplatesPanelContext);\n  const [selectedVariant, setSelectedVariant] = useState(pSelectedVariant);\n  const [isBgChecked, setIsBgChecked] = useState(pIsBgChecked);\n  const {\n    t\n  } = useTranslation(\"domain\");\n  const hasDarkVariant = useMemo(() => {\n    return data.some(item => {\n      if (item.thumbnailDark && item.thumbnailDark !== \"\") {\n        return true;\n      }\n\n      return false;\n    });\n  }, [data]);\n\n  const handleBgSwitchChange = event => {\n    const {\n      checked\n    } = event.target;\n    setIsBgChecked(checked);\n\n    if (onBgChange) {\n      onBgChange(checked);\n    }\n  };\n\n  const handleItemClick = variant => {\n    setSelectedVariant(variant);\n\n    if (onAddTemplateClick) {\n      onAddTemplateClick(variant, isBgChecked);\n    }\n  };\n\n  const handleCloseClick = event => {\n    if (onCloseClick) {\n      onCloseClick(event);\n    }\n  };\n\n  const handleChange = event => {\n    if (width && padding && margin && isFullscreen !== undefined) {\n      const target = event.target;\n      const {\n        name\n      } = target;\n      const value = \"checked\" in target ? target.checked : target.value;\n      const newData = { ...data,\n        width: { ...width\n        },\n        margin: { ...margin\n        },\n        padding: { ...padding\n        }\n      };\n\n      if (name === \"fullscreen\") {\n        newData.isFullscreen = value;\n      }\n\n      updateChange(newData);\n    }\n  };\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange(newData);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"variant-list-panel\", {\n      show: show\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"variant-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"variant-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"variant-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, t(\"variant_list.variants\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: (element === null || element === void 0 ? void 0 : element.type) === ElementType.PartPage || (element === null || element === void 0 ? void 0 : element.type) === ElementType.SimplePartPage ? \"variant-flex\" : \"variant-flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, ((element === null || element === void 0 ? void 0 : element.type) === ElementType.PartPage || (element === null || element === void 0 ? void 0 : element.type) === ElementType.SimplePartPage) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"variant_total_check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"fullscreen\",\n    checked: isFullscreen,\n    className: \"variant_check\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"variant_full_screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, t(\"variant_list.full_screen\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"variant-switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, hasDarkVariant && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"variant-bg-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, t(\"label.background\"), \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"variant-bg-switch-lbl light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, t(\"label.light\")), /*#__PURE__*/React.createElement(Switch, {\n    checked: isBgChecked,\n    onChange: handleBgSwitchChange,\n    className: \"switch-3 variant-bg-switch-ctrl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"variant-bg-switch-lbd dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, t(\"label.dark\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"variant-list-close-btn\",\n    onClick: handleCloseClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"variant-list-scroller custom-scrollbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"variant-list-wrapper \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, data.map(variant => /*#__PURE__*/React.createElement(BlmVariantListItem, {\n    key: variant.id,\n    data: variant,\n    bgChecked: !showWarning && isBgChecked,\n    selected: variant.id === (selectedVariant === null || selectedVariant === void 0 ? void 0 : selectedVariant.id),\n    showWarning: showWarning,\n    onClick: handleItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  })), substitude && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"variant-list-substitue-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, t(\"variant_list.substitue\")), /*#__PURE__*/React.createElement(BlmVariantListItem, {\n    key: substitude.id,\n    data: substitude,\n    bgChecked: isBgChecked,\n    selected: substitude.id === (selectedVariant === null || selectedVariant === void 0 ? void 0 : selectedVariant.id),\n    onClick: handleItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }))), showMoreButton && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"variant-list-more-btn\",\n    onClick: onMoreClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, t(\"variant_list.more_template\"))));\n}\n\nexport default BlmVariantList;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/domain/templates-panel/variant-list/BlmVariantList.tsx"],"names":["React","useState","useMemo","useContext","Fragment","clsx","Checkbox","Switch","useTranslation","TemplatesPanelContext","BlmVariantListItem","ElementType","BlmVariantList","props","title","data","show","selectedVariant","pSelectedVariant","isBgChecked","pIsBgChecked","substitude","showWarning","showMoreButton","onBgChange","onMoreClick","onCloseClick","size","element","onChange","isFullscreen","width","margin","padding","onAddTemplateClick","setSelectedVariant","setIsBgChecked","t","hasDarkVariant","some","item","thumbnailDark","handleBgSwitchChange","event","checked","target","handleItemClick","variant","handleCloseClick","handleChange","undefined","name","value","newData","updateChange","type","PartPage","SimplePartPage","map","id"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, MouseEvent, ChangeEvent, useContext, Fragment } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Checkbox, Switch } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { TemplateBase } from \"types\";\r\nimport TemplatesPanelContext from \"../TemplatesPanelContext\";\r\nimport BlmVariantListItem from \"./variant-list-item\";\r\nimport \"./variant-list.scss\";\r\nimport {\r\n  TemplateWidthChangeEvent,\r\n  TemplateLengthChangeEvent,\r\n} from \"components/template-editors/controls\";\r\nimport { TemplateSize, CourseElement } from \"types\";\r\nimport { ElementType } from \"editor-constants\";\r\n\r\nexport interface CompProps {\r\n  title: string;\r\n  data: TemplateBase[];\r\n  show: boolean;\r\n  selectedVariant?: TemplateBase;\r\n  isBgChecked?: boolean;\r\n  substitude?: TemplateBase;\r\n  showWarning?: boolean;\r\n  showMoreButton?: boolean;\r\n  onBgChange?: (isSelected: boolean) => void;\r\n  onMoreClick?: (event: MouseEvent) => void;\r\n  onCloseClick: (event: MouseEvent) => void;\r\n  size?: any;\r\n  element?: CourseElement | any;\r\n  onChange?: (data: TemplateSize) => void;\r\n}\r\n\r\ninterface SizeEditorState {\r\n  size: TemplateSize | null;\r\n  isEdited: boolean;\r\n}\r\n\r\nfunction BlmVariantList(props: CompProps) {\r\n  const {\r\n    title,\r\n    data,\r\n    show,\r\n    selectedVariant: pSelectedVariant,\r\n    isBgChecked: pIsBgChecked = false,\r\n    substitude,\r\n    showWarning = false,\r\n    showMoreButton = false,\r\n    onBgChange,\r\n    onMoreClick,\r\n    onCloseClick,\r\n    size,\r\n    element,\r\n    onChange,\r\n  } = props;\r\n  if (size) {\r\n    var { isFullscreen, width, margin, padding } = size;\r\n  }\r\n  const { onAddTemplateClick } = useContext(TemplatesPanelContext);\r\n  const [selectedVariant, setSelectedVariant] = useState(pSelectedVariant);\r\n  const [isBgChecked, setIsBgChecked] = useState(pIsBgChecked);\r\n  const { t } = useTranslation(\"domain\");\r\n\r\n  const hasDarkVariant = useMemo(() => {\r\n    return data.some((item) => {\r\n      if (item.thumbnailDark && item.thumbnailDark !== \"\") {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  }, [data]);\r\n\r\n  const handleBgSwitchChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { checked } = event.target;\r\n\r\n    setIsBgChecked(checked);\r\n\r\n    if (onBgChange) {\r\n      onBgChange(checked);\r\n    }\r\n  };\r\n\r\n  const handleItemClick = (variant: TemplateBase) => {\r\n    setSelectedVariant(variant);\r\n\r\n    if (onAddTemplateClick) {\r\n      onAddTemplateClick(variant, isBgChecked);\r\n    }\r\n  };\r\n\r\n  const handleCloseClick = (event: MouseEvent) => {\r\n    if (onCloseClick) {\r\n      onCloseClick(event);\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event: ChangeEvent<HTMLInputElement> | TemplateWidthChangeEvent | TemplateLengthChangeEvent\r\n  ) => {\r\n    if (width && padding && margin && isFullscreen !== undefined) {\r\n      const target = event.target;\r\n      const { name } = target;\r\n      const value = \"checked\" in target ? target.checked : target.value;\r\n      const newData: any = {\r\n        ...data,\r\n        width: { ...width },\r\n        margin: { ...margin },\r\n        padding: { ...padding }\r\n      };\r\n      if (name === \"fullscreen\") {\r\n        newData.isFullscreen = value as boolean;\r\n      }\r\n      updateChange(newData);\r\n    }\r\n  };\r\n  const updateChange = (newData: TemplateSize) => {\r\n    if (onChange) {\r\n      onChange(newData);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\"variant-list-panel\", {\r\n        show: show,\r\n      })}\r\n    >\r\n      <div className=\"variant-list-header\">\r\n        <span className=\"variant-title\">{title}</span>\r\n        <span className=\"variant-info\">{t(\"variant_list.variants\")}</span>\r\n        <div\r\n          className={\r\n            element?.type === ElementType.PartPage || element?.type === ElementType.SimplePartPage\r\n              ? \"variant-flex\"\r\n              : \"variant-flex-end\"\r\n          }\r\n        >\r\n          {(element?.type === ElementType.PartPage ||\r\n            element?.type === ElementType.SimplePartPage) && (\r\n            <div className=\"variant_total_check\">\r\n              <Checkbox\r\n                name=\"fullscreen\"\r\n                checked={isFullscreen}\r\n                className=\"variant_check\"\r\n                onChange={handleChange}\r\n              />\r\n              <strong className=\"variant_full_screen\">{t(\"variant_list.full_screen\")}</strong>\r\n            </div>\r\n          )}\r\n          <div className=\"variant-switch\">\r\n            {hasDarkVariant && (\r\n              <Fragment>\r\n                <span className=\"variant-bg-lbl\">{t(\"label.background\")} </span>\r\n                <span className=\"variant-bg-switch-lbl light\">{t(\"label.light\")}</span>\r\n                <Switch\r\n                  checked={isBgChecked}\r\n                  onChange={handleBgSwitchChange}\r\n                  className=\"switch-3 variant-bg-switch-ctrl\"\r\n                />\r\n                <span className=\"variant-bg-switch-lbd dark\">{t(\"label.dark\")}</span>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"variant-list-close-btn\" onClick={handleCloseClick} />\r\n      <div className=\"variant-list-scroller custom-scrollbar\">\r\n        <div className=\"variant-list-wrapper \">\r\n          {data.map((variant) => (\r\n            <BlmVariantListItem\r\n              key={variant.id}\r\n              data={variant}\r\n              bgChecked={!showWarning && isBgChecked}\r\n              selected={variant.id === selectedVariant?.id}\r\n              showWarning={showWarning}\r\n              onClick={handleItemClick}\r\n            />\r\n          ))}\r\n          {substitude && (\r\n            <Fragment>\r\n              <span className=\"variant-list-substitue-lbl\">{t(\"variant_list.substitue\")}</span>\r\n              <BlmVariantListItem\r\n                key={substitude.id}\r\n                data={substitude}\r\n                bgChecked={isBgChecked}\r\n                selected={substitude.id === selectedVariant?.id}\r\n                onClick={handleItemClick}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n        {showMoreButton && (\r\n          <div className=\"variant-list-more-btn\" onClick={onMoreClick}>\r\n            {t(\"variant_list.more_template\")}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmVariantList;\r\n"]},"metadata":{},"sourceType":"module"}