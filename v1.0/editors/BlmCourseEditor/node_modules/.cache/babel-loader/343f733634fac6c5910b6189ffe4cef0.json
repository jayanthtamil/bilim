{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\properties\\\\controls\\\\screen-background\\\\BlmScreenBackgroundProps.tsx\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { differenceOfObjects } from \"utils\";\nimport { BlmTintPicker } from \"shared\";\nimport { BlmBackgroundMedia } from \"components/shared\";\nimport { getScreenBackgroundMedias, getScreenBackgroundModel, setScreenBackgroundHTML } from \"template-builders\";\nimport \"./screen-background.scss\";\nconst initEditor = {\n  oldMedias: [],\n  isEdited: false\n};\n\nconst createTemplate = (template, background) => {\n  const newTemplate = { ...template\n  };\n  newTemplate.html = setScreenBackgroundHTML(newTemplate, background);\n  return newTemplate;\n};\n\nconst BlmScreenBackgroundProps = (props, ref) => {\n  const {\n    element,\n    template,\n    bgColors,\n    removeFiles,\n    clearFiles,\n    previewTemplates,\n    saveTemplates\n  } = props;\n  const [editor, setEditor] = useState(initEditor);\n  const {\n    data,\n    oldMedias,\n    isEdited\n  } = editor;\n  const {\n    t\n  } = useTranslation(\"properties\");\n  useImperativeHandle(ref, () => ({\n    isEdited,\n    save: saveChanges,\n    revert: revertChanges\n  }));\n  useEffect(() => {\n    if (template) {\n      const newBackground = getScreenBackgroundModel(template);\n\n      if (newBackground) {\n        const oldMedias = getScreenBackgroundMedias(newBackground);\n        setEditor({\n          data: newBackground,\n          oldMedias,\n          isEdited: false\n        });\n      }\n    }\n  }, [template]);\n\n  const saveChanges = () => {\n    if (template && data && isEdited) {\n      const newTemplate = createTemplate(template, data);\n      const newMedias = getScreenBackgroundMedias(data);\n      const deletedMedias = differenceOfObjects(oldMedias, newMedias, \"id\");\n      saveTemplates(element, newTemplate);\n      removeFiles(deletedMedias);\n      clearFiles(template.id, true);\n    }\n  };\n\n  const revertChanges = () => {\n    if (template) {\n      const newBackground = getScreenBackgroundModel(template);\n\n      if (newBackground) {\n        setEditor({ ...editor,\n          data: newBackground,\n          isEdited: false\n        });\n        updatePreivew(newBackground);\n      }\n\n      clearFiles(template.id, false);\n    }\n  };\n\n  const updatePreivew = newData => {\n    if (template) {\n      const newTemplate = createTemplate(template, newData);\n      previewTemplates(newTemplate);\n    }\n  };\n\n  const updateChange = newData => {\n    setEditor({ ...editor,\n      data: newData,\n      isEdited: true\n    });\n    updatePreivew(newData);\n  };\n\n  const handleChange = event => {\n    if (data) {\n      const {\n        name,\n        value\n      } = event.target;\n      const newData = { ...data\n      };\n\n      if (name === \"media\" || name === \"tint\") {\n        newData[name] = value;\n      }\n\n      updateChange(newData);\n    }\n  };\n\n  if (template && data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"screen-background-props-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"screen-bg-media-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, t(\"page_screen_background.background_media\")), /*#__PURE__*/React.createElement(BlmBackgroundMedia, {\n      name: \"media\",\n      elementId: template.id,\n      type: \"screen\",\n      data: data.media,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"screen-bg-color-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, t(\"page_screen_background.background_clr\")), /*#__PURE__*/React.createElement(BlmTintPicker, {\n      data: data.tint,\n      colors: bgColors,\n      className: \"screen-bg-tint-picker\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return null;\n  }\n};\n\nexport default forwardRef(BlmScreenBackgroundProps);","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/properties/controls/screen-background/BlmScreenBackgroundProps.tsx"],"names":["React","forwardRef","useEffect","useImperativeHandle","useState","useTranslation","differenceOfObjects","BlmTintPicker","BlmBackgroundMedia","getScreenBackgroundMedias","getScreenBackgroundModel","setScreenBackgroundHTML","initEditor","oldMedias","isEdited","createTemplate","template","background","newTemplate","html","BlmScreenBackgroundProps","props","ref","element","bgColors","removeFiles","clearFiles","previewTemplates","saveTemplates","editor","setEditor","data","t","save","saveChanges","revert","revertChanges","newBackground","newMedias","deletedMedias","id","updatePreivew","newData","updateChange","handleChange","event","name","value","target","media","tint"],"mappings":"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","sourcesContent":["import React, {\r\n  forwardRef,\r\n  ForwardRefRenderFunction,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useState,\r\n} from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  BackgroundMedia,\r\n  CourseElement,\r\n  CourseElementTemplate,\r\n  CustomChangeEvent,\r\n  MediaFile,\r\n  PropertiesEditorComponent,\r\n  ScreenBackground,\r\n  Tint,\r\n} from \"types\";\r\nimport { differenceOfObjects } from \"utils\";\r\nimport { BlmTintPicker } from \"shared\";\r\nimport { BlmBackgroundMedia } from \"components/shared\";\r\nimport {\r\n  getScreenBackgroundMedias,\r\n  getScreenBackgroundModel,\r\n  setScreenBackgroundHTML,\r\n} from \"template-builders\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./screen-background.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  element: CourseElement;\r\n}\r\n\r\nexport interface EditorState {\r\n  data?: ScreenBackground;\r\n  oldMedias: MediaFile[];\r\n  isEdited: boolean;\r\n}\r\n\r\nconst initEditor: EditorState = { oldMedias: [], isEdited: false };\r\n\r\nconst createTemplate = (template: CourseElementTemplate, background: ScreenBackground) => {\r\n  const newTemplate: CourseElementTemplate = {\r\n    ...template,\r\n  };\r\n\r\n  newTemplate.html = setScreenBackgroundHTML(newTemplate, background);\r\n\r\n  return newTemplate;\r\n};\r\n\r\nconst BlmScreenBackgroundProps: ForwardRefRenderFunction<PropertiesEditorComponent, CompProps> = (\r\n  props,\r\n  ref\r\n) => {\r\n  const { element, template, bgColors, removeFiles, clearFiles, previewTemplates, saveTemplates } =\r\n    props;\r\n  const [editor, setEditor] = useState(initEditor);\r\n  const { data, oldMedias, isEdited } = editor;\r\n  const { t } = useTranslation(\"properties\");\r\n  \r\n  useImperativeHandle(ref, () => ({\r\n    isEdited,\r\n    save: saveChanges,\r\n    revert: revertChanges,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (template) {\r\n      const newBackground = getScreenBackgroundModel(template);\r\n\r\n      if (newBackground) {\r\n        const oldMedias = getScreenBackgroundMedias(newBackground);\r\n\r\n        setEditor({ data: newBackground, oldMedias, isEdited: false });\r\n      }\r\n    }\r\n  }, [template]);\r\n\r\n  const saveChanges = () => {\r\n    if (template && data && isEdited) {\r\n      const newTemplate = createTemplate(template, data);\r\n      const newMedias = getScreenBackgroundMedias(data);\r\n      const deletedMedias = differenceOfObjects(oldMedias, newMedias, \"id\");\r\n\r\n      saveTemplates(element, newTemplate);\r\n      removeFiles(deletedMedias);\r\n      clearFiles(template.id, true);\r\n    }\r\n  };\r\n\r\n  const revertChanges = () => {\r\n    if (template) {\r\n      const newBackground = getScreenBackgroundModel(template);\r\n\r\n      if (newBackground) {\r\n        setEditor({ ...editor, data: newBackground, isEdited: false });\r\n        updatePreivew(newBackground);\r\n      }\r\n\r\n      clearFiles(template.id, false);\r\n    }\r\n  };\r\n\r\n  const updatePreivew = (newData: ScreenBackground) => {\r\n    if (template) {\r\n      const newTemplate = createTemplate(template, newData);\r\n\r\n      previewTemplates(newTemplate);\r\n    }\r\n  };\r\n\r\n  const updateChange = (newData: ScreenBackground) => {\r\n    setEditor({ ...editor, data: newData, isEdited: true });\r\n    updatePreivew(newData);\r\n  };\r\n\r\n  const handleChange = (event: CustomChangeEvent<BackgroundMedia | Tint>) => {\r\n    if (data) {\r\n      const { name, value } = event.target;\r\n      const newData = { ...data };\r\n\r\n      if (name === \"media\" || name === \"tint\") {\r\n        newData[name] = value as any;\r\n      }\r\n\r\n      updateChange(newData);\r\n    }\r\n  };\r\n\r\n  if (template && data) {\r\n    return (\r\n      <div className=\"screen-background-props-container\">\r\n        <div className=\"screen-bg-media-title\">{t(\"page_screen_background.background_media\")}</div>\r\n        <BlmBackgroundMedia\r\n          name=\"media\"\r\n          elementId={template.id}\r\n          type=\"screen\"\r\n          data={data.media}\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"screen-bg-color-title\">{t(\"page_screen_background.background_clr\")}</div>\r\n        <BlmTintPicker\r\n          data={data.tint}\r\n          colors={bgColors}\r\n          className=\"screen-bg-tint-picker\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default forwardRef(BlmScreenBackgroundProps);\r\n"]},"metadata":{},"sourceType":"module"}