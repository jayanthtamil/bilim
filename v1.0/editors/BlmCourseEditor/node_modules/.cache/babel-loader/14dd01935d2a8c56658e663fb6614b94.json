{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\shared\\\\tint-picker\\\\BlmTintPicker.tsx\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport BlmColorPicker from \"../color-picker\";\nimport BlmAlphaPicker from \"../alpha-picker\";\nimport \"./tint-picker.scss\";\n\nfunction BlmTintPicker(props) {\n  var _defaultTint$alpha;\n\n  const {\n    title,\n    subTitle,\n    name = \"tint\",\n    data,\n    defaultTint,\n    colors,\n    className,\n    outOver,\n    onChange\n  } = props;\n  const {\n    color = defaultTint === null || defaultTint === void 0 ? void 0 : defaultTint.color,\n    alpha = (_defaultTint$alpha = defaultTint === null || defaultTint === void 0 ? void 0 : defaultTint.alpha) !== null && _defaultTint$alpha !== void 0 ? _defaultTint$alpha : 100\n  } = data || {};\n\n  const updateChange = value => {\n    if (onChange) {\n      onChange({\n        target: {\n          name,\n          value\n        }\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newData = { ...data,\n      color,\n      alpha\n    };\n\n    if (name === \"color\" && value) {\n      var _alpha;\n\n      newData.color = value.color;\n      newData.alpha = (_alpha = value.alpha) !== null && _alpha !== void 0 ? _alpha : alpha;\n    } else if (name === \"alpha\") {\n      newData.alpha = value;\n    }\n\n    updateChange(newData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"tint-picker-wrapper\", className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, outOver && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tint-picker-out\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, outOver), title && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tint-picker-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(BlmColorPicker, {\n    color: color,\n    colors: colors,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), subTitle && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tint-picker-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 20\n    }\n  }, subTitle), /*#__PURE__*/React.createElement(BlmAlphaPicker, {\n    alpha: alpha,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BlmTintPicker;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/shared/tint-picker/BlmTintPicker.tsx"],"names":["React","clsx","BlmColorPicker","BlmAlphaPicker","BlmTintPicker","props","title","subTitle","name","data","defaultTint","colors","className","outOver","onChange","color","alpha","updateChange","value","target","handleChange","event","newData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA,OAAOC,cAAP,MAA+D,iBAA/D;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAO,oBAAP;;AAgBA,SAASC,aAAT,CAAuBC,KAAvB,EAAyC;AAAA;;AACvC,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,IAAI,GAAG,MAHH;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,WALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA,OARI;AASJC,IAAAA;AATI,MAUFT,KAVJ;AAWA,QAAM;AAAEU,IAAAA,KAAK,GAAGL,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEK,KAAvB;AAA8BC,IAAAA,KAAK,yBAAGN,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEM,KAAhB,mEAAyB;AAA5D,MAAoEP,IAAI,IAAI,EAAlF;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAiB;AACpC,QAAIJ,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,MAAM,EAAE;AAAEX,UAAAA,IAAF;AAAQU,UAAAA;AAAR;AAAV,OAAD,CAAR;AACD;AACF,GAJD;;AAMA,QAAME,YAAY,GAAIC,KAAD,IAAqE;AACxF,UAAM;AAAEb,MAAAA,IAAF;AAAQU,MAAAA;AAAR,QAAkBG,KAAK,CAACF,MAA9B;AACA,UAAMG,OAAa,GAAG,EAAE,GAAGb,IAAL;AAAWM,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAtB;;AAEA,QAAIR,IAAI,KAAK,OAAT,IAAoBU,KAAxB,EAA+B;AAAA;;AAC7BI,MAAAA,OAAO,CAACP,KAAR,GAAiBG,KAAD,CAA4BH,KAA5C;AACAO,MAAAA,OAAO,CAACN,KAAR,aAAiBE,KAAD,CAA4BF,KAA5C,2CAAqDA,KAArD;AACD,KAHD,MAGO,IAAIR,IAAI,KAAK,OAAb,EAAsB;AAC3Bc,MAAAA,OAAO,CAACN,KAAR,GAAgBE,KAAhB;AACD;;AAEDD,IAAAA,YAAY,CAACK,OAAD,CAAZ;AACD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAErB,IAAI,CAAC,qBAAD,EAAwBW,SAAxB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,iBAAI;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,OAAnC,CADd,EAEGP,KAAK,iBAAI;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCA,KAArC,CAFZ,eAGE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAES,KAAvB;AAA8B,IAAA,MAAM,EAAEJ,MAAtC;AAA8C,IAAA,QAAQ,EAAES,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGb,QAAQ,iBAAI;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,QAAzC,CAJf,eAKE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAES,KAAvB;AAA8B,IAAA,QAAQ,EAAEI,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD;;AAED,eAAehB,aAAf","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { CustomChangeEvent, Tint } from \"types\";\r\nimport BlmColorPicker, { ColorPickerColor, SwatchColors } from \"../color-picker\";\r\nimport BlmAlphaPicker from \"../alpha-picker\";\r\nimport \"./tint-picker.scss\";\r\n\r\nexport type TintPickerChangeEvent = CustomChangeEvent<Tint>;\r\n\r\nexport interface CompProps {\r\n  title?: string;\r\n  subTitle?: string;\r\n  name?: string;\r\n  data?: Tint;\r\n  defaultTint?: Tint;\r\n  colors?: SwatchColors;\r\n  className?: string;\r\n  outOver?: string;\r\n  onChange?: (event: TintPickerChangeEvent) => void;\r\n}\r\n\r\nfunction BlmTintPicker(props: CompProps) {\r\n  const {\r\n    title,\r\n    subTitle,\r\n    name = \"tint\",\r\n    data,\r\n    defaultTint,\r\n    colors,\r\n    className,\r\n    outOver,\r\n    onChange,\r\n  } = props;\r\n  const { color = defaultTint?.color, alpha = defaultTint?.alpha ?? 100 } = data || {};\r\n\r\n  const updateChange = (value: Tint) => {\r\n    if (onChange) {\r\n      onChange({ target: { name, value } });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: CustomChangeEvent<ColorPickerColor | number | undefined>) => {\r\n    const { name, value } = event.target;\r\n    const newData: Tint = { ...data, color, alpha };\r\n\r\n    if (name === \"color\" && value) {\r\n      newData.color = (value as ColorPickerColor).color;\r\n      newData.alpha = (value as ColorPickerColor).alpha ?? alpha;\r\n    } else if (name === \"alpha\") {\r\n      newData.alpha = value as number;\r\n    }\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(\"tint-picker-wrapper\", className)}>\r\n      {outOver && <span className=\"tint-picker-out\">{outOver}</span>}\r\n      {title && <span className=\"tint-picker-title\">{title}</span>}\r\n      <BlmColorPicker color={color} colors={colors} onChange={handleChange} />\r\n      {subTitle && <span className=\"tint-picker-sub-title\">{subTitle}</span>}\r\n      <BlmAlphaPicker alpha={alpha} onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmTintPicker;\r\n"]},"metadata":{},"sourceType":"module"}