{"ast":null,"code":"export const changeKeyMap = {\n  related_to: {\n    obj: \"related_to\",\n    key: \"checked\"\n  },\n  related_to_value: {\n    obj: \"related_to\",\n    key: \"value\"\n  },\n  retry_quiz: {\n    obj: \"retry_quiz\",\n    key: \"checked\"\n  },\n  retry_quiz_attempts: {\n    obj: \"retry_quiz\",\n    key: \"attempts\"\n  },\n  retry_quiz_lock: {\n    obj: \"retry_quiz\",\n    key: \"lock_when_success\"\n  },\n  timer: {\n    obj: \"timer\",\n    key: \"checked\"\n  },\n  timer_value: {\n    obj: \"timer\",\n    key: \"value\"\n  },\n  randomize_questions: {\n    obj: \"randomize_questions\",\n    key: \"checked\"\n  },\n  randomize_questions_value: {\n    obj: \"randomize_questions\",\n    key: \"value\"\n  },\n  proposition_feedback_opt1: {\n    obj: \"proposition_feedback\",\n    key: \"by_question\"\n  },\n  proposition_feedback_opt2: {\n    obj: \"proposition_feedback\",\n    key: \"global\"\n  },\n  question_feedback_opt1: {\n    obj: \"question_feedback\",\n    key: \"by_question\"\n  },\n  question_feedback_opt2: {\n    obj: \"question_feedback\",\n    key: \"global\"\n  },\n  advanced_opt1: {\n    obj: \"advanced\",\n    key: \"show_as_complete_even_if_no_succeed\"\n  },\n  advanced_opt2: {\n    obj: \"advanced\",\n    key: \"all_sub_eval_succeed_for_validate\"\n  }\n};","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/properties/controls/chapter-evaluation/utils.ts"],"names":["changeKeyMap","related_to","obj","key","related_to_value","retry_quiz","retry_quiz_attempts","retry_quiz_lock","timer","timer_value","randomize_questions","randomize_questions_value","proposition_feedback_opt1","proposition_feedback_opt2","question_feedback_opt1","question_feedback_opt2","advanced_opt1","advanced_opt2"],"mappings":"AAEA,OAAO,MAAMA,YAA0B,GAAG;AACxCC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,GAAG,EAAE;AAA1B,GAD4B;AAExCC,EAAAA,gBAAgB,EAAE;AAAEF,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,GAAG,EAAE;AAA1B,GAFsB;AAGxCE,EAAAA,UAAU,EAAE;AAAEH,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,GAAG,EAAE;AAA1B,GAH4B;AAIxCG,EAAAA,mBAAmB,EAAE;AAAEJ,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,GAAG,EAAE;AAA1B,GAJmB;AAKxCI,EAAAA,eAAe,EAAE;AAAEL,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,GAAG,EAAE;AAA1B,GALuB;AAMxCK,EAAAA,KAAK,EAAE;AAAEN,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GANiC;AAOxCM,EAAAA,WAAW,EAAE;AAAEP,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAP2B;AAQxCO,EAAAA,mBAAmB,EAAE;AAAER,IAAAA,GAAG,EAAE,qBAAP;AAA8BC,IAAAA,GAAG,EAAE;AAAnC,GARmB;AASxCQ,EAAAA,yBAAyB,EAAE;AAAET,IAAAA,GAAG,EAAE,qBAAP;AAA8BC,IAAAA,GAAG,EAAE;AAAnC,GATa;AAUxCS,EAAAA,yBAAyB,EAAE;AAAEV,IAAAA,GAAG,EAAE,sBAAP;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAVa;AAWxCU,EAAAA,yBAAyB,EAAE;AAAEX,IAAAA,GAAG,EAAE,sBAAP;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAXa;AAYxCW,EAAAA,sBAAsB,EAAE;AAAEZ,IAAAA,GAAG,EAAE,mBAAP;AAA4BC,IAAAA,GAAG,EAAE;AAAjC,GAZgB;AAaxCY,EAAAA,sBAAsB,EAAE;AAAEb,IAAAA,GAAG,EAAE,mBAAP;AAA4BC,IAAAA,GAAG,EAAE;AAAjC,GAbgB;AAcxCa,EAAAA,aAAa,EAAE;AACbd,IAAAA,GAAG,EAAE,UADQ;AAEbC,IAAAA,GAAG,EAAE;AAFQ,GAdyB;AAkBxCc,EAAAA,aAAa,EAAE;AACbf,IAAAA,GAAG,EAAE,UADQ;AAEbC,IAAAA,GAAG,EAAE;AAFQ;AAlByB,CAAnC","sourcesContent":["import { ChangeKeyMap } from \"./types\";\r\n\r\nexport const changeKeyMap: ChangeKeyMap = {\r\n  related_to: { obj: \"related_to\", key: \"checked\" },\r\n  related_to_value: { obj: \"related_to\", key: \"value\" },\r\n  retry_quiz: { obj: \"retry_quiz\", key: \"checked\" },\r\n  retry_quiz_attempts: { obj: \"retry_quiz\", key: \"attempts\" },\r\n  retry_quiz_lock: { obj: \"retry_quiz\", key: \"lock_when_success\" },\r\n  timer: { obj: \"timer\", key: \"checked\" },\r\n  timer_value: { obj: \"timer\", key: \"value\" },\r\n  randomize_questions: { obj: \"randomize_questions\", key: \"checked\" },\r\n  randomize_questions_value: { obj: \"randomize_questions\", key: \"value\" },\r\n  proposition_feedback_opt1: { obj: \"proposition_feedback\", key: \"by_question\" },\r\n  proposition_feedback_opt2: { obj: \"proposition_feedback\", key: \"global\" },\r\n  question_feedback_opt1: { obj: \"question_feedback\", key: \"by_question\" },\r\n  question_feedback_opt2: { obj: \"question_feedback\", key: \"global\" },\r\n  advanced_opt1: {\r\n    obj: \"advanced\",\r\n    key: \"show_as_complete_even_if_no_succeed\",\r\n  },\r\n  advanced_opt2: {\r\n    obj: \"advanced\",\r\n    key: \"all_sub_eval_succeed_for_validate\",\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}