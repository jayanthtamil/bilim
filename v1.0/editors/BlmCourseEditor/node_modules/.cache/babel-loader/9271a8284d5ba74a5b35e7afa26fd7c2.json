{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\shared\\\\animation\\\\attachment\\\\BlmAnimationAttachment.tsx\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\nimport { getFileExtension, isAudio, isImage, isVideo } from \"utils\";\nimport BlmReplaceAttachment from \"../replace\";\nimport \"./styles.scss\";\nexport const getFileClassName = (ext, type) => {\n  if (type) {\n    if (isImage(type)) {\n      return \"image\";\n    } else if (isVideo(type)) {\n      return \"video\";\n    } else if (isAudio(type)) {\n      return \"audio\";\n    } else if (ext === \"pdf\") {\n      return \"pdf\";\n    } else if (ext === \"json\") {\n      return \"json\";\n    }\n  }\n\n  return \"doc\";\n};\n\nfunction BlmAnimationAttachment(props) {\n  const {\n    id,\n    data\n  } = props;\n  const {\n    id: fid,\n    name,\n    type,\n    url,\n    subtitle\n  } = data;\n  const ext = getFileExtension(name);\n  const {\n    t\n  } = useTranslation(\"shared\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"attachment-wrapper\", getFileClassName(ext, type)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"attachment-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, type && isImage(type) && /*#__PURE__*/React.createElement(\"img\", {\n    src: `${url}?${fid}`,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"attachment-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"attachment-download-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: url,\n    download: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, t(\"animation_attach.download\"))), /*#__PURE__*/React.createElement(BlmReplaceAttachment, {\n    id: id,\n    data: data,\n    className: \"attachment-replace-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), subtitle && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"attachment-subs-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"attachment-subs-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, t(\"animation_attach.subtitles\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"attachment-subs-download-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: subtitle.url,\n    download: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, t(\"animation_attach.download\"))), /*#__PURE__*/React.createElement(BlmReplaceAttachment, {\n    id: id,\n    data: subtitle,\n    className: \"attachment-subs-replace-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default BlmAnimationAttachment;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/animation/attachment/BlmAnimationAttachment.tsx"],"names":["React","clsx","useTranslation","getFileExtension","isAudio","isImage","isVideo","BlmReplaceAttachment","getFileClassName","ext","type","BlmAnimationAttachment","props","id","data","fid","name","url","subtitle","t"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { AnimationAttachment } from \"types\";\r\nimport { MIMEType } from \"editor-constants\";\r\nimport { getFileExtension, isAudio, isImage, isVideo } from \"utils\";\r\nimport BlmReplaceAttachment from \"../replace\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  id: string;\r\n  data: AnimationAttachment;\r\n}\r\n\r\nexport const getFileClassName = (ext: string, type?: MIMEType) => {\r\n  if (type) {\r\n    if (isImage(type)) {\r\n      return \"image\";\r\n    } else if (isVideo(type)) {\r\n      return \"video\";\r\n    } else if (isAudio(type)) {\r\n      return \"audio\";\r\n    } else if (ext === \"pdf\") {\r\n      return \"pdf\";\r\n    } else if (ext === \"json\") {\r\n      return \"json\";\r\n    }\r\n  }\r\n  return \"doc\";\r\n};\r\n\r\nfunction BlmAnimationAttachment(props: CompProps) {\r\n  const { id, data } = props;\r\n  const { id: fid, name, type, url, subtitle } = data;\r\n  const ext = getFileExtension(name);\r\n  const { t } = useTranslation(\"shared\");\r\n\r\n  return (\r\n    <div className={clsx(\"attachment-wrapper\", getFileClassName(ext, type))}>\r\n      <div className=\"attachment-preview\">\r\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {type && isImage(type) && <img src={`${url}?${fid}`} alt={name} />}\r\n        </a>\r\n      </div>\r\n      <div className=\"attachment-lbl\">{name}</div>\r\n      <div className=\"attachment-download-btn\">\r\n        <a href={url} download>\r\n          {t(\"animation_attach.download\")}\r\n        </a>\r\n      </div>\r\n      <BlmReplaceAttachment id={id} data={data} className=\"attachment-replace-btn\" />\r\n      {subtitle && (\r\n        <div className=\"attachment-subs-wrapper\">\r\n          <div className=\"attachment-subs-title\">{t(\"animation_attach.subtitles\")}</div>\r\n          <div className=\"attachment-subs-download-btn\">\r\n            <a href={subtitle.url} download>\r\n              {t(\"animation_attach.download\")}\r\n            </a>\r\n          </div>\r\n          <BlmReplaceAttachment id={id} data={subtitle} className=\"attachment-subs-replace-btn\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmAnimationAttachment;\r\n"]},"metadata":{},"sourceType":"module"}