{"ast":null,"code":"//https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\nexport function rgbToHex(r, g, b) {\n  return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\nexport function hexToRgb(hex) {\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\nexport function createRGBA(color, alpha = 100) {\n  if (color) {\n    const rgb = hexToRgb(color);\n    return rgb ? `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${alpha / 100})` : undefined;\n  }\n}\n\nfunction strToHex(str) {\n  let value = parseInt(str, 10);\n\n  if (str.indexOf(\"%\") !== -1) {\n    value = value / 100 * 255;\n  }\n\n  return (value | 1 << 8).toString(16).slice(1);\n}\n\nexport function fromRgbaStr(org) {\n  const rgb = org.replace(/\\s/g, \"\").match(/^rgba?\\((\\d+%?),(\\d+%?),(\\d+%?),?([^,\\s)]+)?/i);\n  const a = rgb && rgb[4] ? Number(rgb[4]) : 1;\n  const hex = rgb ? \"#\" + strToHex(rgb[1]) + strToHex(rgb[2]) + strToHex(rgb[3]) : org;\n  const alpha = Math.round(a * 100);\n  return {\n    color: hex,\n    alpha\n  };\n}\nexport function getRandomColor() {\n  const letters = \"0123456789ABCDEF\";\n  let color = \"#\";\n\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/utils/core/color.ts"],"names":["rgbToHex","r","g","b","toString","slice","hexToRgb","hex","shorthandRegex","replace","m","result","exec","parseInt","createRGBA","color","alpha","rgb","undefined","strToHex","str","value","indexOf","fromRgbaStr","org","match","a","Number","Math","round","getRandomColor","letters","i","floor","random"],"mappings":"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","sourcesContent":["//https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nexport function rgbToHex(r: number, g: number, b: number) {\r\n  return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n}\r\n\r\nexport function hexToRgb(hex: string) {\r\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n    return r + r + g + g + b + b;\r\n  });\r\n\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n      }\r\n    : null;\r\n}\r\n\r\nexport function createRGBA(color?: string, alpha = 100) {\r\n  if (color) {\r\n    const rgb = hexToRgb(color);\r\n\r\n    return rgb ? `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${alpha / 100})` : undefined;\r\n  }\r\n}\r\n\r\nfunction strToHex(str: string) {\r\n  let value = parseInt(str, 10);\r\n\r\n  if (str.indexOf(\"%\") !== -1) {\r\n    value = (value / 100) * 255;\r\n  }\r\n\r\n  return (value | (1 << 8)).toString(16).slice(1);\r\n}\r\n\r\nexport function fromRgbaStr(org: string) {\r\n  const rgb = org.replace(/\\s/g, \"\").match(/^rgba?\\((\\d+%?),(\\d+%?),(\\d+%?),?([^,\\s)]+)?/i);\r\n  const a = rgb && rgb[4] ? Number(rgb[4]) : 1;\r\n  const hex = rgb ? \"#\" + strToHex(rgb[1]) + strToHex(rgb[2]) + strToHex(rgb[3]) : org;\r\n  const alpha = Math.round(a * 100);\r\n\r\n  return { color: hex, alpha };\r\n}\r\n\r\nexport function getRandomColor() {\r\n  const letters = \"0123456789ABCDEF\";\r\n  let color = \"#\";\r\n\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n\r\n  return color;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}