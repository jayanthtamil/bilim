{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\shared\\\\color-picker\\\\BlmColorPicker.tsx\";\nimport React, { useState, useRef, Fragment } from \"react\";\nimport clsx from \"clsx\";\nimport { Backdrop, Popper } from \"@material-ui/core\";\nimport BlmCustomPicker from \"./custom-picker\";\nimport \"./color-picker.scss\";\nconst popperOptions = {\n  positionFixed: true\n};\nconst modifiers = {\n  flip: {\n    enabled: true\n  },\n  keepTogether: {\n    enabled: false\n  },\n  arrow: {\n    enabled: false\n  },\n  preventOverflow: {\n    enabled: false\n  },\n  hide: {\n    enabled: false\n  },\n  computeStyle: {\n    gpuAcceleration: false\n  }\n};\n\nfunction BlmColorPicker(props) {\n  const {\n    name = \"color\",\n    color,\n    colors,\n    hideClear = false,\n    className,\n    onChange,\n    ...others\n  } = props;\n  const [showPicker, setShowPicker] = useState(false);\n  const [selectedColor, setSelectedColor] = useState();\n  const anchorRef = useRef(null);\n  const prevColor = selectedColor || color;\n\n  const updateChange = (newColor, newAlpha) => {\n    setSelectedColor(undefined);\n\n    if (onChange) {\n      onChange({\n        target: {\n          name,\n          value: {\n            color: newColor,\n            alpha: newAlpha\n          }\n        }\n      });\n    }\n  };\n\n  const handleMouseDown = event => {\n    setShowPicker(true);\n  };\n\n  const handleBackdropClick = event => {\n    setShowPicker(false);\n\n    if (selectedColor && color !== selectedColor) {\n      updateChange(selectedColor);\n    }\n  };\n\n  const handleColorChange = color => {\n    setSelectedColor(color.hex);\n  };\n\n  const handleClearClick = () => {\n    setShowPicker(false);\n    updateChange();\n  };\n\n  const handleSwatchClick = swatch => {\n    var _swatch$alpha;\n\n    const [newColor, newAlpha] = typeof swatch === \"string\" ? [swatch, 100] : [swatch.color, (_swatch$alpha = swatch.alpha) !== null && _swatch$alpha !== void 0 ? _swatch$alpha : 100];\n    setShowPicker(false);\n    updateChange(newColor, newAlpha);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: anchorRef,\n    className: clsx(\"color-picker-wrapper\", className, {\n      \"has-color\": color,\n      \"has-preview-color\": prevColor,\n      \"show-picker\": showPicker\n    }),\n    onMouseDown: handleMouseDown\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-picker-preview\",\n    style: {\n      backgroundColor: prevColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), showPicker && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Backdrop, {\n    open: true,\n    className: \"color-picker-backdrop\",\n    onClick: handleBackdropClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Popper, {\n    id: \"color-picker\",\n    open: showPicker,\n    anchorEl: anchorRef.current,\n    disablePortal: true,\n    placement: \"bottom-start\",\n    popperOptions: popperOptions,\n    modifiers: modifiers,\n    className: \"color-picker-popper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sp-color-picker-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BlmCustomPicker, {\n    color: prevColor,\n    colors: colors,\n    hideClear: hideClear,\n    className: \"color-picker\",\n    onChange: handleColorChange,\n    onClearClick: handleClearClick,\n    onSwatchClick: handleSwatchClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default BlmColorPicker;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/shared/color-picker/BlmColorPicker.tsx"],"names":["React","useState","useRef","Fragment","clsx","Backdrop","Popper","BlmCustomPicker","popperOptions","positionFixed","modifiers","flip","enabled","keepTogether","arrow","preventOverflow","hide","computeStyle","gpuAcceleration","BlmColorPicker","props","name","color","colors","hideClear","className","onChange","others","showPicker","setShowPicker","selectedColor","setSelectedColor","anchorRef","prevColor","updateChange","newColor","newAlpha","undefined","target","value","alpha","handleMouseDown","event","handleBackdropClick","handleColorChange","hex","handleClearClick","handleSwatchClick","swatch","backgroundColor","current"],"mappings":"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","sourcesContent":["import React, { useState, MouseEvent, useRef, HTMLAttributes, Fragment } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { ColorState } from \"react-color\";\r\nimport { Backdrop, Popper } from \"@material-ui/core\";\r\n\r\nimport { CustomChangeEvent } from \"types\";\r\nimport BlmCustomPicker from \"./custom-picker\";\r\nimport \"./color-picker.scss\";\r\n\r\nexport type SwatchColor = string | { name?: string; color: string; alpha?: number };\r\nexport type SwatchColors = Array<SwatchColor>;\r\nexport type ColorPickerColor = { color?: string; alpha?: number };\r\nexport type ColorPickerChangeEvent = CustomChangeEvent<ColorPickerColor>;\r\n\r\nexport interface CompProps\r\n  extends Omit<HTMLAttributes<HTMLDivElement>, \"onChange\" | \"onMouseDown\"> {\r\n  name?: string;\r\n  color?: string;\r\n  colors?: SwatchColors;\r\n  hideClear?: boolean;\r\n  className?: string;\r\n  onChange?: (event: ColorPickerChangeEvent) => void;\r\n}\r\n\r\nconst popperOptions = {\r\n  positionFixed: true,\r\n};\r\n\r\nconst modifiers = {\r\n  flip: {\r\n    enabled: true,\r\n  },\r\n  keepTogether: {\r\n    enabled: false,\r\n  },\r\n  arrow: {\r\n    enabled: false,\r\n  },\r\n  preventOverflow: {\r\n    enabled: false,\r\n  },\r\n  hide: {\r\n    enabled: false,\r\n  },\r\n  computeStyle: {\r\n    gpuAcceleration: false,\r\n  },\r\n};\r\n\r\nfunction BlmColorPicker(props: CompProps) {\r\n  const {\r\n    name = \"color\",\r\n    color,\r\n    colors,\r\n    hideClear = false,\r\n    className,\r\n    onChange,\r\n    ...others\r\n  } = props;\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [selectedColor, setSelectedColor] = useState<string>();\r\n  const anchorRef = useRef<HTMLDivElement | null>(null);\r\n  const prevColor = selectedColor || color;\r\n\r\n  const updateChange = (newColor?: string, newAlpha?: number) => {\r\n    setSelectedColor(undefined);\r\n\r\n    if (onChange) {\r\n      onChange({\r\n        target: { name, value: { color: newColor, alpha: newAlpha } },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseDown = (event: MouseEvent<HTMLDivElement>) => {\r\n    setShowPicker(true);\r\n  };\r\n\r\n  const handleBackdropClick = (event: MouseEvent) => {\r\n    setShowPicker(false);\r\n\r\n    if (selectedColor && color !== selectedColor) {\r\n      updateChange(selectedColor);\r\n    }\r\n  };\r\n\r\n  const handleColorChange = (color: ColorState) => {\r\n    setSelectedColor(color.hex);\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    setShowPicker(false);\r\n    updateChange();\r\n  };\r\n\r\n  const handleSwatchClick = (swatch: SwatchColor) => {\r\n    const [newColor, newAlpha] =\r\n      typeof swatch === \"string\" ? [swatch, 100] : [swatch.color, swatch.alpha ?? 100];\r\n\r\n    setShowPicker(false);\r\n    updateChange(newColor, newAlpha);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={anchorRef}\r\n      className={clsx(\"color-picker-wrapper\", className, {\r\n        \"has-color\": color,\r\n        \"has-preview-color\": prevColor,\r\n        \"show-picker\": showPicker,\r\n      })}\r\n      onMouseDown={handleMouseDown}\r\n      {...others}\r\n    >\r\n      <div className=\"color-picker-preview\" style={{ backgroundColor: prevColor }} />\r\n      {showPicker && (\r\n        <Fragment>\r\n          <Backdrop open={true} className=\"color-picker-backdrop\" onClick={handleBackdropClick} />\r\n          <Popper\r\n            id=\"color-picker\"\r\n            open={showPicker}\r\n            anchorEl={anchorRef.current}\r\n            disablePortal={true}\r\n            placement=\"bottom-start\"\r\n            popperOptions={popperOptions}\r\n            modifiers={modifiers}\r\n            className=\"color-picker-popper\"\r\n          >\r\n            <div className=\"sp-color-picker-box\">\r\n              <BlmCustomPicker\r\n                color={prevColor}\r\n                colors={colors}\r\n                hideClear={hideClear}\r\n                className=\"color-picker\"\r\n                onChange={handleColorChange}\r\n                onClearClick={handleClearClick}\r\n                onSwatchClick={handleSwatchClick}\r\n              />\r\n            </div>\r\n          </Popper>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmColorPicker;\r\n"]},"metadata":{},"sourceType":"module"}