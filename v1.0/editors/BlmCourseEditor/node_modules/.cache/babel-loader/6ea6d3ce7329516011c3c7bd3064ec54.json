{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\template-editors\\\\controls\\\\templates\\\\length\\\\BlmTemplateLength.tsx\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { Switch } from \"@material-ui/core\";\nimport \"./styles.scss\";\n\nfunction BlmTemplateLength(props) {\n  const {\n    type,\n    name,\n    data,\n    min,\n    max,\n    allowNegative = false,\n    title,\n    label,\n    switchLeft,\n    switchRight,\n    className,\n    onChange,\n    selected,\n    values,\n    paddingTop\n  } = props;\n\n  if (paddingTop) {\n    var {\n      value: Pvalue\n    } = paddingTop;\n  }\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange({\n        target: {\n          name,\n          value: newData\n        }\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name: txtName,\n      value: txtValue,\n      checked\n    } = event.target;\n    var test = false;\n    const newData = { ...data,\n      test\n    };\n\n    if (txtName === \"switch\") {\n      newData.isSelected = checked;\n\n      if (checked === true && Pvalue) {\n        newData.value = Pvalue;\n      }\n\n      newData.test = true;\n    } else {\n      const newStr = txtValue.trim();\n      let newNum = parseInt(newStr, 10);\n\n      if (!allowNegative) {\n        newNum = Math.abs(newNum);\n      }\n\n      if (allowNegative && newStr === \"-\") {\n        newData.value = newStr.toString();\n      } else if (newStr !== \"\" && !isNaN(newNum)) {\n        if (min !== undefined) {\n          newNum = Math.max(min, newNum);\n        }\n\n        if (max !== undefined) {\n          newNum = Math.min(max, newNum);\n        }\n\n        newData.value = newNum.toString();\n      } else {\n        newData.value = \"\";\n      }\n    }\n\n    updateChange(newData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"template-length-wrapper\", type, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, title !== \"TemplateShift\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-length-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 37\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-length-txt-ctrl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, title === \"TemplateShift\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    value: values,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, label)), title !== \"TemplateShift\" && title !== \"top\" && title !== \"bottom\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-length-switch-ctrl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, switchLeft), /*#__PURE__*/React.createElement(Switch, {\n    name: \"switch\",\n    checked: selected,\n    className: \"switch-1\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, switchRight)));\n}\n\nexport default BlmTemplateLength;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/template-editors/controls/templates/length/BlmTemplateLength.tsx"],"names":["React","clsx","Switch","BlmTemplateLength","props","type","name","data","min","max","allowNegative","title","label","switchLeft","switchRight","className","onChange","selected","values","paddingTop","value","Pvalue","updateChange","newData","target","handleChange","event","txtName","txtValue","checked","test","isSelected","newStr","trim","newNum","parseInt","Math","abs","toString","isNaN","undefined"],"mappings":"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","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Switch } from \"@material-ui/core\";\r\n\r\nimport { TemplateLength } from \"types\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  type: \"top\" | \"middle\" | \"bottom\";\r\n  name: string;\r\n  data: TemplateLength;\r\n  min?: number;\r\n  max?: number;\r\n  allowNegative?: boolean;\r\n  title?: string;\r\n  label?: string;\r\n  switchLeft?: string;\r\n  switchRight?: string;\r\n  className?: string;\r\n  onChange?: (event: TemplateLengthChangeEvent) => void;\r\n  selected: boolean;\r\n  values: string;\r\n  paddingTop?: TemplateLength;\r\n}\r\n\r\nexport interface TemplateLengthChangeEvent {\r\n  target: {\r\n    name: string;\r\n    value: TemplateLength;\r\n  };\r\n}\r\n\r\nfunction BlmTemplateLength(props: CompProps) {\r\n  const {\r\n    type,\r\n    name,\r\n    data,\r\n    min,\r\n    max,\r\n    allowNegative = false,\r\n    title,\r\n    label,\r\n    switchLeft,\r\n    switchRight,\r\n    className,\r\n    onChange,\r\n    selected,\r\n    values,\r\n    paddingTop,\r\n  } = props;\r\n\r\n  if (paddingTop) {\r\n    var { value: Pvalue } = paddingTop;\r\n  }\r\n  const updateChange = (newData: TemplateLength) => {\r\n    if (onChange) {\r\n      onChange({ target: { name, value: newData } });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name: txtName, value: txtValue, checked } = event.target;\r\n    var test = false;\r\n    const newData: any = { ...data, test };\r\n\r\n    if (txtName === \"switch\") {\r\n      newData.isSelected = checked;\r\n      if (checked === true && Pvalue) {\r\n        newData.value = Pvalue;\r\n      }\r\n      newData.test = true;\r\n    } else {\r\n      const newStr = txtValue.trim();\r\n      let newNum = parseInt(newStr, 10);\r\n\r\n      if (!allowNegative) {\r\n        newNum = Math.abs(newNum);\r\n      }\r\n\r\n      if (allowNegative && newStr === \"-\") {\r\n        newData.value = newStr.toString();\r\n      } else if (newStr !== \"\" && !isNaN(newNum)) {\r\n        if (min !== undefined) {\r\n          newNum = Math.max(min, newNum);\r\n        }\r\n        if (max !== undefined) {\r\n          newNum = Math.min(max, newNum);\r\n        }\r\n        newData.value = newNum.toString();\r\n      } else {\r\n        newData.value = \"\";\r\n      }\r\n    }\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(\"template-length-wrapper\", type, className)}>\r\n      {title !== \"TemplateShift\" && <div className=\"template-length-title\">{title}</div>}\r\n      <div className=\"template-length-txt-ctrl\">\r\n        {title === \"TemplateShift\" && (\r\n          <div>\r\n            <div className=\"icon-1\" />\r\n            <div className=\"icon-2\" />\r\n          </div>\r\n        )}\r\n\r\n        <input value={values} onChange={handleChange} />\r\n        <span>{label}</span>\r\n      </div>\r\n      {title !== \"TemplateShift\" && title !== \"top\" && title !== \"bottom\" && (\r\n        <div className=\"template-length-switch-ctrl\">\r\n          <span>{switchLeft}</span>\r\n          <Switch name=\"switch\" checked={selected} className=\"switch-1\" onChange={handleChange} />\r\n          <span>{switchRight}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmTemplateLength;\r\n"]},"metadata":{},"sourceType":"module"}