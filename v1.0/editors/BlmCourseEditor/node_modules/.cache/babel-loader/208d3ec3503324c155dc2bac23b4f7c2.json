{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\text\\\\text-editor\\\\BlmTextComponentEditor.tsx\";\nimport React, { useMemo, useRef } from \"react\";\nimport clsx from \"clsx\";\nimport { camelToKebab } from \"utils\";\nimport { BlmRichTextEditor } from \"components/component-editor\";\nimport { useTextComponentEditorStyle } from \"./styles\";\nconst cssProperties = [\"fontFamily\", \"fontSize\", \"fontStyle\", \"fontWeight\", \"color\", \"textDecoration\", \"textTransform\", \"backgroundColor\"];\n\nfunction BlmTextComponentEditor(props) {\n  const {\n    data,\n    isDark,\n    onChange\n  } = props;\n  const {\n    value,\n    frameStyle,\n    isDeactivated\n  } = data;\n  const containerRef = useRef(null);\n  const classes = useTextComponentEditorStyle();\n  const style = useMemo(() => {\n    const styles = {};\n\n    if (frameStyle) {\n      for (const prop of cssProperties) {\n        let val = frameStyle.getPropertyValue(camelToKebab(prop));\n        styles[prop] = val;\n      }\n    }\n\n    return styles;\n  }, [frameStyle]);\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange(newData);\n    }\n  };\n\n  const handleChange = event => {\n    const newData = { ...data,\n      value: event.target.value\n    };\n    updateChange(newData);\n  };\n\n  const handleActivateClick = event => {\n    const newData = { ...data,\n      isDeactivated: false\n    };\n    updateChange(newData);\n  };\n\n  const handleDeactivateClick = event => {\n    const newData = { ...data,\n      isDeactivated: true\n    };\n    updateChange(newData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    className: clsx(classes.root, {\n      [classes.dark]: isDark,\n      [classes.deactivated]: isDeactivated\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    className: classes.editorWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BlmRichTextEditor, {\n    name: \"text\",\n    value: value,\n    offset: {\n      x: -15,\n      y: -15\n    },\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), isDeactivated && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.activateBtn,\n    onClick: handleActivateClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }), !isDeactivated && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.deactivateBtn,\n    onClick: handleDeactivateClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 26\n    }\n  }));\n}\n\nexport default BlmTextComponentEditor;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/text/text-editor/BlmTextComponentEditor.tsx"],"names":["React","useMemo","useRef","clsx","camelToKebab","BlmRichTextEditor","useTextComponentEditorStyle","cssProperties","BlmTextComponentEditor","props","data","isDark","onChange","value","frameStyle","isDeactivated","containerRef","classes","style","styles","prop","val","getPropertyValue","updateChange","newData","handleChange","event","target","handleActivateClick","handleDeactivateClick","root","dark","deactivated","editorWrapper","x","y","activateBtn","deactivateBtn"],"mappings":"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","sourcesContent":["import React, { MouseEvent, useMemo, useRef } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { SimpleObject, TextComponent } from \"types\";\r\nimport { camelToKebab } from \"utils\";\r\nimport { BlmRichTextEditor, TextEditorChangeEvent } from \"components/component-editor\";\r\nimport { useTextComponentEditorStyle } from \"./styles\";\r\n\r\nconst cssProperties = [\r\n  \"fontFamily\",\r\n  \"fontSize\",\r\n  \"fontStyle\",\r\n  \"fontWeight\",\r\n  \"color\",\r\n  \"textDecoration\",\r\n  \"textTransform\",\r\n  \"backgroundColor\",\r\n];\r\n\r\nexport interface CompProps {\r\n  data: TextComponent;\r\n  isDark: boolean;\r\n  onChange: (data: TextComponent) => void;\r\n}\r\n\r\nfunction BlmTextComponentEditor(props: CompProps) {\r\n  const { data, isDark, onChange } = props;\r\n  const { value, frameStyle, isDeactivated } = data;\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n  const classes = useTextComponentEditorStyle();\r\n\r\n  const style = useMemo(() => {\r\n    const styles: SimpleObject = {};\r\n\r\n    if (frameStyle) {\r\n      for (const prop of cssProperties) {\r\n        let val = frameStyle.getPropertyValue(camelToKebab(prop));\r\n\r\n        styles[prop] = val;\r\n      }\r\n    }\r\n\r\n    return styles;\r\n  }, [frameStyle]);\r\n\r\n  const updateChange = (newData: TextComponent) => {\r\n    if (onChange) {\r\n      onChange(newData);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: TextEditorChangeEvent) => {\r\n    const newData = { ...data, value: event.target.value };\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleActivateClick = (event: MouseEvent) => {\r\n    const newData = { ...data, isDeactivated: false };\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleDeactivateClick = (event: MouseEvent) => {\r\n    const newData = { ...data, isDeactivated: true };\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={clsx(classes.root, {\r\n        [classes.dark]: isDark,\r\n        [classes.deactivated]: isDeactivated,\r\n      })}\r\n    >\r\n      <div style={style} className={classes.editorWrapper}>\r\n        <BlmRichTextEditor\r\n          name=\"text\"\r\n          value={value}\r\n          offset={{ x: -15, y: -15 }}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      {isDeactivated && <div className={classes.activateBtn} onClick={handleActivateClick} />}\r\n      {!isDeactivated && <div className={classes.deactivateBtn} onClick={handleDeactivateClick} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmTextComponentEditor;\r\n"]},"metadata":{},"sourceType":"module"}