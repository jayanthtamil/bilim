{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\properties\\\\core\\\\properties-bar\\\\BlmPropertiesBar.tsx\";\nimport React, { Fragment, useRef, useState } from \"react\";\nimport { Backdrop } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { ElementType } from \"editor-constants\";\nimport { BlmPageProps, BlmQuestionProps, BlmScreenProps } from \"../../containers\";\nimport \"./styles.scss\";\n\nfunction BlmPropertiesBar(props) {\n  const {\n    element,\n    openConfirmDialog,\n    onChange\n  } = props;\n  const [tabIndex, setTabIndex] = useState(false);\n  const editorRef = useRef(null);\n  const bgEditorRef = useRef(null);\n  const {\n    t\n  } = useTranslation();\n\n  const openSaveConfirmDialog = () => {\n    const onOk = () => {\n      handleClose();\n    };\n\n    const onCancel = () => {\n      revertChanges();\n      closePanel();\n    };\n\n    const options = {\n      className: \"template-editor-warning-dialog\",\n      okLabel: `${t(\"button.save\")}`,\n      cancelLabel: `${t(\"button.cancel\")}`\n    };\n    openConfirmDialog(`${t(\"alert.warning\")}`, `${t(\"alert.save_changes\")}`, onOk, onCancel, options);\n  };\n\n  const isEdited = () => {\n    var _editorRef$current, _bgEditorRef$current;\n\n    return ((_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.isEdited) || ((_bgEditorRef$current = bgEditorRef.current) === null || _bgEditorRef$current === void 0 ? void 0 : _bgEditorRef$current.isEdited);\n  };\n\n  const saveChanges = () => {\n    const editor = editorRef.current;\n    const bgEditor = bgEditorRef.current;\n\n    if (editor && editor.isEdited) {\n      editor.save();\n    } else if (bgEditor && bgEditor.isEdited) {\n      bgEditor.save();\n    }\n  };\n\n  const revertChanges = () => {\n    const editor = editorRef.current;\n    const bgEditor = bgEditorRef.current;\n\n    if (editor && editor.isEdited) {\n      editor.revert();\n    } else if (bgEditor && bgEditor.isEdited) {\n      bgEditor.revert();\n    }\n  };\n\n  const closePanel = () => {\n    setTabIndex(false);\n  };\n\n  const handleBackdropClose = () => {\n    if (isEdited()) {\n      openSaveConfirmDialog();\n    } else {\n      closePanel();\n    }\n  };\n\n  const handleTabChange = value => {\n    if (tabIndex !== value) {\n      saveChanges();\n      setTabIndex(value);\n    } else {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => {\n    saveChanges();\n    closePanel();\n  };\n\n  const renderChildren = () => {\n    if (!element) {\n      return null;\n    } else if (element.type === ElementType.Page || element.type === ElementType.SimplePage) {\n      return /*#__PURE__*/React.createElement(BlmPageProps, {\n        ref: editorRef,\n        element: element,\n        tabIndex: tabIndex,\n        autoSave: false,\n        onChange: onChange,\n        onTabChange: handleTabChange,\n        onClose: handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      });\n    } else if (element.type === ElementType.Screen || element.type === ElementType.SimpleContent) {\n      return /*#__PURE__*/React.createElement(BlmScreenProps, {\n        ref: editorRef,\n        bgRef: bgEditorRef,\n        element: element,\n        tabIndex: tabIndex,\n        autoSave: false,\n        onTabChange: handleTabChange,\n        onClose: handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      });\n    } else if (element.type === ElementType.Question) {\n      return /*#__PURE__*/React.createElement(BlmQuestionProps, {\n        ref: editorRef,\n        bgRef: bgEditorRef,\n        element: element,\n        tabIndex: tabIndex,\n        autoSave: false,\n        onTabChange: handleTabChange,\n        onClose: handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, tabIndex !== false && /*#__PURE__*/React.createElement(Backdrop, {\n    open: true,\n    className: \"element-properties-backdrop\",\n    onClick: handleBackdropClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }), renderChildren());\n}\n\nexport default BlmPropertiesBar;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/properties/core/properties-bar/BlmPropertiesBar.tsx"],"names":["React","Fragment","useRef","useState","Backdrop","useTranslation","ElementType","BlmPageProps","BlmQuestionProps","BlmScreenProps","BlmPropertiesBar","props","element","openConfirmDialog","onChange","tabIndex","setTabIndex","editorRef","bgEditorRef","t","openSaveConfirmDialog","onOk","handleClose","onCancel","revertChanges","closePanel","options","className","okLabel","cancelLabel","isEdited","current","saveChanges","editor","bgEditor","save","revert","handleBackdropClose","handleTabChange","value","renderChildren","type","Page","SimplePage","Screen","SimpleContent","Question"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useState } from \"react\";\r\nimport { Backdrop } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CourseElement, ElementPropsChangeHandler, PropertiesEditorComponent } from \"types\";\r\nimport { ElementType } from \"editor-constants\";\r\nimport { BlmPageProps, BlmQuestionProps, BlmScreenProps } from \"../../containers\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  element: CourseElement;\r\n  onChange?: ElementPropsChangeHandler;\r\n}\r\n\r\nfunction BlmPropertiesBar(props: CompProps) {\r\n  const { element, openConfirmDialog, onChange } = props;\r\n  const [tabIndex, setTabIndex] = useState<false | number>(false);\r\n  const editorRef = useRef<PropertiesEditorComponent | null>(null);\r\n  const bgEditorRef = useRef<PropertiesEditorComponent | null>(null);\r\n  const { t } = useTranslation();\r\n\r\n  const openSaveConfirmDialog = () => {\r\n    const onOk = () => {\r\n      handleClose();\r\n    };\r\n    const onCancel = () => {\r\n      revertChanges();\r\n      closePanel();\r\n    };\r\n    const options = {\r\n      className: \"template-editor-warning-dialog\",\r\n      okLabel: `${t(\"button.save\")}`,\r\n      cancelLabel: `${t(\"button.cancel\")}`,\r\n    };\r\n\r\n    openConfirmDialog(\r\n      `${t(\"alert.warning\")}`,\r\n      `${t(\"alert.save_changes\")}`,\r\n      onOk,\r\n      onCancel,\r\n      options\r\n    );\r\n  };\r\n\r\n  const isEdited = () => {\r\n    return editorRef.current?.isEdited || bgEditorRef.current?.isEdited;\r\n  };\r\n\r\n  const saveChanges = () => {\r\n    const editor = editorRef.current;\r\n    const bgEditor = bgEditorRef.current;\r\n\r\n    if (editor && editor.isEdited) {\r\n      editor.save();\r\n    } else if (bgEditor && bgEditor.isEdited) {\r\n      bgEditor.save();\r\n    }\r\n  };\r\n\r\n  const revertChanges = () => {\r\n    const editor = editorRef.current;\r\n    const bgEditor = bgEditorRef.current;\r\n\r\n    if (editor && editor.isEdited) {\r\n      editor.revert();\r\n    } else if (bgEditor && bgEditor.isEdited) {\r\n      bgEditor.revert();\r\n    }\r\n  };\r\n\r\n  const closePanel = () => {\r\n    setTabIndex(false);\r\n  };\r\n\r\n  const handleBackdropClose = () => {\r\n    if (isEdited()) {\r\n      openSaveConfirmDialog();\r\n    } else {\r\n      closePanel();\r\n    }\r\n  };\r\n\r\n  const handleTabChange = (value: number) => {\r\n    if (tabIndex !== value) {\r\n      saveChanges();\r\n      setTabIndex(value);\r\n    } else {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    saveChanges();\r\n    closePanel();\r\n  };\r\n\r\n  const renderChildren = () => {\r\n    if (!element) {\r\n      return null;\r\n    } else if (element.type === ElementType.Page || element.type === ElementType.SimplePage) {\r\n      return (\r\n        <BlmPageProps\r\n          ref={editorRef}\r\n          element={element}\r\n          tabIndex={tabIndex}\r\n          autoSave={false}\r\n          onChange={onChange}\r\n          onTabChange={handleTabChange}\r\n          onClose={handleClose}\r\n        />\r\n      );\r\n    } else if (element.type === ElementType.Screen || element.type === ElementType.SimpleContent) {\r\n      return (\r\n        <BlmScreenProps\r\n          ref={editorRef}\r\n          bgRef={bgEditorRef}\r\n          element={element}\r\n          tabIndex={tabIndex}\r\n          autoSave={false}\r\n          onTabChange={handleTabChange}\r\n          onClose={handleClose}\r\n        />\r\n      );\r\n    } else if (element.type === ElementType.Question) {\r\n      return (\r\n        <BlmQuestionProps\r\n          ref={editorRef}\r\n          bgRef={bgEditorRef}\r\n          element={element}\r\n          tabIndex={tabIndex}\r\n          autoSave={false}\r\n          onTabChange={handleTabChange}\r\n          onClose={handleClose}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {tabIndex !== false && (\r\n        <Backdrop\r\n          open={true}\r\n          className=\"element-properties-backdrop\"\r\n          onClick={handleBackdropClose}\r\n        />\r\n      )}\r\n      {renderChildren()}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default BlmPropertiesBar;\r\n"]},"metadata":{},"sourceType":"module"}