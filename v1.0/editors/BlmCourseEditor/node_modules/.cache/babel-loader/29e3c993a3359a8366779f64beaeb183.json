{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\actions\\\\switch-actions\\\\BlmSwitchActions.tsx\";\nimport React, { useMemo } from \"react\";\nimport clsx from \"clsx\";\nimport { ComponentActionTypes } from \"editor-constants\";\nimport { getActionItems } from \"../utils\";\nimport \"./styles.scss\";\n\nfunction getItems(type) {\n  return getActionItems(type).map(item => item.type).filter(item => item && ComponentActionTypes.None !== item);\n}\n\nfunction BlmSwitchActions(props) {\n  const {\n    left,\n    right,\n    leftType,\n    rightType,\n    onClick\n  } = props;\n  const showBtn = useMemo(() => {\n    const leftAction = (left === null || left === void 0 ? void 0 : left.action) !== ComponentActionTypes.None ? left === null || left === void 0 ? void 0 : left.action : undefined;\n    const rightAction = (right === null || right === void 0 ? void 0 : right.action) !== ComponentActionTypes.None ? right === null || right === void 0 ? void 0 : right.action : undefined;\n    const leftItems = getItems(leftType);\n    const rightItems = getItems(rightType);\n    if ((leftAction || rightAction) && (!leftAction || rightItems.includes(leftAction)) && (!rightAction || leftItems.includes(rightAction))) return true;\n  }, [left, right, leftType, rightType]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"component-switch-actions-btn\", {\n      show: showBtn\n    }),\n    onClick: showBtn ? onClick : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default BlmSwitchActions;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/actions/switch-actions/BlmSwitchActions.tsx"],"names":["React","useMemo","clsx","ComponentActionTypes","getActionItems","getItems","type","map","item","filter","None","BlmSwitchActions","props","left","right","leftType","rightType","onClick","showBtn","leftAction","action","undefined","rightAction","leftItems","rightItems","includes","show"],"mappings":";AAAA,OAAOA,KAAP,IAA4BC,OAA5B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA,SAASC,oBAAT,QAAqC,kBAArC;AAEA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAO,eAAP;;AAUA,SAASC,QAAT,CAAkBC,IAAlB,EAAiC;AAC/B,SAAOF,cAAc,CAACE,IAAD,CAAd,CACJC,GADI,CACCC,IAAD,IAAUA,IAAI,CAACF,IADf,EAEJG,MAFI,CAEID,IAAD,IAAUA,IAAI,IAAIL,oBAAoB,CAACO,IAArB,KAA8BF,IAFnD,CAAP;AAGD;;AAED,SAASG,gBAAT,CAA0BC,KAA1B,EAA4C;AAC1C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA,SAAzB;AAAoCC,IAAAA;AAApC,MAAgDL,KAAtD;AAEA,QAAMM,OAAO,GAAGjB,OAAO,CAAC,MAAM;AAC5B,UAAMkB,UAAU,GAAG,CAAAN,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEO,MAAN,MAAiBjB,oBAAoB,CAACO,IAAtC,GAA6CG,IAA7C,aAA6CA,IAA7C,uBAA6CA,IAAI,CAAEO,MAAnD,GAA4DC,SAA/E;AACA,UAAMC,WAAW,GAAG,CAAAR,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEM,MAAP,MAAkBjB,oBAAoB,CAACO,IAAvC,GAA8CI,KAA9C,aAA8CA,KAA9C,uBAA8CA,KAAK,CAAEM,MAArD,GAA8DC,SAAlF;AACA,UAAME,SAAS,GAAGlB,QAAQ,CAACU,QAAD,CAA1B;AACA,UAAMS,UAAU,GAAGnB,QAAQ,CAACW,SAAD,CAA3B;AAEA,QACE,CAACG,UAAU,IAAIG,WAAf,MACC,CAACH,UAAD,IAAeK,UAAU,CAACC,QAAX,CAAoBN,UAApB,CADhB,MAEC,CAACG,WAAD,IAAgBC,SAAS,CAACE,QAAV,CAAmBH,WAAnB,CAFjB,CADF,EAKE,OAAO,IAAP;AACH,GAZsB,EAYpB,CAACT,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAAwBC,SAAxB,CAZoB,CAAvB;AAcA,sBACE;AACE,IAAA,SAAS,EAAEd,IAAI,CAAC,8BAAD,EAAiC;AAAEwB,MAAAA,IAAI,EAAER;AAAR,KAAjC,CADjB;AAEE,IAAA,OAAO,EAAEA,OAAO,GAAGD,OAAH,GAAaI,SAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD;;AAED,eAAeV,gBAAf","sourcesContent":["import React, { MouseEvent, useMemo } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { ComponentAction } from \"types\";\r\nimport { ComponentActionTypes } from \"editor-constants\";\r\nimport { BlmActionsProps } from \"../main\";\r\nimport { getActionItems } from \"../utils\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  left?: ComponentAction;\r\n  right?: ComponentAction;\r\n  leftType?: BlmActionsProps[\"type\"];\r\n  rightType?: BlmActionsProps[\"type\"];\r\n  onClick?: (event: MouseEvent) => void;\r\n}\r\n\r\nfunction getItems(type?: string) {\r\n  return getActionItems(type)\r\n    .map((item) => item.type)\r\n    .filter((item) => item && ComponentActionTypes.None !== item);\r\n}\r\n\r\nfunction BlmSwitchActions(props: CompProps) {\r\n  const { left, right, leftType, rightType, onClick } = props;\r\n\r\n  const showBtn = useMemo(() => {\r\n    const leftAction = left?.action !== ComponentActionTypes.None ? left?.action : undefined;\r\n    const rightAction = right?.action !== ComponentActionTypes.None ? right?.action : undefined;\r\n    const leftItems = getItems(leftType);\r\n    const rightItems = getItems(rightType);\r\n\r\n    if (\r\n      (leftAction || rightAction) &&\r\n      (!leftAction || rightItems.includes(leftAction)) &&\r\n      (!rightAction || leftItems.includes(rightAction))\r\n    )\r\n      return true;\r\n  }, [left, right, leftType, rightType]);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\"component-switch-actions-btn\", { show: showBtn })}\r\n      onClick={showBtn ? onClick : undefined}\r\n    />\r\n  );\r\n}\r\n\r\nexport default BlmSwitchActions;\r\n"]},"metadata":{},"sourceType":"module"}