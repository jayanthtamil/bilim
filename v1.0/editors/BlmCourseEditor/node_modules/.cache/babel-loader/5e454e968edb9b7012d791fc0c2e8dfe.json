{"ast":null,"code":"import { createSelector } from \"reselect\";\nimport { ElementType } from \"editor-constants\";\n\nconst getElementType = (state, props) => props.type;\n\nconst getElementLevel = (state, props) => props.level;\n\nconst getStyleConfig = state => {\n  var _state$course$style$s;\n\n  return (_state$course$style$s = state.course.style.style) === null || _state$course$style$s === void 0 ? void 0 : _state$course$style$s.config;\n};\n\nfunction getElementPropsBy(properties, level = 1) {\n  if (properties) {\n    if (properties.hasOwnProperty(\"level\" + level)) {\n      return properties[\"level\" + level];\n    } else {\n      return level - 1 > 0 ? getElementPropsBy(properties, level - 1) : undefined;\n    }\n  }\n}\n\nfunction getElementNavigationsBy(navigation, level = 1) {\n  if (navigation) {\n    const {\n      navigationlevel,\n      screenmenu\n    } = navigation;\n    return {\n      screenMenu: level < navigationlevel ? screenmenu : undefined\n    };\n  }\n}\n\nfunction getMetadataType(elementType) {\n  switch (elementType) {\n    case ElementType.Chapter:\n    case ElementType.Screen:\n    case ElementType.Page:\n    case ElementType.Question:\n    case ElementType.PartPage:\n    case ElementType.Custom:\n      return elementType;\n\n    case ElementType.SimpleContent:\n      return \"simplescreen\";\n\n    case ElementType.SimplePage:\n      return \"simplepage\";\n\n    case ElementType.SimplePartPage:\n      return ElementType.PartPage;\n  }\n\n  return elementType;\n}\n\nexport const getElementConfig = createSelector([getElementType, getElementLevel, getStyleConfig], (type, level, config) => {\n  if (type && config) {\n    const {\n      properties,\n      metadatas,\n      navigation\n    } = config;\n    const metaType = getMetadataType(type);\n    return {\n      properties: getElementPropsBy(properties, level),\n      metadatas: metadatas ? metadatas[metaType] : undefined,\n      navigation: getElementNavigationsBy(navigation, level)\n    };\n  }\n});","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/redux/course/element/selectors/index.ts"],"names":["createSelector","ElementType","getElementType","state","props","type","getElementLevel","level","getStyleConfig","course","style","config","getElementPropsBy","properties","hasOwnProperty","undefined","getElementNavigationsBy","navigation","navigationlevel","screenmenu","screenMenu","getMetadataType","elementType","Chapter","Screen","Page","Question","PartPage","Custom","SimpleContent","SimplePage","SimplePartPage","getElementConfig","metadatas","metaType"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AASA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAmBC,KAAnB,KAAiDA,KAAK,CAACC,IAA9E;;AACA,MAAMC,eAAe,GAAG,CAACH,KAAD,EAAmBC,KAAnB,KAAiDA,KAAK,CAACG,KAA/E;;AACA,MAAMC,cAAc,GAAIL,KAAD;AAAA;;AAAA,kCAAsBA,KAAK,CAACM,MAAN,CAAaC,KAAb,CAAmBA,KAAzC,0DAAsB,sBAA0BC,MAAhD;AAAA,CAAvB;;AAEA,SAASC,iBAAT,CACEC,UADF,EAEEN,KAAa,GAAG,CAFlB,EAGyC;AACvC,MAAIM,UAAJ,EAAgB;AACd,QAAIA,UAAU,CAACC,cAAX,CAA0B,UAAUP,KAApC,CAAJ,EAAgD;AAC9C,aAAOM,UAAU,CAAC,UAAUN,KAAX,CAAjB;AACD,KAFD,MAEO;AACL,aAAOA,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgBK,iBAAiB,CAACC,UAAD,EAAaN,KAAK,GAAG,CAArB,CAAjC,GAA2DQ,SAAlE;AACD;AACF;AACF;;AAED,SAASC,uBAAT,CAAiCC,UAAjC,EAAqEV,KAAa,GAAG,CAArF,EAAwF;AACtF,MAAIU,UAAJ,EAAgB;AACd,UAAM;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,QAAkCF,UAAxC;AAEA,WAAO;AAAEG,MAAAA,UAAU,EAAEb,KAAK,GAAGW,eAAR,GAA0BC,UAA1B,GAAuCJ;AAArD,KAAP;AACD;AACF;;AAED,SAASM,eAAT,CAAyBC,WAAzB,EAAmD;AACjD,UAAQA,WAAR;AACE,SAAKrB,WAAW,CAACsB,OAAjB;AACA,SAAKtB,WAAW,CAACuB,MAAjB;AACA,SAAKvB,WAAW,CAACwB,IAAjB;AACA,SAAKxB,WAAW,CAACyB,QAAjB;AACA,SAAKzB,WAAW,CAAC0B,QAAjB;AACA,SAAK1B,WAAW,CAAC2B,MAAjB;AACE,aAAON,WAAP;;AACF,SAAKrB,WAAW,CAAC4B,aAAjB;AACE,aAAO,cAAP;;AACF,SAAK5B,WAAW,CAAC6B,UAAjB;AACE,aAAO,YAAP;;AACF,SAAK7B,WAAW,CAAC8B,cAAjB;AACE,aAAO9B,WAAW,CAAC0B,QAAnB;AAbJ;;AAeA,SAAOL,WAAP;AACD;;AAED,OAAO,MAAMU,gBAAgB,GAAGhC,cAAc,CAC5C,CAACE,cAAD,EAAiBI,eAAjB,EAAkCE,cAAlC,CAD4C,EAE5C,CAACH,IAAD,EAAOE,KAAP,EAAcI,MAAd,KAAyB;AACvB,MAAIN,IAAI,IAAIM,MAAZ,EAAoB;AAClB,UAAM;AAAEE,MAAAA,UAAF;AAAcoB,MAAAA,SAAd;AAAyBhB,MAAAA;AAAzB,QAAwCN,MAA9C;AACA,UAAMuB,QAAQ,GAAGb,eAAe,CAAChB,IAAD,CAAhC;AAEA,WAAO;AACLQ,MAAAA,UAAU,EAAED,iBAAiB,CAACC,UAAD,EAAaN,KAAb,CADxB;AAEL0B,MAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAS,CAACC,QAAD,CAAZ,GAAyBnB,SAFxC;AAGLE,MAAAA,UAAU,EAAED,uBAAuB,CAACC,UAAD,EAAaV,KAAb;AAH9B,KAAP;AAKD;AACF,CAb2C,CAAvC","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nimport {\r\n  StylePropertiesConfigJSON,\r\n  StylePropertiesConfig,\r\n  CourseElementProps,\r\n  StyleNavigationConfig,\r\n} from \"types\";\r\nimport { RootState } from \"redux/types\";\r\nimport { ElementType } from \"editor-constants\";\r\n\r\nconst getElementType = (state: RootState, props: CourseElementProps) => props.type;\r\nconst getElementLevel = (state: RootState, props: CourseElementProps) => props.level;\r\nconst getStyleConfig = (state: RootState) => state.course.style.style?.config;\r\n\r\nfunction getElementPropsBy(\r\n  properties?: StylePropertiesConfig,\r\n  level: number = 1\r\n): StylePropertiesConfigJSON | undefined {\r\n  if (properties) {\r\n    if (properties.hasOwnProperty(\"level\" + level)) {\r\n      return properties[\"level\" + level];\r\n    } else {\r\n      return level - 1 > 0 ? getElementPropsBy(properties, level - 1) : undefined;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getElementNavigationsBy(navigation?: StyleNavigationConfig, level: number = 1) {\r\n  if (navigation) {\r\n    const { navigationlevel, screenmenu } = navigation;\r\n\r\n    return { screenMenu: level < navigationlevel ? screenmenu : undefined };\r\n  }\r\n}\r\n\r\nfunction getMetadataType(elementType: ElementType) {\r\n  switch (elementType) {\r\n    case ElementType.Chapter:\r\n    case ElementType.Screen:\r\n    case ElementType.Page:\r\n    case ElementType.Question:\r\n    case ElementType.PartPage:\r\n    case ElementType.Custom:\r\n      return elementType;\r\n    case ElementType.SimpleContent:\r\n      return \"simplescreen\";\r\n    case ElementType.SimplePage:\r\n      return \"simplepage\";\r\n    case ElementType.SimplePartPage:\r\n      return ElementType.PartPage;\r\n  }\r\n  return elementType;\r\n}\r\n\r\nexport const getElementConfig = createSelector(\r\n  [getElementType, getElementLevel, getStyleConfig],\r\n  (type, level, config) => {\r\n    if (type && config) {\r\n      const { properties, metadatas, navigation } = config;\r\n      const metaType = getMetadataType(type as ElementType);\r\n\r\n      return {\r\n        properties: getElementPropsBy(properties, level),\r\n        metadatas: metadatas ? metadatas[metaType] : undefined,\r\n        navigation: getElementNavigationsBy(navigation, level),\r\n      };\r\n    }\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}