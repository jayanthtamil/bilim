{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\video\\\\standard\\\\BlmStandardVideo.tsx\";\nimport React, { useState } from \"react\";\nimport { FormControlLabel, Switch, Checkbox, Select, MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\nimport { AcceptedFileTypes, ImageDisplayTypes, MediaTypes, StyleListTypes } from \"editor-constants\";\nimport { ContainOptionIcon, CoverOptionIcon } from \"assets/icons\";\nimport { BlmToggleButton } from \"shared\";\nimport { BlmMediaPicker, BlmMediaEditor } from \"components/shared\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\nimport { BlmStyleTintPicker } from \"../../../styles\";\nimport \"./styles.scss\";\n\nfunction BlmStandardVideo(props) {\n  const {\n    data\n  } = props;\n  const {\n    value: standard,\n    hasApplyStyle\n  } = data;\n  const {\n    element,\n    dispatch\n  } = useContentEditorCtx();\n  const [type, setType] = useState(MediaTypes.Main);\n  const [isEditorOpen, setIsEditorOpen] = useState(false);\n  const {\n    main,\n    webm,\n    image,\n    title,\n    description,\n    caption,\n    autoPlay,\n    loop,\n    option,\n    [type]: media,\n    style\n  } = standard;\n  const hasMain = Boolean(main);\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  const updateChange = newStandard => {\n    const newData = { ...data,\n      value: newStandard\n    };\n\n    if (dispatch) {\n      dispatch(updateMediaComponent(newData));\n    }\n  };\n\n  const handleTypeChange = event => {\n    const target = event.target;\n    const {\n      name\n    } = target;\n    setType(name);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value,\n      checked\n    } = event.target;\n    const newStandard = { ...standard\n    };\n\n    if (name === \"main\") {\n      if (value && !value.subtitle) {\n        var _newStandard$main;\n\n        value.subtitle = (_newStandard$main = newStandard.main) === null || _newStandard$main === void 0 ? void 0 : _newStandard$main.subtitle;\n      }\n\n      if (value && !value.marker) {\n        var _newStandard$main2;\n\n        value.marker = (_newStandard$main2 = newStandard.main) === null || _newStandard$main2 === void 0 ? void 0 : _newStandard$main2.marker;\n      }\n\n      newStandard[name] = value;\n    } else if (name === \"webm\" || name === \"image\" || name === \"title\" || name === \"description\" || name === \"caption\" || name === \"option\" || name === \"style\") {\n      newStandard[name] = value;\n    } else if (name === \"autoPlay\") {\n      newStandard[name] = !checked;\n    } else if (name === \"loop\") {\n      newStandard[name] = checked;\n    }\n\n    updateChange(newStandard);\n  };\n\n  const handleEditClick = () => {\n    setIsEditorOpen(true);\n  };\n\n  const handleEditorSave = newMain => {\n    const newStandard = { ...standard,\n      main: newMain\n    };\n    updateChange(newStandard);\n    setIsEditorOpen(false);\n  };\n\n  const handleEditorClose = () => {\n    setIsEditorOpen(false);\n  };\n\n  const getAcceptedTypes = () => {\n    if (type === MediaTypes.Webm) {\n      return [AcceptedFileTypes.Webm];\n    } else if (type === MediaTypes.Image) {\n      return [AcceptedFileTypes.Image];\n    } else {\n      return [AcceptedFileTypes.Video];\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"standard-video-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"standard-video-options-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"standard-video-autoplay-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, t(\"label.auto_start\")), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"autoPlay\",\n    label: t(\"standar_video.click_to_play\"),\n    checked: !autoPlay,\n    control: /*#__PURE__*/React.createElement(Switch, {\n      className: \"switch-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }\n    }),\n    className: \"standard-video-autoplay-ctrl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"loop\",\n    label: t(\"standar_video.loop\"),\n    checked: loop,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"checkbox-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 20\n      }\n    }),\n    className: \"standard-video-loop-ctrl\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"standard-video-main-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: type,\n    elementId: element.id,\n    acceptedFiles: getAcceptedTypes(),\n    data: media,\n    showEdit: false,\n    className: \"media-picker-3\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"standard-video-btns-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BlmToggleButton, {\n    name: MediaTypes.Main,\n    selected: type === MediaTypes.Main,\n    className: clsx(\"mp4-toggle-btn\", {\n      media: hasMain\n    }),\n    onChange: handleTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, t(\"standar_video.mp4\")), /*#__PURE__*/React.createElement(BlmToggleButton, {\n    name: MediaTypes.Webm,\n    disabled: !hasMain,\n    selected: type === MediaTypes.Webm,\n    className: clsx(\"webm-toggle-btn\", {\n      media: Boolean(webm)\n    }),\n    onChange: handleTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, t(\"standar_video.webm\")), /*#__PURE__*/React.createElement(BlmToggleButton, {\n    name: MediaTypes.Image,\n    disabled: !hasMain,\n    selected: type === MediaTypes.Image,\n    className: clsx(\"img-toggle-btn\", {\n      media: Boolean(image)\n    }),\n    onChange: handleTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, t(\"button.thumbnail\"))), hasMain && /*#__PURE__*/React.createElement(Select, {\n    name: \"option\",\n    value: option,\n    MenuProps: {\n      className: \"standard-video-dropdown-menu\",\n      disableRestoreFocus: true //If It is false, BlmBackgroundEditor is not positioned to anchor element after choosing the item\n\n    },\n    className: \"standard-video-dropdown\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: ImageDisplayTypes.Contain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ContainOptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, t(\"list.contain\"))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: ImageDisplayTypes.Cover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CoverOptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, t(\"list.cover\")))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: t(\"label.title\"),\n    value: title,\n    className: \"standard-video-title-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    placeholder: t(\"label.description\"),\n    value: description.replace(/(<([^>]+)>)/gi, \"\"),\n    className: \"standard-video-desc-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"caption\",\n    placeholder: t(\"label.caption\"),\n    value: caption,\n    className: \"standard-video-caption-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"standard-video-markers-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, t(\"subtitle_marker.sub_marker\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"standard-video-edit-btn\", {\n      disabled: !hasMain\n    }),\n    onClick: handleEditClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }, t(\"button.edit\")), isEditorOpen && main && /*#__PURE__*/React.createElement(BlmMediaEditor, {\n    open: isEditorOpen,\n    elementId: element.id,\n    data: main,\n    onSave: handleEditorSave,\n    onClose: handleEditorClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }), media && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-styles-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-styles-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, t(\"title.style\")), /*#__PURE__*/React.createElement(BlmStyleTintPicker, {\n    type: StyleListTypes.MediaVideo,\n    name: \"style\",\n    data: style,\n    showBgTint: true,\n    label: t(\"video.apply_image\"),\n    showApplyStyle: hasApplyStyle,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default BlmStandardVideo;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/video/standard/BlmStandardVideo.tsx"],"names":["React","useState","FormControlLabel","Switch","Checkbox","Select","MenuItem","ListItemIcon","ListItemText","clsx","useTranslation","AcceptedFileTypes","ImageDisplayTypes","MediaTypes","StyleListTypes","ContainOptionIcon","CoverOptionIcon","BlmToggleButton","BlmMediaPicker","BlmMediaEditor","useContentEditorCtx","updateMediaComponent","BlmStyleTintPicker","BlmStandardVideo","props","data","value","standard","hasApplyStyle","element","dispatch","type","setType","Main","isEditorOpen","setIsEditorOpen","main","webm","image","title","description","caption","autoPlay","loop","option","media","style","hasMain","Boolean","t","updateChange","newStandard","newData","handleTypeChange","event","target","name","handleChange","checked","subtitle","marker","handleEditClick","handleEditorSave","newMain","handleEditorClose","getAcceptedTypes","Webm","Image","Video","id","className","disableRestoreFocus","Contain","Cover","replace","disabled","MediaVideo"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState } from \"react\";\r\nimport {\r\n  FormControlLabel,\r\n  Switch,\r\n  Checkbox,\r\n  Select,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { ComponentStyle, CustomChangeEvent, MediaComponent, MediaFile, StandardVideo } from \"types\";\r\nimport { AcceptedFileTypes, ImageDisplayTypes, MediaTypes, StyleListTypes } from \"editor-constants\";\r\nimport { ContainOptionIcon, CoverOptionIcon } from \"assets/icons\";\r\nimport { BlmToggleButton } from \"shared\";\r\nimport { BlmMediaPicker, BlmMediaEditor } from \"components/shared\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\r\nimport { BlmStyleTintPicker } from \"../../../styles\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  data: MediaComponent & { value: StandardVideo };\r\n}\r\n\r\nfunction BlmStandardVideo(props: CompProps) {\r\n  const { data } = props;\r\n  const { value: standard, hasApplyStyle } = data;\r\n  const { element, dispatch } = useContentEditorCtx();\r\n  const [type, setType] = useState(MediaTypes.Main);\r\n  const [isEditorOpen, setIsEditorOpen] = useState(false);\r\n  const {\r\n    main,\r\n    webm,\r\n    image,\r\n    title,\r\n    description,\r\n    caption,\r\n    autoPlay,\r\n    loop,\r\n    option,\r\n    [type]: media,\r\n    style,\r\n  } = standard;\r\n  const hasMain = Boolean(main);\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const updateChange = (newStandard: StandardVideo) => {\r\n    const newData = { ...data, value: newStandard };\r\n\r\n    if (dispatch) {\r\n      dispatch(updateMediaComponent(newData));\r\n    }\r\n  };\r\n\r\n  const handleTypeChange = (event: CustomChangeEvent<boolean>) => {\r\n    const target = event.target;\r\n    const { name } = target;\r\n\r\n    setType(name as MediaTypes);\r\n  };\r\n\r\n  const handleChange = (\r\n    event: ChangeEvent<any> | CustomChangeEvent<MediaFile | ComponentStyle | undefined>\r\n  ) => {\r\n    const {\r\n      name,\r\n      value,\r\n      checked,\r\n    }: {\r\n      name: string;\r\n      value: any;\r\n      checked: boolean;\r\n    } = event.target;\r\n    const newStandard = { ...standard };\r\n    if (name === \"main\") {\r\n      if (value && !value.subtitle) {\r\n        value.subtitle = newStandard.main?.subtitle;\r\n      }\r\n      if (value && !value.marker) {\r\n        value.marker = newStandard.main?.marker;\r\n      }\r\n\r\n      newStandard[name] = value;\r\n    } else if (\r\n      name === \"webm\" ||\r\n      name === \"image\" ||\r\n      name === \"title\" ||\r\n      name === \"description\" ||\r\n      name === \"caption\" ||\r\n      name === \"option\" ||\r\n      name === \"style\"\r\n    ) {\r\n      newStandard[name] = value;\r\n    } else if (name === \"autoPlay\") {\r\n      newStandard[name] = !checked;\r\n    } else if (name === \"loop\") {\r\n      newStandard[name] = checked;\r\n    }\r\n\r\n    updateChange(newStandard);\r\n  };\r\n\r\n  const handleEditClick = () => {\r\n    setIsEditorOpen(true);\r\n  };\r\n\r\n  const handleEditorSave = (newMain: MediaFile) => {\r\n    const newStandard = { ...standard, main: newMain };\r\n\r\n    updateChange(newStandard);\r\n\r\n    setIsEditorOpen(false);\r\n  };\r\n\r\n  const handleEditorClose = () => {\r\n    setIsEditorOpen(false);\r\n  };\r\n\r\n  const getAcceptedTypes = () => {\r\n    if (type === MediaTypes.Webm) {\r\n      return [AcceptedFileTypes.Webm];\r\n    } else if (type === MediaTypes.Image) {\r\n      return [AcceptedFileTypes.Image];\r\n    } else {\r\n      return [AcceptedFileTypes.Video];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"standard-video-wrapper\">\r\n      <div className=\"standard-video-options-wrapper\">\r\n        <span className=\"standard-video-autoplay-lbl\">{t(\"label.auto_start\")}</span>\r\n        <FormControlLabel\r\n          name=\"autoPlay\"\r\n          label={t(\"standar_video.click_to_play\")}\r\n          checked={!autoPlay}\r\n          control={<Switch className=\"switch-1\" />}\r\n          className=\"standard-video-autoplay-ctrl\"\r\n          onChange={handleChange}\r\n        />\r\n        <FormControlLabel\r\n          name=\"loop\"\r\n          label={t(\"standar_video.loop\")}\r\n          checked={loop}\r\n          control={<Checkbox className=\"checkbox-2\" />}\r\n          className=\"standard-video-loop-ctrl\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"standard-video-main-wrapper\">\r\n        <BlmMediaPicker\r\n          name={type}\r\n          elementId={element!.id}\r\n          acceptedFiles={getAcceptedTypes()}\r\n          data={media}\r\n          showEdit={false}\r\n          className=\"media-picker-3\"\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"standard-video-btns-wrapper\">\r\n          <BlmToggleButton\r\n            name={MediaTypes.Main}\r\n            selected={type === MediaTypes.Main}\r\n            className={clsx(\"mp4-toggle-btn\", { media: hasMain })}\r\n            onChange={handleTypeChange}\r\n          >\r\n            {t(\"standar_video.mp4\")}\r\n          </BlmToggleButton>\r\n          <BlmToggleButton\r\n            name={MediaTypes.Webm}\r\n            disabled={!hasMain}\r\n            selected={type === MediaTypes.Webm}\r\n            className={clsx(\"webm-toggle-btn\", { media: Boolean(webm) })}\r\n            onChange={handleTypeChange}\r\n          >\r\n            {t(\"standar_video.webm\")}\r\n          </BlmToggleButton>\r\n          <BlmToggleButton\r\n            name={MediaTypes.Image}\r\n            disabled={!hasMain}\r\n            selected={type === MediaTypes.Image}\r\n            className={clsx(\"img-toggle-btn\", { media: Boolean(image) })}\r\n            onChange={handleTypeChange}\r\n          >\r\n            {t(\"button.thumbnail\")}\r\n          </BlmToggleButton>\r\n        </div>\r\n        {hasMain && (\r\n          <Select\r\n            name=\"option\"\r\n            value={option}\r\n            MenuProps={{\r\n              className: \"standard-video-dropdown-menu\",\r\n              disableRestoreFocus: true, //If It is false, BlmBackgroundEditor is not positioned to anchor element after choosing the item\r\n            }}\r\n            className=\"standard-video-dropdown\"\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value={ImageDisplayTypes.Contain}>\r\n              <ListItemIcon>\r\n                <ContainOptionIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>{t(\"list.contain\")}</ListItemText>\r\n            </MenuItem>\r\n            <MenuItem value={ImageDisplayTypes.Cover}>\r\n              <ListItemIcon>\r\n                <CoverOptionIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>{t(\"list.cover\")}</ListItemText>\r\n            </MenuItem>\r\n          </Select>\r\n        )}\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder={t(\"label.title\")}\r\n          value={title}\r\n          className=\"standard-video-title-txt\"\r\n          onChange={handleChange}\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder={t(\"label.description\")}\r\n          value={description.replace(/(<([^>]+)>)/gi, \"\")}\r\n          className=\"standard-video-desc-txt\"\r\n          onChange={handleChange}\r\n        />\r\n        <textarea\r\n          name=\"caption\"\r\n          placeholder={t(\"label.caption\")}\r\n          value={caption}\r\n          className=\"standard-video-caption-txt\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"standard-video-markers-title\">{t(\"subtitle_marker.sub_marker\")}</div>\r\n      <div\r\n        className={clsx(\"standard-video-edit-btn\", { disabled: !hasMain })}\r\n        onClick={handleEditClick}\r\n      >\r\n        {t(\"button.edit\")}\r\n      </div>\r\n      {isEditorOpen && main && (\r\n        <BlmMediaEditor\r\n          open={isEditorOpen}\r\n          elementId={element!.id}\r\n          data={main}\r\n          onSave={handleEditorSave}\r\n          onClose={handleEditorClose}\r\n        />\r\n      )}\r\n      {media && (\r\n        <div className=\"video-styles-wrapper\">\r\n          <div className=\"video-styles-title\">{t(\"title.style\")}</div>\r\n          <BlmStyleTintPicker\r\n            type={StyleListTypes.MediaVideo}\r\n            name=\"style\"\r\n            data={style}\r\n            showBgTint={true}\r\n            label={t(\"video.apply_image\")}\r\n            showApplyStyle={hasApplyStyle}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmStandardVideo;\r\n"]},"metadata":{},"sourceType":"module"}