{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\dashboard\\\\BlmMediaDashboard.tsx\";\nimport React, { Fragment } from \"react\";\nimport { BlmMediaFormat } from \"components/shared\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\n\nfunction BlmMediaDashboard(props) {\n  const {\n    data,\n    children\n  } = props;\n  const {\n    format,\n    config\n  } = data;\n  const {\n    dispatch\n  } = useContentEditorCtx();\n\n  const updateChange = newData => {\n    if (dispatch) {\n      dispatch(updateMediaComponent(newData));\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newData = { ...data\n    };\n\n    if (name === \"format\") {\n      newData.format = value;\n    }\n\n    updateChange(newData);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BlmMediaFormat, {\n    data: format,\n    formats: config === null || config === void 0 ? void 0 : config.format,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), children);\n}\n\nexport default BlmMediaDashboard;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/dashboard/BlmMediaDashboard.tsx"],"names":["React","Fragment","BlmMediaFormat","useContentEditorCtx","updateMediaComponent","BlmMediaDashboard","props","data","children","format","config","dispatch","updateChange","newData","handleChange","event","name","value","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAmD,OAAnD;AAGA,SAASC,cAAT,QAAuD,mBAAvD;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,SAASC,oBAAT,QAAqC,oCAArC;;AAMA,SAASC,iBAAT,CAA2BC,KAA3B,EAAgE;AAC9D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBF,KAA3B;AACA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBH,IAA3B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAeR,mBAAmB,EAAxC;;AAEA,QAAMS,YAAY,GAAIC,OAAD,IAA6B;AAChD,QAAIF,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACP,oBAAoB,CAACS,OAAD,CAArB,CAAR;AACD;AACF,GAJD;;AAMA,QAAMC,YAAY,GAAIC,KAAD,IAAmC;AACtD,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACA,UAAML,OAAO,GAAG,EAAE,GAAGN;AAAL,KAAhB;;AAEA,QAAIS,IAAI,KAAK,QAAb,EAAuB;AACrBH,MAAAA,OAAO,CAACJ,MAAR,GAAiBQ,KAAjB;AACD;;AAEDL,IAAAA,YAAY,CAACC,OAAD,CAAZ;AACD,GATD;;AAWA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEJ,MAAtB;AAA8B,IAAA,OAAO,EAAEC,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAED,MAA/C;AAAuD,IAAA,QAAQ,EAAEK,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGN,QAFH,CADF;AAMD;;AAED,eAAeH,iBAAf","sourcesContent":["import React, { Fragment, PropsWithChildren } from \"react\";\r\n\r\nimport { MediaComponent } from \"types\";\r\nimport { BlmMediaFormat, MediaFormatChangeEvent } from \"components/shared\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\r\n\r\nexport interface CompProps {\r\n  data: MediaComponent;\r\n}\r\n\r\nfunction BlmMediaDashboard(props: PropsWithChildren<CompProps>) {\r\n  const { data, children } = props;\r\n  const { format, config } = data;\r\n  const { dispatch } = useContentEditorCtx();\r\n\r\n  const updateChange = (newData: MediaComponent) => {\r\n    if (dispatch) {\r\n      dispatch(updateMediaComponent(newData));\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: MediaFormatChangeEvent) => {\r\n    const { name, value } = event.target;\r\n    const newData = { ...data };\r\n\r\n    if (name === \"format\") {\r\n      newData.format = value;\r\n    }\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <BlmMediaFormat data={format} formats={config?.format} onChange={handleChange} />\r\n      {children}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default BlmMediaDashboard;\r\n"]},"metadata":{},"sourceType":"module"}