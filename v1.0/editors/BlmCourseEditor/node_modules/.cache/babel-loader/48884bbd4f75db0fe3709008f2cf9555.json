{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\shared\\\\media-editor\\\\components\\\\list\\\\action-item\\\\BlmSynchroActionItem.tsx\";\nimport React, { forwardRef } from \"react\";\nimport clsx from \"clsx\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { MediaCueActions, MediaPlayerTypes } from \"editor-constants\";\nimport { formatShortTime } from \"utils\";\nimport { useMediaEditorContext } from \"../../context\";\nimport \"./styles.scss\";\n\nconst BlmSynchroActionItem = (props, ref) => {\n  const {\n    data,\n    \"data-value\": val,\n    value,\n    className,\n    ...others\n  } = props;\n  const {\n    startTime,\n    endTime\n  } = data;\n  const {\n    playerType\n  } = useMediaEditorContext();\n  const duration = isNaN(endTime) ? 2 : endTime - startTime;\n  const curValue = val !== null && val !== void 0 ? val : value;\n  const {\n    t\n  } = useTranslation(\"shared\");\n\n  const renderContentLbl = () => {\n    if (curValue !== MediaCueActions.ScrollVPauseC) {\n      return undefined;\n    }\n\n    if (playerType === MediaPlayerTypes.Lottie) {\n      return duration.toFixed(3);\n    } else {\n      return formatShortTime(duration);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(MenuItem, Object.assign({\n    ref: ref,\n    className: clsx(\"synchro-action-item-wrapper\", className, val, value)\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-item-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-item-video-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, t(\"synchro_action_item.video\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-item-video-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-item-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-item-content-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, t(\"synchro_action_item.content\")), renderContentLbl()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-item-content-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default forwardRef(BlmSynchroActionItem);","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/media-editor/components/list/action-item/BlmSynchroActionItem.tsx"],"names":["React","forwardRef","clsx","MenuItem","useTranslation","MediaCueActions","MediaPlayerTypes","formatShortTime","useMediaEditorContext","BlmSynchroActionItem","props","ref","data","val","value","className","others","startTime","endTime","playerType","duration","isNaN","curValue","t","renderContentLbl","ScrollVPauseC","undefined","Lottie","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAA0DC,UAA1D,QAA4E,OAA5E;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,kBAAlD;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,qBAAT,QAAsC,eAAtC;AACA,OAAO,eAAP;;AAOA,MAAMC,oBAAwE,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC/F,QAAM;AAAEC,IAAAA,IAAF;AAAQ,kBAAcC,GAAtB;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA,SAAlC;AAA6C,OAAGC;AAAhD,MAA2DN,KAAjE;AACA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAyBN,IAA/B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAiBX,qBAAqB,EAA5C;AACA,QAAMY,QAAQ,GAAGC,KAAK,CAACH,OAAD,CAAL,GAAiB,CAAjB,GAAqBA,OAAO,GAAGD,SAAhD;AACA,QAAMK,QAAQ,GAAGT,GAAH,aAAGA,GAAH,cAAGA,GAAH,GAAUC,KAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAAQnB,cAAc,CAAC,QAAD,CAA5B;;AAEA,QAAMoB,gBAAgB,GAAG,MAAM;AAC7B,QAAIF,QAAQ,KAAKjB,eAAe,CAACoB,aAAjC,EAAgD;AAC9C,aAAOC,SAAP;AACD;;AAED,QAAIP,UAAU,KAAKb,gBAAgB,CAACqB,MAApC,EAA4C;AAC1C,aAAOP,QAAQ,CAACQ,OAAT,CAAiB,CAAjB,CAAP;AACD,KAFD,MAEO;AACL,aAAOrB,eAAe,CAACa,QAAD,CAAtB;AACD;AACF,GAVD;;AAYA,sBACE,oBAAC,QAAD;AACE,IAAA,GAAG,EAAET,GADP;AAEE,IAAA,SAAS,EAAET,IAAI,CAAC,6BAAD,EAAgCa,SAAhC,EAA2CF,GAA3C,EAAgDC,KAAhD;AAFjB,KAGME,MAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCO,CAAC,CAAC,2BAAD,CAAzC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,CAAC,CAAC,6BAAD,CAAR,CADF,EAEGC,gBAAgB,EAFnB,CAJF,eAQE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CALF,CADF;AAkBD,CAtCD;;AAwCA,eAAevB,UAAU,CAACQ,oBAAD,CAAzB","sourcesContent":["import React, { ComponentProps, ForwardRefRenderFunction, forwardRef } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { MediaTrackCue } from \"types\";\r\nimport { MediaCueActions, MediaPlayerTypes } from \"editor-constants\";\r\nimport { formatShortTime } from \"utils\";\r\nimport { useMediaEditorContext } from \"../../context\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ComponentProps<typeof MenuItem> {\r\n  data: MediaTrackCue;\r\n  \"data-value\"?: MediaCueActions;\r\n}\r\n\r\nconst BlmSynchroActionItem: ForwardRefRenderFunction<HTMLLIElement, CompProps> = (props, ref) => {\r\n  const { data, \"data-value\": val, value, className, ...others } = props;\r\n  const { startTime, endTime } = data;\r\n  const { playerType } = useMediaEditorContext();\r\n  const duration = isNaN(endTime) ? 2 : endTime - startTime;\r\n  const curValue = val ?? value;\r\n  const { t } = useTranslation(\"shared\");\r\n\r\n  const renderContentLbl = () => {\r\n    if (curValue !== MediaCueActions.ScrollVPauseC) {\r\n      return undefined;\r\n    }\r\n\r\n    if (playerType === MediaPlayerTypes.Lottie) {\r\n      return duration.toFixed(3);\r\n    } else {\r\n      return formatShortTime(duration);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MenuItem\r\n      ref={ref}\r\n      className={clsx(\"synchro-action-item-wrapper\", className, val, value)}\r\n      {...others}\r\n    >\r\n      <div className=\"action-item-content\">\r\n        <div className=\"action-item-video-lbl\">{t(\"synchro_action_item.video\")}</div>\r\n        <div className=\"action-item-video-icon\" />\r\n        <div className=\"action-item-divider\" />\r\n        <div className=\"action-item-content-lbl\">\r\n          <span>{t(\"synchro_action_item.content\")}</span>\r\n          {renderContentLbl()}\r\n        </div>\r\n        <div className=\"action-item-content-icon\" />\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n};\r\n\r\nexport default forwardRef(BlmSynchroActionItem);\r\n"]},"metadata":{},"sourceType":"module"}