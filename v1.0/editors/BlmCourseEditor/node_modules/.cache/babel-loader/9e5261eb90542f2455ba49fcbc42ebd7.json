{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\template-editors\\\\controls\\\\actions\\\\sound\\\\BlmSoundAction.tsx\";\nimport React from \"react\";\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { AcceptedFileTypes } from \"editor-constants\";\nimport { BlmMediaPickerEditor } from \"components/shared\";\nimport \"./styles.scss\";\n\nfunction BlmReplaceSoundAction(props) {\n  var _element$root, _element$root2;\n\n  const {\n    name,\n    element,\n    data,\n    onChange\n  } = props;\n  const {\n    checked = false,\n    sound,\n    unChecked = false\n  } = data || {};\n  const {\n    t\n  } = useTranslation(\"template-editors\");\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange({\n        target: {\n          name,\n          value: newData\n        }\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const newData = { ...data,\n      checked,\n      unChecked\n    };\n\n    if (name === \"sound\") {\n      if (value && !value.subtitle) {\n        var _newData$sound;\n\n        value.subtitle = (_newData$sound = newData.sound) === null || _newData$sound === void 0 ? void 0 : _newData$sound.subtitle;\n      }\n\n      if (value && !value.marker) {\n        var _newData$sound2;\n\n        value.marker = (_newData$sound2 = newData.sound) === null || _newData$sound2 === void 0 ? void 0 : _newData$sound2.marker;\n      }\n\n      newData[name] = value;\n    } else if (name === \"checked\") {\n      newData[name] = value;\n    } else if (name === \"unChecked\") {\n      newData[\"unChecked\"] = value;\n    }\n\n    updateChange(newData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"template-sound-action-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"checked\",\n    label: name === \"loadSound\" && ((_element$root = element.root) === null || _element$root === void 0 ? void 0 : _element$root.type) === \"structure\" || name === \"completeSound\" ? t(\"sound_action.play\") : t(\"sound_action.play_sound\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }\n    }),\n    checked: checked,\n    className: unChecked === true ? \"template-sound-frm-lbl-disable\" : \"template-sound-frm-lbl\",\n    onChange: handleChange,\n    disabled: unChecked === true ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), name === \"loadSound\" && ((_element$root2 = element.root) === null || _element$root2 === void 0 ? void 0 : _element$root2.type) === \"structure\" && /*#__PURE__*/React.createElement(FormControlLabel, {\n    name: \"unChecked\",\n    label: t(\"sound_action.stop\"),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }\n    }),\n    checked: unChecked,\n    className: checked === true ? \"template-sound-frm-lbls-disable\" : \"template-sound-frm-lbls\",\n    onChange: handleChange,\n    disabled: checked === true ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), checked && /*#__PURE__*/React.createElement(BlmMediaPickerEditor, {\n    name: \"sound\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Audio],\n    data: sound,\n    placeholder: t(\"sound_action.select_media\"),\n    className: \"template-sound-picker\",\n    onChange: handleChange,\n    showDesign: \"showDesign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default BlmReplaceSoundAction;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/template-editors/controls/actions/sound/BlmSoundAction.tsx"],"names":["React","Checkbox","FormControlLabel","useTranslation","AcceptedFileTypes","BlmMediaPickerEditor","BlmReplaceSoundAction","props","name","element","data","onChange","checked","sound","unChecked","t","updateChange","newData","target","value","handleChange","event","type","subtitle","marker","root","id","Audio"],"mappings":"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","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CourseElement, CustomChangeEvent, TemplateSoundAction } from \"types\";\r\nimport { AcceptedFileTypes } from \"editor-constants\";\r\nimport { BlmMediaPickerEditor, MediaPickerChangeEvent } from \"components/shared\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  name: string;\r\n  element: CourseElement;\r\n  data?: TemplateSoundAction;\r\n  onChange?: (event: CustomChangeEvent<TemplateSoundAction>) => void;\r\n}\r\n\r\nfunction BlmReplaceSoundAction(props: CompProps) {\r\n  const { name, element, data, onChange } = props;\r\n  const { checked = false, sound, unChecked = false } = data || {};\r\n  const { t } = useTranslation(\"template-editors\");\r\n\r\n  const updateChange = (newData: TemplateSoundAction) => {\r\n    if (onChange) {\r\n      onChange({ target: { name, value: newData } });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<any> | MediaPickerChangeEvent) => {\r\n    const target = event.target;\r\n    const name: string = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const newData: TemplateSoundAction = { ...data, checked, unChecked };\r\n\r\n    if (name === \"sound\") {\r\n      if (value && !value.subtitle) {\r\n        value.subtitle = newData.sound?.subtitle;\r\n      }\r\n      if (value && !value.marker) {\r\n        value.marker = newData.sound?.marker;\r\n      }\r\n      newData[name] = value;\r\n    } else if (name === \"checked\") {\r\n      newData[name] = value;\r\n    } else if (name === \"unChecked\") {\r\n      newData[\"unChecked\"] = value;\r\n    }\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"template-sound-action-wrapper\">\r\n      <FormControlLabel\r\n        name=\"checked\"\r\n        label={\r\n          (name === \"loadSound\" && element.root?.type === \"structure\") || name === \"completeSound\"\r\n            ? t(\"sound_action.play\")\r\n            : t(\"sound_action.play_sound\")\r\n        }\r\n        control={<Checkbox />}\r\n        checked={checked}\r\n        className={\r\n          unChecked === true\r\n            ? \"template-sound-frm-lbl-disable\"\r\n            : \"template-sound-frm-lbl\"\r\n        }\r\n        onChange={handleChange}\r\n        disabled={unChecked === true ? true : false}\r\n      />\r\n      {name === \"loadSound\" && element.root?.type === \"structure\" && (\r\n        <FormControlLabel\r\n          name=\"unChecked\"\r\n          label={t(\"sound_action.stop\")}\r\n          control={<Checkbox />}\r\n          checked={unChecked}\r\n          className={\r\n            checked === true \r\n              ? \"template-sound-frm-lbls-disable\"\r\n              : \"template-sound-frm-lbls\"\r\n          }\r\n          onChange={handleChange}\r\n          disabled={checked === true ? true : false}\r\n        />\r\n      )}\r\n      {checked && (\r\n        <BlmMediaPickerEditor\r\n          name=\"sound\"\r\n          elementId={element.id}\r\n          acceptedFiles={[AcceptedFileTypes.Audio]}\r\n          data={sound}\r\n          placeholder={t(\"sound_action.select_media\")}\r\n          className=\"template-sound-picker\"\r\n          onChange={handleChange}\r\n          showDesign=\"showDesign\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default BlmReplaceSoundAction;\r\n"]},"metadata":{},"sourceType":"module"}