{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\button\\\\BlmMediaButton.tsx\";\nimport React from \"react\";\nimport { ListItemIcon, ListItemText, MenuItem, Select } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { StyleListTypes, AcceptedFileTypes, ImageDisplayTypes } from \"editor-constants\";\nimport { CoverOptionIcon, ContainOptionIcon, NoResizeOptionIcon } from \"assets/icons\";\nimport { getMediaButton } from \"utils\";\nimport { BlmMediaPicker } from \"components/shared\";\nimport { useContentEditorCtx } from \"components/content-editor/core\";\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\nimport BlmActions, { BlmSwitchActions } from \"../../actions\";\nimport { BlmStyleTintPicker } from \"../../styles\";\nimport BlmMediaDashboard from \"../dashboard\";\nimport { BlmPosition } from \"shared\";\nimport \"./styles.scss\";\nconst NUMBER_REG = /^$|^[\\d\\b]+$/;\n\nfunction BlmMediaButton(props) {\n  const {\n    data,\n    temp\n  } = props;\n  const state = getMediaButton(data);\n  const {\n    element,\n    dispatch\n  } = useContentEditorCtx();\n  const {\n    value: button,\n    hasApplyStyle\n  } = state;\n  const {\n    out,\n    over,\n    click,\n    icon,\n    title,\n    description,\n    caption,\n    label,\n    number,\n    duration,\n    option,\n    clickAction,\n    overAction,\n    style,\n    position\n  } = button;\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n  const [restoreValue, setRestoreValue] = React.useState(undefined);\n  const buttonType = (element === null || element === void 0 ? void 0 : element.isSummary) ? StyleListTypes.MediaButtonSummary : StyleListTypes.MediaButton;\n\n  const updateChange = newButton => {\n    const newData = { ...state,\n      value: newButton\n    };\n\n    if (newData.value.clickAction.value !== undefined) {\n      let value = newData.value.clickAction.value;\n      setRestoreValue(value.restore);\n      delete value.restore;\n    }\n\n    if (newData.value.overAction.value) {\n      let value = newData.value.overAction.value;\n\n      if (value.restore === undefined) {\n        value.restore = restoreValue !== undefined ? restoreValue : true;\n      }\n    }\n\n    if (dispatch) {\n      dispatch(updateMediaComponent(newData));\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newButton = { ...button\n    };\n\n    if (name === \"out\" || name === \"over\" || name === \"click\" || name === \"icon\" || name === \"title\" || name === \"description\" || name === \"caption\" || name === \"label\" || name === \"number\" && NUMBER_REG.test(value) || name === \"duration\" || name === \"option\" || name === \"clickAction\" || name === \"overAction\" || name === \"style\") {\n      newButton[name] = value;\n    } else if (name === \"position\") {\n      newButton[name] = value;\n    }\n\n    if (newButton.out === undefined && newButton.over === undefined && newButton.click === undefined) {\n      newButton.style.bgTint = undefined;\n      newButton.style.tint = undefined;\n    }\n\n    updateChange(newButton);\n  };\n\n  const handleSwitchClick = () => {\n    const newButton = { ...button\n    };\n    newButton.clickAction = button.overAction;\n    newButton.overAction = button.clickAction;\n    updateChange(newButton);\n  };\n\n  return /*#__PURE__*/React.createElement(BlmMediaDashboard, {\n    data: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-media-button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, t(\"title.parameters\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-item-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-item-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, t(\"title.out\")), /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"out\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Image],\n    data: out,\n    placeholder: \"Select media\",\n    className: \"media-picker-3\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-item-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-item-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, t(\"title.over\")), /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"over\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Image, AcceptedFileTypes.Video],\n    data: over || out,\n    placeholder: \"Select media\",\n    isLinked: !Boolean(over),\n    className: \"media-picker-3\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-item-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-item-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, t(\"label.click\")), /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"click\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Image],\n    data: click || out,\n    placeholder: \"Select media\",\n    isLinked: !Boolean(click),\n    className: \"media-picker-3\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-item-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-item-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, t(\"title.icon\")), /*#__PURE__*/React.createElement(BlmMediaPicker, {\n    name: \"icon\",\n    elementId: element.id,\n    acceptedFiles: [AcceptedFileTypes.Image],\n    data: icon,\n    placeholder: \"Select media\",\n    className: \"media-picker-3\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }))), out && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n    name: \"option\",\n    value: option,\n    MenuProps: {\n      className: \"button-params-option-dropdown-menu\",\n      disableRestoreFocus: true //If It is false, BlmBackgroundEditor is not positioned to anchor element after choosing the item\n\n    },\n    className: \"button-params-option-dropdown\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: ImageDisplayTypes.Cover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CoverOptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  }, t(\"list.cover\"))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: ImageDisplayTypes.Contain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ContainOptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 19\n    }\n  }, t(\"list.contain\"))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: ImageDisplayTypes.NoResize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NoResizeOptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }, t(\"list.no_resize\")))), /*#__PURE__*/React.createElement(BlmPosition, {\n    name: \"position\",\n    media: \"media-item\",\n    value: position,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-params-txt-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"label\",\n    placeholder: t(\"label.lbl\"),\n    value: label,\n    className: \"button-params-lbl-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"number\",\n    placeholder: t(\"label.number\"),\n    value: number,\n    className: \"button-params-num-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"duration\",\n    placeholder: t(\"label.duration\"),\n    value: duration,\n    className: \"button-params-duration-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: t(\"label.title\"),\n    value: title,\n    className: \"button-params-title-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    placeholder: t(\"label.description\"),\n    value: description.replace(/(<([^>]+)>)/gi, \"\"),\n    className: \"button-params-desc-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"caption\",\n    placeholder: t(\"label.action_label\"),\n    value: caption,\n    className: \"button-params-caption-txt\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-actions-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-actions-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, t(\"label.action\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-actions-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, t(\"label.on\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"button-actions-bold-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 29\n    }\n  }, t(\"label.click\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-actions-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }, t(\"label.on\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"button-actions-bold-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 29\n    }\n  }, t(\"label.roll_over\"))), /*#__PURE__*/React.createElement(BlmActions, {\n    name: \"clickAction\",\n    data: clickAction,\n    onChange: handleChange,\n    temp: temp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BlmSwitchActions, {\n    left: clickAction,\n    right: overAction,\n    rightType: \"over\",\n    onClick: handleSwitchClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BlmActions, {\n    name: \"overAction\",\n    data: overAction,\n    type: \"over\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  })), out && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-styles-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-styles-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  }, t(\"title.style\")), /*#__PURE__*/React.createElement(BlmStyleTintPicker, {\n    type: buttonType,\n    name: \"style\",\n    data: style,\n    showBgTint: true,\n    label: t(\"media_button.apply_button\"),\n    showApplyStyle: hasApplyStyle,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default BlmMediaButton;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/button/BlmMediaButton.tsx"],"names":["React","ListItemIcon","ListItemText","MenuItem","Select","useTranslation","StyleListTypes","AcceptedFileTypes","ImageDisplayTypes","CoverOptionIcon","ContainOptionIcon","NoResizeOptionIcon","getMediaButton","BlmMediaPicker","useContentEditorCtx","updateMediaComponent","BlmActions","BlmSwitchActions","BlmStyleTintPicker","BlmMediaDashboard","BlmPosition","NUMBER_REG","BlmMediaButton","props","data","temp","state","element","dispatch","value","button","hasApplyStyle","out","over","click","icon","title","description","caption","label","number","duration","option","clickAction","overAction","style","position","t","restoreValue","setRestoreValue","useState","undefined","buttonType","isSummary","MediaButtonSummary","MediaButton","updateChange","newButton","newData","restore","handleChange","event","name","target","test","bgTint","tint","handleSwitchClick","id","Image","Video","Boolean","className","disableRestoreFocus","Cover","Contain","NoResize","replace"],"mappings":"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","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport { ListItemIcon, ListItemText, MenuItem, Select } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  ComponentStyle,\r\n  MediaButton,\r\n  CustomChangeEvent,\r\n  MediaComponent,\r\n  MediaFile,\r\n  ComponentAction,\r\n  ContentTemplateAction,\r\n} from \"types\";\r\nimport {\r\n  StyleListTypes,\r\n  AcceptedFileTypes,\r\n  ImageDisplayTypes,\r\n  Positions,\r\n  MediaPosition,\r\n  MediaBackgroundPosition,\r\n} from \"editor-constants\";\r\nimport { CoverOptionIcon, ContainOptionIcon, NoResizeOptionIcon } from \"assets/icons\";\r\nimport { getMediaButton } from \"utils\";\r\nimport { BlmMediaPicker } from \"components/shared\";\r\nimport { useContentEditorCtx } from \"components/content-editor/core\";\r\nimport { updateMediaComponent } from \"components/content-editor/reducers\";\r\nimport BlmActions, { BlmSwitchActions } from \"../../actions\";\r\nimport { BlmStyleTintPicker } from \"../../styles\";\r\nimport BlmMediaDashboard from \"../dashboard\";\r\nimport { BlmPosition } from \"shared\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  label: string;\r\n  data: MediaComponent;\r\n  temp?: ContentTemplateAction | undefined;\r\n}\r\n\r\nconst NUMBER_REG = /^$|^[\\d\\b]+$/;\r\n\r\nfunction BlmMediaButton(props: CompProps) {\r\n  const { data, temp } = props;\r\n  const state = getMediaButton(data);\r\n  const { element, dispatch } = useContentEditorCtx();\r\n  const { value: button, hasApplyStyle } = state;\r\n  const {\r\n    out,\r\n    over,\r\n    click,\r\n    icon,\r\n    title,\r\n    description,\r\n    caption,\r\n    label,\r\n    number,\r\n    duration,\r\n    option,\r\n    clickAction,\r\n    overAction,\r\n    style,\r\n    position,\r\n  } = button;\r\n  const { t } = useTranslation(\"content-editor\");\r\n  const [restoreValue, setRestoreValue] = React.useState(undefined);\r\n\r\n  const buttonType = element?.isSummary\r\n    ? StyleListTypes.MediaButtonSummary\r\n    : StyleListTypes.MediaButton;\r\n\r\n  const updateChange = (newButton: MediaButton) => {\r\n    const newData = {\r\n      ...state,\r\n      value: newButton,\r\n    };\r\n\r\n    if (newData.value.clickAction.value !== undefined) {\r\n      let value: any = newData.value.clickAction.value;\r\n      setRestoreValue(value.restore);\r\n      delete value.restore;\r\n    }\r\n\r\n    if (newData.value.overAction.value) {\r\n      let value: any = newData.value.overAction.value;\r\n      if (value.restore === undefined) {\r\n        value.restore = restoreValue !== undefined ? restoreValue : true;\r\n      }\r\n    }\r\n\r\n    if (dispatch) {\r\n      dispatch(updateMediaComponent(newData));\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event:\r\n      | ChangeEvent<any>\r\n      | CustomChangeEvent<\r\n          | MediaFile\r\n          | ComponentAction\r\n          | MediaPosition\r\n          | Positions\r\n          | MediaBackgroundPosition\r\n          | ComponentStyle\r\n          | undefined\r\n        >\r\n  ) => {\r\n    const {\r\n      name,\r\n      value,\r\n    }: {\r\n      name: string;\r\n      value: any;\r\n    } = event.target;\r\n    const newButton = { ...button };\r\n\r\n    if (\r\n      name === \"out\" ||\r\n      name === \"over\" ||\r\n      name === \"click\" ||\r\n      name === \"icon\" ||\r\n      name === \"title\" ||\r\n      name === \"description\" ||\r\n      name === \"caption\" ||\r\n      name === \"label\" ||\r\n      (name === \"number\" && NUMBER_REG.test(value)) ||\r\n      name === \"duration\" ||\r\n      name === \"option\" ||\r\n      name === \"clickAction\" ||\r\n      name === \"overAction\" ||\r\n      name === \"style\"\r\n    ) {\r\n      newButton[name] = value;\r\n    } else if (name === \"position\") {\r\n      newButton[name] = value;\r\n    }\r\n\r\n    if (\r\n      newButton.out === undefined &&\r\n      newButton.over === undefined &&\r\n      newButton.click === undefined\r\n    ) {\r\n      newButton.style.bgTint = undefined;\r\n      newButton.style.tint = undefined;\r\n    }\r\n\r\n    updateChange(newButton);\r\n  };\r\n\r\n  const handleSwitchClick = () => {\r\n    const newButton = { ...button };\r\n\r\n    newButton.clickAction = button.overAction;\r\n    newButton.overAction = button.clickAction;\r\n\r\n    updateChange(newButton);\r\n  };\r\n\r\n  return (\r\n    <BlmMediaDashboard data={state}>\r\n      <div className=\"content-media-button-wrapper\">\r\n        <div className=\"button-params-wrapper\">\r\n          <div className=\"button-params-title\">{t(\"title.parameters\")}</div>\r\n          <div className=\"button-params-list-wrapper\">\r\n            <div className=\"button-params-item-wrapper\">\r\n              <div className=\"button-params-item-title\">{t(\"title.out\")}</div>\r\n              <BlmMediaPicker\r\n                name=\"out\"\r\n                elementId={element!.id}\r\n                acceptedFiles={[AcceptedFileTypes.Image]}\r\n                data={out}\r\n                placeholder=\"Select media\"\r\n                className=\"media-picker-3\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"button-params-item-wrapper\">\r\n              <div className=\"button-params-item-title\">{t(\"title.over\")}</div>\r\n              <BlmMediaPicker\r\n                name=\"over\"\r\n                elementId={element!.id}\r\n                acceptedFiles={[AcceptedFileTypes.Image, AcceptedFileTypes.Video]}\r\n                data={over || out}\r\n                placeholder=\"Select media\"\r\n                isLinked={!Boolean(over)}\r\n                className=\"media-picker-3\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"button-params-item-wrapper\">\r\n              <div className=\"button-params-item-title\">{t(\"label.click\")}</div>\r\n              <BlmMediaPicker\r\n                name=\"click\"\r\n                elementId={element!.id}\r\n                acceptedFiles={[AcceptedFileTypes.Image]}\r\n                data={click || out}\r\n                placeholder=\"Select media\"\r\n                isLinked={!Boolean(click)}\r\n                className=\"media-picker-3\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"button-params-item-wrapper\">\r\n              <div className=\"button-params-item-title\">{t(\"title.icon\")}</div>\r\n              <BlmMediaPicker\r\n                name=\"icon\"\r\n                elementId={element!.id}\r\n                acceptedFiles={[AcceptedFileTypes.Image]}\r\n                data={icon}\r\n                placeholder=\"Select media\"\r\n                className=\"media-picker-3\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          {out && (\r\n            <>\r\n              <Select\r\n                name=\"option\"\r\n                value={option}\r\n                MenuProps={{\r\n                  className: \"button-params-option-dropdown-menu\",\r\n                  disableRestoreFocus: true, //If It is false, BlmBackgroundEditor is not positioned to anchor element after choosing the item\r\n                }}\r\n                className=\"button-params-option-dropdown\"\r\n                onChange={handleChange}\r\n              >\r\n                <MenuItem value={ImageDisplayTypes.Cover}>\r\n                  <ListItemIcon>\r\n                    <CoverOptionIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>{t(\"list.cover\")}</ListItemText>\r\n                </MenuItem>\r\n                <MenuItem value={ImageDisplayTypes.Contain}>\r\n                  <ListItemIcon>\r\n                    <ContainOptionIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>{t(\"list.contain\")}</ListItemText>\r\n                </MenuItem>\r\n                <MenuItem value={ImageDisplayTypes.NoResize}>\r\n                  <ListItemIcon>\r\n                    <NoResizeOptionIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>{t(\"list.no_resize\")}</ListItemText>\r\n                </MenuItem>\r\n              </Select>\r\n              <BlmPosition\r\n                name=\"position\"\r\n                media=\"media-item\"\r\n                value={position}\r\n                onChange={handleChange}\r\n              />\r\n            </>\r\n          )}\r\n          <div className=\"button-params-txt-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"label\"\r\n              placeholder={t(\"label.lbl\")}\r\n              value={label}\r\n              className=\"button-params-lbl-txt\"\r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              placeholder={t(\"label.number\")}\r\n              value={number}\r\n              className=\"button-params-num-txt\"\r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"duration\"\r\n              placeholder={t(\"label.duration\")}\r\n              value={duration}\r\n              className=\"button-params-duration-txt\"\r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder={t(\"label.title\")}\r\n              value={title}\r\n              className=\"button-params-title-txt\"\r\n              onChange={handleChange}\r\n            />\r\n            <textarea\r\n              name=\"description\"\r\n              placeholder={t(\"label.description\")}\r\n              value={description.replace(/(<([^>]+)>)/gi, \"\")}\r\n              className=\"button-params-desc-txt\"\r\n              onChange={handleChange}\r\n            />\r\n            <textarea\r\n              name=\"caption\"\r\n              placeholder={t(\"label.action_label\")}\r\n              value={caption}\r\n              className=\"button-params-caption-txt\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"button-actions-wrapper\">\r\n          <div className=\"button-actions-title\">{t(\"label.action\")}</div>\r\n          <div className=\"button-actions-lbl\">\r\n            {t(\"label.on\")} <span className=\"button-actions-bold-lbl\">{t(\"label.click\")}</span>\r\n          </div>\r\n          <div className=\"button-actions-lbl\">\r\n            {t(\"label.on\")} <span className=\"button-actions-bold-lbl\">{t(\"label.roll_over\")}</span>\r\n          </div>\r\n          <BlmActions name=\"clickAction\" data={clickAction} onChange={handleChange} temp={temp} />\r\n          <BlmSwitchActions\r\n            left={clickAction}\r\n            right={overAction}\r\n            rightType=\"over\"\r\n            onClick={handleSwitchClick}\r\n          />\r\n          <BlmActions name=\"overAction\" data={overAction} type=\"over\" onChange={handleChange} />\r\n        </div>\r\n        {out && (\r\n          <div className=\"button-styles-wrapper\">\r\n            <div className=\"button-styles-title\">{t(\"title.style\")}</div>\r\n            <BlmStyleTintPicker\r\n              type={buttonType}\r\n              name=\"style\"\r\n              data={style}\r\n              showBgTint={true}\r\n              label={t(\"media_button.apply_button\")}\r\n              showApplyStyle={hasApplyStyle}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </BlmMediaDashboard>\r\n  );\r\n}\r\n\r\nexport default BlmMediaButton;\r\n"]},"metadata":{},"sourceType":"module"}