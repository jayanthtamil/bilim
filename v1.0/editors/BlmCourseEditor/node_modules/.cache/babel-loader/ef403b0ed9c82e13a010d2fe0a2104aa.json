{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\template-editors\\\\containers\\\\template-variants\\\\BlmTemplateVariants.tsx\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useMemo, useState } from \"react\";\nimport { TemplatePanelOptions } from \"types\";\nimport { PanelCloseReasons, TemplatePanelTypes } from \"editor-constants\";\nimport { addClassToString, removeClassFromString, getTemplateAndVariant } from \"utils\";\nimport { TemplatesPanelContext, BlmVariantList } from \"components/domain/templates-panel\";\nimport { getTemplateSizeModel, setTemplateSizeHTML, changeTemplateVariant } from \"template-builders\";\nimport \"./styles.scss\";\nconst initListEditor = {\n  isDarkSelected: false,\n  isEdited: false\n};\nconst initSizeEditor = {\n  size: null,\n  isEdited: false\n};\n\nconst createTemplate = (template, listEditor, sizeEditor, isRelative = true, oldListEditor) => {\n  const {\n    isDarkTemplate,\n    template: {\n      id: templateId\n    }\n  } = template;\n  let newTemplate = { ...template\n  };\n  let isEdited = false;\n  let isVariantChanged = false;\n\n  if (listEditor.isEdited) {\n    var _oldListEditor$varian;\n\n    const {\n      variant,\n      isDarkSelected\n    } = listEditor;\n    const prevTemplateId = oldListEditor ? (_oldListEditor$varian = oldListEditor.variant) === null || _oldListEditor$varian === void 0 ? void 0 : _oldListEditor$varian.id : templateId;\n    const prevIsDarkTemplate = oldListEditor ? oldListEditor.isDarkSelected : isDarkTemplate;\n\n    if (variant && variant.id !== prevTemplateId && variant.html) {\n      newTemplate = changeTemplateVariant(template, variant, isDarkSelected, isRelative);\n      isEdited = true;\n      isVariantChanged = true;\n    } else if (isDarkSelected !== prevIsDarkTemplate) {\n      if (isDarkSelected) {\n        newTemplate.html = addClassToString(newTemplate.html, [\"dark\"]);\n      } else {\n        newTemplate.html = removeClassFromString(newTemplate.html, [\"dark\"]);\n      }\n\n      newTemplate.isDarkTemplate = isDarkSelected;\n      isEdited = true;\n    }\n  }\n\n  if (sizeEditor.size && (sizeEditor.isEdited || isVariantChanged)) {\n    newTemplate.html = setTemplateSizeHTML(newTemplate, sizeEditor.size);\n    isEdited = true;\n  }\n\n  if (isEdited) {\n    return newTemplate;\n  }\n};\n\nconst BlmTemplateVariants = forwardRef((props, ref) => {\n  const {\n    element,\n    template,\n    templates,\n    templateEle,\n    course,\n    onPreview,\n    onMore,\n    onSave,\n    onClose,\n    getTemplates,\n    getTemplateProperties\n  } = props;\n  const [variantList, setVariantList] = useState();\n  const [listEditor, setListEditor] = useState(initListEditor);\n  const [sizeEditor, setSizeEditor] = useState(initSizeEditor);\n  const {\n    size,\n    isEdited\n  } = sizeEditor;\n  const {\n    isOutdated,\n    forAlertIcon\n  } = element;\n  const {\n    isDarkTemplate\n  } = template;\n  const [idealTemplate, variants] = useMemo(() => {\n    if (variantList) {\n      const {\n        template,\n        selectedTemplate\n      } = variantList;\n\n      if (isOutdated && forAlertIcon) {\n        var _template$substitue;\n\n        return [(_template$substitue = template.substitue) === null || _template$substitue === void 0 ? void 0 : _template$substitue.template, [selectedTemplate]];\n      } else {\n        return [template, [template, ...template.variants]];\n      }\n    }\n\n    return [];\n  }, [variantList, isOutdated, forAlertIcon]);\n  useImperativeHandle(ref, () => ({\n    isEdited: isEdited || listEditor.isEdited,\n    saveOnClose: handleSaveOnClose,\n    revert: () => {}\n  }));\n  useEffect(() => {\n    if (!templates && course) {\n      getTemplates(course);\n    } else if (templates) {\n      const result = getTemplateAndVariant(templates, template.template.id);\n\n      if (result) {\n        var _result$variant;\n\n        setVariantList({\n          template: result.template,\n          selectedTemplate: (_result$variant = result.variant) !== null && _result$variant !== void 0 ? _result$variant : result.template\n        });\n      }\n    }\n  }, [template, course, templates, setVariantList, getTemplates]);\n  useEffect(() => {\n    if (idealTemplate && !idealTemplate.html) {\n      getTemplateProperties(idealTemplate);\n    }\n  }, [idealTemplate, getTemplateProperties]);\n  useEffect(() => {\n    if (template) {\n      let newSize = getTemplateSizeModel(template, templateEle);\n\n      if (newSize) {\n        setSizeEditor({\n          size: newSize,\n          isEdited: false\n        });\n      }\n    }\n  }, [template, templateEle]);\n\n  const saveChanges = () => {\n    const newTemplate = createTemplate(template, listEditor, sizeEditor, !isOutdated);\n\n    if (onSave && newTemplate) {\n      onSave(newTemplate);\n      return true;\n    }\n\n    return false;\n  };\n\n  const updatePreivew = (newListEditor, newSizeEditor, oldListEditor) => {\n    const newTemplate = createTemplate(template, newListEditor, newSizeEditor, !isOutdated, oldListEditor);\n\n    if (onPreview && newTemplate) {\n      onPreview(newTemplate);\n    }\n  };\n\n  const handleBgChange = isDarkSelected => {\n    const isEdited = isOutdated && forAlertIcon ? Boolean(listEditor.variant) : true;\n    const newListEditor = { ...listEditor,\n      isDarkSelected,\n      isEdited\n    };\n    setListEditor(newListEditor);\n\n    if (isEdited) {\n      updatePreivew(newListEditor, sizeEditor, listEditor);\n    }\n  };\n\n  const handleVariantChange = (variant, isDarkSelected) => {\n    if (variant.html) {\n      const newListEditor = {\n        variant,\n        isDarkSelected,\n        isEdited: true\n      };\n      setListEditor(newListEditor);\n      updatePreivew(newListEditor, sizeEditor, listEditor);\n    }\n  };\n\n  const handleSizeChange = newSize => {\n    if (newSize) {\n      const newSizeEditor = {\n        size: newSize,\n        isEdited: true\n      };\n      setSizeEditor(newSizeEditor);\n      updatePreivew(listEditor, newSizeEditor);\n    }\n  };\n\n  const handleMoreClick = event => {\n    if (onMore) {\n      const options = new TemplatePanelOptions(template.templateType);\n      options.type = TemplatePanelTypes.Switchable;\n      options.isSummary = template.isSummary;\n      options.template = template;\n      onMore(options);\n    }\n  };\n\n  const handleSaveOnClose = event => {\n    const isSaved = saveChanges();\n\n    if (onClose) {\n      onClose(event, isSaved ? PanelCloseReasons.Close : PanelCloseReasons.Cancel);\n    }\n  };\n\n  if (!variantList || !variants) {\n    return null;\n  } else {\n    var _variantList$template;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-variants-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-variants-anchor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-variants-list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TemplatesPanelContext.Provider, {\n      value: {\n        onAddTemplateClick: handleVariantChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BlmVariantList, {\n      title: variantList.template.name,\n      data: variants,\n      size: size,\n      selectedVariant: variantList.selectedTemplate,\n      isBgChecked: isDarkTemplate,\n      show: true,\n      substitude: isOutdated && forAlertIcon ? (_variantList$template = variantList.template.substitue) === null || _variantList$template === void 0 ? void 0 : _variantList$template.template : undefined,\n      showWarning: isOutdated && forAlertIcon,\n      showMoreButton: isOutdated && forAlertIcon || variantList.template.switchable,\n      onBgChange: handleBgChange,\n      onMoreClick: handleMoreClick,\n      onCloseClick: handleSaveOnClose,\n      onChange: handleSizeChange,\n      element: element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }))));\n  }\n});\nexport default BlmTemplateVariants;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/template-editors/containers/template-variants/BlmTemplateVariants.tsx"],"names":["React","forwardRef","useEffect","useImperativeHandle","useMemo","useState","TemplatePanelOptions","PanelCloseReasons","TemplatePanelTypes","addClassToString","removeClassFromString","getTemplateAndVariant","TemplatesPanelContext","BlmVariantList","getTemplateSizeModel","setTemplateSizeHTML","changeTemplateVariant","initListEditor","isDarkSelected","isEdited","initSizeEditor","size","createTemplate","template","listEditor","sizeEditor","isRelative","oldListEditor","isDarkTemplate","id","templateId","newTemplate","isVariantChanged","variant","prevTemplateId","prevIsDarkTemplate","html","BlmTemplateVariants","props","ref","element","templates","templateEle","course","onPreview","onMore","onSave","onClose","getTemplates","getTemplateProperties","variantList","setVariantList","setListEditor","setSizeEditor","isOutdated","forAlertIcon","idealTemplate","variants","selectedTemplate","substitue","saveOnClose","handleSaveOnClose","revert","result","newSize","saveChanges","updatePreivew","newListEditor","newSizeEditor","handleBgChange","Boolean","handleVariantChange","handleSizeChange","handleMoreClick","event","options","templateType","type","Switchable","isSummary","isSaved","Close","Cancel","onAddTemplateClick","name","undefined","switchable"],"mappings":"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","sourcesContent":["import React, {\r\n  forwardRef,\r\n  MouseEvent,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport {\r\n  CourseElementTemplate,\r\n  Template,\r\n  TemplateBase,\r\n  TemplateSize,\r\n  TemplateEditorComponent,\r\n  CourseElement,\r\n  TemplatePanelOptions,\r\n} from \"types\";\r\nimport { PanelCloseReasons, TemplatePanelTypes } from \"editor-constants\";\r\nimport { addClassToString, removeClassFromString, getTemplateAndVariant } from \"utils\";\r\nimport {\r\n  TemplatesPanelContext,\r\n  BlmVariantList,\r\n  AddTemplateHandler,\r\n} from \"components/domain/templates-panel\";\r\nimport {\r\n  getTemplateSizeModel,\r\n  setTemplateSizeHTML,\r\n  changeTemplateVariant,\r\n} from \"template-builders\";\r\nimport { ContainerProps } from \"./template-variants-container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  element: CourseElement;\r\n  template: CourseElementTemplate;\r\n  templateEle: HTMLElement;\r\n  onPreview: (template: CourseElementTemplate) => void;\r\n  onMore: (options: TemplatePanelOptions) => void;\r\n  onSave: (template: CourseElementTemplate) => void;\r\n  onClose: (event: MouseEvent, reason: PanelCloseReasons) => void;\r\n}\r\n\r\ninterface ListEditorState {\r\n  variant?: TemplateBase;\r\n  isDarkSelected: boolean;\r\n  isEdited: boolean;\r\n}\r\n\r\ninterface SizeEditorState {\r\n  size: TemplateSize | null;\r\n  isEdited: boolean;\r\n}\r\n\r\ninterface ListState {\r\n  template: Template;\r\n  selectedTemplate: TemplateBase;\r\n}\r\n\r\nconst initListEditor = {\r\n  isDarkSelected: false,\r\n  isEdited: false,\r\n};\r\nconst initSizeEditor: SizeEditorState = { size: null, isEdited: false };\r\n\r\nconst createTemplate = (\r\n  template: CourseElementTemplate,\r\n  listEditor: ListEditorState,\r\n  sizeEditor: SizeEditorState,\r\n  isRelative = true,\r\n  oldListEditor?: ListEditorState\r\n) => {\r\n  const {\r\n    isDarkTemplate,\r\n    template: { id: templateId },\r\n  } = template;\r\n  let newTemplate: CourseElementTemplate = { ...template };\r\n  let isEdited = false;\r\n  let isVariantChanged = false;\r\n\r\n  if (listEditor.isEdited) {\r\n    const { variant, isDarkSelected } = listEditor;\r\n    const prevTemplateId = oldListEditor ? oldListEditor.variant?.id : templateId;\r\n    const prevIsDarkTemplate = oldListEditor ? oldListEditor.isDarkSelected : isDarkTemplate;\r\n\r\n    if (variant && variant.id !== prevTemplateId && variant.html) {\r\n      newTemplate = changeTemplateVariant(template, variant, isDarkSelected, isRelative);\r\n\r\n      isEdited = true;\r\n      isVariantChanged = true;\r\n    } else if (isDarkSelected !== prevIsDarkTemplate) {\r\n      if (isDarkSelected) {\r\n        newTemplate.html = addClassToString(newTemplate.html, [\"dark\"]);\r\n      } else {\r\n        newTemplate.html = removeClassFromString(newTemplate.html, [\"dark\"]);\r\n      }\r\n\r\n      newTemplate.isDarkTemplate = isDarkSelected;\r\n\r\n      isEdited = true;\r\n    }\r\n  }\r\n\r\n  if (sizeEditor.size && (sizeEditor.isEdited || isVariantChanged)) {\r\n    newTemplate.html = setTemplateSizeHTML(newTemplate, sizeEditor.size);\r\n\r\n    isEdited = true;\r\n  }\r\n\r\n  if (isEdited) {\r\n    return newTemplate;\r\n  }\r\n};\r\n\r\nconst BlmTemplateVariants = forwardRef<TemplateEditorComponent, CompProps>((props, ref) => {\r\n  const {\r\n    element,\r\n    template,\r\n    templates,\r\n    templateEle,\r\n    course,\r\n    onPreview,\r\n    onMore,\r\n    onSave,\r\n    onClose,\r\n    getTemplates,\r\n    getTemplateProperties,\r\n  } = props;\r\n  const [variantList, setVariantList] = useState<ListState>();\r\n  const [listEditor, setListEditor] = useState<ListEditorState>(initListEditor);\r\n  const [sizeEditor, setSizeEditor] = useState<SizeEditorState>(initSizeEditor);\r\n  const { size, isEdited } = sizeEditor;\r\n  const { isOutdated, forAlertIcon } = element;\r\n  const { isDarkTemplate } = template;\r\n\r\n  const [idealTemplate, variants] = useMemo(() => {\r\n    if (variantList) {\r\n      const { template, selectedTemplate } = variantList;\r\n\r\n      if (isOutdated && forAlertIcon) {\r\n        return [template.substitue?.template, [selectedTemplate]];\r\n      } else {\r\n        return [template, [template, ...template.variants]];\r\n      }\r\n    }\r\n\r\n    return [];\r\n  }, [variantList, isOutdated, forAlertIcon]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    isEdited: isEdited || listEditor.isEdited,\r\n    saveOnClose: handleSaveOnClose,\r\n    revert: () => {},\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (!templates && course) {\r\n      getTemplates(course);\r\n    } else if (templates) {\r\n      const result = getTemplateAndVariant(templates, template.template.id);\r\n\r\n      if (result) {\r\n        setVariantList({\r\n          template: result.template,\r\n          selectedTemplate: result.variant ?? result.template,\r\n        });\r\n      }\r\n    }\r\n  }, [template, course, templates, setVariantList, getTemplates]);\r\n\r\n  useEffect(() => {\r\n    if (idealTemplate && !idealTemplate.html) {\r\n      getTemplateProperties(idealTemplate);\r\n    }\r\n  }, [idealTemplate, getTemplateProperties]);\r\n\r\n  useEffect(() => {\r\n    if (template) {\r\n      let newSize = getTemplateSizeModel(template, templateEle);\r\n\r\n      if (newSize) {\r\n        setSizeEditor({ size: newSize, isEdited: false });\r\n      }\r\n    }\r\n  }, [template, templateEle]);\r\n\r\n  const saveChanges = () => {\r\n    const newTemplate = createTemplate(template, listEditor, sizeEditor, !isOutdated);\r\n\r\n    if (onSave && newTemplate) {\r\n      onSave(newTemplate);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const updatePreivew = (\r\n    newListEditor: ListEditorState,\r\n    newSizeEditor: SizeEditorState,\r\n    oldListEditor?: ListEditorState\r\n  ) => {\r\n    const newTemplate = createTemplate(\r\n      template,\r\n      newListEditor,\r\n      newSizeEditor,\r\n      !isOutdated,\r\n      oldListEditor\r\n    );\r\n\r\n    if (onPreview && newTemplate) {\r\n      onPreview(newTemplate);\r\n    }\r\n  };\r\n\r\n  const handleBgChange = (isDarkSelected: boolean) => {\r\n    const isEdited = isOutdated && forAlertIcon ? Boolean(listEditor.variant) : true;\r\n    const newListEditor = { ...listEditor, isDarkSelected, isEdited };\r\n\r\n    setListEditor(newListEditor);\r\n\r\n    if (isEdited) {\r\n      updatePreivew(newListEditor, sizeEditor, listEditor);\r\n    }\r\n  };\r\n\r\n  const handleVariantChange: AddTemplateHandler = (variant, isDarkSelected) => {\r\n    if (variant.html) {\r\n      const newListEditor = { variant, isDarkSelected, isEdited: true };\r\n\r\n      setListEditor(newListEditor);\r\n      updatePreivew(newListEditor, sizeEditor, listEditor);\r\n    }\r\n  };\r\n\r\n  const handleSizeChange = (newSize: TemplateSize) => {\r\n    if (newSize) {\r\n      const newSizeEditor = { size: newSize, isEdited: true };\r\n\r\n      setSizeEditor(newSizeEditor);\r\n      updatePreivew(listEditor, newSizeEditor);\r\n    }\r\n  };\r\n\r\n  const handleMoreClick = (event: MouseEvent) => {\r\n    if (onMore) {\r\n      const options = new TemplatePanelOptions(template.templateType);\r\n      options.type = TemplatePanelTypes.Switchable;\r\n      options.isSummary = template.isSummary;\r\n      options.template = template;\r\n\r\n      onMore(options);\r\n    }\r\n  };\r\n\r\n  const handleSaveOnClose = (event: MouseEvent) => {\r\n    const isSaved = saveChanges();\r\n\r\n    if (onClose) {\r\n      onClose(event, isSaved ? PanelCloseReasons.Close : PanelCloseReasons.Cancel);\r\n    }\r\n  };\r\n\r\n  if (!variantList || !variants) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <div className=\"template-variants-panel\">\r\n        <div className=\"template-variants-anchor\" />\r\n        <div className=\"template-variants-list-wrapper\">\r\n          <TemplatesPanelContext.Provider\r\n            value={{\r\n              onAddTemplateClick: handleVariantChange,\r\n            }}\r\n          >\r\n            <BlmVariantList\r\n              title={variantList.template.name}\r\n              data={variants}\r\n              size={size}\r\n              selectedVariant={variantList.selectedTemplate}\r\n              isBgChecked={isDarkTemplate}\r\n              show={true}\r\n              substitude={\r\n                isOutdated && forAlertIcon ? variantList.template.substitue?.template : undefined\r\n              }\r\n              showWarning={isOutdated && forAlertIcon}\r\n              showMoreButton={(isOutdated && forAlertIcon) || variantList.template.switchable}\r\n              onBgChange={handleBgChange}\r\n              onMoreClick={handleMoreClick}\r\n              onCloseClick={handleSaveOnClose}\r\n              onChange={handleSizeChange}\r\n              element={element}\r\n            />\r\n          </TemplatesPanelContext.Provider>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n});\r\n\r\nexport default BlmTemplateVariants;\r\n"]},"metadata":{},"sourceType":"module"}