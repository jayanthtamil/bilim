{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\media\\\\hotspot\\\\group\\\\BlmHotspotGroupsEditor.tsx\";\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Drawer } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { MediaHotspotGroupItem } from \"types\";\nimport { StyleListTypes } from \"editor-constants\";\nimport { createShortUUID, getRandomColor, removeObject, reorderArray, updateObject, validateHotspotGroups } from \"utils\";\nimport { BlmStylePicker } from \"../../../styles\";\nimport BlmHotspotGroupCard from \"./card\";\nimport \"./styles.scss\";\n\nconst getDraggableStyle = draggableStyle => ({\n  userSelect: \"none\",\n  ...draggableStyle\n});\n\nfunction BlmHotspotGroupsEditor(props) {\n  const {\n    data,\n    onSave,\n    onClose,\n    openDialog,\n    openConfirmDialog\n  } = props;\n  const [state, setState] = useState({\n    hotspot: data,\n    isEdited: false\n  });\n  const {\n    hotspot,\n    isEdited\n  } = state;\n  const {\n    groups\n  } = hotspot;\n  const {\n    items,\n    style\n  } = groups;\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  const validateGroups = callback => {\n    try {\n      validateHotspotGroups(groups);\n    } catch (error) {\n      if (openDialog) {\n        openDialog(`${t(\"alert.warning\")}`, error.message);\n      }\n\n      return;\n    }\n\n    callback();\n  };\n\n  const saveChanges = () => {\n    if (onSave) {\n      onSave(hotspot);\n    }\n  };\n\n  const updateChange = newGroups => {\n    setState({\n      hotspot: { ...hotspot,\n        groups: newGroups\n      },\n      isEdited: true\n    });\n  };\n\n  const updateItems = newItems => {\n    updateChange({ ...groups,\n      items: newItems\n    });\n  };\n\n  const handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    const newGroups = { ...groups\n    };\n\n    if (name === \"style\") {\n      newGroups[name] = value;\n    }\n\n    updateChange(newGroups);\n  };\n\n  const handleItemChange = item => {\n    const newItems = updateObject(items, \"id\", item.id, item);\n    updateItems(newItems);\n  };\n\n  const handleItemDelete = item => {\n    const newItems = removeObject(items, item);\n    updateItems(newItems);\n  };\n\n  const handleAddClick = () => {\n    const id = createShortUUID();\n    const name = `Group ${items.length + 1}`;\n    const color = getRandomColor();\n    const item = new MediaHotspotGroupItem(id, name, color);\n    updateItems([...items, item]);\n  };\n\n  const handleDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    const newItems = reorderArray(items, result.source.index, result.destination.index);\n    updateItems(newItems);\n  };\n\n  const handleSave = event => {\n    validateGroups(() => {\n      if (isEdited) {\n        saveChanges();\n      }\n\n      handleClose(event);\n    });\n  };\n\n  const openSaveConfirmDialog = () => {\n    const onOk = event => {\n      handleSave(event);\n    };\n\n    const onCancel = event => {\n      handleClose(event);\n    };\n\n    const options = {\n      className: \"template-editor-warning-dialog\",\n      okLabel: `${t(\"button.save\")}`,\n      cancelLabel: `${t(\"button.cancel\")}`\n    };\n    openConfirmDialog(`${t(\"alert.cancel_confirm\")}`, `${t(\"alert.save_all_changes\")}`, onOk, onCancel, options);\n  };\n\n  const handleDrawerClose = event => {\n    if (isEdited) {\n      openSaveConfirmDialog();\n    } else {\n      handleClose(event);\n    }\n  };\n\n  const handleClose = event => {\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    className: \"hotspot-groups-editor-drawer\",\n    open: true,\n    onClose: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspot-groups-editor-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspot-groups-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, t(\"hotspot.group_list\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspot-groups-style-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, t(\"title.style\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspot-groups-list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspot-groups-list-scroller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"droppable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: provided.innerRef,\n    className: \"hotspot-groups-list\"\n  }, provided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }), items.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n    key: item.id,\n    draggableId: item.id,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 23\n    }\n  }, (providedItem, snapshot) => {\n    return /*#__PURE__*/React.createElement(BlmHotspotGroupCard, Object.assign({\n      ref: providedItem.innerRef,\n      key: item.id,\n      data: item,\n      showDelete: items.length > 2,\n      drag: providedItem.dragHandleProps,\n      style: getDraggableStyle(providedItem.draggableProps.style),\n      className: clsx({\n        dragging: snapshot.isDragging\n      }),\n      onChange: handleItemChange,\n      onDelete: handleItemDelete\n    }, providedItem.draggableProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }));\n  })), provided.placeholder)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspot-groups-add-btn\",\n    onClick: handleAddClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(BlmStylePicker, {\n    type: StyleListTypes.MediaHotspotGroup,\n    name: \"style\",\n    value: style,\n    showApplyStyle: false,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspot-groups-save-btn\",\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, t(\"button.save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotspot-groups-cancel-btn\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, t(\"button.cancel\"))));\n}\n\nexport default BlmHotspotGroupsEditor;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/media/hotspot/group/BlmHotspotGroupsEditor.tsx"],"names":["React","useState","clsx","DragDropContext","Draggable","Droppable","Drawer","useTranslation","MediaHotspotGroupItem","StyleListTypes","createShortUUID","getRandomColor","removeObject","reorderArray","updateObject","validateHotspotGroups","BlmStylePicker","BlmHotspotGroupCard","getDraggableStyle","draggableStyle","userSelect","BlmHotspotGroupsEditor","props","data","onSave","onClose","openDialog","openConfirmDialog","state","setState","hotspot","isEdited","groups","items","style","t","validateGroups","callback","error","message","saveChanges","updateChange","newGroups","updateItems","newItems","handleChange","event","target","name","value","handleItemChange","item","id","handleItemDelete","handleAddClick","length","color","handleDragEnd","result","destination","source","index","handleSave","handleClose","openSaveConfirmDialog","onOk","onCancel","options","className","okLabel","cancelLabel","handleDrawerClose","provided","innerRef","droppableProps","map","providedItem","snapshot","dragHandleProps","draggableProps","dragging","isDragging","placeholder","MediaHotspotGroup"],"mappings":"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","sourcesContent":["import React, { MouseEvent, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { DragDropContext, Draggable, Droppable, DropResult } from \"react-beautiful-dnd\";\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomChangeEvent, MediaHotspot, MediaHotspotGroupItem, MediaHotspotGroups } from \"types\";\r\nimport { StyleListTypes } from \"editor-constants\";\r\nimport {\r\n  createShortUUID,\r\n  getRandomColor,\r\n  removeObject,\r\n  reorderArray,\r\n  updateObject,\r\n  validateHotspotGroups,\r\n} from \"utils\";\r\nimport { BlmStylePicker } from \"../../../styles\";\r\nimport BlmHotspotGroupCard from \"./card\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  data: MediaHotspot;\r\n  onSave?: (data: MediaHotspot) => void;\r\n  onClose?: (event: MouseEvent) => void;\r\n}\r\n\r\nconst getDraggableStyle = (draggableStyle: any) => ({\r\n  userSelect: \"none\",\r\n  ...draggableStyle,\r\n});\r\n\r\nfunction BlmHotspotGroupsEditor(props: CompProps) {\r\n  const { data, onSave, onClose, openDialog, openConfirmDialog } = props;\r\n  const [state, setState] = useState({ hotspot: data, isEdited: false });\r\n  const { hotspot, isEdited } = state;\r\n  const { groups } = hotspot;\r\n  const { items, style } = groups;\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const validateGroups = (callback: Function) => {\r\n    try {\r\n      validateHotspotGroups(groups);\r\n    } catch (error) {\r\n      if (openDialog) {\r\n        openDialog(`${t(\"alert.warning\")}`, (error as Error).message);\r\n      }\r\n      return;\r\n    }\r\n\r\n    callback();\r\n  };\r\n\r\n  const saveChanges = () => {\r\n    if (onSave) {\r\n      onSave(hotspot);\r\n    }\r\n  };\r\n\r\n  const updateChange = (newGroups: MediaHotspotGroups) => {\r\n    setState({ hotspot: { ...hotspot, groups: newGroups }, isEdited: true });\r\n  };\r\n\r\n  const updateItems = (newItems: MediaHotspotGroupItem[]) => {\r\n    updateChange({ ...groups, items: newItems });\r\n  };\r\n\r\n  const handleChange = (event: CustomChangeEvent<string>) => {\r\n    const target = event.target;\r\n    const name = target.name as string;\r\n    const value = target.value;\r\n    const newGroups = { ...groups };\r\n\r\n    if (name === \"style\") {\r\n      newGroups[name] = value;\r\n    }\r\n\r\n    updateChange(newGroups);\r\n  };\r\n\r\n  const handleItemChange = (item: MediaHotspotGroupItem) => {\r\n    const newItems = updateObject(items, \"id\", item.id, item);\r\n\r\n    updateItems(newItems);\r\n  };\r\n\r\n  const handleItemDelete = (item: MediaHotspotGroupItem) => {\r\n    const newItems = removeObject(items, item);\r\n\r\n    updateItems(newItems);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    const id = createShortUUID();\r\n    const name = `Group ${items.length + 1}`;\r\n    const color = getRandomColor();\r\n    const item = new MediaHotspotGroupItem(id, name, color);\r\n\r\n    updateItems([...items, item]);\r\n  };\r\n\r\n  const handleDragEnd = (result: DropResult) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const newItems = reorderArray(items, result.source.index, result.destination.index);\r\n\r\n    updateItems(newItems);\r\n  };\r\n\r\n  const handleSave = (event: MouseEvent) => {\r\n    validateGroups(() => {\r\n      if (isEdited) {\r\n        saveChanges();\r\n      }\r\n\r\n      handleClose(event);\r\n    });\r\n  };\r\n\r\n  const openSaveConfirmDialog = () => {\r\n    const onOk = (event: MouseEvent) => {\r\n      handleSave(event);\r\n    };\r\n    const onCancel = (event: MouseEvent) => {\r\n      handleClose(event);\r\n    };\r\n    const options = {\r\n      className: \"template-editor-warning-dialog\",\r\n      okLabel: `${t(\"button.save\")}`,\r\n      cancelLabel: `${t(\"button.cancel\")}`,\r\n    };\r\n\r\n    openConfirmDialog(\r\n      `${t(\"alert.cancel_confirm\")}`,\r\n      `${t(\"alert.save_all_changes\")}`,\r\n      onOk,\r\n      onCancel,\r\n      options\r\n    );\r\n  };\r\n\r\n  const handleDrawerClose = (event: any) => {\r\n    if (isEdited) {\r\n      openSaveConfirmDialog();\r\n    } else {\r\n      handleClose(event);\r\n    }\r\n  };\r\n\r\n  const handleClose = (event: MouseEvent) => {\r\n    if (onClose) {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer className=\"hotspot-groups-editor-drawer\" open={true} onClose={handleDrawerClose}>\r\n      <div className=\"hotspot-groups-editor-wrapper\">\r\n        <div className=\"hotspot-groups-title\">{t(\"hotspot.group_list\")}</div>\r\n        <div className=\"hotspot-groups-style-title\">{t(\"title.style\")}</div>\r\n        <div className=\"hotspot-groups-list-wrapper\">\r\n          <div className=\"hotspot-groups-list-scroller\">\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n              <Droppable droppableId=\"droppable\">\r\n                {(provided) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    className=\"hotspot-groups-list\"\r\n                    {...provided.droppableProps}\r\n                  >\r\n                    {items.map((item, index) => (\r\n                      <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                        {(providedItem, snapshot) => {\r\n                          return (\r\n                            <BlmHotspotGroupCard\r\n                              ref={providedItem.innerRef}\r\n                              key={item.id}\r\n                              data={item}\r\n                              showDelete={items.length > 2}\r\n                              drag={providedItem.dragHandleProps}\r\n                              style={getDraggableStyle(providedItem.draggableProps.style)}\r\n                              className={clsx({ dragging: snapshot.isDragging })}\r\n                              onChange={handleItemChange}\r\n                              onDelete={handleItemDelete}\r\n                              {...providedItem.draggableProps}\r\n                            />\r\n                          );\r\n                        }}\r\n                      </Draggable>\r\n                    ))}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          </div>\r\n          <div className=\"hotspot-groups-add-btn\" onClick={handleAddClick} />\r\n        </div>\r\n        <BlmStylePicker\r\n          type={StyleListTypes.MediaHotspotGroup}\r\n          name=\"style\"\r\n          value={style}\r\n          showApplyStyle={false}\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"hotspot-groups-save-btn\" onClick={handleSave}>\r\n          {t(\"button.save\")}\r\n        </div>\r\n        <div className=\"hotspot-groups-cancel-btn\" onClick={handleClose}>\r\n          {t(\"button.cancel\")}\r\n        </div>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default BlmHotspotGroupsEditor;\r\n"]},"metadata":{},"sourceType":"module"}