{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\repository\\\\repeater-list\\\\options\\\\BlmRepeaterOptionsEditor.tsx\";\nimport React, { useState } from \"react\";\nimport { Drawer } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { toNumber } from \"utils\";\nimport { BlmNumericInput } from \"shared\";\nimport \"./styles.scss\";\n\nfunction BlmRepeaterOptionsEditor(props) {\n  const {\n    data,\n    onSave,\n    onClose,\n    openConfirmDialog\n  } = props;\n  const [state, setState] = useState({\n    repeater: data,\n    isEdited: false\n  });\n  const {\n    repeater,\n    isEdited\n  } = state;\n  const {\n    options,\n    variables\n  } = repeater;\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  const saveChanges = () => {\n    if (onSave) {\n      onSave(repeater);\n    }\n  };\n\n  const updateChange = newRepeater => {\n    setState({\n      repeater: newRepeater,\n      isEdited: true\n    });\n  };\n\n  const handleChange = event => {\n    const target = event.target;\n    const {\n      name,\n      value\n    } = target;\n    const newRepeater = { ...repeater,\n      variables: { ...repeater.variables,\n        [name]: value.toString()\n      }\n    };\n    updateChange(newRepeater);\n  };\n\n  const handleSave = event => {\n    if (isEdited) {\n      saveChanges();\n    }\n\n    handleClose(event);\n  };\n\n  const openSaveConfirmDialog = () => {\n    const onOk = event => {\n      handleSave(event);\n    };\n\n    const onCancel = event => {\n      handleClose(event);\n    };\n\n    const options = {\n      className: \"template-editor-warning-dialog\",\n      okLabel: `${t(\"button.save\")}`,\n      cancelLabel: `${t(\"button.cancel\")}`\n    };\n    openConfirmDialog(`${t(\"alert.cancel_confirm\")}`, `${t(\"alert.save_all_changes\")}`, onOk, onCancel, options);\n  };\n\n  const handleDrawerClose = event => {\n    if (isEdited) {\n      openSaveConfirmDialog();\n    } else {\n      handleClose(event);\n    }\n  };\n\n  const handleClose = event => {\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  const renderItems = () => {\n    if (options) {\n      return Object.values(options).map(option => {\n        const {\n          label,\n          css_variable,\n          min,\n          max\n        } = option;\n        const value = toNumber(variables === null || variables === void 0 ? void 0 : variables[css_variable]);\n\n        if (value !== undefined) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: css_variable,\n            className: \"repeater-option-item-wrapper\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"repeater-option-item-lbl\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }\n          }, label), /*#__PURE__*/React.createElement(BlmNumericInput, {\n            name: css_variable,\n            value: value,\n            min: min,\n            max: max,\n            className: \"repeater-option-item-txt\",\n            onChange: handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }\n          }));\n        }\n\n        return undefined;\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    className: \"repeater-options-editor-drawer\",\n    open: true,\n    onClose: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"repeater-options-editor-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"repeater-options-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"repeater-options-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, t(\"repeater_option.repeater_options\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"repeater-options-close-btn\",\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"repeater-display-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, renderItems())));\n}\n\nexport default BlmRepeaterOptionsEditor;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/repository/repeater-list/options/BlmRepeaterOptionsEditor.tsx"],"names":["React","useState","Drawer","useTranslation","toNumber","BlmNumericInput","BlmRepeaterOptionsEditor","props","data","onSave","onClose","openConfirmDialog","state","setState","repeater","isEdited","options","variables","t","saveChanges","updateChange","newRepeater","handleChange","event","target","name","value","toString","handleSave","handleClose","openSaveConfirmDialog","onOk","onCancel","className","okLabel","cancelLabel","handleDrawerClose","renderItems","Object","values","map","option","label","css_variable","min","max","undefined"],"mappings":"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","sourcesContent":["import React, { MouseEvent, useState } from \"react\";\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { RepeaterComponent } from \"types\";\r\nimport { toNumber } from \"utils\";\r\nimport { BlmNumericInput, NumericInputChangeEvent } from \"shared\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  data: RepeaterComponent;\r\n  onSave?: (data: RepeaterComponent) => void;\r\n  onClose?: (event: MouseEvent) => void;\r\n}\r\n\r\nfunction BlmRepeaterOptionsEditor(props: CompProps) {\r\n  const { data, onSave, onClose, openConfirmDialog } = props;\r\n  const [state, setState] = useState({ repeater: data, isEdited: false });\r\n  const { repeater, isEdited } = state;\r\n  const { options, variables } = repeater;\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const saveChanges = () => {\r\n    if (onSave) {\r\n      onSave(repeater);\r\n    }\r\n  };\r\n\r\n  const updateChange = (newRepeater: RepeaterComponent) => {\r\n    setState({ repeater: newRepeater, isEdited: true });\r\n  };\r\n\r\n  const handleChange = (event: NumericInputChangeEvent) => {\r\n    const target = event.target;\r\n    const { name, value } = target;\r\n\r\n    const newRepeater = {\r\n      ...repeater,\r\n      variables: { ...repeater.variables, [name]: value.toString() },\r\n    };\r\n\r\n    updateChange(newRepeater);\r\n  };\r\n\r\n  const handleSave = (event: MouseEvent) => {\r\n    if (isEdited) {\r\n      saveChanges();\r\n    }\r\n\r\n    handleClose(event);\r\n  };\r\n\r\n  const openSaveConfirmDialog = () => {\r\n    const onOk = (event: MouseEvent) => {\r\n      handleSave(event);\r\n    };\r\n    const onCancel = (event: MouseEvent) => {\r\n      handleClose(event);\r\n    };\r\n    const options = {\r\n      className: \"template-editor-warning-dialog\",\r\n      okLabel: `${t(\"button.save\")}`,\r\n      cancelLabel: `${t(\"button.cancel\")}`,\r\n    };\r\n\r\n    openConfirmDialog(\r\n      `${t(\"alert.cancel_confirm\")}`,\r\n      `${t(\"alert.save_all_changes\")}`,\r\n      onOk,\r\n      onCancel,\r\n      options\r\n    );\r\n  };\r\n\r\n  const handleDrawerClose = (event: any) => {\r\n    if (isEdited) {\r\n      openSaveConfirmDialog();\r\n    } else {\r\n      handleClose(event);\r\n    }\r\n  };\r\n\r\n  const handleClose = (event: MouseEvent) => {\r\n    if (onClose) {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n  const renderItems = () => {\r\n    if (options) {\r\n      return Object.values(options).map((option) => {\r\n        const { label, css_variable, min, max } = option;\r\n        const value = toNumber(variables?.[css_variable] as string);\r\n\r\n        if (value !== undefined) {\r\n          return (\r\n            <div key={css_variable} className=\"repeater-option-item-wrapper\">\r\n              <div className=\"repeater-option-item-lbl\">{label}</div>\r\n              <BlmNumericInput\r\n                name={css_variable}\r\n                value={value}\r\n                min={min}\r\n                max={max}\r\n                className=\"repeater-option-item-txt\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          );\r\n        }\r\n\r\n        return undefined;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer className=\"repeater-options-editor-drawer\" open={true} onClose={handleDrawerClose}>\r\n      <div className=\"repeater-options-editor-wrapper\">\r\n        <div className=\"repeater-options-header\">\r\n          <div className=\"repeater-options-title\">{t(\"repeater_option.repeater_options\")}</div>\r\n          <div className=\"repeater-options-close-btn\" onClick={handleSave} />\r\n        </div>\r\n        <div className=\"repeater-display-content\">{renderItems()}</div>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default BlmRepeaterOptionsEditor;\r\n"]},"metadata":{},"sourceType":"module"}