{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\shared\\\\position\\\\BlmPosition.tsx\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { Positions, MediaPosition, MediaBackgroundPosition } from \"editor-constants\";\nimport \"./styles.scss\";\n\nfunction BlmPosition(props) {\n  const {\n    name,\n    type,\n    value,\n    media,\n    onChange\n  } = props;\n\n  const getAllPosition = media => {\n    if (media === \"media-item\") {\n      return Object.values(MediaPosition);\n    } else if (media === \"background-media-item\") {\n      return Object.values(MediaBackgroundPosition);\n    } else {\n      return Object.values(Positions);\n    }\n  };\n\n  const ALL_POSITIONS = getAllPosition(media);\n  const LIMITED_POSITIONS = [Positions.Top, Positions.Right, Positions.Bottom, Positions.Left];\n  const items = type === \"limited\" ? LIMITED_POSITIONS : ALL_POSITIONS;\n\n  const handleClick = position => {\n    if (onChange) {\n      onChange({\n        target: {\n          name,\n          value: position\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"position-wrapper\", type, value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item,\n    className: clsx(\"position-item\", item, {\n      selected: item === value\n    }),\n    onClick: () => handleClick(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default BlmPosition;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/shared/position/BlmPosition.tsx"],"names":["React","clsx","Positions","MediaPosition","MediaBackgroundPosition","BlmPosition","props","name","type","value","media","onChange","getAllPosition","Object","values","ALL_POSITIONS","LIMITED_POSITIONS","Top","Right","Bottom","Left","items","handleClick","position","target","map","item","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,uBAAnC,QAAkE,kBAAlE;AACA,OAAO,eAAP;;AAcA,SAASC,WAAT,CAAqBC,KAArB,EAAuC;AACrC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,MAAyCL,KAA/C;;AAEA,QAAMM,cAAc,GAAIF,KAAD,IAA+B;AACpD,QAAIA,KAAK,KAAK,YAAd,EAA4B;AAC1B,aAAOG,MAAM,CAACC,MAAP,CAAcX,aAAd,CAAP;AACD,KAFD,MAEO,IAAIO,KAAK,KAAK,uBAAd,EAAuC;AAC5C,aAAOG,MAAM,CAACC,MAAP,CAAcV,uBAAd,CAAP;AACD,KAFM,MAEA;AACL,aAAOS,MAAM,CAACC,MAAP,CAAcZ,SAAd,CAAP;AACD;AACF,GARD;;AAUA,QAAMa,aAAa,GAAGH,cAAc,CAACF,KAAD,CAApC;AAEA,QAAMM,iBAAiB,GAAG,CAACd,SAAS,CAACe,GAAX,EAAgBf,SAAS,CAACgB,KAA1B,EAAiChB,SAAS,CAACiB,MAA3C,EAAmDjB,SAAS,CAACkB,IAA7D,CAA1B;AAEA,QAAMC,KAAK,GAAGb,IAAI,KAAK,SAAT,GAAqBQ,iBAArB,GAAyCD,aAAvD;;AAEA,QAAMO,WAAW,GAAIC,QAAD,IAAmE;AACrF,QAAIZ,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,MAAM,EAAE;AAAEjB,UAAAA,IAAF;AAAQE,UAAAA,KAAK,EAAEc;AAAf;AAAV,OAAD,CAAR;AACD;AACF,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEtB,IAAI,CAAC,kBAAD,EAAqBO,IAArB,EAA2BC,KAA3B,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIY,KAAD,CAAsEI,GAAtE,CAA2EC,IAAD,iBACzE;AACE,IAAA,GAAG,EAAEA,IADP;AAEE,IAAA,SAAS,EAAEzB,IAAI,CAAC,eAAD,EAAkByB,IAAlB,EAAwB;AAAEC,MAAAA,QAAQ,EAAED,IAAI,KAAKjB;AAArB,KAAxB,CAFjB;AAGE,IAAA,OAAO,EAAE,MAAMa,WAAW,CAACI,IAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAWD;;AAED,eAAerB,WAAf","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { CustomChangeEvent } from \"types\";\r\nimport { Positions, MediaPosition, MediaBackgroundPosition } from \"editor-constants\";\r\nimport \"./styles.scss\";\r\n\r\nexport type PositionChangeEvent = CustomChangeEvent<\r\n  Positions | MediaPosition | MediaBackgroundPosition\r\n>;\r\n\r\nexport interface CompProps {\r\n  name: string;\r\n  type?: \"standard\" | \"limited\";\r\n  value?: Positions | MediaPosition | MediaBackgroundPosition;\r\n  media?: string;\r\n  onChange?: (event: PositionChangeEvent) => void;\r\n}\r\n\r\nfunction BlmPosition(props: CompProps) {\r\n  const { name, type, value, media, onChange } = props;\r\n\r\n  const getAllPosition = (media: string | undefined) => {\r\n    if (media === \"media-item\") {\r\n      return Object.values(MediaPosition);\r\n    } else if (media === \"background-media-item\") {\r\n      return Object.values(MediaBackgroundPosition);\r\n    } else {\r\n      return Object.values(Positions);\r\n    }\r\n  };\r\n\r\n  const ALL_POSITIONS = getAllPosition(media);\r\n\r\n  const LIMITED_POSITIONS = [Positions.Top, Positions.Right, Positions.Bottom, Positions.Left];\r\n\r\n  const items = type === \"limited\" ? LIMITED_POSITIONS : ALL_POSITIONS;\r\n\r\n  const handleClick = (position: Positions | MediaPosition | MediaBackgroundPosition) => {\r\n    if (onChange) {\r\n      onChange({ target: { name, value: position } });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(\"position-wrapper\", type, value)}>\r\n      {(items as Array<MediaPosition | Positions | MediaBackgroundPosition>).map((item) => (\r\n        <div\r\n          key={item}\r\n          className={clsx(\"position-item\", item, { selected: item === value })}\r\n          onClick={() => handleClick(item)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmPosition;\r\n"]},"metadata":{},"sourceType":"module"}