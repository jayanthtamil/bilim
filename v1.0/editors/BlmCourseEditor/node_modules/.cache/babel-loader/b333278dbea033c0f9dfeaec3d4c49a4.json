{"ast":null,"code":"import { ElementType, QuestionIntroductionTypes, TemplateEditorOptionTypes } from \"editor-constants\";\nimport { addClassToString, filterDuplicates, filterFalsy, getRepeaterComponents, isButtonComponent, isGotoAction, isMediaButton, isMediaComponent, isMediaFlipCard, isMediaHotspot, isMediaHotspot360, isMediaSlideshow, isMediaSynchroVideo, isMediaTarget, isPopoverAction, isQuestionPropositions, isReplaceTargetAction, isSimpleContentAction } from \"utils\";\nexport const createElementTemplateHTML = (template, isDarkSeleted, type) => {\n  const clsList = [];\n\n  if (isDarkSeleted) {\n    clsList.push(\"dark\");\n  }\n\n  if (type === ElementType.PartPage || type === ElementType.SimplePartPage) {\n    clsList.push(ElementType.PartPage);\n  } else if (type === ElementType.Screen || type === ElementType.Question || type === ElementType.SimpleContent) {\n    clsList.push(ElementType.Screen);\n  }\n\n  return clsList.length ? addClassToString(template, clsList) : template;\n};\nexport function getTemplateHTMLJSON(template) {\n  const {\n    options,\n    htmlJSON\n  } = template;\n\n  if (options) {\n    return { ...htmlJSON,\n      linkedElements: { ...(htmlJSON === null || htmlJSON === void 0 ? void 0 : htmlJSON.linkedElements),\n        actions: getActionLinkedIds(options)\n      }\n    };\n  }\n\n  return htmlJSON;\n}\n\nfunction getActionLinkedIds(options) {\n  var _options$onload, _options$oncomplete;\n\n  const ids = [];\n  ids.push(...getActionIds(options === null || options === void 0 ? void 0 : (_options$onload = options.onload) === null || _options$onload === void 0 ? void 0 : _options$onload.opensimplecontent));\n  ids.push(...getActionIds(options === null || options === void 0 ? void 0 : (_options$oncomplete = options.oncomplete) === null || _options$oncomplete === void 0 ? void 0 : _options$oncomplete.opensimplecontent));\n  return filterFalsy(ids);\n}\n\nfunction getActionIds(action) {\n  const ids = [];\n\n  if (action === null || action === void 0 ? void 0 : action.checked) {\n    ids.push(action.id);\n  }\n\n  return filterDuplicates(filterFalsy(ids));\n}\n\nexport function getContentHTMLJSON(template, content) {\n  const {\n    htmlJSON\n  } = template;\n  return { ...htmlJSON,\n    linkedElements: { ...(htmlJSON === null || htmlJSON === void 0 ? void 0 : htmlJSON.linkedElements),\n      components: getContentLinkedIds(content)\n    }\n  };\n}\n\nfunction getContentLinkedIds(content) {\n  const {\n    medias,\n    buttons,\n    repeater\n  } = content;\n  const arr = [...medias, ...buttons, ...getRepeaterComponents(repeater === null || repeater === void 0 ? void 0 : repeater.medias), ...getRepeaterComponents(repeater === null || repeater === void 0 ? void 0 : repeater.buttons)];\n  const ids = [];\n  arr.forEach(component => {\n    if (isMediaComponent(component)) {\n      if (isMediaButton(component)) {\n        ids.push(...getComponentActionIds(component.value.clickAction));\n        ids.push(...getComponentActionIds(component.value.overAction));\n      } else if (isMediaFlipCard(component)) {\n        ids.push(...getComponentActionIds(component.value.clickAction));\n        ids.push(...getComponentActionIds(component.value.overAction));\n      } else if (isMediaSlideshow(component)) {\n        component.value.items.forEach(item => {\n          ids.push(...getComponentActionIds(item.clickAction));\n        });\n      } else if (isMediaTarget(component)) {\n        ids.push(component.value.template);\n      } else if (isMediaSynchroVideo(component)) {\n        var _component$value$cont;\n\n        (_component$value$cont = component.value.contents) === null || _component$value$cont === void 0 ? void 0 : _component$value$cont.forEach(item => {\n          ids.push(item.content);\n        });\n      } else if (isMediaHotspot(component)) {\n        component.value.items.forEach(item => {\n          ids.push(...getComponentActionIds(item.clickAction));\n          ids.push(...getComponentActionIds(item.overAction));\n        });\n      } else if (isMediaHotspot360(component)) {\n        component.value.items.forEach(item => {\n          item.items.forEach(item2 => {\n            ids.push(...getComponentActionIds(item2.clickAction));\n            ids.push(...getComponentActionIds(item2.overAction));\n          });\n        });\n      }\n    } else if (isButtonComponent(component)) {\n      ids.push(...getComponentActionIds(component.value.clickAction));\n      ids.push(...getComponentActionIds(component.value.overAction));\n    }\n  });\n  return filterDuplicates(filterFalsy(ids));\n}\n\nfunction getComponentActionIds(action) {\n  const ids = [];\n\n  if (action) {\n    var _action$value4, _action$value4$button;\n\n    if (isSimpleContentAction(action)) {\n      var _action$value;\n\n      ids.push((_action$value = action.value) === null || _action$value === void 0 ? void 0 : _action$value.simpleContentId);\n    } else if (isReplaceTargetAction(action)) {\n      var _action$value2;\n\n      ids.push((_action$value2 = action.value) === null || _action$value2 === void 0 ? void 0 : _action$value2.replaceId);\n    } else if (isGotoAction(action)) {\n      var _action$value3;\n\n      ids.push((_action$value3 = action.value) === null || _action$value3 === void 0 ? void 0 : _action$value3.gotoId);\n    } else if (isPopoverAction(action) && ((_action$value4 = action.value) === null || _action$value4 === void 0 ? void 0 : (_action$value4$button = _action$value4.button) === null || _action$value4$button === void 0 ? void 0 : _action$value4$button.checked) && action.value.button.action) {\n      ids.push(...getComponentActionIds(action.value.button.action));\n    }\n  }\n\n  return filterFalsy(ids);\n}\n\nexport function getQuestionHTMLJSON(template, question) {\n  const {\n    htmlJSON\n  } = template;\n  return { ...htmlJSON,\n    linkedElements: { ...(htmlJSON === null || htmlJSON === void 0 ? void 0 : htmlJSON.linkedElements),\n      components: getQuestionLinkedIds(question)\n    }\n  };\n}\n\nfunction getQuestionLinkedIds(question) {\n  const {\n    introduction,\n    main,\n    feedback\n  } = question;\n  const ids = [];\n\n  if (introduction.introduction === QuestionIntroductionTypes.SimpleContent) {\n    ids.push(getElementId(introduction.simpleContentId));\n  }\n\n  if (main.simpleContent.value !== TemplateEditorOptionTypes.None) {\n    ids.push(getElementId(main.simpleContent.value));\n  }\n\n  if (isQuestionPropositions(main.content)) {\n    var _main$content$value;\n\n    (_main$content$value = main.content.value) === null || _main$content$value === void 0 ? void 0 : _main$content$value.items.forEach(proposition => {\n      var _proposition$info$val;\n\n      ids.push(getElementId((_proposition$info$val = proposition.info.value) === null || _proposition$info$val === void 0 ? void 0 : _proposition$info$val.simpleContentId));\n    });\n  }\n\n  ids.push(getElementId(feedback.global.right.simpleContent.value));\n  ids.push(getElementId(feedback.global.wrong.simpleContent.value));\n  ids.push(getElementId(feedback.detailed.rightId), getElementId(feedback.detailed.wrongId));\n  return filterDuplicates(filterFalsy(ids));\n}\n\nfunction getElementId(id) {\n  return id !== TemplateEditorOptionTypes.None ? id : undefined;\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/core/template.ts"],"names":["ElementType","QuestionIntroductionTypes","TemplateEditorOptionTypes","addClassToString","filterDuplicates","filterFalsy","getRepeaterComponents","isButtonComponent","isGotoAction","isMediaButton","isMediaComponent","isMediaFlipCard","isMediaHotspot","isMediaHotspot360","isMediaSlideshow","isMediaSynchroVideo","isMediaTarget","isPopoverAction","isQuestionPropositions","isReplaceTargetAction","isSimpleContentAction","createElementTemplateHTML","template","isDarkSeleted","type","clsList","push","PartPage","SimplePartPage","Screen","Question","SimpleContent","length","getTemplateHTMLJSON","options","htmlJSON","linkedElements","actions","getActionLinkedIds","ids","getActionIds","onload","opensimplecontent","oncomplete","action","checked","id","getContentHTMLJSON","content","components","getContentLinkedIds","medias","buttons","repeater","arr","forEach","component","getComponentActionIds","value","clickAction","overAction","items","item","contents","item2","simpleContentId","replaceId","gotoId","button","getQuestionHTMLJSON","question","getQuestionLinkedIds","introduction","main","feedback","getElementId","simpleContent","None","proposition","info","global","right","wrong","detailed","rightId","wrongId","undefined"],"mappings":"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","sourcesContent":["import {\r\n  ComponentAction,\r\n  ContentTemplate,\r\n  CourseElementTemplate,\r\n  QuestionTemplate,\r\n  TemplateOptionsJSON,\r\n  TemplateSimpleContentJSON,\r\n} from \"types\";\r\nimport {\r\n  ElementType,\r\n  QuestionIntroductionTypes,\r\n  TemplateEditorOptionTypes,\r\n  TemplateTypes,\r\n} from \"editor-constants\";\r\nimport {\r\n  addClassToString,\r\n  filterDuplicates,\r\n  filterFalsy,\r\n  getRepeaterComponents,\r\n  isButtonComponent,\r\n  isGotoAction,\r\n  isMediaButton,\r\n  isMediaComponent,\r\n  isMediaFlipCard,\r\n  isMediaHotspot,\r\n  isMediaHotspot360,\r\n  isMediaSlideshow,\r\n  isMediaSynchroVideo,\r\n  isMediaTarget,\r\n  isPopoverAction,\r\n  isQuestionPropositions,\r\n  isReplaceTargetAction,\r\n  isSimpleContentAction,\r\n} from \"utils\";\r\n\r\nexport const createElementTemplateHTML = (\r\n  template: string,\r\n  isDarkSeleted: boolean,\r\n  type: TemplateTypes\r\n) => {\r\n  const clsList = [];\r\n\r\n  if (isDarkSeleted) {\r\n    clsList.push(\"dark\");\r\n  }\r\n\r\n  if (type === ElementType.PartPage || type === ElementType.SimplePartPage) {\r\n    clsList.push(ElementType.PartPage);\r\n  } else if (\r\n    type === ElementType.Screen ||\r\n    type === ElementType.Question ||\r\n    type === ElementType.SimpleContent\r\n  ) {\r\n    clsList.push(ElementType.Screen);\r\n  }\r\n\r\n  return clsList.length ? addClassToString(template, clsList) : template;\r\n};\r\n\r\nexport function getTemplateHTMLJSON(template: CourseElementTemplate) {\r\n  const { options, htmlJSON } = template;\r\n\r\n  if (options) {\r\n    return {\r\n      ...htmlJSON,\r\n      linkedElements: { ...htmlJSON?.linkedElements, actions: getActionLinkedIds(options) },\r\n    };\r\n  }\r\n\r\n  return htmlJSON;\r\n}\r\n\r\nfunction getActionLinkedIds(options: TemplateOptionsJSON) {\r\n  const ids: string[] = [];\r\n\r\n  ids.push(...getActionIds(options?.onload?.opensimplecontent));\r\n  ids.push(...getActionIds(options?.oncomplete?.opensimplecontent));\r\n\r\n  return filterFalsy(ids);\r\n}\r\n\r\nfunction getActionIds(action?: TemplateSimpleContentJSON) {\r\n  const ids: (string | undefined)[] = [];\r\n\r\n  if (action?.checked) {\r\n    ids.push(action.id);\r\n  }\r\n\r\n  return filterDuplicates(filterFalsy(ids));\r\n}\r\n\r\nexport function getContentHTMLJSON(template: CourseElementTemplate, content: ContentTemplate) {\r\n  const { htmlJSON } = template;\r\n\r\n  return {\r\n    ...htmlJSON,\r\n    linkedElements: { ...htmlJSON?.linkedElements, components: getContentLinkedIds(content) },\r\n  };\r\n}\r\n\r\nfunction getContentLinkedIds(content: ContentTemplate) {\r\n  const { medias, buttons, repeater } = content;\r\n  const arr = [\r\n    ...medias,\r\n    ...buttons,\r\n    ...getRepeaterComponents(repeater?.medias),\r\n    ...getRepeaterComponents(repeater?.buttons),\r\n  ];\r\n  const ids: (string | undefined)[] = [];\r\n\r\n  arr.forEach((component) => {\r\n    if (isMediaComponent(component)) {\r\n      if (isMediaButton(component)) {\r\n        ids.push(...getComponentActionIds(component.value.clickAction));\r\n        ids.push(...getComponentActionIds(component.value.overAction));\r\n      } else if (isMediaFlipCard(component)) {\r\n        ids.push(...getComponentActionIds(component.value.clickAction));\r\n        ids.push(...getComponentActionIds(component.value.overAction));\r\n      } else if (isMediaSlideshow(component)) {\r\n        component.value.items.forEach((item) => {\r\n          ids.push(...getComponentActionIds(item.clickAction));\r\n        });\r\n      } else if (isMediaTarget(component)) {\r\n        ids.push(component.value.template);\r\n      } else if (isMediaSynchroVideo(component)) {\r\n        component.value.contents?.forEach((item) => {\r\n          ids.push(item.content);\r\n        });\r\n      } else if (isMediaHotspot(component)) {\r\n        component.value.items.forEach((item) => {\r\n          ids.push(...getComponentActionIds(item.clickAction));\r\n          ids.push(...getComponentActionIds(item.overAction));\r\n        });\r\n      } else if (isMediaHotspot360(component)) {\r\n        component.value.items.forEach((item) => {\r\n          item.items.forEach((item2) => {\r\n            ids.push(...getComponentActionIds(item2.clickAction));\r\n            ids.push(...getComponentActionIds(item2.overAction));\r\n          });\r\n        });\r\n      }\r\n    } else if (isButtonComponent(component)) {\r\n      ids.push(...getComponentActionIds(component.value.clickAction));\r\n      ids.push(...getComponentActionIds(component.value.overAction));\r\n    }\r\n  });\r\n\r\n  return filterDuplicates(filterFalsy(ids));\r\n}\r\n\r\nfunction getComponentActionIds(action: ComponentAction) {\r\n  const ids: (string | undefined)[] = [];\r\n\r\n  if (action) {\r\n    if (isSimpleContentAction(action)) {\r\n      ids.push(action.value?.simpleContentId);\r\n    } else if (isReplaceTargetAction(action)) {\r\n      ids.push(action.value?.replaceId);\r\n    } else if (isGotoAction(action)) {\r\n      ids.push(action.value?.gotoId);\r\n    } else if (\r\n      isPopoverAction(action) &&\r\n      action.value?.button?.checked &&\r\n      action.value.button.action\r\n    ) {\r\n      ids.push(...getComponentActionIds(action.value.button.action));\r\n    }\r\n  }\r\n\r\n  return filterFalsy(ids);\r\n}\r\n\r\nexport function getQuestionHTMLJSON(template: CourseElementTemplate, question: QuestionTemplate) {\r\n  const { htmlJSON } = template;\r\n  return {\r\n    ...htmlJSON,\r\n    linkedElements: { ...htmlJSON?.linkedElements, components: getQuestionLinkedIds(question) },\r\n  };\r\n}\r\n\r\nfunction getQuestionLinkedIds(question: QuestionTemplate) {\r\n  const { introduction, main, feedback } = question;\r\n  const ids: (string | undefined)[] = [];\r\n\r\n  if (introduction.introduction === QuestionIntroductionTypes.SimpleContent) {\r\n    ids.push(getElementId(introduction.simpleContentId));\r\n  }\r\n\r\n  if (main.simpleContent.value !== TemplateEditorOptionTypes.None) {\r\n    ids.push(getElementId(main.simpleContent.value));\r\n  }\r\n\r\n  if (isQuestionPropositions(main.content)) {\r\n    main.content.value?.items.forEach((proposition) => {\r\n      ids.push(getElementId(proposition.info.value?.simpleContentId));\r\n    });\r\n  }\r\n\r\n  ids.push(getElementId(feedback.global.right.simpleContent.value));\r\n  ids.push(getElementId(feedback.global.wrong.simpleContent.value));\r\n  ids.push(getElementId(feedback.detailed.rightId), getElementId(feedback.detailed.wrongId));\r\n\r\n  return filterDuplicates(filterFalsy(ids));\r\n}\r\n\r\nfunction getElementId(id?: string) {\r\n  return id !== TemplateEditorOptionTypes.None ? id : undefined;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}