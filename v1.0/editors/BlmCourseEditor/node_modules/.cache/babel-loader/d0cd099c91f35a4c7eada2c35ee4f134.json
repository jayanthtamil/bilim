{"ast":null,"code":"import { QuestionParameters } from \"types\";\nimport { getHTMLElement, getBLMElement } from \"../../core\";\nexport function getQuestionParameters(root) {\n  const parameters = new QuestionParameters();\n  const element = getHTMLElement(root, \"[id='options']\");\n\n  if (element) {\n    const model = getBLMElement(element);\n    const {\n      options\n    } = model;\n\n    if (options) {\n      parameters.relatedTo = options.relatedto;\n      parameters.weight = options.weight;\n      parameters.mandatory = options.mandatory;\n      parameters.eliminatory = options.eliminatory;\n      parameters.useforscoring = options.useforscoring;\n      parameters.timer = options.timer;\n    }\n  }\n\n  return parameters;\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/model/question/parameters.ts"],"names":["QuestionParameters","getHTMLElement","getBLMElement","getQuestionParameters","root","parameters","element","model","options","relatedTo","relatedto","weight","mandatory","eliminatory","useforscoring","timer"],"mappings":"AAAA,SAASA,kBAAT,QAA8D,OAA9D;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,YAA9C;AAEA,OAAO,SAASC,qBAAT,CAA+BC,IAA/B,EAAkD;AACvD,QAAMC,UAAU,GAAG,IAAIL,kBAAJ,EAAnB;AACA,QAAMM,OAAO,GAAGL,cAAc,CAACG,IAAD,EAAO,gBAAP,CAA9B;;AAEA,MAAIE,OAAJ,EAAa;AACX,UAAMC,KAAK,GAAGL,aAAa,CAA4BI,OAA5B,CAA3B;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAcD,KAApB;;AAEA,QAAIC,OAAJ,EAAa;AACXH,MAAAA,UAAU,CAACI,SAAX,GAAuBD,OAAO,CAACE,SAA/B;AACAL,MAAAA,UAAU,CAACM,MAAX,GAAoBH,OAAO,CAACG,MAA5B;AACAN,MAAAA,UAAU,CAACO,SAAX,GAAuBJ,OAAO,CAACI,SAA/B;AACAP,MAAAA,UAAU,CAACQ,WAAX,GAAyBL,OAAO,CAACK,WAAjC;AACAR,MAAAA,UAAU,CAACS,aAAX,GAA2BN,OAAO,CAACM,aAAnC;AACAT,MAAAA,UAAU,CAACU,KAAX,GAAmBP,OAAO,CAACO,KAA3B;AACD;AACF;;AAED,SAAOV,UAAP;AACD","sourcesContent":["import { QuestionParameters, QuizParametersOptionsJSON } from \"types\";\r\nimport { getHTMLElement, getBLMElement } from \"../../core\";\r\n\r\nexport function getQuestionParameters(root: HTMLElement) {\r\n  const parameters = new QuestionParameters();\r\n  const element = getHTMLElement(root, \"[id='options']\");\r\n\r\n  if (element) {\r\n    const model = getBLMElement<QuizParametersOptionsJSON>(element);\r\n    const { options } = model;\r\n\r\n    if (options) {\r\n      parameters.relatedTo = options.relatedto;\r\n      parameters.weight = options.weight;\r\n      parameters.mandatory = options.mandatory;\r\n      parameters.eliminatory = options.eliminatory;\r\n      parameters.useforscoring = options.useforscoring;\r\n      parameters.timer = options.timer;\r\n    }\r\n  }\r\n\r\n  return parameters;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}