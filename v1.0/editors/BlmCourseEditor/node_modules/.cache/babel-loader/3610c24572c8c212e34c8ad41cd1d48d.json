{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\main\\\\dialogs\\\\BlmDialogs.tsx\";\nimport React, { Fragment } from \"react\";\nimport { DialogType } from \"editor-constants\";\nimport { BlmDialog, BlmConfirmDialog } from \"shared/material-ui\";\n\nfunction BlmDialogs(props) {\n  const {\n    dialogs,\n    closeDialog\n  } = props;\n\n  const hanldeClick = (id, event, callback) => {\n    if (closeDialog) {\n      closeDialog(id);\n    }\n\n    if (callback) {\n      callback(event);\n    }\n  };\n\n  const renderDialog = dialog => {\n    const {\n      id,\n      title,\n      message,\n      onOk,\n      onCancel,\n      options\n    } = dialog;\n\n    if (dialog.type === DialogType.Dialog) {\n      return /*#__PURE__*/React.createElement(BlmDialog, {\n        key: id,\n        open: true,\n        title: title,\n        message: message,\n        options: options,\n        onOk: event => hanldeClick(id, event, onOk),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      });\n    } else if (dialog.type === DialogType.ConfirmDialog) {\n      return /*#__PURE__*/React.createElement(BlmConfirmDialog, {\n        key: id,\n        open: true,\n        title: title,\n        message: message,\n        options: options,\n        onOk: event => hanldeClick(id, event, onOk),\n        onCancel: event => hanldeClick(id, event, onCancel),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return null;\n    }\n  };\n\n  if (dialogs) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    }, dialogs.map(dialog => renderDialog(dialog)));\n  } else {\n    return null;\n  }\n}\n\nexport default BlmDialogs;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/main/dialogs/BlmDialogs.tsx"],"names":["React","Fragment","DialogType","BlmDialog","BlmConfirmDialog","BlmDialogs","props","dialogs","closeDialog","hanldeClick","id","event","callback","renderDialog","dialog","title","message","onOk","onCancel","options","type","Dialog","ConfirmDialog","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA4C,OAA5C;AAGA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,oBAA5C;;AAKA,SAASC,UAAT,CAAoBC,KAApB,EAAsC;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA2BF,KAAjC;;AAEA,QAAMG,WAAW,GAAG,CAACC,EAAD,EAAaC,KAAb,EAAgCC,QAAhC,KAA6D;AAC/E,QAAIJ,WAAJ,EAAiB;AACfA,MAAAA,WAAW,CAACE,EAAD,CAAX;AACD;;AACD,QAAIE,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,GAPD;;AASA,QAAME,YAAY,GAAIC,MAAD,IAAoB;AACvC,UAAM;AAAEJ,MAAAA,EAAF;AAAMK,MAAAA,KAAN;AAAaC,MAAAA,OAAb;AAAsBC,MAAAA,IAAtB;AAA4BC,MAAAA,QAA5B;AAAsCC,MAAAA;AAAtC,QAAkDL,MAAxD;;AAEA,QAAIA,MAAM,CAACM,IAAP,KAAgBlB,UAAU,CAACmB,MAA/B,EAAuC;AACrC,0BACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEX,EADP;AAEE,QAAA,IAAI,EAAE,IAFR;AAGE,QAAA,KAAK,EAAEK,KAHT;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,OAAO,EAAEG,OALX;AAME,QAAA,IAAI,EAAGR,KAAD,IAAuBF,WAAW,CAACC,EAAD,EAAKC,KAAL,EAAYM,IAAZ,CAN1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAXD,MAWO,IAAIH,MAAM,CAACM,IAAP,KAAgBlB,UAAU,CAACoB,aAA/B,EAA8C;AACnD,0BACE,oBAAC,gBAAD;AACE,QAAA,GAAG,EAAEZ,EADP;AAEE,QAAA,IAAI,EAAE,IAFR;AAGE,QAAA,KAAK,EAAEK,KAHT;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,OAAO,EAAEG,OALX;AAME,QAAA,IAAI,EAAGR,KAAD,IAAuBF,WAAW,CAACC,EAAD,EAAKC,KAAL,EAAYM,IAAZ,CAN1C;AAOE,QAAA,QAAQ,EAAGN,KAAD,IAAuBF,WAAW,CAACC,EAAD,EAAKC,KAAL,EAAYO,QAAZ,CAP9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD,KAZM,MAYA;AACL,aAAO,IAAP;AACD;AACF,GA7BD;;AA+BA,MAAIX,OAAJ,EAAa;AACX,wBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWA,OAAO,CAACgB,GAAR,CAAaT,MAAD,IAAYD,YAAY,CAACC,MAAD,CAApC,CAAX,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;;AAED,eAAeT,UAAf","sourcesContent":["import React, { Fragment, MouseEvent } from \"react\";\r\n\r\nimport { Dialog, DialogHandler } from \"types\";\r\nimport { DialogType } from \"editor-constants\";\r\nimport { BlmDialog, BlmConfirmDialog } from \"shared/material-ui\";\r\nimport { ContainerProps } from \"./dialogs-container\";\r\n\r\ninterface CompProps extends ContainerProps {}\r\n\r\nfunction BlmDialogs(props: CompProps) {\r\n  const { dialogs, closeDialog } = props;\r\n\r\n  const hanldeClick = (id: string, event: MouseEvent, callback?: DialogHandler) => {\r\n    if (closeDialog) {\r\n      closeDialog(id);\r\n    }\r\n    if (callback) {\r\n      callback(event);\r\n    }\r\n  };\r\n\r\n  const renderDialog = (dialog: Dialog) => {\r\n    const { id, title, message, onOk, onCancel, options } = dialog;\r\n\r\n    if (dialog.type === DialogType.Dialog) {\r\n      return (\r\n        <BlmDialog\r\n          key={id}\r\n          open={true}\r\n          title={title}\r\n          message={message}\r\n          options={options}\r\n          onOk={(event: MouseEvent) => hanldeClick(id, event, onOk)}\r\n        />\r\n      );\r\n    } else if (dialog.type === DialogType.ConfirmDialog) {\r\n      return (\r\n        <BlmConfirmDialog\r\n          key={id}\r\n          open={true}\r\n          title={title}\r\n          message={message}\r\n          options={options}\r\n          onOk={(event: MouseEvent) => hanldeClick(id, event, onOk)}\r\n          onCancel={(event: MouseEvent) => hanldeClick(id, event, onCancel)}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  if (dialogs) {\r\n    return <Fragment>{dialogs.map((dialog) => renderDialog(dialog))}</Fragment>;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default BlmDialogs;\r\n"]},"metadata":{},"sourceType":"module"}