{"ast":null,"code":"import { MediaFormats } from \"editor-constants\";\nimport { isMediaComponent, isMediaRepeater, isRepeaterComponent } from \"utils\";\nexport function setRelativeStyles(rules, ...components) {\n  components.flat().forEach(component => {\n    if (isMediaComponent(component)) {\n      const {\n        id,\n        format: {\n          value,\n          defaultHeight,\n          height = defaultHeight\n        },\n        config\n      } = component;\n      const root = new RegExp(`^.rt-etr-\\\\w+$`);\n      const relative = new RegExp(`^.rt-etr-\\\\w+ div \\\\[blm-id=\"${id}\"\\\\].relativeheight$`);\n      Array.from(rules).forEach(rule => {\n        if (rule instanceof CSSStyleRule) {\n          const {\n            selectorText,\n            style\n          } = rule;\n\n          if ((config === null || config === void 0 ? void 0 : config.saveInCSS) && root.test(selectorText)) {\n            style.setProperty(`--media-height-${id}`, height + \"px\");\n          } else if (value === MediaFormats.RelativeHeight && relative.test(selectorText)) {\n            style.setProperty(`--media-height-${id}`, height.toString());\n          }\n        }\n      });\n    } else if (isRepeaterComponent(component) && isMediaRepeater(component)) {\n      const {\n        saveInCSS,\n        value = []\n      } = component;\n      const root = new RegExp(`^.rt-etr-\\\\w+$`);\n      Array.from(rules).forEach(rule => {\n        if (rule instanceof CSSStyleRule) {\n          const {\n            selectorText,\n            style\n          } = rule;\n\n          if (saveInCSS && root.test(selectorText)) {\n            style.setProperty(`--nb-media`, value.length.toString());\n          }\n        }\n      });\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/html/component/styles.ts"],"names":["MediaFormats","isMediaComponent","isMediaRepeater","isRepeaterComponent","setRelativeStyles","rules","components","flat","forEach","component","id","format","value","defaultHeight","height","config","root","RegExp","relative","Array","from","rule","CSSStyleRule","selectorText","style","saveInCSS","test","setProperty","RelativeHeight","toString","length"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AAEA,SAASC,gBAAT,EAA2BC,eAA3B,EAA4CC,mBAA5C,QAAuE,OAAvE;AAEA,OAAO,SAASC,iBAAT,CAA2BC,KAA3B,EAA+C,GAAGC,UAAlD,EAAsF;AAC3FA,EAAAA,UAAU,CAACC,IAAX,GAAkBC,OAAlB,CAA2BC,SAAD,IAAe;AACvC,QAAIR,gBAAgB,CAACQ,SAAD,CAApB,EAAiC;AAC/B,YAAM;AACJC,QAAAA,EADI;AAEJC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAF;AAASC,UAAAA,aAAT;AAAwBC,UAAAA,MAAM,GAAGD;AAAjC,SAFJ;AAGJE,QAAAA;AAHI,UAIFN,SAJJ;AAKA,YAAMO,IAAI,GAAG,IAAIC,MAAJ,CAAY,gBAAZ,CAAb;AACA,YAAMC,QAAQ,GAAG,IAAID,MAAJ,CAAY,gCAA+BP,EAAG,sBAA9C,CAAjB;AAEAS,MAAAA,KAAK,CAACC,IAAN,CAAWf,KAAX,EAAkBG,OAAlB,CAA2Ba,IAAD,IAAU;AAClC,YAAIA,IAAI,YAAYC,YAApB,EAAkC;AAChC,gBAAM;AAAEC,YAAAA,YAAF;AAAgBC,YAAAA;AAAhB,cAA0BH,IAAhC;;AAEA,cAAI,CAAAN,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEU,SAAR,KAAqBT,IAAI,CAACU,IAAL,CAAUH,YAAV,CAAzB,EAAkD;AAChDC,YAAAA,KAAK,CAACG,WAAN,CAAmB,kBAAiBjB,EAAG,EAAvC,EAA0CI,MAAM,GAAG,IAAnD;AACD,WAFD,MAEO,IAAIF,KAAK,KAAKZ,YAAY,CAAC4B,cAAvB,IAAyCV,QAAQ,CAACQ,IAAT,CAAcH,YAAd,CAA7C,EAA0E;AAC/EC,YAAAA,KAAK,CAACG,WAAN,CAAmB,kBAAiBjB,EAAG,EAAvC,EAA0CI,MAAM,CAACe,QAAP,EAA1C;AACD;AACF;AACF,OAVD;AAWD,KApBD,MAoBO,IAAI1B,mBAAmB,CAACM,SAAD,CAAnB,IAAkCP,eAAe,CAACO,SAAD,CAArD,EAAkE;AACvE,YAAM;AAAEgB,QAAAA,SAAF;AAAab,QAAAA,KAAK,GAAG;AAArB,UAA4BH,SAAlC;AACA,YAAMO,IAAI,GAAG,IAAIC,MAAJ,CAAY,gBAAZ,CAAb;AAEAE,MAAAA,KAAK,CAACC,IAAN,CAAWf,KAAX,EAAkBG,OAAlB,CAA2Ba,IAAD,IAAU;AAClC,YAAIA,IAAI,YAAYC,YAApB,EAAkC;AAChC,gBAAM;AAAEC,YAAAA,YAAF;AAAgBC,YAAAA;AAAhB,cAA0BH,IAAhC;;AAEA,cAAII,SAAS,IAAIT,IAAI,CAACU,IAAL,CAAUH,YAAV,CAAjB,EAA0C;AACxCC,YAAAA,KAAK,CAACG,WAAN,CAAmB,YAAnB,EAAgCf,KAAK,CAACkB,MAAN,CAAaD,QAAb,EAAhC;AACD;AACF;AACF,OARD;AASD;AACF,GAnCD;AAoCD","sourcesContent":["import { MediaFormats } from \"editor-constants\";\r\nimport { BaseComponent } from \"types\";\r\nimport { isMediaComponent, isMediaRepeater, isRepeaterComponent } from \"utils\";\r\n\r\nexport function setRelativeStyles(rules: CSSRuleList, ...components: BaseComponent<any>[][]) {\r\n  components.flat().forEach((component) => {\r\n    if (isMediaComponent(component)) {\r\n      const {\r\n        id,\r\n        format: { value, defaultHeight, height = defaultHeight },\r\n        config,\r\n      } = component;\r\n      const root = new RegExp(`^.rt-etr-\\\\w+$`);\r\n      const relative = new RegExp(`^.rt-etr-\\\\w+ div \\\\[blm-id=\"${id}\"\\\\].relativeheight$`);\r\n\r\n      Array.from(rules).forEach((rule) => {\r\n        if (rule instanceof CSSStyleRule) {\r\n          const { selectorText, style } = rule;\r\n\r\n          if (config?.saveInCSS && root.test(selectorText)) {\r\n            style.setProperty(`--media-height-${id}`, height + \"px\");\r\n          } else if (value === MediaFormats.RelativeHeight && relative.test(selectorText)) {\r\n            style.setProperty(`--media-height-${id}`, height.toString());\r\n          }\r\n        }\r\n      });\r\n    } else if (isRepeaterComponent(component) && isMediaRepeater(component)) {\r\n      const { saveInCSS, value = [] } = component;\r\n      const root = new RegExp(`^.rt-etr-\\\\w+$`);\r\n\r\n      Array.from(rules).forEach((rule) => {\r\n        if (rule instanceof CSSStyleRule) {\r\n          const { selectorText, style } = rule;\r\n\r\n          if (saveInCSS && root.test(selectorText)) {\r\n            style.setProperty(`--nb-media`, value.length.toString());\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}