{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\properties\\\\containers\\\\screen\\\\BlmScreenProps.tsx\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\nimport { ElementType } from \"editor-constants\";\nimport { Tabs } from \"shared/material-ui\";\nimport { BlmGeneralProps, BlmScreenBackgroundProps, BlmLogProps, BlmPropsBarDashboard, BlmCompletionPrerequisiteProps } from \"../../controls\";\nimport { withBlmPropertiesBoard } from \"../../hoc\";\n\nfunction BlmScreenProps(props) {\n  var _element$root;\n\n  const {\n    element,\n    data,\n    bgRef,\n    tabIndex,\n    onChange,\n    onTabChange,\n    onClose\n  } = props;\n  const isStructure = ((_element$root = element.root) === null || _element$root === void 0 ? void 0 : _element$root.type) === ElementType.Structure;\n  const isScreen = element.type === ElementType.Screen;\n  const {\n    t\n  } = useTranslation(\"properties\");\n\n  if (element && data) {\n    return /*#__PURE__*/React.createElement(Tabs, {\n      key: data.id,\n      selectedIndex: tabIndex,\n      closableTab: true,\n      className: clsx(\"element-properties-tabs\", data.type, {\n        structures: isStructure\n      }),\n      onTabChange: onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BlmPropsBarDashboard, {\n      label: t(\"tabs.general\"),\n      className: \"general-props\",\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BlmGeneralProps, {\n      element: element,\n      data: data,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    })), isStructure && isScreen && /*#__PURE__*/React.createElement(BlmPropsBarDashboard, {\n      label: t(\"tabs.completion\"),\n      className: \"completion-prerequisite-props\",\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BlmCompletionPrerequisiteProps, {\n      element: element,\n      data: data,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(BlmPropsBarDashboard, {\n      label: t(\"tabs.background\"),\n      className: \"background-props\",\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BlmScreenBackgroundProps, {\n      ref: bgRef,\n      element: element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(BlmPropsBarDashboard, {\n      label: t(\"tabs.log\"),\n      className: \"log-props\",\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BlmLogProps, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return null;\n  }\n}\n\nexport default withBlmPropertiesBoard(BlmScreenProps);","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/properties/containers/screen/BlmScreenProps.tsx"],"names":["React","clsx","useTranslation","ElementType","Tabs","BlmGeneralProps","BlmScreenBackgroundProps","BlmLogProps","BlmPropsBarDashboard","BlmCompletionPrerequisiteProps","withBlmPropertiesBoard","BlmScreenProps","props","element","data","bgRef","tabIndex","onChange","onTabChange","onClose","isStructure","root","type","Structure","isScreen","Screen","t","id","structures"],"mappings":"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","sourcesContent":["import React, { MouseEvent, Ref } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { ElementPropsContainer, PropertiesEditorComponent } from \"types\";\r\nimport { ElementType } from \"editor-constants\";\r\nimport { Tabs } from \"shared/material-ui\";\r\nimport {\r\n  BlmGeneralProps,\r\n  BlmScreenBackgroundProps,\r\n  BlmLogProps,\r\n  BlmPropsBarDashboard,\r\n  BlmCompletionPrerequisiteProps,\r\n} from \"../../controls\";\r\nimport { withBlmPropertiesBoard } from \"../../hoc\";\r\n\r\nexport interface CompProps extends ElementPropsContainer {\r\n  bgRef: Ref<PropertiesEditorComponent>;\r\n  tabIndex: false | number;\r\n  onTabChange: (value: number) => void;\r\n  onClose: (event: MouseEvent) => void;\r\n}\r\n\r\nfunction BlmScreenProps(props: CompProps) {\r\n  const { element, data, bgRef, tabIndex, onChange, onTabChange, onClose } = props;\r\n  const isStructure = element.root?.type === ElementType.Structure;\r\n  const isScreen = element.type === ElementType.Screen;\r\n  const { t } = useTranslation(\"properties\");\r\n\r\n  if (element && data) {\r\n    return (\r\n      <Tabs\r\n        key={data.id}\r\n        selectedIndex={tabIndex}\r\n        closableTab={true}\r\n        className={clsx(\"element-properties-tabs\", data.type, { structures: isStructure })}\r\n        onTabChange={onTabChange}\r\n      >\r\n        <BlmPropsBarDashboard label={t(\"tabs.general\")} className=\"general-props\" onClose={onClose}>\r\n          <BlmGeneralProps element={element} data={data} onChange={onChange} />\r\n        </BlmPropsBarDashboard>\r\n        {isStructure && isScreen && (\r\n          <BlmPropsBarDashboard\r\n            label={t(\"tabs.completion\")}\r\n            className=\"completion-prerequisite-props\"\r\n            onClose={onClose}\r\n          >\r\n            <BlmCompletionPrerequisiteProps element={element} data={data} onChange={onChange} />\r\n          </BlmPropsBarDashboard>\r\n        )}\r\n        <BlmPropsBarDashboard\r\n          label={t(\"tabs.background\")}\r\n          className=\"background-props\"\r\n          onClose={onClose}\r\n        >\r\n          <BlmScreenBackgroundProps ref={bgRef} element={element} />\r\n        </BlmPropsBarDashboard>\r\n        <BlmPropsBarDashboard label={t(\"tabs.log\")} className=\"log-props\" onClose={onClose}>\r\n          <BlmLogProps data={data} />\r\n        </BlmPropsBarDashboard>\r\n      </Tabs>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default withBlmPropertiesBoard(BlmScreenProps);\r\n"]},"metadata":{},"sourceType":"module"}