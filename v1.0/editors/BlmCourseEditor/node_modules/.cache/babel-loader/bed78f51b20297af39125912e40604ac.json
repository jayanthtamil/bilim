{"ast":null,"code":"import { DetailedFeedbackDisplayTypes, QuestionFeedbackTypes, QuestionIntroductionTypes, QuestionPropositionInfoTypes, TemplateEditorOptionTypes, MediaOptionTypes, QuestionTemplateTypes } from \"editor-constants\";\nimport { BaseComponent, QuestionMediaComponent, TextComponent } from \"./component\";\nexport class QuestionTemplate {\n  constructor() {\n    this.type = QuestionTemplateTypes.Standard;\n    this.introduction = new QuestionIntroduction();\n    this.main = new QuestionMain();\n    this.feedback = new QuestionFeedback();\n    this.parameters = new QuestionParameters();\n  }\n\n}\nexport class QuestionIntroduction {\n  constructor() {\n    this.introduction = QuestionIntroductionTypes.None;\n    this.media = new QuestionIntroMedia();\n    this.simpleContentId = void 0;\n  }\n\n}\nexport class QuestionMain {\n  constructor() {\n    this.title = new TextComponent();\n    this.text = new TextComponent();\n    this.media = new QuestionMediaComponent();\n    this.sound = new QuestionMediaComponent();\n    this.simpleContent = new BaseComponent();\n    this.instruction = new TextComponent();\n    this.validate = new QuestionValidate();\n    this.content = void 0;\n  }\n\n}\nexport class QuestionFeedback {\n  constructor() {\n    this.type = QuestionFeedbackTypes.None;\n    this.tabType = QuestionFeedbackTypes.Basic;\n    this.global = new QuestionGlobalFeedback();\n    this.detailed = new QuestionDetailedFeedback();\n    this.disableEmbedded = false;\n  }\n\n}\nexport class QuestionParameters {\n  constructor() {\n    this.relatedTo = void 0;\n    this.weight = void 0;\n    this.mandatory = false;\n    this.eliminatory = false;\n    this.useforscoring = true;\n    this.timer = void 0;\n  }\n\n}\nexport class QuestionIntroMedia {\n  constructor() {\n    this.title = new TextComponent();\n    this.text = new TextComponent();\n    this.media = new QuestionMediaComponent();\n    this.sound = new QuestionMediaComponent();\n    this.display = new QuestionIntroMediaDisplay();\n  }\n\n}\nexport class QuestionIntroMediaDisplay {\n  constructor() {\n    this.button = true;\n    this.timer = {\n      status: false\n    };\n    this.autoEnd = false;\n  }\n\n}\nexport class QuestionValidate {\n  constructor() {\n    this.checked = true;\n  }\n\n}\nexport class QuestionPropositionsComponent extends BaseComponent {}\nexport class QuestionPropositions {\n  constructor() {\n    this.isMCQ = false;\n    this.restrictTypeToSingle = false;\n    this.randomize = false;\n    this.maximum = 0;\n    this.minimum = 0;\n    this.items = [];\n  }\n\n}\nexport class QuestionProposition {\n  constructor() {\n    this.id = \"\";\n    this.title = new TextComponent();\n    this.text = new TextComponent();\n    this.validity = new BaseComponent();\n    this.media = new QuestionMediaComponent();\n    this.sound = new QuestionMediaComponent();\n    this.info = new BaseComponent();\n    this.feedback = new QuestionPropositionFeedback();\n  }\n\n}\nexport class QuestionPropositionInfo {\n  constructor() {\n    this.type = QuestionPropositionInfoTypes.None;\n    this.simple = new QuestionPropositionSimpleInfo();\n    this.simpleContentId = TemplateEditorOptionTypes.None;\n  }\n\n}\nexport class QuestionPropositionSimpleInfo {\n  constructor() {\n    this.title = new TextComponent();\n    this.text = new TextComponent();\n  }\n\n}\nexport class QuestionPropositionFeedback {\n  constructor() {\n    this.title = new TextComponent();\n    this.text = new TextComponent();\n    this.media = new QuestionMediaComponent();\n    this.sound = new QuestionMediaComponent();\n  }\n\n}\nexport class QuestionGlobalFeedback {\n  constructor() {\n    this.right = new QuestionGlobalFeedbackItem();\n    this.wrong = new QuestionGlobalFeedbackItem();\n  }\n\n}\nexport class QuestionGlobalFeedbackItem {\n  constructor() {\n    this.title = new TextComponent();\n    this.text = new TextComponent();\n    this.media = new QuestionMediaComponent();\n    this.sound = new QuestionMediaComponent();\n    this.simpleContent = new BaseComponent();\n  }\n\n}\nexport class QuestionDetailedFeedback {\n  constructor() {\n    this.rightId = TemplateEditorOptionTypes.None;\n    this.wrongId = TemplateEditorOptionTypes.None;\n    this.display = DetailedFeedbackDisplayTypes.Popup;\n  }\n\n}\nexport class LinkMedia {\n  constructor() {\n    this.option = MediaOptionTypes.None;\n    this.media = void 0;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/types/core/template-editor/question.ts"],"names":["DetailedFeedbackDisplayTypes","QuestionFeedbackTypes","QuestionIntroductionTypes","QuestionPropositionInfoTypes","TemplateEditorOptionTypes","MediaOptionTypes","QuestionTemplateTypes","BaseComponent","QuestionMediaComponent","TextComponent","QuestionTemplate","type","Standard","introduction","QuestionIntroduction","main","QuestionMain","feedback","QuestionFeedback","parameters","QuestionParameters","None","media","QuestionIntroMedia","simpleContentId","title","text","sound","simpleContent","instruction","validate","QuestionValidate","content","tabType","Basic","global","QuestionGlobalFeedback","detailed","QuestionDetailedFeedback","disableEmbedded","relatedTo","weight","mandatory","eliminatory","useforscoring","timer","display","QuestionIntroMediaDisplay","button","status","autoEnd","checked","QuestionPropositionsComponent","QuestionPropositions","isMCQ","restrictTypeToSingle","randomize","maximum","minimum","items","QuestionProposition","id","validity","info","QuestionPropositionFeedback","QuestionPropositionInfo","simple","QuestionPropositionSimpleInfo","right","QuestionGlobalFeedbackItem","wrong","rightId","wrongId","Popup","LinkMedia","option"],"mappings":"AAAA,SACEA,4BADF,EAEEC,qBAFF,EAGEC,yBAHF,EAIEC,4BAJF,EAKEC,yBALF,EAOEC,gBAPF,EAQEC,qBARF,QASO,kBATP;AAWA,SACEC,aADF,EAGEC,sBAHF,EAIEC,aAJF,QAKO,aALP;AAOA,OAAO,MAAMC,gBAAN,CAAuB;AAAA;AAAA,SAC5BC,IAD4B,GACrBL,qBAAqB,CAACM,QADD;AAAA,SAE5BC,YAF4B,GAEb,IAAIC,oBAAJ,EAFa;AAAA,SAG5BC,IAH4B,GAGrB,IAAIC,YAAJ,EAHqB;AAAA,SAI5BC,QAJ4B,GAIjB,IAAIC,gBAAJ,EAJiB;AAAA,SAK5BC,UAL4B,GAKf,IAAIC,kBAAJ,EALe;AAAA;;AAAA;AAQ9B,OAAO,MAAMN,oBAAN,CAA2B;AAAA;AAAA,SAChCD,YADgC,GACUX,yBAAyB,CAACmB,IADpC;AAAA,SAEhCC,KAFgC,GAExB,IAAIC,kBAAJ,EAFwB;AAAA,SAGhCC,eAHgC;AAAA;;AAAA;AAMlC,OAAO,MAAMR,YAAN,CAAmB;AAAA;AAAA,SACxBS,KADwB,GAChB,IAAIhB,aAAJ,EADgB;AAAA,SAExBiB,IAFwB,GAEjB,IAAIjB,aAAJ,EAFiB;AAAA,SAGxBa,KAHwB,GAGhB,IAAId,sBAAJ,EAHgB;AAAA,SAIxBmB,KAJwB,GAIhB,IAAInB,sBAAJ,EAJgB;AAAA,SAKxBoB,aALwB,GAKR,IAAIrB,aAAJ,EALQ;AAAA,SAMxBsB,WANwB,GAMV,IAAIpB,aAAJ,EANU;AAAA,SAOxBqB,QAPwB,GAOb,IAAIC,gBAAJ,EAPa;AAAA,SAQxBC,OARwB;AAAA;;AAAA;AAW1B,OAAO,MAAMd,gBAAN,CAAuB;AAAA;AAAA,SAC5BP,IAD4B,GACEV,qBAAqB,CAACoB,IADxB;AAAA,SAE5BY,OAF4B,GAEKhC,qBAAqB,CAACiC,KAF3B;AAAA,SAG5BC,MAH4B,GAGnB,IAAIC,sBAAJ,EAHmB;AAAA,SAI5BC,QAJ4B,GAIjB,IAAIC,wBAAJ,EAJiB;AAAA,SAK5BC,eAL4B,GAKV,KALU;AAAA;;AAAA;AAQ9B,OAAO,MAAMnB,kBAAN,CAAyB;AAAA;AAAA,SAC9BoB,SAD8B;AAAA,SAE9BC,MAF8B;AAAA,SAG9BC,SAH8B,GAGlB,KAHkB;AAAA,SAI9BC,WAJ8B,GAIhB,KAJgB;AAAA,SAK9BC,aAL8B,GAKd,IALc;AAAA,SAM9BC,KAN8B;AAAA;;AAAA;AAShC,OAAO,MAAMtB,kBAAN,CAAyB;AAAA;AAAA,SAC9BE,KAD8B,GACtB,IAAIhB,aAAJ,EADsB;AAAA,SAE9BiB,IAF8B,GAEvB,IAAIjB,aAAJ,EAFuB;AAAA,SAG9Ba,KAH8B,GAGtB,IAAId,sBAAJ,EAHsB;AAAA,SAI9BmB,KAJ8B,GAItB,IAAInB,sBAAJ,EAJsB;AAAA,SAK9BsC,OAL8B,GAKpB,IAAIC,yBAAJ,EALoB;AAAA;;AAAA;AAQhC,OAAO,MAAMA,yBAAN,CAAgC;AAAA;AAAA,SACrCC,MADqC,GAC5B,IAD4B;AAAA,SAErCH,KAFqC,GAEQ;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAFR;AAAA,SAGrCC,OAHqC,GAG3B,KAH2B;AAAA;;AAAA;AAMvC,OAAO,MAAMnB,gBAAN,CAAuB;AAAA;AAAA,SAC5BoB,OAD4B,GAClB,IADkB;AAAA;;AAAA;AAI9B,OAAO,MAAMC,6BAAN,SAA4C7C,aAA5C,CAAgF;AAEvF,OAAO,MAAM8C,oBAAN,CAA2B;AAAA;AAAA,SAChCC,KADgC,GACxB,KADwB;AAAA,SAEhCC,oBAFgC,GAET,KAFS;AAAA,SAGhCC,SAHgC,GAGpB,KAHoB;AAAA,SAIhCC,OAJgC,GAItB,CAJsB;AAAA,SAKhCC,OALgC,GAKtB,CALsB;AAAA,SAMhCC,KANgC,GAMD,EANC;AAAA;;AAAA;AASlC,OAAO,MAAMC,mBAAN,CAA0B;AAAA;AAAA,SAC/BC,EAD+B,GAC1B,EAD0B;AAAA,SAE/BpC,KAF+B,GAEvB,IAAIhB,aAAJ,EAFuB;AAAA,SAG/BiB,IAH+B,GAGxB,IAAIjB,aAAJ,EAHwB;AAAA,SAI/BqD,QAJ+B,GAIpB,IAAIvD,aAAJ,EAJoB;AAAA,SAK/Be,KAL+B,GAKvB,IAAId,sBAAJ,EALuB;AAAA,SAM/BmB,KAN+B,GAMvB,IAAInB,sBAAJ,EANuB;AAAA,SAO/BuD,IAP+B,GAOxB,IAAIxD,aAAJ,EAPwB;AAAA,SAQ/BU,QAR+B,GAQpB,IAAI+C,2BAAJ,EARoB;AAAA;;AAAA;AAWjC,OAAO,MAAMC,uBAAN,CAA8B;AAAA;AAAA,SACnCtD,IADmC,GACER,4BAA4B,CAACkB,IAD/B;AAAA,SAEnC6C,MAFmC,GAE1B,IAAIC,6BAAJ,EAF0B;AAAA,SAGnC3C,eAHmC,GAGGpB,yBAAyB,CAACiB,IAH7B;AAAA;;AAAA;AAMrC,OAAO,MAAM8C,6BAAN,CAAoC;AAAA;AAAA,SACzC1C,KADyC,GACjC,IAAIhB,aAAJ,EADiC;AAAA,SAEzCiB,IAFyC,GAElC,IAAIjB,aAAJ,EAFkC;AAAA;;AAAA;AAK3C,OAAO,MAAMuD,2BAAN,CAAkC;AAAA;AAAA,SACvCvC,KADuC,GAC/B,IAAIhB,aAAJ,EAD+B;AAAA,SAEvCiB,IAFuC,GAEhC,IAAIjB,aAAJ,EAFgC;AAAA,SAGvCa,KAHuC,GAG/B,IAAId,sBAAJ,EAH+B;AAAA,SAIvCmB,KAJuC,GAI/B,IAAInB,sBAAJ,EAJ+B;AAAA;;AAAA;AAOzC,OAAO,MAAM4B,sBAAN,CAA6B;AAAA;AAAA,SAClCgC,KADkC,GAC1B,IAAIC,0BAAJ,EAD0B;AAAA,SAElCC,KAFkC,GAE1B,IAAID,0BAAJ,EAF0B;AAAA;;AAAA;AAKpC,OAAO,MAAMA,0BAAN,CAAiC;AAAA;AAAA,SACtC5C,KADsC,GAC9B,IAAIhB,aAAJ,EAD8B;AAAA,SAEtCiB,IAFsC,GAE/B,IAAIjB,aAAJ,EAF+B;AAAA,SAGtCa,KAHsC,GAG9B,IAAId,sBAAJ,EAH8B;AAAA,SAItCmB,KAJsC,GAI9B,IAAInB,sBAAJ,EAJ8B;AAAA,SAKtCoB,aALsC,GAKtB,IAAIrB,aAAJ,EALsB;AAAA;;AAAA;AAQxC,OAAO,MAAM+B,wBAAN,CAA+B;AAAA;AAAA,SACpCiC,OADoC,GAClBnE,yBAAyB,CAACiB,IADR;AAAA,SAEpCmD,OAFoC,GAElBpE,yBAAyB,CAACiB,IAFR;AAAA,SAGpCyB,OAHoC,GAGI9C,4BAA4B,CAACyE,KAHjC;AAAA;;AAAA;AAMtC,OAAO,MAAMC,SAAN,CAAgB;AAAA;AAAA,SACrBC,MADqB,GACMtE,gBAAgB,CAACgB,IADvB;AAAA,SAErBC,KAFqB;AAAA;;AAAA","sourcesContent":["import {\r\n  DetailedFeedbackDisplayTypes,\r\n  QuestionFeedbackTypes,\r\n  QuestionIntroductionTypes,\r\n  QuestionPropositionInfoTypes,\r\n  TemplateEditorOptionTypes,\r\n  QuestionPropositionTypes,\r\n  MediaOptionTypes,\r\n  QuestionTemplateTypes,\r\n} from \"editor-constants\";\r\nimport { MediaFile } from \"../course\";\r\nimport {\r\n  BaseComponent,\r\n  QuestionCustomComponent,\r\n  QuestionMediaComponent,\r\n  TextComponent,\r\n} from \"./component\";\r\n\r\nexport class QuestionTemplate {\r\n  type = QuestionTemplateTypes.Standard;\r\n  introduction = new QuestionIntroduction();\r\n  main = new QuestionMain();\r\n  feedback = new QuestionFeedback();\r\n  parameters = new QuestionParameters();\r\n}\r\n\r\nexport class QuestionIntroduction {\r\n  introduction: QuestionIntroductionTypes = QuestionIntroductionTypes.None;\r\n  media = new QuestionIntroMedia();\r\n  simpleContentId: string | undefined;\r\n}\r\n\r\nexport class QuestionMain {\r\n  title = new TextComponent();\r\n  text = new TextComponent();\r\n  media = new QuestionMediaComponent<LinkMedia>();\r\n  sound = new QuestionMediaComponent();\r\n  simpleContent = new BaseComponent();\r\n  instruction = new TextComponent();\r\n  validate = new QuestionValidate();\r\n  content?: QuestionCustomComponent | QuestionPropositionsComponent;\r\n}\r\n\r\nexport class QuestionFeedback {\r\n  type: QuestionFeedbackTypes = QuestionFeedbackTypes.None;\r\n  tabType: QuestionFeedbackTypes = QuestionFeedbackTypes.Basic;\r\n  global = new QuestionGlobalFeedback();\r\n  detailed = new QuestionDetailedFeedback();\r\n  disableEmbedded = false;\r\n}\r\n\r\nexport class QuestionParameters {\r\n  relatedTo?: string;\r\n  weight?: number;\r\n  mandatory = false;\r\n  eliminatory = false;\r\n  useforscoring = true;\r\n  timer?: number;\r\n}\r\n\r\nexport class QuestionIntroMedia {\r\n  title = new TextComponent();\r\n  text = new TextComponent();\r\n  media = new QuestionMediaComponent();\r\n  sound = new QuestionMediaComponent();\r\n  display = new QuestionIntroMediaDisplay();\r\n}\r\n\r\nexport class QuestionIntroMediaDisplay {\r\n  button = true;\r\n  timer: { status: boolean; value?: number } = { status: false };\r\n  autoEnd = false;\r\n}\r\n\r\nexport class QuestionValidate {\r\n  checked = true;\r\n}\r\n\r\nexport class QuestionPropositionsComponent extends BaseComponent<QuestionPropositions> {}\r\n\r\nexport class QuestionPropositions {\r\n  isMCQ = false;\r\n  restrictTypeToSingle = false;\r\n  randomize = false;\r\n  maximum = 0;\r\n  minimum = 0;\r\n  items: QuestionProposition[] = [];\r\n}\r\n\r\nexport class QuestionProposition {\r\n  id = \"\";\r\n  title = new TextComponent();\r\n  text = new TextComponent();\r\n  validity = new BaseComponent<boolean>();\r\n  media = new QuestionMediaComponent();\r\n  sound = new QuestionMediaComponent();\r\n  info = new BaseComponent<QuestionPropositionInfo>();\r\n  feedback = new QuestionPropositionFeedback();\r\n}\r\n\r\nexport class QuestionPropositionInfo {\r\n  type: QuestionPropositionInfoTypes = QuestionPropositionInfoTypes.None;\r\n  simple = new QuestionPropositionSimpleInfo();\r\n  simpleContentId: string | undefined = TemplateEditorOptionTypes.None;\r\n}\r\n\r\nexport class QuestionPropositionSimpleInfo {\r\n  title = new TextComponent();\r\n  text = new TextComponent();\r\n}\r\n\r\nexport class QuestionPropositionFeedback {\r\n  title = new TextComponent();\r\n  text = new TextComponent();\r\n  media = new QuestionMediaComponent();\r\n  sound = new QuestionMediaComponent();\r\n}\r\n\r\nexport class QuestionGlobalFeedback {\r\n  right = new QuestionGlobalFeedbackItem();\r\n  wrong = new QuestionGlobalFeedbackItem();\r\n}\r\n\r\nexport class QuestionGlobalFeedbackItem {\r\n  title = new TextComponent();\r\n  text = new TextComponent();\r\n  media = new QuestionMediaComponent();\r\n  sound = new QuestionMediaComponent();\r\n  simpleContent = new BaseComponent();\r\n}\r\n\r\nexport class QuestionDetailedFeedback {\r\n  rightId: string = TemplateEditorOptionTypes.None;\r\n  wrongId: string = TemplateEditorOptionTypes.None;\r\n  display: DetailedFeedbackDisplayTypes = DetailedFeedbackDisplayTypes.Popup;\r\n}\r\n\r\nexport class LinkMedia {\r\n  option: MediaOptionTypes = MediaOptionTypes.None;\r\n  media?: MediaFile | null;\r\n}\r\n\r\nexport interface QuizIntroductionOptionsJSON {\r\n  intro: QuestionIntroductionTypes;\r\n  simplecontentid: string;\r\n  mediaintronext: {\r\n    button: boolean;\r\n    timer: boolean;\r\n    autoend: boolean;\r\n    timervalue: number;\r\n  };\r\n}\r\n\r\nexport interface QuizPropositionsOptionsJSON {\r\n  type: QuestionPropositionTypes;\r\n  restrict_type_to_single: boolean;\r\n  randomize: boolean;\r\n  maxprop: number;\r\n  minprop: number;\r\n}\r\n\r\nexport interface QuizFeedbackOptionsJSON {\r\n  feedbacktype: QuestionFeedbackTypes;\r\n  simplecontent?: {\r\n    simplecontenttrue?: string;\r\n    simplecontentfalse?: string;\r\n    display: DetailedFeedbackDisplayTypes;\r\n  };\r\n}\r\n\r\nexport interface QuizParametersOptionsJSON {\r\n  relatedto?: string;\r\n  weight?: number;\r\n  mandatory: boolean;\r\n  eliminatory: boolean;\r\n  useforscoring: boolean;\r\n  timer?: number;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}