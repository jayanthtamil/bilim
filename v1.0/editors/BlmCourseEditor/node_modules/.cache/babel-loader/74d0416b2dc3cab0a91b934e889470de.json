{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\question-editor\\\\components\\\\feedback\\\\global\\\\BlmGlobalFeedback.tsx\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\nimport BlmGobalFeedbackItem from \"../global-item\";\nimport \"./styles.scss\";\n\nfunction BlmGlobalFeedback(props) {\n  const {\n    type,\n    data,\n    onChange\n  } = props;\n  const {\n    right,\n    wrong\n  } = data;\n  const {\n    t\n  } = useTranslation(\"question-editor\");\n\n  const handleChange = (item, isRight) => {\n    const newData = { ...data\n    };\n\n    if (isRight) {\n      newData.right = item;\n    } else {\n      newData.wrong = item;\n    }\n\n    if (onChange) {\n      onChange(newData);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"global-feedback-wrapper\", type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BlmGobalFeedbackItem, {\n    type: type,\n    header: t(\"feedback.title.right_ans\"),\n    data: right,\n    onChange: newData => handleChange(newData, true),\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"global-feedback-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BlmGobalFeedbackItem, {\n    type: type,\n    header: t(\"feedback.title.wrong_ans\"),\n    data: wrong,\n    onChange: newData => handleChange(newData, false),\n    className: \"wrong\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BlmGlobalFeedback;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/question-editor/components/feedback/global/BlmGlobalFeedback.tsx"],"names":["React","clsx","useTranslation","BlmGobalFeedbackItem","BlmGlobalFeedback","props","type","data","onChange","right","wrong","t","handleChange","item","isRight","newData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAIA,OAAOC,oBAAP,MAAiC,gBAAjC;AACA,OAAO,eAAP;;AAQA,SAASC,iBAAT,CAA2BC,KAA3B,EAA6C;AAC3C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,MAA2BH,KAAjC;AACA,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBH,IAAzB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAQT,cAAc,CAAC,iBAAD,CAA5B;;AAEA,QAAMU,YAAY,GAAG,CAACC,IAAD,EAAmCC,OAAnC,KAAwD;AAC3E,UAAMC,OAAO,GAAG,EAAE,GAAGR;AAAL,KAAhB;;AAEA,QAAIO,OAAJ,EAAa;AACXC,MAAAA,OAAO,CAACN,KAAR,GAAgBI,IAAhB;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACL,KAAR,GAAgBG,IAAhB;AACD;;AAED,QAAIL,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACO,OAAD,CAAR;AACD;AACF,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAEd,IAAI,CAAC,yBAAD,EAA4BK,IAA5B,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,MAAM,EAAEK,CAAC,CAAC,0BAAD,CAFX;AAGE,IAAA,IAAI,EAAEF,KAHR;AAIE,IAAA,QAAQ,EAAGM,OAAD,IAAaH,YAAY,CAACG,OAAD,EAAU,IAAV,CAJrC;AAKE,IAAA,SAAS,EAAC,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,oBAAD;AACE,IAAA,IAAI,EAAET,IADR;AAEE,IAAA,MAAM,EAAEK,CAAC,CAAC,0BAAD,CAFX;AAGE,IAAA,IAAI,EAAED,KAHR;AAIE,IAAA,QAAQ,EAAGK,OAAD,IAAaH,YAAY,CAACG,OAAD,EAAU,KAAV,CAJrC;AAKE,IAAA,SAAS,EAAC,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAmBD;;AAED,eAAeX,iBAAf","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { QuestionGlobalFeedback, QuestionGlobalFeedbackItem } from \"types\";\r\nimport { QuestionFeedbackTypes } from \"editor-constants\";\r\nimport BlmGobalFeedbackItem from \"../global-item\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps {\r\n  type: QuestionFeedbackTypes;\r\n  data: QuestionGlobalFeedback;\r\n  onChange: (data: QuestionGlobalFeedback) => void;\r\n}\r\n\r\nfunction BlmGlobalFeedback(props: CompProps) {\r\n  const { type, data, onChange } = props;\r\n  const { right, wrong } = data;\r\n  const { t } = useTranslation(\"question-editor\");\r\n\r\n  const handleChange = (item: QuestionGlobalFeedbackItem, isRight: boolean) => {\r\n    const newData = { ...data };\r\n\r\n    if (isRight) {\r\n      newData.right = item;\r\n    } else {\r\n      newData.wrong = item;\r\n    }\r\n\r\n    if (onChange) {\r\n      onChange(newData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(\"global-feedback-wrapper\", type)}>\r\n      <BlmGobalFeedbackItem\r\n        type={type}\r\n        header={t(\"feedback.title.right_ans\")}\r\n        data={right}\r\n        onChange={(newData) => handleChange(newData, true)}\r\n        className=\"right\"\r\n      />\r\n      <div className=\"global-feedback-hr\" />\r\n      <BlmGobalFeedbackItem\r\n        type={type}\r\n        header={t(\"feedback.title.wrong_ans\")}\r\n        data={wrong}\r\n        onChange={(newData) => handleChange(newData, false)}\r\n        className=\"wrong\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmGlobalFeedback;\r\n"]},"metadata":{},"sourceType":"module"}