{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\shared\\\\media-editor\\\\core\\\\base\\\\BlmBaseMediaEditor.tsx\";\nimport React, { Fragment, useRef, useState, useEffect, useMemo } from \"react\";\nimport clsx from \"clsx\";\nimport { Drawer } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { MediaTrackCue } from \"types\";\nimport { addObject, isAudio, isVideo } from \"utils\";\nimport { MediaCueActions, MediaCuePositions, MediaPlayerTypes, MediaTrackTypes } from \"editor-constants\";\nimport { BlmMediaDashboard, BlmMediaPlayer, BlmCueList, BlmSeekBar, BlmMediaWave, BlmRuler, BlmMainTimeline, BlmTopTimeline, BlmWaveScroller, BlmMediaEditorProvider } from \"../../components\";\nimport { findCueIndex, getCurrentCue, getCurrentVideoCues, validateCues } from \"../../utils\";\nimport { DOMAIN } from \"config\";\nimport \"./styles.scss\";\nconst initEditor = {\n  subtitles: [],\n  markers: [],\n  isEdited: false\n};\n\nfunction BlmBaseMediaEditor(props) {\n  var _playerRef$current$is, _playerRef$current;\n\n  const {\n    open,\n    type = \"standard\",\n    elementId,\n    data,\n    peaks,\n    cues1,\n    cues2,\n    onSave,\n    onClose,\n    openDialog,\n    openConfirmDialog\n  } = props;\n  const playerRef = useRef(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [editor, setEditor] = useState(initEditor);\n  const [subtitle, setSubtitle] = useState();\n  const [marker, setMarker] = useState();\n  const isPlaying = (_playerRef$current$is = (_playerRef$current = playerRef.current) === null || _playerRef$current === void 0 ? void 0 : _playerRef$current.isPlaying()) !== null && _playerRef$current$is !== void 0 ? _playerRef$current$is : false;\n  const {\n    subtitles,\n    markers,\n    isEdited\n  } = editor;\n  const {\n    url\n  } = data;\n  const isStandard = type === \"standard\";\n  const trackType1 = isStandard ? MediaTrackTypes.Subtitles : MediaTrackTypes.Labels;\n  const trackType2 = isStandard ? MediaTrackTypes.Markers : MediaTrackTypes.Contents;\n  const {\n    t\n  } = useTranslation(\"shared\");\n  const playerType = useMemo(() => {\n    if (isAudio(data.type)) {\n      return MediaPlayerTypes.Audio;\n    } else if (isVideo(data.type)) {\n      return MediaPlayerTypes.Video;\n    } else {\n      return MediaPlayerTypes.Lottie;\n    }\n  }, [data]);\n  useEffect(() => {\n    if (cues1 && cues2 && duration) {\n      setEditor({\n        subtitles: getCurrentVideoCues(cues1, duration),\n        markers: getCurrentVideoCues(cues2, duration),\n        isEdited: false\n      });\n    }\n  }, [cues1, cues2, duration]);\n  useEffect(() => {\n    const cue = getCurrentCue(subtitles, currentTime);\n    setSubtitle(cue);\n  }, [currentTime, subtitles]);\n  useEffect(() => {\n    const cue = getCurrentCue(markers, currentTime);\n    setMarker(cue);\n  }, [currentTime, markers]);\n\n  const pause = () => {\n    var _playerRef$current2;\n\n    (_playerRef$current2 = playerRef.current) === null || _playerRef$current2 === void 0 ? void 0 : _playerRef$current2.pause();\n  };\n\n  const seek = time => {\n    var _playerRef$current3;\n\n    (_playerRef$current3 = playerRef.current) === null || _playerRef$current3 === void 0 ? void 0 : _playerRef$current3.seek(time);\n  };\n\n  const validateChanges = callback => {\n    if (isEdited) {\n      try {\n        validateCues(trackType2, markers);\n        callback();\n      } catch (error) {\n        openDialog(`${t(\"alert.warning\")}`, error.message);\n      }\n    }\n  };\n\n  const saveChanges = () => {\n    const [newCues1, newCues2] = isEdited ? [subtitles, markers] : [];\n\n    if (onSave) {\n      onSave(newCues1, newCues2, duration);\n    }\n  };\n\n  const handleCurrentTimeChange = time => {\n    setCurrentTime(time);\n  };\n\n  const handleDurationTimeChange = time => {\n    setDuration(time);\n  };\n\n  const handleTimeChange = time => {\n    seek(time);\n  };\n\n  const handleDashboardClick = () => {\n    pause();\n  };\n\n  const handleTrackClick = track => {\n    pause();\n\n    if (track.startTime <= duration) {\n      seek(track.startTime + 0.001);\n    }\n  };\n\n  const handleAdd = (trackType, startTime, endTime) => {\n    const cue = new MediaTrackCue(startTime, endTime);\n\n    if (trackType === MediaTrackTypes.Subtitles || trackType === MediaTrackTypes.Labels) {\n      const ind = findCueIndex(trackType, subtitles, startTime) + 1;\n\n      if (trackType === MediaTrackTypes.Subtitles) {\n        cue.text = \"Subtitle Text\";\n      } else {\n        cue.text = \"Label Text\";\n        cue.position = MediaCuePositions.BottomLeft;\n      }\n\n      handleChange(trackType, addObject(subtitles, cue, ind));\n    } else {\n      const ind = findCueIndex(trackType, markers, startTime) + 1;\n\n      if (trackType === MediaTrackTypes.Markers) {\n        cue.text = \"Marker Text\";\n      } else {\n        cue.action = MediaCueActions.ScrollVScrollC;\n      }\n\n      handleChange(trackType, addObject(markers, cue, ind));\n    }\n  };\n\n  const handleChange = (type, cues) => {\n    if (type === MediaTrackTypes.Subtitles || type === MediaTrackTypes.Labels) {\n      pause();\n      setEditor({ ...editor,\n        subtitles: cues,\n        isEdited: true\n      });\n    } else {\n      setEditor({ ...editor,\n        markers: cues,\n        isEdited: true\n      });\n    }\n  };\n\n  const handleSave = event => {\n    validateChanges(() => {\n      saveChanges();\n    });\n  };\n\n  const handleClose = event => {\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  const openSaveConfirmDialog = () => {\n    const options = {\n      className: \"template-editor-warning-dialog\",\n      okLabel: `${t(\"button.save\")}`,\n      cancelLabel: `${t(\"button.cancel\")}`\n    };\n    openConfirmDialog(`${t(\"alert.cancel_confirm\")}`, `${t(\"alert.save_all_changes\")}`, handleSave, handleClose, options);\n  };\n\n  const handleDrawerClose = event => {\n    if (isEdited) {\n      openSaveConfirmDialog();\n    } else {\n      handleClose(event);\n    }\n  };\n\n  const handleCloseClick = event => {\n    if (isEdited) {\n      handleSave(event);\n    } else {\n      handleClose(event);\n    }\n  };\n\n  const handleDownoadUrl = (type, url) => {\n    var downloadLink = document.createElement(\"a\");\n    downloadLink.href = DOMAIN + url;\n    downloadLink.download = type + \".vtt\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  const handleImportandExport = type => {\n    if (type === MediaTrackTypes.Subtitles && data.subtitle) {\n      var _data$subtitle;\n\n      handleDownoadUrl(type, (_data$subtitle = data.subtitle) === null || _data$subtitle === void 0 ? void 0 : _data$subtitle.url);\n    } else if (type === MediaTrackTypes.Markers && data.marker) {\n      var _data$marker;\n\n      handleDownoadUrl(type, (_data$marker = data.marker) === null || _data$marker === void 0 ? void 0 : _data$marker.url);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    className: clsx(\"media-editor-drawer\", type),\n    open: open,\n    onClose: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BlmMediaEditorProvider, {\n    playerType: playerType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"media-editor-wrapper\", playerType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BlmMediaDashboard, {\n    title: isStandard ? `${t(\"base_media_editor.subtitle_marker\")}` : `${t(\"base_media_editor.synchro_video\")}`,\n    type: trackType1,\n    isPlaying: isPlaying,\n    data: subtitles,\n    currentCue: subtitle,\n    onClick: handleDashboardClick,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BlmMediaPlayer, {\n    ref: playerRef,\n    src: url,\n    onTimeChange: handleCurrentTimeChange,\n    onDurationChange: handleDurationTimeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(BlmCueList, {\n    type: trackType1,\n    data: subtitles,\n    currentCue: subtitle,\n    duration: duration,\n    onChange: handleChange,\n    onTrackClick: handleTrackClick,\n    onClickExport: handleImportandExport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BlmCueList, {\n    type: trackType2,\n    data: markers,\n    currentCue: marker,\n    duration: duration,\n    elementId: elementId,\n    onChange: handleChange,\n    onTrackClick: handleTrackClick,\n    onClickExport: handleImportandExport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BlmSeekBar, {\n    type: playerType,\n    currentTime: currentTime,\n    duration: duration,\n    subtitles: subtitles,\n    markers: markers,\n    onChange: handleTimeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BlmMediaWave, {\n    type: playerType,\n    peaks: peaks,\n    duration: duration,\n    playerRef: playerRef,\n    render: wavesurfer => /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BlmRuler, {\n      type: trackType1,\n      isPlaying: isPlaying,\n      wavesurfer: wavesurfer,\n      onAdd: handleAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BlmWaveScroller, {\n      wavesurfer: wavesurfer,\n      onChange: handleTimeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BlmMainTimeline, {\n      type: trackType1,\n      wavesurfer: wavesurfer,\n      data: subtitles,\n      onChange: handleChange,\n      onTimeChange: handleTimeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BlmTopTimeline, {\n      type: trackType2,\n      wavesurfer: wavesurfer,\n      data: markers,\n      currentCue: marker,\n      onAdd: handleAdd,\n      onChange: handleChange,\n      onTimeChange: handleTimeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-editor-close-btn\",\n    onClick: handleCloseClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default BlmBaseMediaEditor;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/shared/media-editor/core/base/BlmBaseMediaEditor.tsx"],"names":["React","Fragment","useRef","useState","useEffect","useMemo","clsx","Drawer","useTranslation","MediaTrackCue","addObject","isAudio","isVideo","MediaCueActions","MediaCuePositions","MediaPlayerTypes","MediaTrackTypes","BlmMediaDashboard","BlmMediaPlayer","BlmCueList","BlmSeekBar","BlmMediaWave","BlmRuler","BlmMainTimeline","BlmTopTimeline","BlmWaveScroller","BlmMediaEditorProvider","findCueIndex","getCurrentCue","getCurrentVideoCues","validateCues","DOMAIN","initEditor","subtitles","markers","isEdited","BlmBaseMediaEditor","props","open","type","elementId","data","peaks","cues1","cues2","onSave","onClose","openDialog","openConfirmDialog","playerRef","currentTime","setCurrentTime","duration","setDuration","editor","setEditor","subtitle","setSubtitle","marker","setMarker","isPlaying","current","url","isStandard","trackType1","Subtitles","Labels","trackType2","Markers","Contents","t","playerType","Audio","Video","Lottie","cue","pause","seek","time","validateChanges","callback","error","message","saveChanges","newCues1","newCues2","handleCurrentTimeChange","handleDurationTimeChange","handleTimeChange","handleDashboardClick","handleTrackClick","track","startTime","handleAdd","trackType","endTime","ind","text","position","BottomLeft","handleChange","action","ScrollVScrollC","cues","handleSave","event","handleClose","openSaveConfirmDialog","options","className","okLabel","cancelLabel","handleDrawerClose","handleCloseClick","handleDownoadUrl","downloadLink","document","createElement","href","download","body","appendChild","click","removeChild","handleImportandExport","wavesurfer"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useState, useEffect, useMemo, MouseEvent } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { MediaFile, MediaTrackCue } from \"types\";\r\nimport { addObject, isAudio, isVideo } from \"utils\";\r\nimport {\r\n  MediaCueActions,\r\n  MediaCuePositions,\r\n  MediaPlayerTypes,\r\n  MediaTrackTypes,\r\n} from \"editor-constants\";\r\nimport {\r\n  BlmMediaDashboard,\r\n  BlmMediaPlayer,\r\n  BlmCueList,\r\n  BlmSeekBar,\r\n  BlmMediaWave,\r\n  BlmRuler,\r\n  BlmMainTimeline,\r\n  BlmTopTimeline,\r\n  BlmWaveScroller,\r\n  MediaPlayerRef,\r\n  BlmMediaEditorProvider,\r\n} from \"../../components\";\r\nimport { findCueIndex, getCurrentCue, getCurrentVideoCues, validateCues } from \"../../utils\";\r\nimport { ContainerProps } from \"./container\";\r\nimport { DOMAIN } from \"config\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface BaseMediaEditorProps extends ContainerProps {\r\n  open?: boolean;\r\n  type?: \"standard\" | \"synchro-video\";\r\n  elementId: string;\r\n  data: MediaFile;\r\n  peaks?: number[];\r\n  cues1?: MediaTrackCue[];\r\n  cues2?: MediaTrackCue[];\r\n  onSave?: (cues1?: MediaTrackCue[], cues2?: MediaTrackCue[], duration?: number) => void;\r\n  onClose?: (event: MouseEvent) => void;\r\n}\r\n\r\ninterface EditorState {\r\n  subtitles: MediaTrackCue[];\r\n  markers: MediaTrackCue[];\r\n  isEdited: boolean;\r\n}\r\n\r\nconst initEditor: EditorState = {\r\n  subtitles: [],\r\n  markers: [],\r\n  isEdited: false,\r\n};\r\n\r\nfunction BlmBaseMediaEditor(props: BaseMediaEditorProps) {\r\n  const {\r\n    open,\r\n    type = \"standard\",\r\n    elementId,\r\n    data,\r\n    peaks,\r\n    cues1,\r\n    cues2,\r\n    onSave,\r\n    onClose,\r\n    openDialog,\r\n    openConfirmDialog,\r\n  } = props;\r\n  const playerRef = useRef<MediaPlayerRef>(null);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [editor, setEditor] = useState<EditorState>(initEditor);\r\n  const [subtitle, setSubtitle] = useState<MediaTrackCue>();\r\n  const [marker, setMarker] = useState<MediaTrackCue>();\r\n  const isPlaying = playerRef.current?.isPlaying() ?? false;\r\n  const { subtitles, markers, isEdited } = editor;\r\n  const { url } = data;\r\n  const isStandard = type === \"standard\";\r\n  const trackType1 = isStandard ? MediaTrackTypes.Subtitles : MediaTrackTypes.Labels;\r\n  const trackType2 = isStandard ? MediaTrackTypes.Markers : MediaTrackTypes.Contents;\r\n  const { t } = useTranslation(\"shared\");\r\n\r\n  const playerType = useMemo(() => {\r\n    if (isAudio(data.type)) {\r\n      return MediaPlayerTypes.Audio;\r\n    } else if (isVideo(data.type)) {\r\n      return MediaPlayerTypes.Video;\r\n    } else {\r\n      return MediaPlayerTypes.Lottie;\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (cues1 && cues2 && duration) {\r\n      setEditor({\r\n        subtitles: getCurrentVideoCues(cues1, duration),\r\n        markers: getCurrentVideoCues(cues2, duration),\r\n        isEdited: false,\r\n      });\r\n    }\r\n  }, [cues1, cues2, duration]);\r\n\r\n  useEffect(() => {\r\n    const cue = getCurrentCue(subtitles, currentTime);\r\n\r\n    setSubtitle(cue);\r\n  }, [currentTime, subtitles]);\r\n\r\n  useEffect(() => {\r\n    const cue = getCurrentCue(markers, currentTime);\r\n\r\n    setMarker(cue);\r\n  }, [currentTime, markers]);\r\n\r\n  const pause = () => {\r\n    playerRef.current?.pause();\r\n  };\r\n\r\n  const seek = (time: number) => {\r\n    playerRef.current?.seek(time);\r\n  };\r\n\r\n  const validateChanges = (callback: Function) => {\r\n    if (isEdited) {\r\n      try {\r\n        validateCues(trackType2, markers);\r\n        callback();\r\n      } catch (error) {\r\n        openDialog(`${t(\"alert.warning\")}`, (error as Error).message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveChanges = () => {\r\n    const [newCues1, newCues2] = isEdited ? [subtitles, markers] : [];\r\n\r\n    if (onSave) {\r\n      onSave(newCues1, newCues2, duration);\r\n    }\r\n  };\r\n\r\n  const handleCurrentTimeChange = (time: number) => {\r\n    setCurrentTime(time);\r\n  };\r\n\r\n  const handleDurationTimeChange = (time: number) => {\r\n    setDuration(time);\r\n  };\r\n\r\n  const handleTimeChange = (time: number) => {\r\n    seek(time);\r\n  };\r\n\r\n  const handleDashboardClick = () => {\r\n    pause();\r\n  };\r\n\r\n  const handleTrackClick = (track: MediaTrackCue) => {\r\n    pause();\r\n\r\n    if (track.startTime <= duration) {\r\n      seek(track.startTime + 0.001);\r\n    }\r\n  };\r\n\r\n  const handleAdd = (trackType: MediaTrackTypes, startTime: number, endTime: number) => {\r\n    const cue = new MediaTrackCue(startTime, endTime);\r\n\r\n    if (trackType === MediaTrackTypes.Subtitles || trackType === MediaTrackTypes.Labels) {\r\n      const ind = findCueIndex(trackType, subtitles, startTime) + 1;\r\n\r\n      if (trackType === MediaTrackTypes.Subtitles) {\r\n        cue.text = \"Subtitle Text\";\r\n      } else {\r\n        cue.text = \"Label Text\";\r\n        cue.position = MediaCuePositions.BottomLeft;\r\n      }\r\n\r\n      handleChange(trackType, addObject(subtitles, cue, ind));\r\n    } else {\r\n      const ind = findCueIndex(trackType, markers, startTime) + 1;\r\n\r\n      if (trackType === MediaTrackTypes.Markers) {\r\n        cue.text = \"Marker Text\";\r\n      } else {\r\n        cue.action = MediaCueActions.ScrollVScrollC;\r\n      }\r\n\r\n      handleChange(trackType, addObject(markers, cue, ind));\r\n    }\r\n  };\r\n\r\n  const handleChange = (type: MediaTrackTypes, cues: MediaTrackCue[]) => {\r\n    if (type === MediaTrackTypes.Subtitles || type === MediaTrackTypes.Labels) {\r\n      pause();\r\n      setEditor({ ...editor, subtitles: cues, isEdited: true });\r\n    } else {\r\n      setEditor({ ...editor, markers: cues, isEdited: true });\r\n    }\r\n  };\r\n\r\n  const handleSave = (event: MouseEvent) => {\r\n    validateChanges(() => {\r\n      saveChanges();\r\n    });\r\n  };\r\n\r\n  const handleClose = (event: MouseEvent) => {\r\n    if (onClose) {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n  const openSaveConfirmDialog = () => {\r\n    const options = {\r\n      className: \"template-editor-warning-dialog\",\r\n      okLabel: `${t(\"button.save\")}`,\r\n      cancelLabel: `${t(\"button.cancel\")}`,\r\n    };\r\n\r\n    openConfirmDialog(\r\n      `${t(\"alert.cancel_confirm\")}`,\r\n      `${t(\"alert.save_all_changes\")}`,\r\n      handleSave,\r\n      handleClose,\r\n      options\r\n    );\r\n  };\r\n\r\n  const handleDrawerClose = (event: any) => {\r\n    if (isEdited) {\r\n      openSaveConfirmDialog();\r\n    } else {\r\n      handleClose(event);\r\n    }\r\n  };\r\n\r\n  const handleCloseClick = (event: MouseEvent) => {\r\n    if (isEdited) {\r\n      handleSave(event);\r\n    } else {\r\n      handleClose(event);\r\n    }\r\n  };\r\n\r\n  const handleDownoadUrl = (type: MediaTrackTypes, url: string) => {\r\n    var downloadLink = document.createElement(\"a\");\r\n    downloadLink.href = DOMAIN + url;\r\n    downloadLink.download = type + \".vtt\";\r\n\r\n    document.body.appendChild(downloadLink);\r\n    downloadLink.click();\r\n    document.body.removeChild(downloadLink);\r\n  };\r\n\r\n  const handleImportandExport = (type: MediaTrackTypes) => {\r\n    if (type === MediaTrackTypes.Subtitles && data.subtitle) {\r\n      handleDownoadUrl(type, data.subtitle?.url);\r\n    } else if (type === MediaTrackTypes.Markers && data.marker) {\r\n      handleDownoadUrl(type, data.marker?.url);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer className={clsx(\"media-editor-drawer\", type)} open={open} onClose={handleDrawerClose}>\r\n      <BlmMediaEditorProvider playerType={playerType}>\r\n        <div className={clsx(\"media-editor-wrapper\", playerType)}>\r\n          <BlmMediaDashboard\r\n            title={\r\n              isStandard\r\n                ? `${t(\"base_media_editor.subtitle_marker\")}`\r\n                : `${t(\"base_media_editor.synchro_video\")}`\r\n            }\r\n            type={trackType1}\r\n            isPlaying={isPlaying}\r\n            data={subtitles}\r\n            currentCue={subtitle}\r\n            onClick={handleDashboardClick}\r\n            onChange={handleChange}\r\n          >\r\n            <BlmMediaPlayer\r\n              ref={playerRef}\r\n              src={url}\r\n              onTimeChange={handleCurrentTimeChange}\r\n              onDurationChange={handleDurationTimeChange}\r\n            />\r\n          </BlmMediaDashboard>\r\n          <BlmCueList\r\n            type={trackType1}\r\n            data={subtitles}\r\n            currentCue={subtitle}\r\n            duration={duration}\r\n            onChange={handleChange}\r\n            onTrackClick={handleTrackClick}\r\n            onClickExport={handleImportandExport}\r\n          />\r\n          <BlmCueList\r\n            type={trackType2}\r\n            data={markers}\r\n            currentCue={marker}\r\n            duration={duration}\r\n            elementId={elementId}\r\n            onChange={handleChange}\r\n            onTrackClick={handleTrackClick}\r\n            onClickExport={handleImportandExport}\r\n          />\r\n          <BlmSeekBar\r\n            type={playerType}\r\n            currentTime={currentTime}\r\n            duration={duration}\r\n            subtitles={subtitles}\r\n            markers={markers}\r\n            onChange={handleTimeChange}\r\n          />\r\n          <BlmMediaWave\r\n            type={playerType}\r\n            peaks={peaks}\r\n            duration={duration}\r\n            playerRef={playerRef}\r\n            render={(wavesurfer) => (\r\n              <Fragment>\r\n                <BlmRuler\r\n                  type={trackType1}\r\n                  isPlaying={isPlaying}\r\n                  wavesurfer={wavesurfer}\r\n                  onAdd={handleAdd}\r\n                />\r\n                <BlmWaveScroller wavesurfer={wavesurfer} onChange={handleTimeChange} />\r\n                <BlmMainTimeline\r\n                  type={trackType1}\r\n                  wavesurfer={wavesurfer}\r\n                  data={subtitles}\r\n                  onChange={handleChange}\r\n                  onTimeChange={handleTimeChange}\r\n                />\r\n                <BlmTopTimeline\r\n                  type={trackType2}\r\n                  wavesurfer={wavesurfer}\r\n                  data={markers}\r\n                  currentCue={marker}\r\n                  onAdd={handleAdd}\r\n                  onChange={handleChange}\r\n                  onTimeChange={handleTimeChange}\r\n                />\r\n              </Fragment>\r\n            )}\r\n          />\r\n          <div className=\"media-editor-close-btn\" onClick={handleCloseClick} />\r\n        </div>\r\n      </BlmMediaEditorProvider>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default BlmBaseMediaEditor;\r\n"]},"metadata":{},"sourceType":"module"}