{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\templates\\\\controls\\\\content-toolbox\\\\BlmContentToolbox.tsx\";\nimport React, { useRef, useLayoutEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { ElementType, TemplateEditorTypes } from \"editor-constants\";\nimport { useTemplateBtnStyle } from \"./styles\";\n\nfunction BlmContentToolbox(props) {\n  const {\n    element,\n    data,\n    className,\n    onEditClick\n  } = props;\n  const classes = useTemplateBtnStyle();\n  const {\n    isOutdated,\n    forAlertIcon\n  } = element;\n  const {\n    hasAction,\n    isSummary,\n    options,\n    associatedChapter\n  } = data;\n  const associateRef = useRef(null);\n  const associatedChapterId = options === null || options === void 0 ? void 0 : options.relative_chapter;\n  useLayoutEffect(() => {\n    const container = associateRef.current;\n\n    if (isSummary && !associatedChapterId && container) {\n      setTimeout(() => {\n        container.click();\n        container.scrollIntoView();\n      }, 700);\n    }\n  }, [isSummary, associatedChapterId, associateRef]);\n\n  const handleEditClick = (type, anchorEle) => {\n    if (onEditClick) {\n      onEditClick(type, data, anchorEle);\n    }\n  };\n\n  const handleTemplateClick = event => {\n    handleEditClick(TemplateEditorTypes.Template, event.currentTarget);\n  };\n\n  const handleVariantClick = event => {\n    handleEditClick(TemplateEditorTypes.Variant, event.currentTarget);\n  };\n\n  const handleActionClick = event => {\n    handleEditClick(TemplateEditorTypes.Action, event.currentTarget);\n  };\n\n  const handleAssociatedChapterClick = event => {\n    handleEditClick(TemplateEditorTypes.AssociatedChapter, event.currentTarget);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, className, {\n      [classes.outdated]: isOutdated && forAlertIcon\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.editBtn,\n    onClick: handleTemplateClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.variantsBtn,\n    onClick: handleVariantClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.actionBtn, {\n      [classes.actionActiveBtn]: hasAction\n    }),\n    onClick: handleActionClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), isSummary && data.type === ElementType.SimpleContent && /*#__PURE__*/React.createElement(\"div\", {\n    ref: associateRef,\n    className: classes.associatedChapterBtn,\n    onClick: handleAssociatedChapterClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, associatedChapter ? associatedChapter.name : \"\"));\n}\n\nexport default BlmContentToolbox;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/templates/controls/content-toolbox/BlmContentToolbox.tsx"],"names":["React","useRef","useLayoutEffect","clsx","ElementType","TemplateEditorTypes","useTemplateBtnStyle","BlmContentToolbox","props","element","data","className","onEditClick","classes","isOutdated","forAlertIcon","hasAction","isSummary","options","associatedChapter","associateRef","associatedChapterId","relative_chapter","container","current","setTimeout","click","scrollIntoView","handleEditClick","type","anchorEle","handleTemplateClick","event","Template","currentTarget","handleVariantClick","Variant","handleActionClick","Action","handleAssociatedChapterClick","AssociatedChapter","root","outdated","editBtn","variantsBtn","actionBtn","actionActiveBtn","SimpleContent","associatedChapterBtn","name"],"mappings":"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","sourcesContent":["import React, { MouseEvent, useRef, useLayoutEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { CourseElement, CourseElementTemplate } from \"types\";\r\nimport { ElementType, TemplateEditorTypes } from \"editor-constants\";\r\nimport { useTemplateBtnStyle } from \"./styles\";\r\n\r\ninterface CompProps {\r\n  element: CourseElement;\r\n  data: CourseElementTemplate;\r\n  className?: string;\r\n  onEditClick?: (\r\n    type: TemplateEditorTypes,\r\n    template: CourseElementTemplate,\r\n    anchorEle: HTMLElement\r\n  ) => void;\r\n}\r\n\r\nfunction BlmContentToolbox(props: CompProps) {\r\n  const { element, data, className, onEditClick } = props;\r\n  const classes = useTemplateBtnStyle();\r\n  const { isOutdated, forAlertIcon } = element;\r\n  const { hasAction, isSummary, options, associatedChapter } = data;\r\n  const associateRef = useRef<HTMLDivElement>(null);\r\n  const associatedChapterId = options?.relative_chapter;\r\n\r\n  useLayoutEffect(() => {\r\n    const container = associateRef.current;\r\n\r\n    if (isSummary && !associatedChapterId && container) {\r\n      setTimeout(() => {\r\n        container.click();\r\n        container.scrollIntoView();\r\n      }, 700);\r\n    }\r\n  }, [isSummary, associatedChapterId, associateRef]);\r\n\r\n  const handleEditClick = (type: TemplateEditorTypes, anchorEle: HTMLElement) => {\r\n    if (onEditClick) {\r\n      onEditClick(type, data, anchorEle);\r\n    }\r\n  };\r\n\r\n  const handleTemplateClick = (event: MouseEvent<HTMLDivElement>) => {\r\n    handleEditClick(TemplateEditorTypes.Template, event.currentTarget);\r\n  };\r\n\r\n  const handleVariantClick = (event: MouseEvent<HTMLDivElement>) => {\r\n    handleEditClick(TemplateEditorTypes.Variant, event.currentTarget);\r\n  };\r\n\r\n  const handleActionClick = (event: MouseEvent<HTMLDivElement>) => {\r\n    handleEditClick(TemplateEditorTypes.Action, event.currentTarget);\r\n  };\r\n\r\n  const handleAssociatedChapterClick = (event: MouseEvent<HTMLDivElement>) => {\r\n    handleEditClick(TemplateEditorTypes.AssociatedChapter, event.currentTarget);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className, { [classes.outdated]: isOutdated && forAlertIcon })}\r\n    >\r\n      <div className={classes.editBtn} onClick={handleTemplateClick} />\r\n      <div className={classes.variantsBtn} onClick={handleVariantClick} />\r\n      <div\r\n        className={clsx(classes.actionBtn, { [classes.actionActiveBtn]: hasAction })}\r\n        onClick={handleActionClick}\r\n      />\r\n      {isSummary && data.type === ElementType.SimpleContent && (\r\n        <div\r\n          ref={associateRef}\r\n          className={classes.associatedChapterBtn}\r\n          onClick={handleAssociatedChapterClick}\r\n        >\r\n          {associatedChapter ? associatedChapter.name : \"\"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmContentToolbox;\r\n"]},"metadata":{},"sourceType":"module"}