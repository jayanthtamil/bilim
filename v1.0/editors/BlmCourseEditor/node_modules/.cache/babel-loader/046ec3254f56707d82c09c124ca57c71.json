{"ast":null,"code":"import { findObject, isButtonComponent, isButtonRepeater, isMediaComponent, isMediaRepeater, isRepeaterComponent, isSoundComponent, isSoundRepeater } from \"utils\";\nimport { createButtonComponent, createMediaComponent, createSoundComponent } from \"../core\";\nimport { getContentTemplateModel } from \"../model\";\nimport { setContentTemplateHTML } from \"../html\";\nimport { copyDeletableComponent } from \"./common\";\nexport function copyContentTemplate(source, destination, isRelative = true) {\n  const key = isRelative ? \"id\" : \"mapping\";\n\n  if (source && destination) {\n    const content = getContentTemplateModel(source);\n    const newContent = getContentTemplateModel(destination);\n    const {\n      texts,\n      medias,\n      buttons,\n      sounds,\n      repeater\n    } = content;\n    const {\n      texts: newTexts,\n      medias: newMedias,\n      buttons: newButtons,\n      sounds: newSounds,\n      repeater: newRepeater\n    } = newContent;\n    copyTextComponents(texts, newTexts, key);\n    copyMediaComponents(medias, [...newMedias, ...(newRepeater.medias || [])], key);\n    copyButtonComponents(buttons, [...newButtons, ...(newRepeater.buttons || [])], key);\n    copySoundComponents(sounds, [...newSounds, ...(newRepeater.sounds || [])], key);\n    copyRepeaterComponents(repeater.medias, newRepeater.medias, newMedias, key);\n    copyRepeaterComponents(repeater.buttons, newRepeater.buttons, newButtons, key);\n    copyRepeaterComponents(repeater.sounds, newRepeater.sounds, newSounds, key);\n    return setContentTemplateHTML(destination, newContent);\n  }\n\n  return source.html;\n}\n\nfunction copyTextComponents(sources, destinations, key) {\n  if (sources && destinations) {\n    sources.forEach(source => {\n      const destination = findComponent(destinations, key, source[key]);\n\n      if (destination) {\n        copyTextComponent(source, destination);\n      }\n    });\n  }\n}\n\nfunction copyMediaComponents(sources, destinations, key) {\n  if (sources && destinations) {\n    sources.forEach(source => {\n      const destination = findComponent(destinations, key, source[key]);\n\n      if (destination) {\n        if (isMediaComponent(destination)) {\n          copyMediaComponent(source, destination, key);\n        } else {\n          copyToRepeaterComponent(source, destination, key);\n        }\n      }\n    });\n  }\n}\n\nfunction copyButtonComponents(sources, destinations, key) {\n  if (sources && destinations) {\n    sources.forEach(source => {\n      const destination = findComponent(destinations, key, source[key]);\n\n      if (destination) {\n        if (isButtonComponent(destination)) {\n          copyButtonComponent(source, destination);\n        } else {\n          copyToRepeaterComponent(source, destination, key);\n        }\n      }\n    });\n  }\n}\n\nfunction copySoundComponents(sources, destinations, key) {\n  if (sources && destinations) {\n    sources.forEach(source => {\n      const destination = findComponent(destinations, key, source[key]);\n\n      if (destination) {\n        if (isSoundComponent(destination)) {\n          copySoundComponent(source, destination);\n        } else {\n          copyToRepeaterComponent(source, destination, key);\n        }\n      }\n    });\n  }\n}\n\nfunction copyRepeaterComponents(sources, destinations = [], components, key) {\n  if (sources) {\n    sources.forEach((source, ind) => {\n      if (key === \"id\") {\n        const destination = destinations[ind];\n\n        if (destination) {\n          copyRepeaterComponent(source, destination, key);\n        }\n      } else {\n        const arr = findComponents([...destinations, ...components], source[key]);\n\n        if (arr) {\n          for (let i = 0; i < (arr === null || arr === void 0 ? void 0 : arr.length); i++) {\n            const destination = arr[i];\n\n            if (isRepeaterComponent(destination)) {\n              copyRepeaterComponent(source, destination, key);\n              break;\n            } else {\n              copyFromRepeaterComponent(source, destination, key, i);\n            }\n          }\n        }\n      }\n    });\n  }\n}\n\nfunction copyTextComponent(source, destination) {\n  if (source && destination) {\n    destination.value = source.value;\n    destination.isEdited = true;\n    copyDeletableComponent(source, destination);\n  }\n}\n\nfunction copyMediaComponent(source, destination, key) {\n  if (source && destination) {\n    destination.variant = source.variant;\n    destination.value = source.value;\n    destination.isEdited = Boolean(source.variant || source.value); //While switch between templates, default image size is changed for non-edited media\n\n    if (key === \"id\") {\n      destination.format = source.format;\n    }\n\n    copyDeletableComponent(source, destination);\n  }\n}\n\nfunction copyButtonComponent(source, destination) {\n  if (source && destination) {\n    destination.value = source.value;\n    destination.isEdited = true;\n    copyDeletableComponent(source, destination);\n  }\n}\n\nfunction copySoundComponent(source, destination) {\n  if (source && destination) {\n    destination.value = source.value;\n    destination.isEdited = true;\n    copyDeletableComponent(source, destination);\n  }\n}\n\nfunction copyRepeaterComponent(source, destination, key) {\n  var _destination$value$le, _destination$value;\n\n  if (isMediaRepeater(source) && isMediaRepeater(destination) && source.value && destination.value) {\n    destination.value = source.value.map(item => {\n      const newItem = { ...item\n      };\n      copyMediaComponent(item, newItem, key);\n      return newItem;\n    });\n    destination.isEdited = true;\n  } else if (isButtonRepeater(source) && isButtonRepeater(destination) && source.value && destination.value) {\n    destination.value = source.value.map(item => {\n      const newItem = { ...item\n      };\n      copyButtonComponent(item, newItem);\n      return newItem;\n    });\n    destination.isEdited = true;\n  } else if (isSoundRepeater(source) && isSoundRepeater(destination) && source.value && destination.value) {\n    destination.value = source.value.map(item => {\n      const newItem = { ...item\n      };\n      copySoundComponent(item, newItem);\n      return newItem;\n    });\n    destination.isEdited = true;\n  }\n\n  if (destination.isEdited && ((_destination$value$le = (_destination$value = destination.value) === null || _destination$value === void 0 ? void 0 : _destination$value.length) !== null && _destination$value$le !== void 0 ? _destination$value$le : 0) > destination.maximum) {\n    var _destination$value2;\n\n    (_destination$value2 = destination.value) === null || _destination$value2 === void 0 ? void 0 : _destination$value2.slice(0, destination.maximum);\n  }\n}\n\nfunction copyToRepeaterComponent(source, destination, key) {\n  var _destination$value$le2, _destination$value3;\n\n  let component;\n\n  if (!destination.isEdited) {\n    destination.value = [];\n    destination.isEdited = true;\n  }\n\n  if (((_destination$value$le2 = (_destination$value3 = destination.value) === null || _destination$value3 === void 0 ? void 0 : _destination$value3.length) !== null && _destination$value$le2 !== void 0 ? _destination$value$le2 : 0) > destination.maximum) {\n    return;\n  }\n\n  if (isMediaComponent(source) && isMediaRepeater(destination)) {\n    component = createMediaComponent(destination);\n    copyMediaComponent(source, component, key);\n  } else if (isButtonComponent(source)) {\n    component = createButtonComponent(destination);\n    copyButtonComponent(source, component);\n  } else if (isSoundComponent(source)) {\n    component = createSoundComponent(destination);\n    copySoundComponent(source, component);\n  }\n\n  if (component) {\n    var _destination$value4;\n\n    (_destination$value4 = destination.value) === null || _destination$value4 === void 0 ? void 0 : _destination$value4.push(component);\n  }\n}\n\nfunction copyFromRepeaterComponent(source, destination, key, ind) {\n  var _source$value, _source$value2;\n\n  if (((_source$value = source.value) === null || _source$value === void 0 ? void 0 : _source$value.length) && ind < ((_source$value2 = source.value) === null || _source$value2 === void 0 ? void 0 : _source$value2.length)) {\n    if (isMediaRepeater(source) && isMediaComponent(destination)) {\n      const component = source.value[ind];\n      copyMediaComponent(component, destination, key);\n    } else if (isButtonRepeater(source) && isButtonComponent(destination)) {\n      const component = source.value[ind];\n      copyButtonComponent(component, destination);\n    } else if (isSoundRepeater(source) && isSoundComponent(destination)) {\n      const component = source.value[ind];\n      copySoundComponent(component, destination);\n    }\n  }\n}\n\nfunction findComponent(components, key, value) {\n  if (!value) {\n    return undefined;\n  } else if (key === \"id\") {\n    return findObject(components, value, key);\n  } else {\n    const arr = value.split(\" \");\n\n    for (let i = 0; i < 2; i++) {\n      for (let j = 0; j < arr.length; j++) {\n        const regex = createRegex(arr[j]);\n\n        if (regex) {\n          const component = components.find(comp => checkComponent(comp, regex));\n\n          if (component) {\n            return component;\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction findComponents(components, value) {\n  if (!value) {\n    return undefined;\n  } else {\n    const arr = value.split(\" \");\n\n    for (let i = 0; i < arr.length; i++) {\n      const regex = createRegex(arr[i]);\n\n      if (regex) {\n        const result = components.filter(comp => checkComponent(comp, regex));\n\n        if (result.length) {\n          return result;\n        }\n      }\n    }\n  }\n}\n\nfunction createRegex(str, isStatic = true) {\n  const pattern = isStatic ? str : str.replace(/(\\d+|x)$/g, \"(\\\\d+|x)\");\n  return isStatic || str !== pattern ? new RegExp(`^${pattern}$`, \"g\") : undefined;\n}\n\nfunction checkComponent(component, regex) {\n  var _component$mapping;\n\n  const maps = (_component$mapping = component.mapping) === null || _component$mapping === void 0 ? void 0 : _component$mapping.split(\" \");\n\n  if (maps) {\n    for (let i = 0; i < maps.length; i++) {\n      if (regex.test(maps[i])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/swap/content.ts"],"names":["findObject","isButtonComponent","isButtonRepeater","isMediaComponent","isMediaRepeater","isRepeaterComponent","isSoundComponent","isSoundRepeater","createButtonComponent","createMediaComponent","createSoundComponent","getContentTemplateModel","setContentTemplateHTML","copyDeletableComponent","copyContentTemplate","source","destination","isRelative","key","content","newContent","texts","medias","buttons","sounds","repeater","newTexts","newMedias","newButtons","newSounds","newRepeater","copyTextComponents","copyMediaComponents","copyButtonComponents","copySoundComponents","copyRepeaterComponents","html","sources","destinations","forEach","findComponent","copyTextComponent","copyMediaComponent","copyToRepeaterComponent","copyButtonComponent","copySoundComponent","components","ind","copyRepeaterComponent","arr","findComponents","i","length","copyFromRepeaterComponent","value","isEdited","variant","Boolean","format","map","item","newItem","maximum","slice","component","push","undefined","split","j","regex","createRegex","find","comp","checkComponent","result","filter","str","isStatic","pattern","replace","RegExp","maps","mapping","test"],"mappings":"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","sourcesContent":["import {\r\n  RepeaterComponent,\r\n  MediaComponent,\r\n  TextComponent,\r\n  CourseElementTemplate,\r\n  ButtonComponent,\r\n  SoundComponent,\r\n  MediaRepeaterComponent,\r\n  BaseComponent,\r\n  ButtonRepeaterComponent,\r\n  SoundRepeaterComponent,\r\n} from \"types\";\r\nimport {\r\n  findObject,\r\n  isButtonComponent,\r\n  isButtonRepeater,\r\n  isMediaComponent,\r\n  isMediaRepeater,\r\n  isRepeaterComponent,\r\n  isSoundComponent,\r\n  isSoundRepeater,\r\n} from \"utils\";\r\nimport { createButtonComponent, createMediaComponent, createSoundComponent } from \"../core\";\r\nimport { getContentTemplateModel } from \"../model\";\r\nimport { setContentTemplateHTML } from \"../html\";\r\nimport { copyDeletableComponent } from \"./common\";\r\n\r\ntype SearchKeys = \"id\" | \"mapping\";\r\n\r\nexport function copyContentTemplate(\r\n  source: CourseElementTemplate,\r\n  destination: CourseElementTemplate,\r\n  isRelative = true\r\n) {\r\n  const key = isRelative ? \"id\" : \"mapping\";\r\n\r\n  if (source && destination) {\r\n    const content = getContentTemplateModel(source);\r\n    const newContent = getContentTemplateModel(destination);\r\n    const { texts, medias, buttons, sounds, repeater } = content;\r\n    const {\r\n      texts: newTexts,\r\n      medias: newMedias,\r\n      buttons: newButtons,\r\n      sounds: newSounds,\r\n      repeater: newRepeater,\r\n    } = newContent;\r\n\r\n    copyTextComponents(texts, newTexts, key);\r\n    copyMediaComponents(medias, [...newMedias, ...(newRepeater.medias || [])], key);\r\n    copyButtonComponents(buttons, [...newButtons, ...(newRepeater.buttons || [])], key);\r\n    copySoundComponents(sounds, [...newSounds, ...(newRepeater.sounds || [])], key);\r\n    copyRepeaterComponents(repeater.medias, newRepeater.medias, newMedias, key);\r\n    copyRepeaterComponents(repeater.buttons, newRepeater.buttons, newButtons, key);\r\n    copyRepeaterComponents(repeater.sounds, newRepeater.sounds, newSounds, key);\r\n\r\n    return setContentTemplateHTML(destination, newContent);\r\n  }\r\n  return source.html;\r\n}\r\n\r\nfunction copyTextComponents(\r\n  sources: TextComponent[],\r\n  destinations: TextComponent[],\r\n  key: SearchKeys\r\n) {\r\n  if (sources && destinations) {\r\n    sources.forEach((source) => {\r\n      const destination = findComponent(destinations, key, source[key]);\r\n\r\n      if (destination) {\r\n        copyTextComponent(source, destination);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction copyMediaComponents(\r\n  sources: MediaComponent[],\r\n  destinations: (MediaComponent | MediaRepeaterComponent)[],\r\n  key: SearchKeys\r\n) {\r\n  if (sources && destinations) {\r\n    sources.forEach((source) => {\r\n      const destination = findComponent(destinations, key, source[key]);\r\n\r\n      if (destination) {\r\n        if (isMediaComponent(destination)) {\r\n          copyMediaComponent(source, destination, key);\r\n        } else {\r\n          copyToRepeaterComponent(source, destination, key);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction copyButtonComponents(\r\n  sources: ButtonComponent[],\r\n  destinations: (ButtonComponent | ButtonRepeaterComponent)[],\r\n  key: SearchKeys\r\n) {\r\n  if (sources && destinations) {\r\n    sources.forEach((source) => {\r\n      const destination = findComponent(destinations, key, source[key]);\r\n\r\n      if (destination) {\r\n        if (isButtonComponent(destination)) {\r\n          copyButtonComponent(source, destination);\r\n        } else {\r\n          copyToRepeaterComponent(source, destination, key);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction copySoundComponents(\r\n  sources: SoundComponent[],\r\n  destinations: (SoundComponent | SoundRepeaterComponent)[],\r\n  key: SearchKeys\r\n) {\r\n  if (sources && destinations) {\r\n    sources.forEach((source) => {\r\n      const destination = findComponent(destinations, key, source[key]);\r\n\r\n      if (destination) {\r\n        if (isSoundComponent(destination)) {\r\n          copySoundComponent(source, destination);\r\n        } else {\r\n          copyToRepeaterComponent(source, destination, key);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction copyRepeaterComponents(\r\n  sources: RepeaterComponent[] | undefined,\r\n  destinations: RepeaterComponent[] | undefined = [],\r\n  components: (MediaComponent | ButtonComponent | SoundComponent)[],\r\n  key: SearchKeys\r\n) {\r\n  if (sources) {\r\n    sources.forEach((source, ind) => {\r\n      if (key === \"id\") {\r\n        const destination = destinations[ind];\r\n\r\n        if (destination) {\r\n          copyRepeaterComponent(source, destination, key);\r\n        }\r\n      } else {\r\n        const arr = findComponents([...destinations, ...components], source[key]);\r\n\r\n        if (arr) {\r\n          for (let i = 0; i < arr?.length; i++) {\r\n            const destination = arr[i];\r\n\r\n            if (isRepeaterComponent(destination)) {\r\n              copyRepeaterComponent(source, destination, key);\r\n              break;\r\n            } else {\r\n              copyFromRepeaterComponent(source, destination, key, i);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction copyTextComponent(source: TextComponent, destination: TextComponent) {\r\n  if (source && destination) {\r\n    destination.value = source.value;\r\n    destination.isEdited = true;\r\n\r\n    copyDeletableComponent(source, destination);\r\n  }\r\n}\r\n\r\nfunction copyMediaComponent(source: MediaComponent, destination: MediaComponent, key: SearchKeys) {\r\n  if (source && destination) {\r\n    destination.variant = source.variant;\r\n    destination.value = source.value;\r\n    destination.isEdited = Boolean(source.variant || source.value); //While switch between templates, default image size is changed for non-edited media\r\n\r\n    if (key === \"id\") {\r\n      destination.format = source.format;\r\n    }\r\n\r\n    copyDeletableComponent(source, destination);\r\n  }\r\n}\r\n\r\nfunction copyButtonComponent(source: ButtonComponent, destination: ButtonComponent) {\r\n  if (source && destination) {\r\n    destination.value = source.value;\r\n    destination.isEdited = true;\r\n\r\n    copyDeletableComponent(source, destination);\r\n  }\r\n}\r\n\r\nfunction copySoundComponent(source: SoundComponent, destination: SoundComponent) {\r\n  if (source && destination) {\r\n    destination.value = source.value;\r\n    destination.isEdited = true;\r\n\r\n    copyDeletableComponent(source, destination);\r\n  }\r\n}\r\n\r\nfunction copyRepeaterComponent(\r\n  source: RepeaterComponent,\r\n  destination: RepeaterComponent,\r\n  key: SearchKeys\r\n) {\r\n  if (\r\n    isMediaRepeater(source) &&\r\n    isMediaRepeater(destination) &&\r\n    source.value &&\r\n    destination.value\r\n  ) {\r\n    destination.value = source.value.map((item) => {\r\n      const newItem = { ...item };\r\n\r\n      copyMediaComponent(item, newItem, key);\r\n\r\n      return newItem;\r\n    });\r\n    destination.isEdited = true;\r\n  } else if (\r\n    isButtonRepeater(source) &&\r\n    isButtonRepeater(destination) &&\r\n    source.value &&\r\n    destination.value\r\n  ) {\r\n    destination.value = source.value.map((item) => {\r\n      const newItem = { ...item };\r\n\r\n      copyButtonComponent(item, newItem);\r\n\r\n      return newItem;\r\n    });\r\n    destination.isEdited = true;\r\n  } else if (\r\n    isSoundRepeater(source) &&\r\n    isSoundRepeater(destination) &&\r\n    source.value &&\r\n    destination.value\r\n  ) {\r\n    destination.value = source.value.map((item) => {\r\n      const newItem = { ...item };\r\n\r\n      copySoundComponent(item, newItem);\r\n\r\n      return newItem;\r\n    });\r\n    destination.isEdited = true;\r\n  }\r\n\r\n  if (destination.isEdited && (destination.value?.length ?? 0) > destination.maximum) {\r\n    destination.value?.slice(0, destination.maximum);\r\n  }\r\n}\r\n\r\nfunction copyToRepeaterComponent(\r\n  source: MediaComponent | ButtonComponent | SoundComponent,\r\n  destination: RepeaterComponent,\r\n  key: SearchKeys\r\n) {\r\n  let component: MediaComponent | ButtonComponent | SoundComponent | undefined;\r\n\r\n  if (!destination.isEdited) {\r\n    destination.value = [];\r\n    destination.isEdited = true;\r\n  }\r\n\r\n  if ((destination.value?.length ?? 0) > destination.maximum) {\r\n    return;\r\n  }\r\n\r\n  if (isMediaComponent(source) && isMediaRepeater(destination)) {\r\n    component = createMediaComponent(destination);\r\n\r\n    copyMediaComponent(source, component, key);\r\n  } else if (isButtonComponent(source)) {\r\n    component = createButtonComponent(destination);\r\n\r\n    copyButtonComponent(source, component);\r\n  } else if (isSoundComponent(source)) {\r\n    component = createSoundComponent(destination);\r\n\r\n    copySoundComponent(source, component);\r\n  }\r\n\r\n  if (component) {\r\n    destination.value?.push(component);\r\n  }\r\n}\r\n\r\nfunction copyFromRepeaterComponent(\r\n  source: RepeaterComponent,\r\n  destination: MediaComponent | ButtonComponent | SoundComponent,\r\n  key: SearchKeys,\r\n  ind: number\r\n) {\r\n  if (source.value?.length && ind < source.value?.length) {\r\n    if (isMediaRepeater(source) && isMediaComponent(destination)) {\r\n      const component = source.value[ind];\r\n\r\n      copyMediaComponent(component, destination, key);\r\n    } else if (isButtonRepeater(source) && isButtonComponent(destination)) {\r\n      const component = source.value[ind];\r\n\r\n      copyButtonComponent(component, destination);\r\n    } else if (isSoundRepeater(source) && isSoundComponent(destination)) {\r\n      const component = source.value[ind];\r\n\r\n      copySoundComponent(component, destination);\r\n    }\r\n  }\r\n}\r\n\r\nfunction findComponent<T extends BaseComponent<any>>(\r\n  components: T[],\r\n  key: SearchKeys,\r\n  value?: string\r\n) {\r\n  if (!value) {\r\n    return undefined;\r\n  } else if (key === \"id\") {\r\n    return findObject(components, value, key);\r\n  } else {\r\n    const arr = value.split(\" \");\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n      for (let j = 0; j < arr.length; j++) {\r\n        const regex = createRegex(arr[j]);\r\n        if (regex) {\r\n          const component = components.find((comp) => checkComponent(comp, regex));\r\n\r\n          if (component) {\r\n            return component;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction findComponents<T extends BaseComponent<any>>(components: T[], value?: string) {\r\n  if (!value) {\r\n    return undefined;\r\n  } else {\r\n    const arr = value.split(\" \");\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      const regex = createRegex(arr[i]);\r\n\r\n      if (regex) {\r\n        const result = components.filter((comp) => checkComponent(comp, regex));\r\n\r\n        if (result.length) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createRegex(str: string, isStatic = true) {\r\n  const pattern = isStatic ? str : str.replace(/(\\d+|x)$/g, \"(\\\\d+|x)\");\r\n\r\n  return isStatic || str !== pattern ? new RegExp(`^${pattern}$`, \"g\") : undefined;\r\n}\r\n\r\nfunction checkComponent(component: BaseComponent<any>, regex: RegExp) {\r\n  const maps = component.mapping?.split(\" \");\r\n\r\n  if (maps) {\r\n    for (let i = 0; i < maps.length; i++) {\r\n      if (regex.test(maps[i])) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}