{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\repository\\\\media-card\\\\BlmMediaCard.tsx\";\nimport React, { forwardRef, Fragment, useMemo } from \"react\";\nimport clsx from \"clsx\";\nimport { MediaVariants } from \"editor-constants\";\nimport { isMediaImage, isMediaButton, isMediaSlideshow, getActionDetails, isMediaHotspot, isMediaFlipCard, isMediaHotspot360 } from \"utils\";\nimport \"./styles.scss\";\n\nfunction getLabel(media) {\n  switch (media) {\n    case MediaVariants.Image:\n      return \"Image\";\n\n    case MediaVariants.Slideshow:\n      return \"Slideshow\";\n\n    case MediaVariants.Button:\n      return \"Button\";\n\n    case MediaVariants.FlipCard:\n      return \"Flipcard\";\n\n    case MediaVariants.Video:\n      return \"Video\";\n\n    case MediaVariants.VideoStandard:\n      return \"Video Standard\";\n\n    case MediaVariants.VideoExternal:\n      return \"Video External\";\n\n    case MediaVariants.SynchroVideo:\n      return \"Synchro Video\";\n\n    case MediaVariants.Custom:\n      return \"Custom\";\n\n    case MediaVariants.Target:\n      return \"Target\";\n\n    case MediaVariants.Hotspot:\n    case MediaVariants.Hotspot360:\n      return \"Hotspot\";\n\n    default:\n      return \"Media\";\n  }\n}\n\nconst getImage = data => {\n  if (isMediaImage(data)) {\n    return data.value.media;\n  } else if (isMediaSlideshow(data)) {\n    return data.value.items && data.value.items[0] && data.value.items[0].media;\n  } else if (isMediaButton(data)) {\n    return data.value.out;\n  } else if (isMediaFlipCard(data)) {\n    var _data$value$recto$med;\n\n    return (_data$value$recto$med = data.value.recto.media) !== null && _data$value$recto$med !== void 0 ? _data$value$recto$med : data.value.verso.media;\n  } else if (isMediaHotspot(data)) {\n    return data.value.media;\n  } else if (isMediaHotspot360(data)) {\n    var _data$value$items$;\n\n    return (_data$value$items$ = data.value.items[0]) === null || _data$value$items$ === void 0 ? void 0 : _data$value$items$.media;\n  }\n};\n\nconst getTitle = data => {\n  if (isMediaButton(data)) {\n    return data.value.title;\n  }\n\n  if (isMediaFlipCard(data)) {\n    return data.value.recto.title;\n  }\n};\n\nconst getAction = data => {\n  if (isMediaButton(data) || isMediaFlipCard(data)) {\n    return data.value.clickAction;\n  }\n};\n\nconst BlmMediaCard = (props, ref) => {\n  const {\n    data,\n    order,\n    isSelected,\n    isDeletable,\n    isMediaDuplicate,\n    drag,\n    className,\n    structure,\n    onClick,\n    onDelete,\n    onDuplicate,\n    index,\n    ...other\n  } = props;\n  const {\n    variant\n  } = data;\n  const image = getImage(data);\n  const label = getLabel(variant);\n  const mediaAction = getAction(data);\n  const [action, params] = useMemo(() => getActionDetails(mediaAction, structure), [mediaAction, structure]);\n\n  const handleClick = event => {\n    if (onClick) {\n      onClick(data);\n    }\n  };\n\n  const handleDeleteClick = event => {\n    if (isDeletable && onDelete) {\n      onDelete(data);\n    }\n  };\n\n  const handleDuplicateClick = () => {\n    if (onDuplicate && (index || index === 0)) {\n      onDuplicate(index);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: ref,\n    className: clsx(\"media-card-wrapper\", variant, className, {\n      selected: isSelected,\n      deletable: isDeletable,\n      duplicate: isMediaDuplicate\n    })\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-card-box\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"media-card-img-wrapper\", {\n      \"has-image\": image\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, image && /*#__PURE__*/React.createElement(\"img\", {\n    alt: image.name,\n    src: image.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-card-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, getTitle(data)), action && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-card-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, action)), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"media-card-parameters\", {\n      \"show-icon\": action && !params\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, params))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-card-order-lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, order), drag && /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"media-card-drag-btn\"\n  }, drag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 18\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-card-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-card-delete-btn\",\n    onClick: handleDeleteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-card-duplicate-btn\",\n    onClick: handleDuplicateClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default forwardRef(BlmMediaCard);","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/repository/media-card/BlmMediaCard.tsx"],"names":["React","forwardRef","Fragment","useMemo","clsx","MediaVariants","isMediaImage","isMediaButton","isMediaSlideshow","getActionDetails","isMediaHotspot","isMediaFlipCard","isMediaHotspot360","getLabel","media","Image","Slideshow","Button","FlipCard","Video","VideoStandard","VideoExternal","SynchroVideo","Custom","Target","Hotspot","Hotspot360","getImage","data","value","items","out","recto","verso","getTitle","title","getAction","clickAction","BlmMediaCard","props","ref","order","isSelected","isDeletable","isMediaDuplicate","drag","className","structure","onClick","onDelete","onDuplicate","index","other","variant","image","label","mediaAction","action","params","handleClick","event","handleDeleteClick","handleDuplicateClick","selected","deletable","duplicate","name","url"],"mappings":"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","sourcesContent":["import React, {\r\n  forwardRef,\r\n  ForwardRefRenderFunction,\r\n  Fragment,\r\n  HTMLAttributes,\r\n  MouseEvent,\r\n  useMemo,\r\n} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { DraggableProvidedDragHandleProps } from \"react-beautiful-dnd\";\r\n\r\nimport { MediaComponent } from \"types\";\r\nimport { MediaVariants } from \"editor-constants\";\r\nimport {\r\n  isMediaImage,\r\n  isMediaButton,\r\n  isMediaSlideshow,\r\n  getActionDetails,\r\n  isMediaHotspot,\r\n  isMediaFlipCard,\r\n  isMediaHotspot360,\r\n} from \"utils\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface CompProps extends ContainerProps, Omit<HTMLAttributes<HTMLDivElement>, \"onClick\"> {\r\n  data: MediaComponent;\r\n  order: number;\r\n  isSelected?: boolean;\r\n  drag?: DraggableProvidedDragHandleProps;\r\n  isDeletable?: boolean;\r\n  isMediaDuplicate?: boolean;\r\n  onClick?: (data: MediaComponent) => void;\r\n  onDelete?: (data: MediaComponent) => void;\r\n  onDuplicate?: (index: number) => void;\r\n  index?: number;\r\n}\r\n\r\nfunction getLabel(media?: MediaVariants) {\r\n  switch (media) {\r\n    case MediaVariants.Image:\r\n      return \"Image\";\r\n    case MediaVariants.Slideshow:\r\n      return \"Slideshow\";\r\n    case MediaVariants.Button:\r\n      return \"Button\";\r\n    case MediaVariants.FlipCard:\r\n      return \"Flipcard\";\r\n    case MediaVariants.Video:\r\n      return \"Video\";\r\n    case MediaVariants.VideoStandard:\r\n      return \"Video Standard\";\r\n    case MediaVariants.VideoExternal:\r\n      return \"Video External\";\r\n    case MediaVariants.SynchroVideo:\r\n      return \"Synchro Video\";\r\n    case MediaVariants.Custom:\r\n      return \"Custom\";\r\n    case MediaVariants.Target:\r\n      return \"Target\";\r\n    case MediaVariants.Hotspot:\r\n    case MediaVariants.Hotspot360:\r\n      return \"Hotspot\";\r\n    default:\r\n      return \"Media\";\r\n  }\r\n}\r\n\r\nconst getImage = (data: MediaComponent) => {\r\n  if (isMediaImage(data)) {\r\n    return data.value.media;\r\n  } else if (isMediaSlideshow(data)) {\r\n    return data.value.items && data.value.items[0] && data.value.items[0].media;\r\n  } else if (isMediaButton(data)) {\r\n    return data.value.out;\r\n  } else if (isMediaFlipCard(data)) {\r\n    return data.value.recto.media ?? data.value.verso.media;\r\n  } else if (isMediaHotspot(data)) {\r\n    return data.value.media;\r\n  } else if (isMediaHotspot360(data)) {\r\n    return data.value.items[0]?.media;\r\n  }\r\n};\r\n\r\nconst getTitle = (data: MediaComponent) => {\r\n  if (isMediaButton(data)) {\r\n    return data.value.title;\r\n  }\r\n  if (isMediaFlipCard(data)) {\r\n    return data.value.recto.title;\r\n  }\r\n};\r\n\r\nconst getAction = (data: MediaComponent) => {\r\n  if (isMediaButton(data) || isMediaFlipCard(data)) {\r\n    return data.value.clickAction;\r\n  }\r\n};\r\n\r\nconst BlmMediaCard: ForwardRefRenderFunction<HTMLDivElement, CompProps> = (props, ref) => {\r\n  const {\r\n    data,\r\n    order,\r\n    isSelected,\r\n    isDeletable,\r\n    isMediaDuplicate,\r\n    drag,\r\n    className,\r\n    structure,\r\n    onClick,\r\n    onDelete,\r\n    onDuplicate,\r\n    index,\r\n    ...other\r\n  } = props;\r\n  const { variant } = data;\r\n  const image = getImage(data);\r\n  const label = getLabel(variant);\r\n  const mediaAction = getAction(data);\r\n  const [action, params] = useMemo(\r\n    () => getActionDetails(mediaAction, structure),\r\n    [mediaAction, structure]\r\n  );\r\n  \r\n  const handleClick = (event: MouseEvent) => {\r\n    if (onClick) {\r\n      onClick(data);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = (event: MouseEvent) => {\r\n    if (isDeletable && onDelete) {\r\n      onDelete(data);\r\n    }\r\n  };\r\n\r\n  const handleDuplicateClick = () => {\r\n    if (onDuplicate && (index || index === 0)) {\r\n      onDuplicate(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={clsx(\"media-card-wrapper\", variant, className, {\r\n        selected: isSelected,\r\n        deletable: isDeletable,\r\n        duplicate: isMediaDuplicate\r\n      })}\r\n      {...other}\r\n    >\r\n            <div className=\"media-card-box\" onClick={handleClick}>\r\n        <div className={clsx(\"media-card-img-wrapper\", { \"has-image\": image })}>\r\n          {image && <img alt={image.name} src={image.url} />}\r\n        </div>\r\n        <div className=\"media-card-lbl\">{label}</div>\r\n        <div className=\"media-card-title\">{getTitle(data)}</div>\r\n        {action && (\r\n          <Fragment>\r\n            <div className=\"media-card-action\">\r\n              <span>{action}</span>\r\n            </div>\r\n            <div\r\n              className={clsx(\"media-card-parameters\", {\r\n                \"show-icon\": action && !params,\r\n              })}\r\n            >\r\n              <span>{params}</span>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n        <div className=\"media-card-order-lbl\">{order}</div>\r\n        {drag && <div className=\"media-card-drag-btn\" {...drag} />}\r\n      </div>\r\n      <div className=\"media-card-main\">\r\n        <div className=\"media-card-delete-btn\" onClick={handleDeleteClick} />\r\n        <div className=\"media-card-duplicate-btn\" onClick={handleDuplicateClick} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default forwardRef(BlmMediaCard);\r\n"]},"metadata":{},"sourceType":"module"}