{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\shared\\\\transform\\\\BlmTransformComponent.tsx\";\nimport React, { useMemo, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { HandleRoles } from \"./types\";\nimport { useTransformContext } from \"./utils\";\nimport BlmTransformHandle from \"./BlmTransformHandle\";\nimport \"./styles.scss\";\nconst defaultHandles = [\"n\", \"e\", \"s\", \"w\", \"ne\", \"se\", \"nw\", \"sw\"];\n\nfunction BlmTransformComponent(props) {\n  const {\n    data,\n    hanldes,\n    constraints,\n    children,\n    className,\n    onMouseDown,\n    onChange,\n    ...others\n  } = props;\n  const [drag, setDrag] = useState();\n  const transform = useTransformContext();\n  const curHandles = hanldes === \"all\" ? defaultHandles : hanldes === null || hanldes === void 0 ? void 0 : hanldes.split(\",\");\n  const styles = useMemo(() => {\n    var _ref;\n\n    const {\n      x = 0,\n      y = 0,\n      width = 0,\n      height = 0\n    } = (_ref = drag !== null && drag !== void 0 ? drag : data) !== null && _ref !== void 0 ? _ref : {};\n    return {\n      left: x,\n      top: y,\n      width,\n      height\n    };\n  }, [data, drag]);\n\n  const startDrag = (event, role) => {\n    if (data) {\n      const model = { ...data,\n        rotation: 0\n      };\n      transform.startDrag(event, role, model, setDrag, constraints, onChange);\n    }\n  };\n\n  const handleMouseDown = event => {\n    startDrag(event, HandleRoles.MOVE);\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  const handleChildMouseDown = (event, role) => {\n    startDrag(event, role);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: styles,\n    className: clsx(\"transform-wrapper\", className),\n    onMouseDown: handleMouseDown\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), children, curHandles === null || curHandles === void 0 ? void 0 : curHandles.map(item => /*#__PURE__*/React.createElement(BlmTransformHandle, {\n    key: item,\n    type: item,\n    onMouseDown: handleChildMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default BlmTransformComponent;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/shared/transform/BlmTransformComponent.tsx"],"names":["React","useMemo","useState","clsx","HandleRoles","useTransformContext","BlmTransformHandle","defaultHandles","BlmTransformComponent","props","data","hanldes","constraints","children","className","onMouseDown","onChange","others","drag","setDrag","transform","curHandles","split","styles","x","y","width","height","left","top","startDrag","event","role","model","rotation","handleMouseDown","MOVE","handleChildMouseDown","map","item"],"mappings":"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","sourcesContent":["import React, { HTMLAttributes, MouseEvent, useMemo, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { DragGeometry, HandleRoles, IConstraint } from \"./types\";\r\nimport { useTransformContext } from \"./utils\";\r\nimport BlmTransformHandle from \"./BlmTransformHandle\";\r\nimport \"./styles.scss\";\r\n\r\nexport interface TrasnformProps extends Omit<HTMLAttributes<HTMLDivElement>, \"onChange\"> {\r\n  data?: DragGeometry;\r\n  hanldes?: string;\r\n  constraints?: IConstraint[];\r\n  onChange?: (data: DragGeometry) => void;\r\n}\r\n\r\nconst defaultHandles = [\"n\", \"e\", \"s\", \"w\", \"ne\", \"se\", \"nw\", \"sw\"];\r\n\r\nfunction BlmTransformComponent(props: TrasnformProps) {\r\n  const { data, hanldes, constraints, children, className, onMouseDown, onChange, ...others } =\r\n    props;\r\n  const [drag, setDrag] = useState<DragGeometry>();\r\n  const transform = useTransformContext();\r\n  const curHandles = hanldes === \"all\" ? defaultHandles : hanldes?.split(\",\");\r\n\r\n  const styles = useMemo(() => {\r\n    const { x = 0, y = 0, width = 0, height = 0 } = drag ?? data ?? {};\r\n\r\n    return {\r\n      left: x,\r\n      top: y,\r\n      width,\r\n      height,\r\n    };\r\n  }, [data, drag]);\r\n\r\n  const startDrag = (event: MouseEvent, role: number) => {\r\n    if (data) {\r\n      const model = { ...data, rotation: 0 };\r\n\r\n      transform.startDrag(event, role, model, setDrag, constraints, onChange);\r\n    }\r\n  };\r\n\r\n  const handleMouseDown = (event: MouseEvent<HTMLDivElement>) => {\r\n    startDrag(event, HandleRoles.MOVE);\r\n\r\n    if (onMouseDown) {\r\n      onMouseDown(event);\r\n    }\r\n  };\r\n\r\n  const handleChildMouseDown = (event: MouseEvent, role: number) => {\r\n    startDrag(event, role);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={styles}\r\n      className={clsx(\"transform-wrapper\", className)}\r\n      onMouseDown={handleMouseDown}\r\n      {...others}\r\n    >\r\n      {children}\r\n      {curHandles?.map((item) => (\r\n        <BlmTransformHandle key={item} type={item} onMouseDown={handleChildMouseDown} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlmTransformComponent;\r\n"]},"metadata":{},"sourceType":"module"}