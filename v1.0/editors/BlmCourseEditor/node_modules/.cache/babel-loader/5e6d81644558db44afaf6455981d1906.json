{"ast":null,"code":"import { ButtonComponent, MediaComponent, MediaFormat, SoundComponent } from \"types\";\nimport { MediaFormats } from \"editor-constants\";\nimport { createStyleJsonFromString, createUUID, toNumber } from \"utils\";\nexport function createMediaConfig(config, variant) {\n  const {\n    mediatype,\n    format,\n    style,\n    saveincss\n  } = config;\n  const result = {};\n  result.variant = mediatype.split(\",\");\n  result.format = format.split(\",\");\n  result.style = style !== \"\" ? createStyleJsonFromString(style) : undefined;\n  result.saveInCSS = saveincss || false;\n  return result;\n}\nexport function updateMediaConfig(currentComponentConfig, previousComponentConfig) {\n  if (currentComponentConfig && previousComponentConfig) {\n    currentComponentConfig.variant = previousComponentConfig.variant;\n  }\n}\nexport function createMediaFormat(classList, style, options) {\n  const format = new MediaFormat();\n  Object.values(MediaFormats).forEach(value => {\n    if (classList.includes(value) && (options === null || options === void 0 ? void 0 : options.includes(value))) {\n      format.value = value;\n    }\n  });\n\n  if (style && style.width !== \"\") {\n    format.width = toNumber(style.width);\n  }\n\n  if (style && style.getPropertyValue && style.getPropertyValue(\"--blm_width\") !== \"\") {\n    format.width = toNumber(style.getPropertyValue(\"--blm_width\"));\n  }\n\n  if (style && style.height !== \"\") {\n    format.height = toNumber(style.height);\n  }\n\n  return format;\n}\nexport function createMediaComponent(repeater) {\n  var _component$config, _component$config2;\n\n  const {\n    id,\n    mediaConfig,\n    defaultClass = \"\"\n  } = repeater;\n  const classList = defaultClass.split(\" \");\n  const component = new MediaComponent();\n  component.id = createUUID();\n  component.repeaterId = id;\n  component.isCreated = true;\n  component.options = mediaConfig;\n  component.config = mediaConfig && createMediaConfig(mediaConfig);\n  component.format = createMediaFormat(classList, (_component$config = component.config) === null || _component$config === void 0 ? void 0 : _component$config.style, (_component$config2 = component.config) === null || _component$config2 === void 0 ? void 0 : _component$config2.format);\n  component.classList = classList;\n  return component;\n}\nexport function updateCreatedMediaComponet(repeater, component) {\n  if (repeater.value) {\n    component.variant = repeater.value[repeater.value.length - 1].variant;\n    component.format.height = repeater.value[repeater.value.length - 1].format.height;\n    component.format.width = repeater.value[repeater.value.length - 1].format.width;\n\n    if (repeater.value[repeater.value.length - 1].format.value) {\n      component.format.value = repeater.value[repeater.value.length - 1].format.value;\n    } else if (repeater.value[repeater.value.length - 1].config) {\n      var _repeater$value$confi;\n\n      component.format.value = (_repeater$value$confi = repeater.value[repeater.value.length - 1].config) === null || _repeater$value$confi === void 0 ? void 0 : _repeater$value$confi.format[0];\n    }\n\n    updateMediaConfig(component.config, repeater.value[repeater.value.length - 1].config);\n  }\n\n  component.isEdited = true;\n}\nexport const updateCreatedButtonComponent = (repeater, component) => {\n  component.buttonOptions.config = {};\n  component.buttonOptions.config.format = [\"auto\", \"pixelwidth\"];\n  component.buttonOptions.format = {};\n\n  if (repeater.value && repeater.value.length > 0) {\n    var _repeater$value, _repeater$value2;\n\n    component.buttonOptions.format.value = repeater.value[((_repeater$value = repeater.value) === null || _repeater$value === void 0 ? void 0 : _repeater$value.length) - 1].buttonOptions.format.value;\n    component.buttonOptions.format.width = repeater.value[((_repeater$value2 = repeater.value) === null || _repeater$value2 === void 0 ? void 0 : _repeater$value2.length) - 1].buttonOptions.format.width;\n  } else {\n    component.buttonOptions.format.value = MediaFormats.Auto;\n    component.buttonOptions.format.width = 0;\n  }\n\n  component.buttonOptions.format.defaultWidth = 200;\n};\nexport function createButtonComponent(repeater) {\n  const {\n    id,\n    defaultClass = \"\"\n  } = repeater;\n  const classList = defaultClass.split(\" \");\n  const component = new ButtonComponent();\n  component.id = createUUID();\n  component.repeaterId = id;\n  component.isCreated = true;\n  component.classList = classList;\n  return component;\n}\nexport function createSoundComponent(repeater) {\n  const {\n    id,\n    defaultClass = \"\"\n  } = repeater;\n  const classList = defaultClass.split(\" \");\n  const component = new SoundComponent();\n  component.id = createUUID();\n  component.repeaterId = id;\n  component.isCreated = true;\n  component.classList = classList;\n  return component;\n}","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/template-builders/core/content.ts"],"names":["ButtonComponent","MediaComponent","MediaFormat","SoundComponent","MediaFormats","createStyleJsonFromString","createUUID","toNumber","createMediaConfig","config","variant","mediatype","format","style","saveincss","result","split","undefined","saveInCSS","updateMediaConfig","currentComponentConfig","previousComponentConfig","createMediaFormat","classList","options","Object","values","forEach","value","includes","width","getPropertyValue","height","createMediaComponent","repeater","id","mediaConfig","defaultClass","component","repeaterId","isCreated","updateCreatedMediaComponet","length","isEdited","updateCreatedButtonComponent","buttonOptions","Auto","defaultWidth","createButtonComponent","createSoundComponent"],"mappings":"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","sourcesContent":["import {\r\n  ButtonComponent,\r\n  ButtonRepeaterComponent,\r\n  MediaComponent,\r\n  MediaConfig,\r\n  MediaConfigJSON,\r\n  MediaFormat,\r\n  MediaRepeaterComponent,\r\n  RepeaterComponent,\r\n  SimpleObject,\r\n  SoundComponent,\r\n} from \"types\";\r\nimport { MediaFormats, MediaVariants } from \"editor-constants\";\r\nimport { createStyleJsonFromString, createUUID, toNumber } from \"utils\";\r\n\r\nexport function createMediaConfig(config: MediaConfigJSON, variant?: MediaVariants) {\r\n  const { mediatype, format, style, saveincss } = config;\r\n  const result = {} as MediaConfig;\r\n\r\n  result.variant = mediatype.split(\",\") as MediaConfig[\"variant\"];\r\n  result.format = format.split(\",\") as MediaConfig[\"format\"];\r\n  result.style = style !== \"\" ? createStyleJsonFromString(style) : undefined;\r\n  result.saveInCSS = saveincss || false;\r\n\r\n  return result;\r\n}\r\n\r\nexport function updateMediaConfig(\r\n  currentComponentConfig?: MediaConfig,\r\n  previousComponentConfig?: MediaConfig\r\n) {\r\n  if (currentComponentConfig && previousComponentConfig) {\r\n    currentComponentConfig.variant = previousComponentConfig.variant as MediaConfig[\"variant\"];\r\n  }\r\n}\r\n\r\nexport function createMediaFormat(\r\n  classList: string[],\r\n  style?: SimpleObject,\r\n  options?: MediaFormats[]\r\n) {\r\n  const format = new MediaFormat();\r\n\r\n  Object.values(MediaFormats).forEach((value) => {\r\n    if (classList.includes(value) && options?.includes(value)) {\r\n      format.value = value;\r\n    }\r\n  });\r\n\r\n  if (style && style.width !== \"\") {\r\n    format.width = toNumber(style.width);\r\n  }\r\n\r\n  if (style && style.getPropertyValue && style.getPropertyValue(\"--blm_width\") !== \"\") {\r\n    format.width = toNumber(style.getPropertyValue(\"--blm_width\"));\r\n  }\r\n\r\n  if (style && style.height !== \"\") {\r\n    format.height = toNumber(style.height);\r\n  }\r\n\r\n  return format;\r\n}\r\n\r\nexport function createMediaComponent(repeater: MediaRepeaterComponent) {\r\n  const { id, mediaConfig, defaultClass = \"\" } = repeater;\r\n  const classList = defaultClass.split(\" \");\r\n  const component = new MediaComponent();\r\n  component.id = createUUID();\r\n  component.repeaterId = id;\r\n  component.isCreated = true;\r\n  component.options = mediaConfig;\r\n  component.config = mediaConfig && createMediaConfig(mediaConfig);\r\n  component.format = createMediaFormat(\r\n    classList,\r\n    component.config?.style,\r\n    component.config?.format\r\n  );\r\n  component.classList = classList;\r\n\r\n  return component;\r\n}\r\n\r\nexport function updateCreatedMediaComponet(\r\n  repeater: MediaRepeaterComponent,\r\n  component: MediaComponent\r\n) {\r\n  if (repeater.value) {\r\n    component.variant = repeater.value[repeater.value.length - 1].variant;\r\n    component.format.height = repeater.value[repeater.value.length - 1].format.height;\r\n    component.format.width = repeater.value[repeater.value.length - 1].format.width;\r\n    if (repeater.value[repeater.value.length - 1].format.value) {\r\n      component.format.value = repeater.value[repeater.value.length - 1].format.value;\r\n    } else if (repeater.value[repeater.value.length - 1].config) {\r\n      component.format.value = repeater.value[repeater.value.length - 1].config?.format[0];\r\n    }\r\n    updateMediaConfig(component.config, repeater.value[repeater.value.length - 1].config);\r\n  }\r\n  component.isEdited = true;\r\n}\r\n\r\nexport const updateCreatedButtonComponent = (\r\n  repeater: ButtonRepeaterComponent,\r\n  component: ButtonComponent\r\n) => {\r\n  component.buttonOptions.config = {} as MediaConfig;\r\n  component.buttonOptions.config.format = [\"auto\", \"pixelwidth\"] as MediaFormats[];\r\n  component.buttonOptions.format = {} as MediaFormat;\r\n  if (repeater.value && repeater.value.length > 0) {\r\n    component.buttonOptions.format.value =\r\n      repeater.value[repeater.value?.length - 1].buttonOptions.format.value;\r\n    component.buttonOptions.format.width =\r\n      repeater.value[repeater.value?.length - 1].buttonOptions.format.width;\r\n  } else {\r\n    component.buttonOptions.format.value = MediaFormats.Auto;\r\n    component.buttonOptions.format.width = 0;\r\n  }\r\n  component.buttonOptions.format.defaultWidth = 200;\r\n};\r\n\r\nexport function createButtonComponent(repeater: RepeaterComponent) {\r\n  const { id, defaultClass = \"\" } = repeater;\r\n  const classList = defaultClass.split(\" \");\r\n  const component = new ButtonComponent();\r\n  component.id = createUUID();\r\n  component.repeaterId = id;\r\n  component.isCreated = true;\r\n  component.classList = classList;\r\n\r\n  return component;\r\n}\r\n\r\nexport function createSoundComponent(repeater: RepeaterComponent) {\r\n  const { id, defaultClass = \"\" } = repeater;\r\n  const classList = defaultClass.split(\" \");\r\n  const component = new SoundComponent();\r\n  component.id = createUUID();\r\n  component.repeaterId = id;\r\n  component.isCreated = true;\r\n  component.classList = classList;\r\n\r\n  return component;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}