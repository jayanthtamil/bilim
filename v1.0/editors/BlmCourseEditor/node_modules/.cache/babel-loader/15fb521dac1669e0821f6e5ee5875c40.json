{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\content-editor\\\\components\\\\styles\\\\picker\\\\BlmStylePicker.tsx\";\nimport React, { Fragment, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { Drawer } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { isStyleCategories } from \"utils\";\nimport BlmStyleApplyButton from \"../button\";\nimport BlmStylePickerItem from \"./item\";\nimport \"./styles.scss\";\n\nfunction BlmStylePicker(props) {\n  const {\n    type,\n    name,\n    value,\n    style,\n    label,\n    showApplyIcon,\n    showApplyStyle = true,\n    styleConfig,\n    onChange,\n    onApplyClick\n  } = props;\n  const {\n    items,\n    map,\n    classNames\n  } = styleConfig || {};\n  const [open, setOpen] = useState(false);\n  const currentStyle = classNames && (value && classNames.includes(value) ? value : classNames[0]);\n  const currentItem = map && currentStyle ? map[currentStyle] : undefined;\n  const {\n    t\n  } = useTranslation(\"content-editor\");\n\n  const updateChange = value => {\n    if (onChange) {\n      onChange({\n        target: {\n          name,\n          value\n        }\n      });\n    }\n  };\n\n  const handleItemClick = item => {\n    setOpen(false);\n    updateChange(item.className);\n  };\n\n  const handleCollapseClick = () => {\n    setOpen(!open);\n  };\n\n  const renderItems = items => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"style-picker-items-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, items.map((item, ind) => /*#__PURE__*/React.createElement(BlmStylePickerItem, {\n      key: ind,\n      data: item,\n      selected: item.className === currentStyle,\n      onClick: handleItemClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  const renderCategories = categories => {\n    return categories.map((category, ind) => {\n      const {\n        name,\n        items\n      } = category;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: ind,\n        className: \"style-picker-categories-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"style-picker-category-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, name), renderItems(items));\n    });\n  };\n\n  if (items) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: clsx(\"style-picker-wrapper\", type, {\n        \"has-over\": currentItem === null || currentItem === void 0 ? void 0 : currentItem.overUrl\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"style-picker-style-wrapper\",\n      onClick: handleCollapseClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"style-picker-preview-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, currentItem && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: currentItem.url,\n      alt: currentItem.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }), currentItem.overUrl && /*#__PURE__*/React.createElement(\"img\", {\n      src: currentItem.overUrl,\n      alt: currentItem.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 43\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"style-picker-expand-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    })), showApplyStyle && /*#__PURE__*/React.createElement(BlmStyleApplyButton, {\n      label: label,\n      styleName: currentStyle,\n      style: style,\n      showIcon: showApplyIcon,\n      onClick: onApplyClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    })), open && /*#__PURE__*/React.createElement(Drawer, {\n      open: open,\n      className: clsx(\"styles-modal\", type),\n      onClose: handleCollapseClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"styles-modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"styles-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, t(\"style.select_style\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"styles-modal-close-btn\",\n      onClick: handleCollapseClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"styles-modal-scroller custom-scrollbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, isStyleCategories(items) ? renderCategories(items) : renderItems(items)))));\n  } else {\n    return null;\n  }\n}\n\nexport default BlmStylePicker;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/content-editor/components/styles/picker/BlmStylePicker.tsx"],"names":["React","Fragment","useState","clsx","Drawer","useTranslation","isStyleCategories","BlmStyleApplyButton","BlmStylePickerItem","BlmStylePicker","props","type","name","value","style","label","showApplyIcon","showApplyStyle","styleConfig","onChange","onApplyClick","items","map","classNames","open","setOpen","currentStyle","includes","currentItem","undefined","t","updateChange","target","handleItemClick","item","className","handleCollapseClick","renderItems","ind","renderCategories","categories","category","overUrl","url"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { StyleListCategory, StyleListItem, CustomChangeEvent, ComponentStyle } from \"types\";\r\nimport { StyleListTypes } from \"editor-constants\";\r\nimport { isStyleCategories } from \"utils\";\r\nimport BlmStyleApplyButton from \"../button\";\r\nimport BlmStylePickerItem from \"./item\";\r\nimport { ContainerProps } from \"./container\";\r\nimport \"./styles.scss\";\r\n\r\nexport type StylePickerChangeEvent = CustomChangeEvent<string>;\r\n\r\nexport interface CompProps extends ContainerProps {\r\n  type: StyleListTypes;\r\n  name: string;\r\n  label?: string;\r\n  value?: string;\r\n  style?: ComponentStyle;\r\n  showApplyIcon?: boolean;\r\n  showApplyStyle?: boolean;\r\n  onChange?: (event: StylePickerChangeEvent) => void;\r\n  onApplyClick?: (style: string) => void;\r\n}\r\n\r\nfunction BlmStylePicker(props: CompProps) {\r\n  const {\r\n    type,\r\n    name,\r\n    value,\r\n    style,\r\n    label,\r\n    showApplyIcon,\r\n    showApplyStyle = true,\r\n    styleConfig,\r\n    onChange,\r\n    onApplyClick,\r\n  } = props;\r\n  const { items, map, classNames } = styleConfig || {};\r\n  const [open, setOpen] = useState(false);\r\n  const currentStyle = classNames && (value && classNames.includes(value) ? value : classNames[0]);\r\n  const currentItem = map && currentStyle ? map[currentStyle] : undefined;\r\n  const { t } = useTranslation(\"content-editor\");\r\n\r\n  const updateChange = (value: string) => {\r\n    if (onChange) {\r\n      onChange({ target: { name, value } });\r\n    }\r\n  };\r\n\r\n  const handleItemClick = (item: StyleListItem) => {\r\n    setOpen(false);\r\n    updateChange(item.className);\r\n  };\r\n\r\n  const handleCollapseClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const renderItems = (items: StyleListItem[]) => {\r\n    return (\r\n      <div className=\"style-picker-items-wrapper\">\r\n        {items.map((item, ind) => (\r\n          <BlmStylePickerItem\r\n            key={ind}\r\n            data={item}\r\n            selected={item.className === currentStyle}\r\n            onClick={handleItemClick}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderCategories = (categories: StyleListCategory[]) => {\r\n    return categories.map((category, ind) => {\r\n      const { name, items } = category;\r\n\r\n      return (\r\n        <div key={ind} className=\"style-picker-categories-wrapper\">\r\n          <div className=\"style-picker-category-title\">{name}</div>\r\n          {renderItems(items)}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (items) {\r\n    return (\r\n      <Fragment>\r\n        <div className={clsx(\"style-picker-wrapper\", type, { \"has-over\": currentItem?.overUrl })}>\r\n          <div className=\"style-picker-style-wrapper\" onClick={handleCollapseClick}>\r\n            <div className=\"style-picker-preview-wrapper\">\r\n              {currentItem && (\r\n                <Fragment>\r\n                  <img src={currentItem.url} alt={currentItem.name} />\r\n                  {currentItem.overUrl && <img src={currentItem.overUrl} alt={currentItem.name} />}\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n            <div className=\"style-picker-expand-icon\" />\r\n          </div>\r\n          {showApplyStyle && (\r\n            <BlmStyleApplyButton\r\n              label={label}\r\n              styleName={currentStyle}\r\n              style={style}\r\n              showIcon={showApplyIcon}\r\n              onClick={onApplyClick}\r\n            />\r\n          )}\r\n        </div>\r\n        {open && (\r\n          <Drawer open={open} className={clsx(\"styles-modal\", type)} onClose={handleCollapseClick}>\r\n            <div className=\"styles-modal-content\">\r\n              <div className=\"styles-modal-title\">{t(\"style.select_style\")}</div>\r\n              <div className=\"styles-modal-close-btn\" onClick={handleCollapseClick} />\r\n              <div className=\"styles-modal-scroller custom-scrollbar\">\r\n                {isStyleCategories(items) ? renderCategories(items) : renderItems(items)}\r\n              </div>\r\n            </div>\r\n          </Drawer>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default BlmStylePicker;\r\n"]},"metadata":{},"sourceType":"module"}