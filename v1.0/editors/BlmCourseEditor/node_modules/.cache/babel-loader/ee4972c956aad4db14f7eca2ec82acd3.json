{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\properties\\\\controls\\\\general\\\\BlmGeneralProps.tsx\";\nimport React, { Fragment } from \"react\";\nimport { Checkbox } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { AcceptedFileTypes, ElementType } from \"editor-constants\";\nimport { hasAutoSummary, textArea } from \"utils\";\nimport { BlmMediaPicker } from \"components/shared\";\nimport { changeKeyMap } from \"./utils\";\nimport \"./general.scss\";\n\nfunction BlmGeneralProps(props) {\n  const {\n    element,\n    data,\n    config,\n    courseProps,\n    onChange\n  } = props;\n  const {\n    properties,\n    metadatas\n  } = config || {};\n  const {\n    navigation\n  } = courseProps || {};\n  const {\n    name: title,\n    subTitle,\n    duration,\n    mediaJSON,\n    navigationJSON,\n    metadatasJSON\n  } = data;\n  const {\n    t\n  } = useTranslation(\"properties\");\n\n  const updateChange = newData => {\n    if (onChange) {\n      onChange(newData);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      target\n    } = event;\n    const value = \"type\" in target && target.type === \"checkbox\" && \"checked\" in target ? target.checked : target.value;\n    const name = target.name;\n    let newData;\n\n    if (changeKeyMap.hasOwnProperty(name)) {\n      const map = changeKeyMap[name];\n      const {\n        obj,\n        key\n      } = map;\n      newData = { ...data,\n        [obj]: { ...data[obj],\n          [key]: value\n        }\n      };\n    } else {\n      newData = { ...data,\n        [name]: value\n      };\n    }\n\n    updateChange(newData);\n  };\n\n  const handleMiscChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newData = { ...data,\n      navigationJSON: { ...data.navigationJSON\n      }\n    };\n\n    if (newData.navigationJSON) {\n      newData.navigationJSON[name] = value || null;\n    }\n\n    updateChange(newData);\n  };\n\n  const handleMetadataChange = event => {\n    const target = event.target;\n    const value = \"type\" in target && target.type === \"checkbox\" && \"checked\" in target ? target.checked : target.value;\n    const name = target.name;\n    const newData = { ...data,\n      metadatasJSON: { ...data.metadatasJSON\n      }\n    };\n\n    if (newData.metadatasJSON) {\n      newData.metadatasJSON[name] = value;\n    }\n\n    updateChange(newData);\n  };\n\n  const renderMedias = () => {\n    const medias = properties === null || properties === void 0 ? void 0 : properties.medias;\n    const {\n      default: defaultVal,\n      over,\n      sound\n    } = medias || {};\n\n    if (medias && (defaultVal || over || sound)) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"general-media-lbl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, t(\"label.media\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"general-media-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, defaultVal && /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"general-default-media-lbl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, t(\"general.default\")), /*#__PURE__*/React.createElement(BlmMediaPicker, {\n        name: \"default\",\n        elementId: data.id,\n        acceptedFiles: [AcceptedFileTypes.Image, AcceptedFileTypes.Video],\n        data: mediaJSON === null || mediaJSON === void 0 ? void 0 : mediaJSON.default,\n        className: \"general-default-media-picker\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      })), defaultVal && (over || sound) && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"general-media-separator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 47\n        }\n      }), /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, (over || sound) && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"general-over-media-lbl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, t(\"general.over\")), over && /*#__PURE__*/React.createElement(BlmMediaPicker, {\n        name: \"over\",\n        elementId: data.id,\n        acceptedFiles: [AcceptedFileTypes.Image, AcceptedFileTypes.Video],\n        data: mediaJSON === null || mediaJSON === void 0 ? void 0 : mediaJSON.over,\n        className: \"general-over-media-picker\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }), sound && /*#__PURE__*/React.createElement(BlmMediaPicker, {\n        name: \"overSound\",\n        elementId: data.id,\n        acceptedFiles: [AcceptedFileTypes.Audio],\n        data: mediaJSON === null || mediaJSON === void 0 ? void 0 : mediaJSON.overSound,\n        className: \"general-over-sound-picker\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }))));\n    }\n  };\n\n  const renderMisc = () => {\n    const misc = properties === null || properties === void 0 ? void 0 : properties.misc;\n\n    if (misc) {\n      const items = [];\n\n      for (let name in misc) {\n        const value = misc[name];\n\n        if (value) {\n          const media = navigationJSON === null || navigationJSON === void 0 ? void 0 : navigationJSON[name];\n          items.push( /*#__PURE__*/React.createElement(\"div\", {\n            key: name,\n            className: \"general-misc-media-item\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"general-misc-media-lbl\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }\n          }, name), /*#__PURE__*/React.createElement(BlmMediaPicker, {\n            name: name,\n            elementId: data.id,\n            acceptedFiles: [AcceptedFileTypes.Image, AcceptedFileTypes.Video],\n            data: media,\n            className: \"general-misc-media-picker\",\n            onChange: handleMiscChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }\n          })));\n        }\n      }\n\n      if (items.length > 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"general-misc-media-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"general-misc-media-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }\n        }, t(\"general.misc\")), items);\n      }\n    }\n  };\n\n  const renderMetadata = (key, label, value) => {\n    if (Array.isArray(value)) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"general-options-lbl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      }, label, \" :\"), /*#__PURE__*/React.createElement(\"select\", {\n        name: label,\n        value: (metadatasJSON === null || metadatasJSON === void 0 ? void 0 : metadatasJSON[label]) || undefined,\n        className: \"general-options-ctrl general-options-select\",\n        onChange: handleMetadataChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }\n      }, value.map((str, ind) => /*#__PURE__*/React.createElement(\"option\", {\n        key: ind,\n        value: str,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }\n      }, str))));\n    } else if (value === \"number\") {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"general-options-lbl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }\n      }, label, \" :\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: label,\n        type: \"number\",\n        min: \"0\",\n        value: (metadatasJSON === null || metadatasJSON === void 0 ? void 0 : metadatasJSON[label]) || undefined,\n        className: \"general-options-ctrl general-options-txt\",\n        onChange: handleMetadataChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }\n      }));\n    } else if (value === \"boolean\") {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"general-options-lbl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }\n      }, label, \" :\"), /*#__PURE__*/React.createElement(Checkbox, {\n        name: label,\n        checked: (metadatasJSON === null || metadatasJSON === void 0 ? void 0 : metadatasJSON[label]) || undefined,\n        className: \"general-options-chk\",\n        onChange: handleMetadataChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"general-options-lbl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }\n      }, label, \" :\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: label,\n        type: \"text\",\n        value: (metadatasJSON === null || metadatasJSON === void 0 ? void 0 : metadatasJSON[label]) || undefined,\n        className: \"general-options-ctrl general-options-txt\",\n        onChange: handleMetadataChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }\n      }));\n    }\n  };\n\n  const renderMetadatas = () => {\n    if (metadatas) {\n      const items = [];\n\n      for (const key in metadatas) {\n        const item = renderMetadata(key, key, metadatas[key]);\n        items.push(item);\n      }\n\n      return items;\n    }\n  };\n\n  if (data) {\n    var _element$root;\n\n    if (data === null || data === void 0 ? void 0 : data.description) {\n      let newDescription = textArea(data.description, \"<br>\", \"\\n\");\n      data.description = newDescription;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"general-props-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"general-title-lbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }\n    }, t(\"label.title\")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      maxLength: 70,\n      value: title,\n      className: \"general-title-txt\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"general-duration-lbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }\n    }, t(\"label.duration\")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"duration\",\n      type: \"number\",\n      min: \"0\",\n      value: duration || \"\",\n      className: \"general-duration-txt\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }\n    }), (element === null || element === void 0 ? void 0 : (_element$root = element.root) === null || _element$root === void 0 ? void 0 : _element$root.type) === ElementType.Structure && element.parent && hasAutoSummary(element.parent, navigation === null || navigation === void 0 ? void 0 : navigation.navigationlevel) && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"general-auto-summary-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"general-auto-summary-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, t(\"general.auto_summary\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"general-auto-summary-lbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }\n    }, t(\"general.define_here\"))), (properties === null || properties === void 0 ? void 0 : properties.title2) && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"general-sub-title-lbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 19\n      }\n    }, t(\"general.title2\")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"subTitle\",\n      type: \"text\",\n      maxLength: 70,\n      value: subTitle || \"\",\n      className: \"general-sub-title-txt\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 19\n      }\n    })), (properties === null || properties === void 0 ? void 0 : properties.description) && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"general-description-lbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 19\n      }\n    }, t(\"label.description\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"description\",\n      maxLength: 1000,\n      value: data.description || \"\",\n      className: \"general-description-txt\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    })), renderMedias(), renderMisc(), /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"general-options-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, t(\"general.options\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"general-options-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, renderMetadatas()))));\n  } else {\n    return null;\n  }\n}\n\nexport default BlmGeneralProps;","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/properties/controls/general/BlmGeneralProps.tsx"],"names":["React","Fragment","Checkbox","useTranslation","AcceptedFileTypes","ElementType","hasAutoSummary","textArea","BlmMediaPicker","changeKeyMap","BlmGeneralProps","props","element","data","config","courseProps","onChange","properties","metadatas","navigation","name","title","subTitle","duration","mediaJSON","navigationJSON","metadatasJSON","t","updateChange","newData","handleChange","event","target","value","type","checked","hasOwnProperty","map","obj","key","handleMiscChange","handleMetadataChange","renderMedias","medias","default","defaultVal","over","sound","id","Image","Video","Audio","overSound","renderMisc","misc","items","media","push","length","renderMetadata","label","Array","isArray","undefined","str","ind","renderMetadatas","item","description","newDescription","root","Structure","parent","navigationlevel","title2"],"mappings":";AAAA,OAAOA,KAAP,IAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,iBAAT,EAA4BC,WAA5B,QAA+C,kBAA/C;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,cAAT,QAAuD,mBAAvD;AACA,SAASC,YAAT,QAA6B,SAA7B;AAEA,OAAO,gBAAP;;AAMA,SAASC,eAAT,CAAyBC,KAAzB,EAA2C;AACzC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,MAAjB;AAAyBC,IAAAA,WAAzB;AAAsCC,IAAAA;AAAtC,MAAmDL,KAAzD;AACA,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4BJ,MAAM,IAAI,EAA5C;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAiBJ,WAAW,IAAI,EAAtC;AACA,QAAM;AACJK,IAAAA,IAAI,EAAEC,KADF;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA;AANI,MAOFb,IAPJ;AAQA,QAAM;AAAEc,IAAAA;AAAF,MAAQxB,cAAc,CAAC,YAAD,CAA5B;;AAEA,QAAMyB,YAAY,GAAIC,OAAD,IAAiC;AACpD,QAAIb,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACa,OAAD,CAAR;AACD;AACF,GAJD;;AAMA,QAAMC,YAAY,GAAIC,KAAD,IAAsD;AACzE,UAAM;AAAEC,MAAAA;AAAF,QAAaD,KAAnB;AACA,UAAME,KAAK,GACT,UAAUD,MAAV,IAAoBA,MAAM,CAACE,IAAP,KAAgB,UAApC,IAAkD,aAAaF,MAA/D,GACIA,MAAM,CAACG,OADX,GAEIH,MAAM,CAACC,KAHb;AAIA,UAAMb,IAAI,GAAGY,MAAM,CAACZ,IAApB;AACA,QAAIS,OAAJ;;AAEA,QAAIpB,YAAY,CAAC2B,cAAb,CAA4BhB,IAA5B,CAAJ,EAAuC;AACrC,YAAMiB,GAAG,GAAG5B,YAAY,CAACW,IAAD,CAAxB;AACA,YAAM;AAAEkB,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAeF,GAArB;AAEAR,MAAAA,OAAO,GAAG,EACR,GAAGhB,IADK;AAER,SAACyB,GAAD,GAAO,EACL,GAAGzB,IAAI,CAACyB,GAAD,CADF;AAEL,WAACC,GAAD,GAAON;AAFF;AAFC,OAAV;AAOD,KAXD,MAWO;AACLJ,MAAAA,OAAO,GAAG,EAAE,GAAGhB,IAAL;AAAW,SAACO,IAAD,GAAQa;AAAnB,OAAV;AACD;;AAEDL,IAAAA,YAAY,CAACC,OAAD,CAAZ;AACD,GAzBD;;AA2BA,QAAMW,gBAAgB,GAAIT,KAAD,IAAmC;AAC1D,UAAM;AAAEX,MAAAA,IAAF;AAAQa,MAAAA;AAAR,QAAkBF,KAAK,CAACC,MAA9B;AACA,UAAMH,OAA2B,GAAG,EAClC,GAAGhB,IAD+B;AAElCY,MAAAA,cAAc,EAAE,EAAE,GAAGZ,IAAI,CAACY;AAAV;AAFkB,KAApC;;AAKA,QAAII,OAAO,CAACJ,cAAZ,EAA4B;AAC1BI,MAAAA,OAAO,CAACJ,cAAR,CAAuBL,IAAvB,IAA+Ba,KAAK,IAAI,IAAxC;AACD;;AAEDL,IAAAA,YAAY,CAACC,OAAD,CAAZ;AACD,GAZD;;AAcA,QAAMY,oBAAoB,GAAIV,KAAD,IAA8D;AACzF,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GACT,UAAUD,MAAV,IAAoBA,MAAM,CAACE,IAAP,KAAgB,UAApC,IAAkD,aAAaF,MAA/D,GACIA,MAAM,CAACG,OADX,GAEIH,MAAM,CAACC,KAHb;AAIA,UAAMb,IAAI,GAAGY,MAAM,CAACZ,IAApB;AACA,UAAMS,OAA2B,GAAG,EAClC,GAAGhB,IAD+B;AAElCa,MAAAA,aAAa,EAAE,EAAE,GAAGb,IAAI,CAACa;AAAV;AAFmB,KAApC;;AAKA,QAAIG,OAAO,CAACH,aAAZ,EAA2B;AACzBG,MAAAA,OAAO,CAACH,aAAR,CAAsBN,IAAtB,IAA8Ba,KAA9B;AACD;;AAEDL,IAAAA,YAAY,CAACC,OAAD,CAAZ;AACD,GAjBD;;AAmBA,QAAMa,YAAY,GAAG,MAAM;AACzB,UAAMC,MAAM,GAAG1B,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAE0B,MAA3B;AACA,UAAM;AAAEC,MAAAA,OAAO,EAAEC,UAAX;AAAuBC,MAAAA,IAAvB;AAA6BC,MAAAA;AAA7B,QAAuCJ,MAAM,IAAI,EAAvD;;AAEA,QAAIA,MAAM,KAAKE,UAAU,IAAIC,IAAd,IAAsBC,KAA3B,CAAV,EAA6C;AAC3C,0BACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCpB,CAAC,CAAC,aAAD,CAArC,CADF,eAEE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGkB,UAAU,iBACT,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6ClB,CAAC,CAAC,iBAAD,CAA9C,CADF,eAEE,oBAAC,cAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,SAAS,EAAEd,IAAI,CAACmC,EAFlB;AAGE,QAAA,aAAa,EAAE,CAAC5C,iBAAiB,CAAC6C,KAAnB,EAA0B7C,iBAAiB,CAAC8C,KAA5C,CAHjB;AAIE,QAAA,IAAI,EAAE1B,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEoB,OAJnB;AAKE,QAAA,SAAS,EAAC,8BALZ;AAME,QAAA,QAAQ,EAAEd,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFJ,EAcGe,UAAU,KAAKC,IAAI,IAAIC,KAAb,CAAV,iBAAiC;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdpC,eAeE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAACD,IAAI,IAAIC,KAAT,kBACC;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CpB,CAAC,CAAC,cAAD,CAA3C,CAFJ,EAIGmB,IAAI,iBACH,oBAAC,cAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAEjC,IAAI,CAACmC,EAFlB;AAGE,QAAA,aAAa,EAAE,CAAC5C,iBAAiB,CAAC6C,KAAnB,EAA0B7C,iBAAiB,CAAC8C,KAA5C,CAHjB;AAIE,QAAA,IAAI,EAAE1B,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEsB,IAJnB;AAKE,QAAA,SAAS,EAAC,2BALZ;AAME,QAAA,QAAQ,EAAEhB,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAcGiB,KAAK,iBACJ,oBAAC,cAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,SAAS,EAAElC,IAAI,CAACmC,EAFlB;AAGE,QAAA,aAAa,EAAE,CAAC5C,iBAAiB,CAAC+C,KAAnB,CAHjB;AAIE,QAAA,IAAI,EAAE3B,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAE4B,SAJnB;AAKE,QAAA,SAAS,EAAC,2BALZ;AAME,QAAA,QAAQ,EAAEtB,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CAfF,CAFF,CADF;AA8CD;AACF,GApDD;;AAsDA,QAAMuB,UAAU,GAAG,MAAM;AACvB,UAAMC,IAAI,GAAGrC,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEqC,IAAzB;;AAEA,QAAIA,IAAJ,EAAU;AACR,YAAMC,KAAK,GAAG,EAAd;;AAEA,WAAK,IAAInC,IAAT,IAAiBkC,IAAjB,EAAuB;AACrB,cAAMrB,KAAK,GAAGqB,IAAI,CAAClC,IAAD,CAAlB;;AAEA,YAAIa,KAAJ,EAAW;AACT,gBAAMuB,KAAK,GAAG/B,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAGL,IAAH,CAA5B;AAEAmC,UAAAA,KAAK,CAACE,IAAN,eACE;AAAK,YAAA,GAAG,EAAErC,IAAV;AAAgB,YAAA,SAAS,EAAC,yBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyCA,IAAzC,CADF,eAEE,oBAAC,cAAD;AACE,YAAA,IAAI,EAAEA,IADR;AAEE,YAAA,SAAS,EAAEP,IAAI,CAACmC,EAFlB;AAGE,YAAA,aAAa,EAAE,CAAC5C,iBAAiB,CAAC6C,KAAnB,EAA0B7C,iBAAiB,CAAC8C,KAA5C,CAHjB;AAIE,YAAA,IAAI,EAAEM,KAJR;AAKE,YAAA,SAAS,EAAC,2BALZ;AAME,YAAA,QAAQ,EAAEhB,gBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF;AAaD;AACF;;AAED,UAAIe,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACpB,4BACE;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2C/B,CAAC,CAAC,cAAD,CAA5C,CADF,EAEG4B,KAFH,CADF;AAMD;AACF;AACF,GArCD;;AAuCA,QAAMI,cAAc,GAAG,CAACpB,GAAD,EAAcqB,KAAd,EAA6B3B,KAA7B,KAA0D;AAC/E,QAAI4B,KAAK,CAACC,OAAN,CAAc7B,KAAd,CAAJ,EAA0B;AACxB,0BACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEM,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCqB,KAAvC,OADF,eAEE;AACE,QAAA,IAAI,EAAEA,KADR;AAEE,QAAA,KAAK,EAAE,CAAClC,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAGkC,KAAH,CAAd,KAAsCG,SAF/C;AAGE,QAAA,SAAS,EAAC,6CAHZ;AAIE,QAAA,QAAQ,EAAEtB,oBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGR,KAAK,CAACI,GAAN,CAAU,CAAC2B,GAAD,EAAMC,GAAN,kBACT;AAAQ,QAAA,GAAG,EAAEA,GAAb;AAAkB,QAAA,KAAK,EAAED,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,GADH,CADD,CANH,CAFF,CADF;AAiBD,KAlBD,MAkBO,IAAI/B,KAAK,KAAK,QAAd,EAAwB;AAC7B,0BACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEM,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCqB,KAAvC,OADF,eAEE;AACE,QAAA,IAAI,EAAEA,KADR;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,GAAG,EAAC,GAHN;AAIE,QAAA,KAAK,EAAE,CAAClC,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAGkC,KAAH,CAAd,KAAsCG,SAJ/C;AAKE,QAAA,SAAS,EAAC,0CALZ;AAME,QAAA,QAAQ,EAAEtB,oBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAaD,KAdM,MAcA,IAAIR,KAAK,KAAK,SAAd,EAAyB;AAC9B,0BACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEM,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCqB,KAAvC,OADF,eAEE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAEA,KADR;AAEE,QAAA,OAAO,EAAE,CAAClC,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAGkC,KAAH,CAAd,KAAuCG,SAFlD;AAGE,QAAA,SAAS,EAAC,qBAHZ;AAIE,QAAA,QAAQ,EAAEtB,oBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAWD,KAZM,MAYA;AACL,0BACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEF,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCqB,KAAvC,OADF,eAEE;AACE,QAAA,IAAI,EAAEA,KADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAE,CAAClC,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAGkC,KAAH,CAAd,KAAsCG,SAH/C;AAIE,QAAA,SAAS,EAAC,0CAJZ;AAKE,QAAA,QAAQ,EAAEtB,oBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAYD;AACF,GA3DD;;AA6DA,QAAMyB,eAAe,GAAG,MAAM;AAC5B,QAAIhD,SAAJ,EAAe;AACb,YAAMqC,KAAK,GAAG,EAAd;;AAEA,WAAK,MAAMhB,GAAX,IAAkBrB,SAAlB,EAA6B;AAC3B,cAAMiD,IAAI,GAAGR,cAAc,CAACpB,GAAD,EAAMA,GAAN,EAAWrB,SAAS,CAACqB,GAAD,CAApB,CAA3B;AACAgB,QAAAA,KAAK,CAACE,IAAN,CAAWU,IAAX;AACD;;AAED,aAAOZ,KAAP;AACD;AACF,GAXD;;AAaA,MAAI1C,IAAJ,EAAU;AAAA;;AACR,QAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEuD,WAAV,EAAuB;AACrB,UAAIC,cAAc,GAAG9D,QAAQ,CAACM,IAAI,CAACuD,WAAN,EAAmB,MAAnB,EAA2B,IAA3B,CAA7B;AACAvD,MAAAA,IAAI,CAACuD,WAAL,GAAmBC,cAAnB;AACD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC1C,CAAC,CAAC,aAAD,CAAtC,CADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAE,EAHb;AAIE,MAAA,KAAK,EAAEN,KAJT;AAKE,MAAA,SAAS,EAAC,mBALZ;AAME,MAAA,QAAQ,EAAES,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAUE;AAAM,MAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCH,CAAC,CAAC,gBAAD,CAAzC,CAVF,eAWE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,GAAG,EAAC,GAHN;AAIE,MAAA,KAAK,EAAEJ,QAAQ,IAAI,EAJrB;AAKE,MAAA,SAAS,EAAC,sBALZ;AAME,MAAA,QAAQ,EAAEO,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAmBG,CAAAlB,OAAO,SAAP,IAAAA,OAAO,WAAP,6BAAAA,OAAO,CAAE0D,IAAT,gEAAepC,IAAf,MAAwB7B,WAAW,CAACkE,SAApC,IACC3D,OAAO,CAAC4D,MADT,IAEClE,cAAc,CAACM,OAAO,CAAC4D,MAAT,EAAiBrD,UAAjB,aAAiBA,UAAjB,uBAAiBA,UAAU,CAAEsD,eAA7B,CAFf,iBAGG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8C9C,CAAC,CAAC,sBAAD,CAA/C,CADF,eAEE;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4CA,CAAC,CAAC,qBAAD,CAA7C,CAFF,CADF,EAKG,CAAAV,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEyD,MAAZ,kBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC/C,CAAC,CAAC,gBAAD,CAA1C,CADF,eAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAE,EAHb;AAIE,MAAA,KAAK,EAAEL,QAAQ,IAAI,EAJrB;AAKE,MAAA,SAAS,EAAC,uBALZ;AAME,MAAA,QAAQ,EAAEQ,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANJ,EAkBG,CAAAb,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEmD,WAAZ,kBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2CzC,CAAC,CAAC,mBAAD,CAA5C,CADF,eAEE;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,SAAS,EAAE,IAFb;AAGE,MAAA,KAAK,EAAEd,IAAI,CAACuD,WAAL,IAAoB,EAH7B;AAIE,MAAA,SAAS,EAAC,yBAJZ;AAKE,MAAA,QAAQ,EAAEtC,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAnBJ,EA8BGY,YAAY,EA9Bf,EA+BGW,UAAU,EA/Bb,eAgCE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC1B,CAAC,CAAC,iBAAD,CAAzC,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4CuC,eAAe,EAA3D,CAFF,CAhCF,CAtBN,CADF;AA+DD,GApED,MAoEO;AACL,WAAO,IAAP;AACD;AACF;;AAED,eAAexD,eAAf","sourcesContent":["import React, { ChangeEvent, Fragment } from \"react\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CourseElement, CourseElementProps, ElementPropsComponent } from \"types\";\r\nimport { AcceptedFileTypes, ElementType } from \"editor-constants\";\r\nimport { hasAutoSummary, textArea } from \"utils\";\r\nimport { BlmMediaPicker, MediaPickerChangeEvent } from \"components/shared\";\r\nimport { changeKeyMap } from \"./utils\";\r\nimport { ContainerProps } from \"./general-container\";\r\nimport \"./general.scss\";\r\n\r\ninterface CompProps extends ElementPropsComponent, ContainerProps {\r\n  element: CourseElement;\r\n}\r\n\r\nfunction BlmGeneralProps(props: CompProps) {\r\n  const { element, data, config, courseProps, onChange } = props;\r\n  const { properties, metadatas } = config || {};\r\n  const { navigation } = courseProps || {};\r\n  const {\r\n    name: title,\r\n    subTitle,\r\n    duration,\r\n    mediaJSON,\r\n    navigationJSON,\r\n    metadatasJSON,\r\n  } = data;\r\n  const { t } = useTranslation(\"properties\");\r\n\r\n  const updateChange = (newData: CourseElementProps) => {\r\n    if (onChange) {\r\n      onChange(newData);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<any> | MediaPickerChangeEvent) => {\r\n    const { target } = event;\r\n    const value =\r\n      \"type\" in target && target.type === \"checkbox\" && \"checked\" in target\r\n        ? target.checked\r\n        : target.value;\r\n    const name = target.name;\r\n    let newData;\r\n\r\n    if (changeKeyMap.hasOwnProperty(name)) {\r\n      const map = changeKeyMap[name];\r\n      const { obj, key } = map;\r\n\r\n      newData = {\r\n        ...data,\r\n        [obj]: {\r\n          ...data[obj],\r\n          [key]: value,\r\n        },\r\n      };\r\n    } else {\r\n      newData = { ...data, [name]: value };\r\n    }\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleMiscChange = (event: MediaPickerChangeEvent) => {\r\n    const { name, value } = event.target;\r\n    const newData: CourseElementProps = {\r\n      ...data,\r\n      navigationJSON: { ...data.navigationJSON },\r\n    };\r\n\r\n    if (newData.navigationJSON) {\r\n      newData.navigationJSON[name] = value || null;\r\n    }\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const handleMetadataChange = (event: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const target = event.target;\r\n    const value =\r\n      \"type\" in target && target.type === \"checkbox\" && \"checked\" in target\r\n        ? target.checked\r\n        : target.value;\r\n    const name = target.name;\r\n    const newData: CourseElementProps = {\r\n      ...data,\r\n      metadatasJSON: { ...data.metadatasJSON },\r\n    };\r\n\r\n    if (newData.metadatasJSON) {\r\n      newData.metadatasJSON[name] = value;\r\n    }\r\n\r\n    updateChange(newData);\r\n  };\r\n\r\n  const renderMedias = () => {\r\n    const medias = properties?.medias;\r\n    const { default: defaultVal, over, sound } = medias || {};\r\n\r\n    if (medias && (defaultVal || over || sound)) {\r\n      return (\r\n        <Fragment>\r\n          <div className=\"general-media-lbl\">{t(\"label.media\")}</div>\r\n          <div className=\"general-media-container\">\r\n            {defaultVal && (\r\n              <Fragment>\r\n                <span className=\"general-default-media-lbl\">{t(\"general.default\")}</span>\r\n                <BlmMediaPicker\r\n                  name=\"default\"\r\n                  elementId={data.id}\r\n                  acceptedFiles={[AcceptedFileTypes.Image, AcceptedFileTypes.Video]}\r\n                  data={mediaJSON?.default}\r\n                  className=\"general-default-media-picker\"\r\n                  onChange={handleChange}\r\n                />\r\n              </Fragment>\r\n            )}\r\n            {defaultVal && (over || sound) && <div className=\"general-media-separator\" />}\r\n            <Fragment>\r\n              {(over || sound) && (\r\n                <span className=\"general-over-media-lbl\">{t(\"general.over\")}</span>\r\n              )}\r\n              {over && (\r\n                <BlmMediaPicker\r\n                  name=\"over\"\r\n                  elementId={data.id}\r\n                  acceptedFiles={[AcceptedFileTypes.Image, AcceptedFileTypes.Video]}\r\n                  data={mediaJSON?.over}\r\n                  className=\"general-over-media-picker\"\r\n                  onChange={handleChange}\r\n                />\r\n              )}\r\n              {sound && (\r\n                <BlmMediaPicker\r\n                  name=\"overSound\"\r\n                  elementId={data.id}\r\n                  acceptedFiles={[AcceptedFileTypes.Audio]}\r\n                  data={mediaJSON?.overSound}\r\n                  className=\"general-over-sound-picker\"\r\n                  onChange={handleChange}\r\n                />\r\n              )}\r\n            </Fragment>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderMisc = () => {\r\n    const misc = properties?.misc;\r\n\r\n    if (misc) {\r\n      const items = [];\r\n\r\n      for (let name in misc) {\r\n        const value = misc[name];\r\n\r\n        if (value) {\r\n          const media = navigationJSON?.[name];\r\n\r\n          items.push(\r\n            <div key={name} className=\"general-misc-media-item\">\r\n              <div className=\"general-misc-media-lbl\">{name}</div>\r\n              <BlmMediaPicker\r\n                name={name}\r\n                elementId={data.id}\r\n                acceptedFiles={[AcceptedFileTypes.Image, AcceptedFileTypes.Video]}\r\n                data={media}\r\n                className=\"general-misc-media-picker\"\r\n                onChange={handleMiscChange}\r\n              />\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n\r\n      if (items.length > 0) {\r\n        return (\r\n          <div className=\"general-misc-media-container\">\r\n            <div className=\"general-misc-media-title\">{t(\"general.misc\")}</div>\r\n            {items}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderMetadata = (key: string, label: string, value: string | string[]) => {\r\n    if (Array.isArray(value)) {\r\n      return (\r\n        <Fragment key={key}>\r\n          <span className=\"general-options-lbl\">{label} :</span>\r\n          <select\r\n            name={label}\r\n            value={(metadatasJSON?.[label] as string) || undefined}\r\n            className=\"general-options-ctrl general-options-select\"\r\n            onChange={handleMetadataChange}\r\n          >\r\n            {value.map((str, ind) => (\r\n              <option key={ind} value={str}>\r\n                {str}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </Fragment>\r\n      );\r\n    } else if (value === \"number\") {\r\n      return (\r\n        <Fragment key={key}>\r\n          <span className=\"general-options-lbl\">{label} :</span>\r\n          <input\r\n            name={label}\r\n            type=\"number\"\r\n            min=\"0\"\r\n            value={(metadatasJSON?.[label] as number) || undefined}\r\n            className=\"general-options-ctrl general-options-txt\"\r\n            onChange={handleMetadataChange}\r\n          />\r\n        </Fragment>\r\n      );\r\n    } else if (value === \"boolean\") {\r\n      return (\r\n        <Fragment key={key}>\r\n          <span className=\"general-options-lbl\">{label} :</span>\r\n          <Checkbox\r\n            name={label}\r\n            checked={(metadatasJSON?.[label] as boolean) || undefined}\r\n            className=\"general-options-chk\"\r\n            onChange={handleMetadataChange}\r\n          />\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment key={key}>\r\n          <span className=\"general-options-lbl\">{label} :</span>\r\n          <input\r\n            name={label}\r\n            type=\"text\"\r\n            value={(metadatasJSON?.[label] as string) || undefined}\r\n            className=\"general-options-ctrl general-options-txt\"\r\n            onChange={handleMetadataChange}\r\n          />\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderMetadatas = () => {\r\n    if (metadatas) {\r\n      const items = [];\r\n\r\n      for (const key in metadatas) {\r\n        const item = renderMetadata(key, key, metadatas[key]);\r\n        items.push(item);\r\n      }\r\n\r\n      return items;\r\n    }\r\n  };\r\n\r\n  if (data) {\r\n    if (data?.description) {\r\n      let newDescription = textArea(data.description, \"<br>\", \"\\n\");\r\n      data.description = newDescription;\r\n    }\r\n    return (\r\n      <div className=\"general-props-container\">\r\n        <span className=\"general-title-lbl\">{t(\"label.title\")}</span>\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          maxLength={70}\r\n          value={title}\r\n          className=\"general-title-txt\"\r\n          onChange={handleChange}\r\n        />\r\n        <span className=\"general-duration-lbl\">{t(\"label.duration\")}</span>\r\n        <input\r\n          name=\"duration\"\r\n          type=\"number\"\r\n          min=\"0\"\r\n          value={duration || \"\"}\r\n          className=\"general-duration-txt\"\r\n          onChange={handleChange}\r\n        />\r\n        {element?.root?.type === ElementType.Structure &&\r\n          element.parent &&\r\n          hasAutoSummary(element.parent, navigation?.navigationlevel) && (\r\n            <Fragment>\r\n              <div className=\"general-auto-summary-wrapper\">\r\n                <span className=\"general-auto-summary-title\">{t(\"general.auto_summary\")}</span>\r\n                <span className=\"general-auto-summary-lbl\">{t(\"general.define_here\")}</span>\r\n              </div>\r\n              {properties?.title2 && (\r\n                <Fragment>\r\n                  <span className=\"general-sub-title-lbl\">{t(\"general.title2\")}</span>\r\n                  <input\r\n                    name=\"subTitle\"\r\n                    type=\"text\"\r\n                    maxLength={70}\r\n                    value={subTitle || \"\"}\r\n                    className=\"general-sub-title-txt\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </Fragment>\r\n              )}\r\n              {properties?.description && (\r\n                <Fragment>\r\n                  <span className=\"general-description-lbl\">{t(\"label.description\")}</span>\r\n                  <textarea\r\n                    name=\"description\"\r\n                    maxLength={1000}\r\n                    value={data.description || \"\"}\r\n                    className=\"general-description-txt\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </Fragment>\r\n              )}\r\n              {renderMedias()}\r\n              {renderMisc()}\r\n              <Fragment>\r\n                <div className=\"general-options-title\">{t(\"general.options\")}</div>\r\n                <div className=\"general-options-container\">{renderMetadatas()}</div>\r\n              </Fragment>\r\n            </Fragment>\r\n          )}\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default BlmGeneralProps;\r\n"]},"metadata":{},"sourceType":"module"}