{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajesh\\\\Downloads\\\\bilim (2)\\\\bilim\\\\v1.0\\\\editors\\\\BlmCourseEditor\\\\src\\\\components\\\\templates\\\\containers\\\\part-page\\\\BlmPartPageContainer.tsx\";\nimport React, { useState, useContext, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from \"react\";\nimport clsx from \"clsx\";\nimport { toggleAttributeInString } from \"utils\";\nimport { usePrevious } from \"hooks\";\nimport { BlmPartPageTemplate } from \"../../core\";\nimport { BlmAddPartPage, BlmPartPageToolbox } from \"../../controls\";\nimport { BlmTemplateBoardContext } from \"../../hoc\";\nimport { usePartPageContainerStyle } from \"./styles\";\n\nconst BlmPartPageContainer = (props, ref) => {\n  const {\n    index,\n    total,\n    element,\n    template,\n    showControls,\n    onAddClick\n  } = props;\n  const [shouldScrollTo, setShouldScrollTo] = useState(false);\n  const {\n    editorPanel: {\n      isOpen: isEditorOpen,\n      template: editorTemplate\n    },\n    onTemplateEdit,\n    onEditClick,\n    onDeleteClick,\n    onDuplicateClick,\n    onPositionChange,\n    onNameChange\n  } = useContext(BlmTemplateBoardContext);\n  const templateRef = useRef(null);\n  const containerRef = useRef(null);\n  const classes = usePartPageContainerStyle();\n  const prevIndex = usePrevious(index);\n  const isPanelOpen = isEditorOpen && editorTemplate && template.id === editorTemplate.id;\n  const focus = useCallback(() => {\n    if (containerRef.current) {\n      containerRef.current.scrollIntoView();\n    }\n  }, []);\n  useImperativeHandle(ref, () => ({\n    focus\n  }));\n  useEffect(() => {\n    if (prevIndex !== index && shouldScrollTo) {\n      focus();\n      setShouldScrollTo(false);\n    }\n  }, [index, prevIndex, shouldScrollTo, focus]);\n  const handleTemplateEdit = useCallback(temp => {\n    if (onTemplateEdit) {\n      onTemplateEdit(temp);\n    }\n  }, [onTemplateEdit]);\n\n  const handleEditClick = (type, temp, anchorEle) => {\n    if (onEditClick && templateRef.current) {\n      onEditClick(type, temp, anchorEle, templateRef.current);\n    }\n  };\n\n  const handlePositionChange = (temp, delta) => {\n    if (onPositionChange) {\n      setShouldScrollTo(true);\n      onPositionChange(temp, delta);\n    }\n  };\n\n  const handleAnchorChange = (template, hasAnchor) => {\n    if (template) {\n      const newTemplate = { ...template\n      };\n      const attrs = {\n        anchor: hasAnchor ? \"\" : undefined\n      };\n      newTemplate.hasAnchor = hasAnchor;\n      newTemplate.html = toggleAttributeInString(newTemplate.html, attrs, \".outercontainer\");\n      handleTemplateEdit(newTemplate);\n    }\n  };\n\n  const renderAddBtn = (templateIndex, addIndex) => {\n    return /*#__PURE__*/React.createElement(BlmAddPartPage, {\n      value: addIndex,\n      key: \"addBtn\" + addIndex,\n      className: classes.addBtn,\n      onClick: e => onAddClick(e, templateIndex, addIndex),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    className: clsx(classes.root, {\n      [classes.showControls]: showControls || isPanelOpen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, renderAddBtn(index, index), /*#__PURE__*/React.createElement(BlmPartPageToolbox, {\n    data: template,\n    index: index,\n    total: total,\n    element: element,\n    className: classes.controls,\n    onEditClick: handleEditClick,\n    onDeleteClick: onDeleteClick,\n    onDuplicateClick: onDuplicateClick,\n    onPositionChange: handlePositionChange,\n    onNameChange: onNameChange,\n    onAnchorChange: handleAnchorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BlmPartPageTemplate, {\n    ref: templateRef,\n    key: template.id,\n    data: template,\n    onTemplateEdit: handleTemplateEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), renderAddBtn(index, index + 1));\n};\n\nexport default forwardRef(BlmPartPageContainer);","map":{"version":3,"sources":["C:/Users/Rajesh/Downloads/bilim (2)/bilim/v1.0/editors/BlmCourseEditor/src/components/templates/containers/part-page/BlmPartPageContainer.tsx"],"names":["React","useState","useContext","useCallback","useRef","useEffect","useImperativeHandle","forwardRef","clsx","toggleAttributeInString","usePrevious","BlmPartPageTemplate","BlmAddPartPage","BlmPartPageToolbox","BlmTemplateBoardContext","usePartPageContainerStyle","BlmPartPageContainer","props","ref","index","total","element","template","showControls","onAddClick","shouldScrollTo","setShouldScrollTo","editorPanel","isOpen","isEditorOpen","editorTemplate","onTemplateEdit","onEditClick","onDeleteClick","onDuplicateClick","onPositionChange","onNameChange","templateRef","containerRef","classes","prevIndex","isPanelOpen","id","focus","current","scrollIntoView","handleTemplateEdit","temp","handleEditClick","type","anchorEle","handlePositionChange","delta","handleAnchorChange","hasAnchor","newTemplate","attrs","anchor","undefined","html","renderAddBtn","templateIndex","addIndex","addBtn","e","root","controls"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  MouseEvent,\r\n  useContext,\r\n  useCallback,\r\n  useRef,\r\n  useEffect,\r\n  ForwardRefRenderFunction,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n} from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { CourseElement, CourseElementTemplate } from \"types\";\r\nimport { TemplateEditorTypes } from \"editor-constants\";\r\nimport { toggleAttributeInString } from \"utils\";\r\nimport { usePrevious } from \"hooks\";\r\nimport { BlmPartPageTemplate } from \"../../core\";\r\nimport { BlmAddPartPage, BlmPartPageToolbox } from \"../../controls\";\r\nimport { BlmTemplateBoardContext } from \"../../hoc\";\r\nimport { usePartPageContainerStyle } from \"./styles\";\r\n\r\nexport interface CompProps {\r\n  index: number;\r\n  total: number;\r\n  element: CourseElement;\r\n  template: CourseElementTemplate;\r\n  showControls: boolean;\r\n  onAddClick: (event: MouseEvent<HTMLElement>, templateIndex: number, addIndex: number) => void;\r\n}\r\n\r\nexport interface PartPageContainer {\r\n  focus: () => void;\r\n}\r\n\r\nconst BlmPartPageContainer: ForwardRefRenderFunction<PartPageContainer, CompProps> = (\r\n  props,\r\n  ref\r\n) => {\r\n  const { index, total, element, template, showControls, onAddClick } = props;\r\n  const [shouldScrollTo, setShouldScrollTo] = useState(false);\r\n  const {\r\n    editorPanel: { isOpen: isEditorOpen, template: editorTemplate },\r\n    onTemplateEdit,\r\n    onEditClick,\r\n    onDeleteClick,\r\n    onDuplicateClick,\r\n    onPositionChange,\r\n    onNameChange,\r\n  } = useContext(BlmTemplateBoardContext);\r\n  const templateRef = useRef<HTMLDivElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const classes = usePartPageContainerStyle();\r\n  const prevIndex = usePrevious(index);\r\n  const isPanelOpen = isEditorOpen && editorTemplate && template.id === editorTemplate.id;\r\n\r\n  const focus = useCallback(() => {\r\n    if (containerRef.current) {\r\n      containerRef.current.scrollIntoView();\r\n    }\r\n  }, []);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    focus,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (prevIndex !== index && shouldScrollTo) {\r\n      focus();\r\n      setShouldScrollTo(false);\r\n    }\r\n  }, [index, prevIndex, shouldScrollTo, focus]);\r\n\r\n  const handleTemplateEdit = useCallback(\r\n    (temp: CourseElementTemplate) => {\r\n      if (onTemplateEdit) {\r\n        onTemplateEdit(temp);\r\n      }\r\n    },\r\n    [onTemplateEdit]\r\n  );\r\n\r\n  const handleEditClick = (\r\n    type: TemplateEditorTypes,\r\n    temp: CourseElementTemplate,\r\n    anchorEle: HTMLElement\r\n  ) => {\r\n    if (onEditClick && templateRef.current) {\r\n      onEditClick(type, temp, anchorEle, templateRef.current);\r\n    }\r\n  };\r\n\r\n  const handlePositionChange = (temp: CourseElementTemplate, delta: number) => {\r\n    if (onPositionChange) {\r\n      setShouldScrollTo(true);\r\n      onPositionChange(temp, delta);\r\n    }\r\n  };\r\n\r\n  const handleAnchorChange = (template: CourseElementTemplate, hasAnchor: boolean) => {\r\n    if (template) {\r\n      const newTemplate = { ...template };\r\n      const attrs = { anchor: hasAnchor ? \"\" : undefined };\r\n\r\n      newTemplate.hasAnchor = hasAnchor;\r\n      newTemplate.html = toggleAttributeInString(newTemplate.html, attrs, \".outercontainer\");\r\n\r\n      handleTemplateEdit(newTemplate);\r\n    }\r\n  };\r\n\r\n  const renderAddBtn = (templateIndex: number, addIndex: number) => {\r\n    return (\r\n      <BlmAddPartPage\r\n        value={addIndex}\r\n        key={\"addBtn\" + addIndex}\r\n        className={classes.addBtn}\r\n        onClick={(e) => onAddClick(e, templateIndex, addIndex)}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={clsx(classes.root, {\r\n        [classes.showControls]: showControls || isPanelOpen,\r\n      })}\r\n    >\r\n      {renderAddBtn(index, index)}\r\n      <BlmPartPageToolbox\r\n        data={template}\r\n        index={index}\r\n        total={total}\r\n        element={element}\r\n        className={classes.controls}\r\n        onEditClick={handleEditClick}\r\n        onDeleteClick={onDeleteClick}\r\n        onDuplicateClick={onDuplicateClick}\r\n        onPositionChange={handlePositionChange}\r\n        onNameChange={onNameChange}\r\n        onAnchorChange={handleAnchorChange}\r\n      />\r\n      <BlmPartPageTemplate\r\n        ref={templateRef}\r\n        key={template.id}\r\n        data={template}\r\n        onTemplateEdit={handleTemplateEdit}\r\n      />\r\n      {renderAddBtn(index, index + 1)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default forwardRef(BlmPartPageContainer);\r\n"]},"metadata":{},"sourceType":"module"}